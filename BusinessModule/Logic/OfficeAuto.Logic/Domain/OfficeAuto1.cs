

// This file was automatically generated.
// Do not make changes directly to this file - edit the template instead.
// 
// The following connection settings were used to generate this file
// 
//     Connection String Name: "OfficeAuto"
//     Connection String:      "data source=10.10.1.244\sql2008;Initial Catalog=SINOAE_OfficeAuto;User ID=sa;PWD=123.zxc;"

// ReSharper disable RedundantUsingDirective
// ReSharper disable DoNotCallOverridableMethodsInConstructor
// ReSharper disable InconsistentNaming

using System;
using System.Collections.Generic;
using System.ComponentModel.DataAnnotations;
using System.Data.Entity;
using System.Data.Entity.ModelConfiguration;
using Newtonsoft.Json;
using System.ComponentModel;

//using DatabaseGeneratedOption = System.ComponentModel.DataAnnotations.DatabaseGeneratedOption;

namespace OfficeAuto.Logic.Domain
{
    // ************************************************************************
    // Database context
    public partial class OfficeAutoEntities : Formula.FormulaDbContext
    {
        public IDbSet<E_BDS_AccommodationSavingEaward> E_BDS_AccommodationSavingEaward { get; set; } // E_BDS_AccommodationSavingEaward
        public IDbSet<E_BDS_AnnualValidityPeriodSet> E_BDS_AnnualValidityPeriodSet { get; set; } // E_BDS_AnnualValidityPeriodSet
        public IDbSet<E_BDS_BankForeignExchangeRate> E_BDS_BankForeignExchangeRate { get; set; } // E_BDS_BankForeignExchangeRate
        public IDbSet<E_BDS_Citytransfeestandard> E_BDS_Citytransfeestandard { get; set; } // E_BDS_Citytransfeestandard
        public IDbSet<E_BDS_CompanyBankAccountInfo> E_BDS_CompanyBankAccountInfo { get; set; } // E_BDS_CompanyBankAccountInfo
        public IDbSet<E_BDS_Domesticaccommodationstandard> E_BDS_Domesticaccommodationstandard { get; set; } // E_BDS_Domesticaccommodationstandard
        public IDbSet<E_BDS_Domesticaccommodationstandard_Reward> E_BDS_Domesticaccommodationstandard_Reward { get; set; } // E_BDS_Domesticaccommodationstandard_Reward
        public IDbSet<E_BDS_DomesticFoodCostStandard> E_BDS_DomesticFoodCostStandard { get; set; } // E_BDS_DomesticFoodCostStandard
        public IDbSet<E_BDS_DomesticProjectManagerSubsidyStandard> E_BDS_DomesticProjectManagerSubsidyStandard { get; set; } // E_BDS_DomesticProjectManagerSubsidyStandard
        public IDbSet<E_BDS_ForeignAccommodationStandard> E_BDS_ForeignAccommodationStandard { get; set; } // E_BDS_ForeignAccommodationStandard
        public IDbSet<E_BDS_ForeignFoodSubsidyStandard> E_BDS_ForeignFoodSubsidyStandard { get; set; } // E_BDS_ForeignFoodSubsidyStandard
        public IDbSet<E_BDS_ForeignSavingReward> E_BDS_ForeignSavingReward { get; set; } // E_BDS_ForeignSavingReward
        public IDbSet<E_BDS_ForeignSavingReward_Reward> E_BDS_ForeignSavingReward_Reward { get; set; } // E_BDS_ForeignSavingReward_Reward
        public IDbSet<E_BDS_LaborsInfo> E_BDS_LaborsInfo { get; set; } // E_BDS_LaborsInfo
        public IDbSet<E_BDS_MyBankCardInfo> E_BDS_MyBankCardInfo { get; set; } // E_BDS_MyBankCardInfo
        public IDbSet<E_BDS_OnsiteSubsidyStandard> E_BDS_OnsiteSubsidyStandard { get; set; } // E_BDS_OnsiteSubsidyStandard
        public IDbSet<E_BDS_PartyAndUnionBudget> E_BDS_PartyAndUnionBudget { get; set; } // E_BDS_PartyAndUnionBudget
        public IDbSet<E_BDS_Personnellevelsandpositions> E_BDS_Personnellevelsandpositions { get; set; } // E_BDS_Personnellevelsandpositions
        public IDbSet<E_BDS_Transportationstandards> E_BDS_Transportationstandards { get; set; } // E_BDS_Transportationstandards
        public IDbSet<E_BDS_UserAllowLoan> E_BDS_UserAllowLoan { get; set; } // E_BDS_UserAllowLoan
        public IDbSet<S_BM_LoanApply> S_BM_LoanApply { get; set; } // S_BM_LoanApply
        public IDbSet<S_D_Comment> S_D_Comment { get; set; } // S_D_Comment
        public IDbSet<S_D_Incoming> S_D_Incoming { get; set; } // S_D_Incoming
        public IDbSet<S_D_Posting> S_D_Posting { get; set; } // S_D_Posting
        public IDbSet<S_D_RedTitle> S_D_RedTitle { get; set; } // S_D_RedTitle
        public IDbSet<S_E_Logistics_OfficePos> S_E_Logistics_OfficePos { get; set; } // S_E_Logistics_OfficePos
        public IDbSet<S_E_Logistics_OfficeRecord> S_E_Logistics_OfficeRecord { get; set; } // S_E_Logistics_OfficeRecord
        public IDbSet<S_EP_DefineSubject> S_EP_DefineSubject { get; set; } // S_EP_DefineSubject
        public IDbSet<S_EP_ReimbursementApply> S_EP_ReimbursementApply { get; set; } // S_EP_ReimbursementApply
        public IDbSet<S_EP_ReimbursementApply_BXRYBXCLFRQ> S_EP_ReimbursementApply_BXRYBXCLFRQ { get; set; } // S_EP_ReimbursementApply_BXRYBXCLFRQ
        public IDbSet<S_EP_ReimbursementApply_DeptDetail> S_EP_ReimbursementApply_DeptDetail { get; set; } // S_EP_ReimbursementApply_DeptDetail
        public IDbSet<S_EP_ReimbursementApply_Details> S_EP_ReimbursementApply_Details { get; set; } // S_EP_ReimbursementApply_Details
        public IDbSet<S_EP_ReimbursementApply_ElectronicTicket> S_EP_ReimbursementApply_ElectronicTicket { get; set; } // S_EP_ReimbursementApply_ElectronicTicket
        public IDbSet<S_EP_ReimbursementApply_EquipmentInventory> S_EP_ReimbursementApply_EquipmentInventory { get; set; } // S_EP_ReimbursementApply_EquipmentInventory
        public IDbSet<S_EP_ReimbursementApply_GNFYJTF> S_EP_ReimbursementApply_GNFYJTF { get; set; } // S_EP_ReimbursementApply_GNFYJTF
        public IDbSet<S_EP_ReimbursementApply_GNYPZSFSRewardStandard> S_EP_ReimbursementApply_GNYPZSFSRewardStandard { get; set; } // S_EP_ReimbursementApply_GNYPZSFSRewardStandard
        public IDbSet<S_EP_ReimbursementApply_GWFYMX> S_EP_ReimbursementApply_GWFYMX { get; set; } // S_EP_ReimbursementApply_GWFYMX
        public IDbSet<S_EP_ReimbursementApply_LoanInfo> S_EP_ReimbursementApply_LoanInfo { get; set; } // S_EP_ReimbursementApply_LoanInfo
        public IDbSet<S_EP_ReimbursementApply_OtherFee> S_EP_ReimbursementApply_OtherFee { get; set; } // S_EP_ReimbursementApply_OtherFee
        public IDbSet<S_EP_ReimbursementApply_PaymentSchedule> S_EP_ReimbursementApply_PaymentSchedule { get; set; } // S_EP_ReimbursementApply_PaymentSchedule
        public IDbSet<S_EP_ReimbursementApply_ProjectInfo> S_EP_ReimbursementApply_ProjectInfo { get; set; } // S_EP_ReimbursementApply_ProjectInfo
        public IDbSet<S_EP_ReimbursementApply_SXRYB> S_EP_ReimbursementApply_SXRYB { get; set; } // S_EP_ReimbursementApply_SXRYB
        public IDbSet<S_EP_ReimbursementApply_TravelRecordInfo> S_EP_ReimbursementApply_TravelRecordInfo { get; set; } // S_EP_ReimbursementApply_TravelRecordInfo
        public IDbSet<S_EP_ReimbursementApply_ZZSZYFPJXSEMX> S_EP_ReimbursementApply_ZZSZYFPJXSEMX { get; set; } // S_EP_ReimbursementApply_ZZSZYFPJXSEMX
        public IDbSet<S_F_DocumentFileAuthority> S_F_DocumentFileAuthority { get; set; } // S_F_DocumentFileAuthority
        public IDbSet<S_F_DocumentInfo> S_F_DocumentInfo { get; set; } // S_F_DocumentInfo
        public IDbSet<S_F_FileInfo> S_F_FileInfo { get; set; } // S_F_FileInfo
        public IDbSet<S_FA_ProjectInfo> S_FA_ProjectInfo { get; set; } // S_FA_ProjectInfo
        public IDbSet<S_FC_CostInfo> S_FC_CostInfo { get; set; } // S_FC_CostInfo
        public IDbSet<S_FC_UserLoanAccount> S_FC_UserLoanAccount { get; set; } // S_FC_UserLoanAccount
        public IDbSet<S_M_ConferenceRoom> S_M_ConferenceRoom { get; set; } // S_M_ConferenceRoom
        public IDbSet<S_Survey_Option> S_Survey_Option { get; set; } // S_Survey_Option
        public IDbSet<S_Survey_Question> S_Survey_Question { get; set; } // S_Survey_Question
        public IDbSet<S_Survey_QuestionComment> S_Survey_QuestionComment { get; set; } // S_Survey_QuestionComment
        public IDbSet<S_Survey_QuestionVote> S_Survey_QuestionVote { get; set; } // S_Survey_QuestionVote
        public IDbSet<S_Survey_Subject> S_Survey_Subject { get; set; } // S_Survey_Subject
        public IDbSet<S_Survey_Vote> S_Survey_Vote { get; set; } // S_Survey_Vote
        public IDbSet<T_AskingLeave> T_AskingLeave { get; set; } // T_AskingLeave
        public IDbSet<T_AskingLeave_ApplyDuration> T_AskingLeave_ApplyDuration { get; set; } // T_AskingLeave_ApplyDuration
        public IDbSet<T_Audit_Mandate> T_Audit_Mandate { get; set; } // T_Audit_Mandate
        public IDbSet<T_Audit_Notice> T_Audit_Notice { get; set; } // T_Audit_Notice
        public IDbSet<T_Audit_Project> T_Audit_Project { get; set; } // T_Audit_Project
        public IDbSet<T_Audit_RectificationResultsCollection> T_Audit_RectificationResultsCollection { get; set; } // T_Audit_RectificationResultsCollection
        public IDbSet<T_Audit_ReportCommunication> T_Audit_ReportCommunication { get; set; } // T_Audit_ReportCommunication
        public IDbSet<T_Audit_ReportIssuance> T_Audit_ReportIssuance { get; set; } // T_Audit_ReportIssuance
        public IDbSet<T_B_MemoManagement> T_B_MemoManagement { get; set; } // T_B_MemoManagement
        public IDbSet<T_B_OutgoingFile> T_B_OutgoingFile { get; set; } // T_B_OutgoingFile
        public IDbSet<T_B_Remind> T_B_Remind { get; set; } // T_B_Remind
        public IDbSet<T_B_SendFaxManagement> T_B_SendFaxManagement { get; set; } // T_B_SendFaxManagement
        public IDbSet<T_BasicData_Supplier> T_BasicData_Supplier { get; set; } // T_BasicData_Supplier
        public IDbSet<T_BM_NoPaymentConfirmation> T_BM_NoPaymentConfirmation { get; set; } // T_BM_NoPaymentConfirmation
        public IDbSet<T_BM_NoPaymentConfirmation_LoanInfo> T_BM_NoPaymentConfirmation_LoanInfo { get; set; } // T_BM_NoPaymentConfirmation_LoanInfo
        public IDbSet<T_BM_PersonalLoanUnReturnNotice> T_BM_PersonalLoanUnReturnNotice { get; set; } // T_BM_PersonalLoanUnReturnNotice
        public IDbSet<T_BM_RepaymentForm> T_BM_RepaymentForm { get; set; } // T_BM_RepaymentForm
        public IDbSet<T_BM_RepaymentForm_LoanInfo> T_BM_RepaymentForm_LoanInfo { get; set; } // T_BM_RepaymentForm_LoanInfo
        public IDbSet<T_Car_Base> T_Car_Base { get; set; } // T_Car_Base
        public IDbSet<T_Car_Driver> T_Car_Driver { get; set; } // T_Car_Driver
        public IDbSet<T_Car_Maintenance> T_Car_Maintenance { get; set; } // T_Car_Maintenance
        public IDbSet<T_Car_Maintenance_MaintenanceDetail> T_Car_Maintenance_MaintenanceDetail { get; set; } // T_Car_Maintenance_MaintenanceDetail
        public IDbSet<T_Car_UseApply> T_Car_UseApply { get; set; } // T_Car_UseApply
        public IDbSet<T_Car_UseApply_ExternalDispatchInformation> T_Car_UseApply_ExternalDispatchInformation { get; set; } // T_Car_UseApply_ExternalDispatchInformation
        public IDbSet<T_Car_UseApply_InternalDispatchInformation> T_Car_UseApply_InternalDispatchInformation { get; set; } // T_Car_UseApply_InternalDispatchInformation
        public IDbSet<T_ContractsAndProjects_ProjectDataAccessRequest> T_ContractsAndProjects_ProjectDataAccessRequest { get; set; } // T_ContractsAndProjects_ProjectDataAccessRequest
        public IDbSet<T_Decrypt_Apply> T_Decrypt_Apply { get; set; } // T_Decrypt_Apply
        public IDbSet<T_DeviceManage_AddedPurchase> T_DeviceManage_AddedPurchase { get; set; } // T_DeviceManage_AddedPurchase
        public IDbSet<T_DeviceManage_AddedPurchase_PaymentDetail> T_DeviceManage_AddedPurchase_PaymentDetail { get; set; } // T_DeviceManage_AddedPurchase_PaymentDetail
        public IDbSet<T_DeviceManage_AddedPurchase_SupplierDetail> T_DeviceManage_AddedPurchase_SupplierDetail { get; set; } // T_DeviceManage_AddedPurchase_SupplierDetail
        public IDbSet<T_DeviceManage_ConsumablesPurchase> T_DeviceManage_ConsumablesPurchase { get; set; } // T_DeviceManage_ConsumablesPurchase
        public IDbSet<T_DeviceManage_ConsumablesPurchase_PaymentDetail> T_DeviceManage_ConsumablesPurchase_PaymentDetail { get; set; } // T_DeviceManage_ConsumablesPurchase_PaymentDetail
        public IDbSet<T_DeviceManage_ConsumablesPurchase_PurchaseDetail> T_DeviceManage_ConsumablesPurchase_PurchaseDetail { get; set; } // T_DeviceManage_ConsumablesPurchase_PurchaseDetail
        public IDbSet<T_DeviceManage_Entry> T_DeviceManage_Entry { get; set; } // T_DeviceManage_Entry
        public IDbSet<T_DeviceManage_Entry_PurchaseDetail> T_DeviceManage_Entry_PurchaseDetail { get; set; } // T_DeviceManage_Entry_PurchaseDetail
        public IDbSet<T_DeviceManage_PurchaseDemand> T_DeviceManage_PurchaseDemand { get; set; } // T_DeviceManage_PurchaseDemand
        public IDbSet<T_DeviceManage_PurchaseDemand_DemandDetail> T_DeviceManage_PurchaseDemand_DemandDetail { get; set; } // T_DeviceManage_PurchaseDemand_DemandDetail
        public IDbSet<T_DeviceManage_ServicePurchase> T_DeviceManage_ServicePurchase { get; set; } // T_DeviceManage_ServicePurchase
        public IDbSet<T_DeviceManage_ServicePurchase_PaymentDetail> T_DeviceManage_ServicePurchase_PaymentDetail { get; set; } // T_DeviceManage_ServicePurchase_PaymentDetail
        public IDbSet<T_DRA_BankFinancingApplication> T_DRA_BankFinancingApplication { get; set; } // T_DRA_BankFinancingApplication
        public IDbSet<T_DRA_GJJDLLXDKGS> T_DRA_GJJDLLXDKGS { get; set; } // T_DRA_GJJDLLXDKGS
        public IDbSet<T_DRA_GJJDLLXDKGS_InterestInfo> T_DRA_GJJDLLXDKGS_InterestInfo { get; set; } // T_DRA_GJJDLLXDKGS_InterestInfo
        public IDbSet<T_DRA_IncludeApplication> T_DRA_IncludeApplication { get; set; } // T_DRA_IncludeApplication
        public IDbSet<T_DRA_ReceiptAcquittanceForm> T_DRA_ReceiptAcquittanceForm { get; set; } // T_DRA_ReceiptAcquittanceForm
        public IDbSet<T_EngineeringBuildApplyDemo> T_EngineeringBuildApplyDemo { get; set; } // T_EngineeringBuildApplyDemo
        public IDbSet<T_EngineeringBuildApplyDemo_Competitor> T_EngineeringBuildApplyDemo_Competitor { get; set; } // T_EngineeringBuildApplyDemo_Competitor
        public IDbSet<T_EngineeringBuildApplyDemo_CustomerContace> T_EngineeringBuildApplyDemo_CustomerContace { get; set; } // T_EngineeringBuildApplyDemo_CustomerContace
        public IDbSet<T_F_LoanApply> T_F_LoanApply { get; set; } // T_F_LoanApply
        public IDbSet<T_F_PaymentApply> T_F_PaymentApply { get; set; } // T_F_PaymentApply
        public IDbSet<T_F_ReimbursementApply> T_F_ReimbursementApply { get; set; } // T_F_ReimbursementApply
        public IDbSet<T_F_ReimbursementApply_Details> T_F_ReimbursementApply_Details { get; set; } // T_F_ReimbursementApply_Details
        public IDbSet<T_FDM_FinanceElectronicDocumentDownload> T_FDM_FinanceElectronicDocumentDownload { get; set; } // T_FDM_FinanceElectronicDocumentDownload
        public IDbSet<T_FDM_FinanceElectronicDocumentDownload_Detail> T_FDM_FinanceElectronicDocumentDownload_Detail { get; set; } // T_FDM_FinanceElectronicDocumentDownload_Detail
        public IDbSet<T_FDM_FinanceElectronicDocumentUpload> T_FDM_FinanceElectronicDocumentUpload { get; set; } // T_FDM_FinanceElectronicDocumentUpload
        public IDbSet<T_FDM_FinancialDocumentBorrowingApplication> T_FDM_FinancialDocumentBorrowingApplication { get; set; } // T_FDM_FinancialDocumentBorrowingApplication
        public IDbSet<T_FDM_FinancialDocumenTest> T_FDM_FinancialDocumenTest { get; set; } // T_FDM_FinancialDocumenTest
        public IDbSet<T_FDM_FinancialDocumenTest_liuliu> T_FDM_FinancialDocumenTest_liuliu { get; set; } // T_FDM_FinancialDocumenTest_liuliu
        public IDbSet<T_FDM_FinancialDocumenTest_liuliu_Gabroadname> T_FDM_FinancialDocumenTest_liuliu_Gabroadname { get; set; } // T_FDM_FinancialDocumenTest_liuliu_Gabroadname
        public IDbSet<T_FDM_FinancialDocumenTesttypedic_liuliu> T_FDM_FinancialDocumenTesttypedic_liuliu { get; set; } // T_FDM_FinancialDocumenTesttypedic_liuliu
        public IDbSet<T_FDM_TechnicalPlatformDocumentTypeMaintenance> T_FDM_TechnicalPlatformDocumentTypeMaintenance { get; set; } // T_FDM_TechnicalPlatformDocumentTypeMaintenance
        public IDbSet<T_Lawsuit_CaseFile> T_Lawsuit_CaseFile { get; set; } // T_Lawsuit_CaseFile
        public IDbSet<T_Lawsuit_CaseInformation> T_Lawsuit_CaseInformation { get; set; } // T_Lawsuit_CaseInformation
        public IDbSet<T_Lawsuit_CaseReport> T_Lawsuit_CaseReport { get; set; } // T_Lawsuit_CaseReport
        public IDbSet<T_Lawsuit_NoProject> T_Lawsuit_NoProject { get; set; } // T_Lawsuit_NoProject
        public IDbSet<T_Lawsuit_NoProject_ListOfEvidenceTransfer> T_Lawsuit_NoProject_ListOfEvidenceTransfer { get; set; } // T_Lawsuit_NoProject_ListOfEvidenceTransfer
        public IDbSet<T_Lawsuit_Project> T_Lawsuit_Project { get; set; } // T_Lawsuit_Project
        public IDbSet<T_Lawsuit_Project_TransferDetail> T_Lawsuit_Project_TransferDetail { get; set; } // T_Lawsuit_Project_TransferDetail
        public IDbSet<T_LegalPublicity_LawActivities> T_LegalPublicity_LawActivities { get; set; } // T_LegalPublicity_LawActivities
        public IDbSet<T_Logistics_DiningApply> T_Logistics_DiningApply { get; set; } // T_Logistics_DiningApply
        public IDbSet<T_Logistics_ExternalClientApartApply> T_Logistics_ExternalClientApartApply { get; set; } // T_Logistics_ExternalClientApartApply
        public IDbSet<T_Logistics_Office> T_Logistics_Office { get; set; } // T_Logistics_Office
        public IDbSet<T_Logistics_OfficeApply> T_Logistics_OfficeApply { get; set; } // T_Logistics_OfficeApply
        public IDbSet<T_Logistics_OfficePos> T_Logistics_OfficePos { get; set; } // T_Logistics_OfficePos
        public IDbSet<T_M_ConferenceApply> T_M_ConferenceApply { get; set; } // T_M_ConferenceApply
        public IDbSet<T_M_ConferenceRegist> T_M_ConferenceRegist { get; set; } // T_M_ConferenceRegist
        public IDbSet<T_M_ConferenceRoom> T_M_ConferenceRoom { get; set; } // T_M_ConferenceRoom
        public IDbSet<T_M_ConferenceSummary> T_M_ConferenceSummary { get; set; } // T_M_ConferenceSummary
        public IDbSet<T_M_ConferenceSummary_MainContent> T_M_ConferenceSummary_MainContent { get; set; } // T_M_ConferenceSummary_MainContent
        public IDbSet<T_M_OuterConference> T_M_OuterConference { get; set; } // T_M_OuterConference
        public IDbSet<T_M_OuterConference_CostGrid> T_M_OuterConference_CostGrid { get; set; } // T_M_OuterConference_CostGrid
        public IDbSet<T_Patent_DeclarationApproval> T_Patent_DeclarationApproval { get; set; } // T_Patent_DeclarationApproval
        public IDbSet<T_Patent_Manager> T_Patent_Manager { get; set; } // T_Patent_Manager
        public IDbSet<T_Patent_Plan> T_Patent_Plan { get; set; } // T_Patent_Plan
        public IDbSet<T_Patent_Plan_PatentPlan> T_Patent_Plan_PatentPlan { get; set; } // T_Patent_Plan_PatentPlan
        public IDbSet<T_ProjectApproval> T_ProjectApproval { get; set; } // T_ProjectApproval
        public IDbSet<T_ProtectionArticle_Ledger> T_ProtectionArticle_Ledger { get; set; } // T_ProtectionArticle_Ledger
        public IDbSet<T_ProtectionArticle_Receive> T_ProtectionArticle_Receive { get; set; } // T_ProtectionArticle_Receive
        public IDbSet<T_ProtectionArticle_Receive_SafetyShoesDetail> T_ProtectionArticle_Receive_SafetyShoesDetail { get; set; } // T_ProtectionArticle_Receive_SafetyShoesDetail
        public IDbSet<T_ProtectionArticle_Register> T_ProtectionArticle_Register { get; set; } // T_ProtectionArticle_Register
        public IDbSet<T_ProtectionArticle_Register_SafetyShoeDetail> T_ProtectionArticle_Register_SafetyShoeDetail { get; set; } // T_ProtectionArticle_Register_SafetyShoeDetail
        public IDbSet<T_PurchaseProject_Acceptance> T_PurchaseProject_Acceptance { get; set; } // T_PurchaseProject_Acceptance
        public IDbSet<T_PurchaseProject_ApprovalApply> T_PurchaseProject_ApprovalApply { get; set; } // T_PurchaseProject_ApprovalApply
        public IDbSet<T_PurchaseProject_ApprovalApply_ProjectList> T_PurchaseProject_ApprovalApply_ProjectList { get; set; } // T_PurchaseProject_ApprovalApply_ProjectList
        public IDbSet<T_PurchaseProject_StateChange> T_PurchaseProject_StateChange { get; set; } // T_PurchaseProject_StateChange
        public IDbSet<T_RiskList_TaskBreakdown> T_RiskList_TaskBreakdown { get; set; } // T_RiskList_TaskBreakdown
        public IDbSet<T_RiskList_TaskBreakdown_TaskBreakdownSheet> T_RiskList_TaskBreakdown_TaskBreakdownSheet { get; set; } // T_RiskList_TaskBreakdown_TaskBreakdownSheet
        public IDbSet<T_RiskList_TaskCompletionReport> T_RiskList_TaskCompletionReport { get; set; } // T_RiskList_TaskCompletionReport
        public IDbSet<T_RM_ReimbursementForm> T_RM_ReimbursementForm { get; set; } // T_RM_ReimbursementForm
        public IDbSet<T_RM_ReimbursementForm_BXRYBXCLFRQ> T_RM_ReimbursementForm_BXRYBXCLFRQ { get; set; } // T_RM_ReimbursementForm_BXRYBXCLFRQ
        public IDbSet<T_RM_ReimbursementForm_Details> T_RM_ReimbursementForm_Details { get; set; } // T_RM_ReimbursementForm_Details
        public IDbSet<T_RM_ReimbursementForm_GNFYJTF> T_RM_ReimbursementForm_GNFYJTF { get; set; } // T_RM_ReimbursementForm_GNFYJTF
        public IDbSet<T_RM_ReimbursementForm_LoanInfo> T_RM_ReimbursementForm_LoanInfo { get; set; } // T_RM_ReimbursementForm_LoanInfo
        public IDbSet<T_RM_ReimbursementForm_OtherFee> T_RM_ReimbursementForm_OtherFee { get; set; } // T_RM_ReimbursementForm_OtherFee
        public IDbSet<T_SceneMark_Dictionaries> T_SceneMark_Dictionaries { get; set; } // T_SceneMark_Dictionaries
        public IDbSet<T_SceneMark_Entry> T_SceneMark_Entry { get; set; } // T_SceneMark_Entry
        public IDbSet<T_SceneMark_Entry_EntryDetail> T_SceneMark_Entry_EntryDetail { get; set; } // T_SceneMark_Entry_EntryDetail
        public IDbSet<T_SceneMark_Receive> T_SceneMark_Receive { get; set; } // T_SceneMark_Receive
        public IDbSet<T_SceneMark_Receive_ReceiveDetail> T_SceneMark_Receive_ReceiveDetail { get; set; } // T_SceneMark_Receive_ReceiveDetail
        public IDbSet<T_sds> T_sds { get; set; } // T_sds
        public IDbSet<T_sds_YYSX> T_sds_YYSX { get; set; } // T_sds_YYSX
        public IDbSet<T_Seal_Apply> T_Seal_Apply { get; set; } // T_Seal_Apply
        public IDbSet<T_Seal_Apply_Detail> T_Seal_Apply_Detail { get; set; } // T_Seal_Apply_Detail
        public IDbSet<T_Seal_Borrow> T_Seal_Borrow { get; set; } // T_Seal_Borrow
        public IDbSet<T_Seal_Borrow_Detail> T_Seal_Borrow_Detail { get; set; } // T_Seal_Borrow_Detail
        public IDbSet<T_Seal_Change> T_Seal_Change { get; set; } // T_Seal_Change
        public IDbSet<T_Seal_Repeal> T_Seal_Repeal { get; set; } // T_Seal_Repeal
        public IDbSet<T_Seal_SealInfo> T_Seal_SealInfo { get; set; } // T_Seal_SealInfo
        public IDbSet<T_Seal_Transfer> T_Seal_Transfer { get; set; } // T_Seal_Transfer
        public IDbSet<T_SoftwareArticle_InstallationAcceptance> T_SoftwareArticle_InstallationAcceptance { get; set; } // T_SoftwareArticle_InstallationAcceptance
        public IDbSet<T_SoftwareArticle_ProcurementApproval> T_SoftwareArticle_ProcurementApproval { get; set; } // T_SoftwareArticle_ProcurementApproval
        public IDbSet<T_SoftwareArticle_ProcurementApproval_PaymentDetail> T_SoftwareArticle_ProcurementApproval_PaymentDetail { get; set; } // T_SoftwareArticle_ProcurementApproval_PaymentDetail
        public IDbSet<T_SoftwareArticle_ProcurementApproval_SupplierDetail> T_SoftwareArticle_ProcurementApproval_SupplierDetail { get; set; } // T_SoftwareArticle_ProcurementApproval_SupplierDetail
        public IDbSet<T_SoftwareArticle_ProcurementApproval_UseDetail> T_SoftwareArticle_ProcurementApproval_UseDetail { get; set; } // T_SoftwareArticle_ProcurementApproval_UseDetail
        public IDbSet<T_SoftwareArticle_ProcurementDemand> T_SoftwareArticle_ProcurementDemand { get; set; } // T_SoftwareArticle_ProcurementDemand
        public IDbSet<T_SoftwareArticle_ProcurementDemand_PurchaseDetail> T_SoftwareArticle_ProcurementDemand_PurchaseDetail { get; set; } // T_SoftwareArticle_ProcurementDemand_PurchaseDetail
        public IDbSet<T_SoftwareArticle_ReceiveApply> T_SoftwareArticle_ReceiveApply { get; set; } // T_SoftwareArticle_ReceiveApply
        public IDbSet<T_SoftwareArticle_ReceiveApply_ReceiveDetail> T_SoftwareArticle_ReceiveApply_ReceiveDetail { get; set; } // T_SoftwareArticle_ReceiveApply_ReceiveDetail
        public IDbSet<T_Standardengineer_Standardichecklist> T_Standardengineer_Standardichecklist { get; set; } // T_Standardengineer_Standardichecklist
        public IDbSet<T_Standardengineer_Standardichecklist_Content> T_Standardengineer_Standardichecklist_Content { get; set; } // T_Standardengineer_Standardichecklist_Content
        public IDbSet<T_Standardengineer_Standardpeoplemanage> T_Standardengineer_Standardpeoplemanage { get; set; } // T_Standardengineer_Standardpeoplemanage
        public IDbSet<T_Technicalcommittee_Examandapprovalform> T_Technicalcommittee_Examandapprovalform { get; set; } // T_Technicalcommittee_Examandapprovalform
        public IDbSet<T_Technicalcommittee_Examinationandapprovalform> T_Technicalcommittee_Examinationandapprovalform { get; set; } // T_Technicalcommittee_Examinationandapprovalform
        public IDbSet<T_Technicalcommittee_Technicalperson> T_Technicalcommittee_Technicalperson { get; set; } // T_Technicalcommittee_Technicalperson
        public IDbSet<T_Technicalcommittee_trainingrecord> T_Technicalcommittee_trainingrecord { get; set; } // T_Technicalcommittee_trainingrecord
        public IDbSet<T_Technicalcommittee_trainingrecord_Trainparticipants> T_Technicalcommittee_trainingrecord_Trainparticipants { get; set; } // T_Technicalcommittee_trainingrecord_Trainparticipants
        public IDbSet<T_Technicalcommittee_Youthexamform> T_Technicalcommittee_Youthexamform { get; set; } // T_Technicalcommittee_Youthexamform
        public IDbSet<T_Technology_Attachment> T_Technology_Attachment { get; set; } // T_Technology_Attachment
        public IDbSet<T_Technology_ContractApproval> T_Technology_ContractApproval { get; set; } // T_Technology_ContractApproval
        public IDbSet<T_Technology_ContractApproval_PaymentPlan> T_Technology_ContractApproval_PaymentPlan { get; set; } // T_Technology_ContractApproval_PaymentPlan
        public IDbSet<T_Technology_CostPlan> T_Technology_CostPlan { get; set; } // T_Technology_CostPlan
        public IDbSet<T_Technology_CostPlan_Technicalexpert> T_Technology_CostPlan_Technicalexpert { get; set; } // T_Technology_CostPlan_Technicalexpert
        public IDbSet<T_Technology_CostPlan_TechnologyGroup> T_Technology_CostPlan_TechnologyGroup { get; set; } // T_Technology_CostPlan_TechnologyGroup
        public IDbSet<T_Technology_CostPlanAttachment> T_Technology_CostPlanAttachment { get; set; } // T_Technology_CostPlanAttachment
        public IDbSet<T_Technology_ExpertReview> T_Technology_ExpertReview { get; set; } // T_Technology_ExpertReview
        public IDbSet<T_Technology_PaymentApply> T_Technology_PaymentApply { get; set; } // T_Technology_PaymentApply
        public IDbSet<T_Technology_PaymentApply_PaymentPlan> T_Technology_PaymentApply_PaymentPlan { get; set; } // T_Technology_PaymentApply_PaymentPlan
        public IDbSet<T_Technology_PersonnelPlacement> T_Technology_PersonnelPlacement { get; set; } // T_Technology_PersonnelPlacement
        public IDbSet<T_Technology_PersonnelPlacement_PlacementDetail> T_Technology_PersonnelPlacement_PlacementDetail { get; set; } // T_Technology_PersonnelPlacement_PlacementDetail
        public IDbSet<T_Technology_Projectapplicationform> T_Technology_Projectapplicationform { get; set; } // T_Technology_Projectapplicationform
        public IDbSet<T_Technology_Projectapplicationform_Technicalexpert> T_Technology_Projectapplicationform_Technicalexpert { get; set; } // T_Technology_Projectapplicationform_Technicalexpert
        public IDbSet<T_Technology_ProjectDelayApply> T_Technology_ProjectDelayApply { get; set; } // T_Technology_ProjectDelayApply
        public IDbSet<T_Technology_ProjectProgress> T_Technology_ProjectProgress { get; set; } // T_Technology_ProjectProgress
        public IDbSet<T_Technology_ProjectProgress_PlanDetail> T_Technology_ProjectProgress_PlanDetail { get; set; } // T_Technology_ProjectProgress_PlanDetail
        public IDbSet<T_Technology_ResultCommit> T_Technology_ResultCommit { get; set; } // T_Technology_ResultCommit
        public IDbSet<T_TM_ApplicationFormOfChinaIDCard> T_TM_ApplicationFormOfChinaIDCard { get; set; } // T_TM_ApplicationFormOfChinaIDCard
        public IDbSet<T_TM_CKTSZLSJ> T_TM_CKTSZLSJ { get; set; } // T_TM_CKTSZLSJ
        public IDbSet<T_TM_CrossRegionTaxReporting> T_TM_CrossRegionTaxReporting { get; set; } // T_TM_CrossRegionTaxReporting
        public IDbSet<T_TM_ExternalPaymentApply> T_TM_ExternalPaymentApply { get; set; } // T_TM_ExternalPaymentApply
        public IDbSet<T_TM_ForeignRelatedTaxContract> T_TM_ForeignRelatedTaxContract { get; set; } // T_TM_ForeignRelatedTaxContract
        public IDbSet<T_TM_TaxpayerInfo> T_TM_TaxpayerInfo { get; set; } // T_TM_TaxpayerInfo
        public IDbSet<T_TravelRecord_Person> T_TravelRecord_Person { get; set; } // T_TravelRecord_Person
        public IDbSet<T_TravelRecord_Person_EvectionDetail> T_TravelRecord_Person_EvectionDetail { get; set; } // T_TravelRecord_Person_EvectionDetail
        public IDbSet<T_TwoLevelReporting_CompletionReport> T_TwoLevelReporting_CompletionReport { get; set; } // T_TwoLevelReporting_CompletionReport
        public IDbSet<T_TwoLevelReporting_LawActivity> T_TwoLevelReporting_LawActivity { get; set; } // T_TwoLevelReporting_LawActivity
        public IDbSet<T_TwoLevelReporting_NonLitigationDisputeRegist> T_TwoLevelReporting_NonLitigationDisputeRegist { get; set; } // T_TwoLevelReporting_NonLitigationDisputeRegist
        public IDbSet<T_UseSealApply> T_UseSealApply { get; set; } // T_UseSealApply
        public IDbSet<T_Win_AwardItem> T_Win_AwardItem { get; set; } // T_Win_AwardItem
        public IDbSet<T_Win_AwardManager> T_Win_AwardManager { get; set; } // T_Win_AwardManager
        public IDbSet<T_Win_AwardManager_JoinPerson> T_Win_AwardManager_JoinPerson { get; set; } // T_Win_AwardManager_JoinPerson
        public IDbSet<T_Win_CurrentYearExpert> T_Win_CurrentYearExpert { get; set; } // T_Win_CurrentYearExpert
        public IDbSet<T_Win_Declare> T_Win_Declare { get; set; } // T_Win_Declare
        public IDbSet<T_Win_DeclareManager> T_Win_DeclareManager { get; set; } // T_Win_DeclareManager
        public IDbSet<T_Win_DeclareManager_JoinPersons> T_Win_DeclareManager_JoinPersons { get; set; } // T_Win_DeclareManager_JoinPersons
        public IDbSet<T_Win_ExpertGrade> T_Win_ExpertGrade { get; set; } // T_Win_ExpertGrade
        public IDbSet<T_Win_ExpertGrade_AwardItems> T_Win_ExpertGrade_AwardItems { get; set; } // T_Win_ExpertGrade_AwardItems
        public IDbSet<T_Win_ExpertManager> T_Win_ExpertManager { get; set; } // T_Win_ExpertManager
        public IDbSet<T_Win_IndustryAwardDeclare> T_Win_IndustryAwardDeclare { get; set; } // T_Win_IndustryAwardDeclare
        public IDbSet<T_Win_IndustryAwardDeclare_JoinPerson> T_Win_IndustryAwardDeclare_JoinPerson { get; set; } // T_Win_IndustryAwardDeclare_JoinPerson
        public IDbSet<T_Win_IndustryAwardDemandRecord> T_Win_IndustryAwardDemandRecord { get; set; } // T_Win_IndustryAwardDemandRecord
        public IDbSet<T_Win_IndustryAwardManager> T_Win_IndustryAwardManager { get; set; } // T_Win_IndustryAwardManager
        public IDbSet<T_Win_IndustryAwardManager_JoinPerson> T_Win_IndustryAwardManager_JoinPerson { get; set; } // T_Win_IndustryAwardManager_JoinPerson
        public IDbSet<T_Win_ProjectScore> T_Win_ProjectScore { get; set; } // T_Win_ProjectScore
        public IDbSet<T_Win_ProjectScore_ExpertDetail> T_Win_ProjectScore_ExpertDetail { get; set; } // T_Win_ProjectScore_ExpertDetail
        public IDbSet<T_Win_Technicalinnovation> T_Win_Technicalinnovation { get; set; } // T_Win_Technicalinnovation
        public IDbSet<T_Win_Technicalinnovation_Expertrating> T_Win_Technicalinnovation_Expertrating { get; set; } // T_Win_Technicalinnovation_Expertrating
        public IDbSet<T_WorkClothes_Entry> T_WorkClothes_Entry { get; set; } // T_WorkClothes_Entry
        public IDbSet<T_WorkClothes_Entry_WorkClothesDetail> T_WorkClothes_Entry_WorkClothesDetail { get; set; } // T_WorkClothes_Entry_WorkClothesDetail
        public IDbSet<T_WorkClothes_ManageReceive> T_WorkClothes_ManageReceive { get; set; } // T_WorkClothes_ManageReceive
        public IDbSet<T_WorkClothes_ManageReceive_ReceiveDetail> T_WorkClothes_ManageReceive_ReceiveDetail { get; set; } // T_WorkClothes_ManageReceive_ReceiveDetail
        public IDbSet<T_WorkClothes_Stock> T_WorkClothes_Stock { get; set; } // T_WorkClothes_Stock
        public IDbSet<T_WorkClothes_Stock_ClothesDetail> T_WorkClothes_Stock_ClothesDetail { get; set; } // T_WorkClothes_Stock_ClothesDetail
        public IDbSet<T_WorkClothes_WorkerReceive> T_WorkClothes_WorkerReceive { get; set; } // T_WorkClothes_WorkerReceive
        public IDbSet<T_WorkClothes_WorkerReceive_ReceiveDetail> T_WorkClothes_WorkerReceive_ReceiveDetail { get; set; } // T_WorkClothes_WorkerReceive_ReceiveDetail
        public IDbSet<T_YDTest> T_YDTest { get; set; } // T_YDTest
        public IDbSet<T_YDTest_Detail> T_YDTest_Detail { get; set; } // T_YDTest_Detail
        public IDbSet<T_YDTest_JEXX> T_YDTest_JEXX { get; set; } // T_YDTest_JEXX
        public IDbSet<test_1> test_1 { get; set; } // test_1
        public IDbSet<V_DocumentFileAuthority> V_DocumentFileAuthority { get; set; } // V_DocumentFileAuthority

        static OfficeAutoEntities()
        {
            Database.SetInitializer<OfficeAutoEntities>(null);
        }

        public OfficeAutoEntities()
            : base("Name=OfficeAuto")
        {
        }

        public OfficeAutoEntities(string connectionString) : base(connectionString)
        {
        }

        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            base.OnModelCreating(modelBuilder);

            modelBuilder.Configurations.Add(new E_BDS_AccommodationSavingEawardConfiguration());
            modelBuilder.Configurations.Add(new E_BDS_AnnualValidityPeriodSetConfiguration());
            modelBuilder.Configurations.Add(new E_BDS_BankForeignExchangeRateConfiguration());
            modelBuilder.Configurations.Add(new E_BDS_CitytransfeestandardConfiguration());
            modelBuilder.Configurations.Add(new E_BDS_CompanyBankAccountInfoConfiguration());
            modelBuilder.Configurations.Add(new E_BDS_DomesticaccommodationstandardConfiguration());
            modelBuilder.Configurations.Add(new E_BDS_Domesticaccommodationstandard_RewardConfiguration());
            modelBuilder.Configurations.Add(new E_BDS_DomesticFoodCostStandardConfiguration());
            modelBuilder.Configurations.Add(new E_BDS_DomesticProjectManagerSubsidyStandardConfiguration());
            modelBuilder.Configurations.Add(new E_BDS_ForeignAccommodationStandardConfiguration());
            modelBuilder.Configurations.Add(new E_BDS_ForeignFoodSubsidyStandardConfiguration());
            modelBuilder.Configurations.Add(new E_BDS_ForeignSavingRewardConfiguration());
            modelBuilder.Configurations.Add(new E_BDS_ForeignSavingReward_RewardConfiguration());
            modelBuilder.Configurations.Add(new E_BDS_LaborsInfoConfiguration());
            modelBuilder.Configurations.Add(new E_BDS_MyBankCardInfoConfiguration());
            modelBuilder.Configurations.Add(new E_BDS_OnsiteSubsidyStandardConfiguration());
            modelBuilder.Configurations.Add(new E_BDS_PartyAndUnionBudgetConfiguration());
            modelBuilder.Configurations.Add(new E_BDS_PersonnellevelsandpositionsConfiguration());
            modelBuilder.Configurations.Add(new E_BDS_TransportationstandardsConfiguration());
            modelBuilder.Configurations.Add(new E_BDS_UserAllowLoanConfiguration());
            modelBuilder.Configurations.Add(new S_BM_LoanApplyConfiguration());
            modelBuilder.Configurations.Add(new S_D_CommentConfiguration());
            modelBuilder.Configurations.Add(new S_D_IncomingConfiguration());
            modelBuilder.Configurations.Add(new S_D_PostingConfiguration());
            modelBuilder.Configurations.Add(new S_D_RedTitleConfiguration());
            modelBuilder.Configurations.Add(new S_E_Logistics_OfficePosConfiguration());
            modelBuilder.Configurations.Add(new S_E_Logistics_OfficeRecordConfiguration());
            modelBuilder.Configurations.Add(new S_EP_DefineSubjectConfiguration());
            modelBuilder.Configurations.Add(new S_EP_ReimbursementApplyConfiguration());
            modelBuilder.Configurations.Add(new S_EP_ReimbursementApply_BXRYBXCLFRQConfiguration());
            modelBuilder.Configurations.Add(new S_EP_ReimbursementApply_DeptDetailConfiguration());
            modelBuilder.Configurations.Add(new S_EP_ReimbursementApply_DetailsConfiguration());
            modelBuilder.Configurations.Add(new S_EP_ReimbursementApply_ElectronicTicketConfiguration());
            modelBuilder.Configurations.Add(new S_EP_ReimbursementApply_EquipmentInventoryConfiguration());
            modelBuilder.Configurations.Add(new S_EP_ReimbursementApply_GNFYJTFConfiguration());
            modelBuilder.Configurations.Add(new S_EP_ReimbursementApply_GNYPZSFSRewardStandardConfiguration());
            modelBuilder.Configurations.Add(new S_EP_ReimbursementApply_GWFYMXConfiguration());
            modelBuilder.Configurations.Add(new S_EP_ReimbursementApply_LoanInfoConfiguration());
            modelBuilder.Configurations.Add(new S_EP_ReimbursementApply_OtherFeeConfiguration());
            modelBuilder.Configurations.Add(new S_EP_ReimbursementApply_PaymentScheduleConfiguration());
            modelBuilder.Configurations.Add(new S_EP_ReimbursementApply_ProjectInfoConfiguration());
            modelBuilder.Configurations.Add(new S_EP_ReimbursementApply_SXRYBConfiguration());
            modelBuilder.Configurations.Add(new S_EP_ReimbursementApply_TravelRecordInfoConfiguration());
            modelBuilder.Configurations.Add(new S_EP_ReimbursementApply_ZZSZYFPJXSEMXConfiguration());
            modelBuilder.Configurations.Add(new S_F_DocumentFileAuthorityConfiguration());
            modelBuilder.Configurations.Add(new S_F_DocumentInfoConfiguration());
            modelBuilder.Configurations.Add(new S_F_FileInfoConfiguration());
            modelBuilder.Configurations.Add(new S_FA_ProjectInfoConfiguration());
            modelBuilder.Configurations.Add(new S_FC_CostInfoConfiguration());
            modelBuilder.Configurations.Add(new S_FC_UserLoanAccountConfiguration());
            modelBuilder.Configurations.Add(new S_M_ConferenceRoomConfiguration());
            modelBuilder.Configurations.Add(new S_Survey_OptionConfiguration());
            modelBuilder.Configurations.Add(new S_Survey_QuestionConfiguration());
            modelBuilder.Configurations.Add(new S_Survey_QuestionCommentConfiguration());
            modelBuilder.Configurations.Add(new S_Survey_QuestionVoteConfiguration());
            modelBuilder.Configurations.Add(new S_Survey_SubjectConfiguration());
            modelBuilder.Configurations.Add(new S_Survey_VoteConfiguration());
            modelBuilder.Configurations.Add(new T_AskingLeaveConfiguration());
            modelBuilder.Configurations.Add(new T_AskingLeave_ApplyDurationConfiguration());
            modelBuilder.Configurations.Add(new T_Audit_MandateConfiguration());
            modelBuilder.Configurations.Add(new T_Audit_NoticeConfiguration());
            modelBuilder.Configurations.Add(new T_Audit_ProjectConfiguration());
            modelBuilder.Configurations.Add(new T_Audit_RectificationResultsCollectionConfiguration());
            modelBuilder.Configurations.Add(new T_Audit_ReportCommunicationConfiguration());
            modelBuilder.Configurations.Add(new T_Audit_ReportIssuanceConfiguration());
            modelBuilder.Configurations.Add(new T_B_MemoManagementConfiguration());
            modelBuilder.Configurations.Add(new T_B_OutgoingFileConfiguration());
            modelBuilder.Configurations.Add(new T_B_RemindConfiguration());
            modelBuilder.Configurations.Add(new T_B_SendFaxManagementConfiguration());
            modelBuilder.Configurations.Add(new T_BasicData_SupplierConfiguration());
            modelBuilder.Configurations.Add(new T_BM_NoPaymentConfirmationConfiguration());
            modelBuilder.Configurations.Add(new T_BM_NoPaymentConfirmation_LoanInfoConfiguration());
            modelBuilder.Configurations.Add(new T_BM_PersonalLoanUnReturnNoticeConfiguration());
            modelBuilder.Configurations.Add(new T_BM_RepaymentFormConfiguration());
            modelBuilder.Configurations.Add(new T_BM_RepaymentForm_LoanInfoConfiguration());
            modelBuilder.Configurations.Add(new T_Car_BaseConfiguration());
            modelBuilder.Configurations.Add(new T_Car_DriverConfiguration());
            modelBuilder.Configurations.Add(new T_Car_MaintenanceConfiguration());
            modelBuilder.Configurations.Add(new T_Car_Maintenance_MaintenanceDetailConfiguration());
            modelBuilder.Configurations.Add(new T_Car_UseApplyConfiguration());
            modelBuilder.Configurations.Add(new T_Car_UseApply_ExternalDispatchInformationConfiguration());
            modelBuilder.Configurations.Add(new T_Car_UseApply_InternalDispatchInformationConfiguration());
            modelBuilder.Configurations.Add(new T_ContractsAndProjects_ProjectDataAccessRequestConfiguration());
            modelBuilder.Configurations.Add(new T_Decrypt_ApplyConfiguration());
            modelBuilder.Configurations.Add(new T_DeviceManage_AddedPurchaseConfiguration());
            modelBuilder.Configurations.Add(new T_DeviceManage_AddedPurchase_PaymentDetailConfiguration());
            modelBuilder.Configurations.Add(new T_DeviceManage_AddedPurchase_SupplierDetailConfiguration());
            modelBuilder.Configurations.Add(new T_DeviceManage_ConsumablesPurchaseConfiguration());
            modelBuilder.Configurations.Add(new T_DeviceManage_ConsumablesPurchase_PaymentDetailConfiguration());
            modelBuilder.Configurations.Add(new T_DeviceManage_ConsumablesPurchase_PurchaseDetailConfiguration());
            modelBuilder.Configurations.Add(new T_DeviceManage_EntryConfiguration());
            modelBuilder.Configurations.Add(new T_DeviceManage_Entry_PurchaseDetailConfiguration());
            modelBuilder.Configurations.Add(new T_DeviceManage_PurchaseDemandConfiguration());
            modelBuilder.Configurations.Add(new T_DeviceManage_PurchaseDemand_DemandDetailConfiguration());
            modelBuilder.Configurations.Add(new T_DeviceManage_ServicePurchaseConfiguration());
            modelBuilder.Configurations.Add(new T_DeviceManage_ServicePurchase_PaymentDetailConfiguration());
            modelBuilder.Configurations.Add(new T_DRA_BankFinancingApplicationConfiguration());
            modelBuilder.Configurations.Add(new T_DRA_GJJDLLXDKGSConfiguration());
            modelBuilder.Configurations.Add(new T_DRA_GJJDLLXDKGS_InterestInfoConfiguration());
            modelBuilder.Configurations.Add(new T_DRA_IncludeApplicationConfiguration());
            modelBuilder.Configurations.Add(new T_DRA_ReceiptAcquittanceFormConfiguration());
            modelBuilder.Configurations.Add(new T_EngineeringBuildApplyDemoConfiguration());
            modelBuilder.Configurations.Add(new T_EngineeringBuildApplyDemo_CompetitorConfiguration());
            modelBuilder.Configurations.Add(new T_EngineeringBuildApplyDemo_CustomerContaceConfiguration());
            modelBuilder.Configurations.Add(new T_F_LoanApplyConfiguration());
            modelBuilder.Configurations.Add(new T_F_PaymentApplyConfiguration());
            modelBuilder.Configurations.Add(new T_F_ReimbursementApplyConfiguration());
            modelBuilder.Configurations.Add(new T_F_ReimbursementApply_DetailsConfiguration());
            modelBuilder.Configurations.Add(new T_FDM_FinanceElectronicDocumentDownloadConfiguration());
            modelBuilder.Configurations.Add(new T_FDM_FinanceElectronicDocumentDownload_DetailConfiguration());
            modelBuilder.Configurations.Add(new T_FDM_FinanceElectronicDocumentUploadConfiguration());
            modelBuilder.Configurations.Add(new T_FDM_FinancialDocumentBorrowingApplicationConfiguration());
            modelBuilder.Configurations.Add(new T_FDM_FinancialDocumenTestConfiguration());
            modelBuilder.Configurations.Add(new T_FDM_FinancialDocumenTest_liuliuConfiguration());
            modelBuilder.Configurations.Add(new T_FDM_FinancialDocumenTest_liuliu_GabroadnameConfiguration());
            modelBuilder.Configurations.Add(new T_FDM_FinancialDocumenTesttypedic_liuliuConfiguration());
            modelBuilder.Configurations.Add(new T_FDM_TechnicalPlatformDocumentTypeMaintenanceConfiguration());
            modelBuilder.Configurations.Add(new T_Lawsuit_CaseFileConfiguration());
            modelBuilder.Configurations.Add(new T_Lawsuit_CaseInformationConfiguration());
            modelBuilder.Configurations.Add(new T_Lawsuit_CaseReportConfiguration());
            modelBuilder.Configurations.Add(new T_Lawsuit_NoProjectConfiguration());
            modelBuilder.Configurations.Add(new T_Lawsuit_NoProject_ListOfEvidenceTransferConfiguration());
            modelBuilder.Configurations.Add(new T_Lawsuit_ProjectConfiguration());
            modelBuilder.Configurations.Add(new T_Lawsuit_Project_TransferDetailConfiguration());
            modelBuilder.Configurations.Add(new T_LegalPublicity_LawActivitiesConfiguration());
            modelBuilder.Configurations.Add(new T_Logistics_DiningApplyConfiguration());
            modelBuilder.Configurations.Add(new T_Logistics_ExternalClientApartApplyConfiguration());
            modelBuilder.Configurations.Add(new T_Logistics_OfficeConfiguration());
            modelBuilder.Configurations.Add(new T_Logistics_OfficeApplyConfiguration());
            modelBuilder.Configurations.Add(new T_Logistics_OfficePosConfiguration());
            modelBuilder.Configurations.Add(new T_M_ConferenceApplyConfiguration());
            modelBuilder.Configurations.Add(new T_M_ConferenceRegistConfiguration());
            modelBuilder.Configurations.Add(new T_M_ConferenceRoomConfiguration());
            modelBuilder.Configurations.Add(new T_M_ConferenceSummaryConfiguration());
            modelBuilder.Configurations.Add(new T_M_ConferenceSummary_MainContentConfiguration());
            modelBuilder.Configurations.Add(new T_M_OuterConferenceConfiguration());
            modelBuilder.Configurations.Add(new T_M_OuterConference_CostGridConfiguration());
            modelBuilder.Configurations.Add(new T_Patent_DeclarationApprovalConfiguration());
            modelBuilder.Configurations.Add(new T_Patent_ManagerConfiguration());
            modelBuilder.Configurations.Add(new T_Patent_PlanConfiguration());
            modelBuilder.Configurations.Add(new T_Patent_Plan_PatentPlanConfiguration());
            modelBuilder.Configurations.Add(new T_ProjectApprovalConfiguration());
            modelBuilder.Configurations.Add(new T_ProtectionArticle_LedgerConfiguration());
            modelBuilder.Configurations.Add(new T_ProtectionArticle_ReceiveConfiguration());
            modelBuilder.Configurations.Add(new T_ProtectionArticle_Receive_SafetyShoesDetailConfiguration());
            modelBuilder.Configurations.Add(new T_ProtectionArticle_RegisterConfiguration());
            modelBuilder.Configurations.Add(new T_ProtectionArticle_Register_SafetyShoeDetailConfiguration());
            modelBuilder.Configurations.Add(new T_PurchaseProject_AcceptanceConfiguration());
            modelBuilder.Configurations.Add(new T_PurchaseProject_ApprovalApplyConfiguration());
            modelBuilder.Configurations.Add(new T_PurchaseProject_ApprovalApply_ProjectListConfiguration());
            modelBuilder.Configurations.Add(new T_PurchaseProject_StateChangeConfiguration());
            modelBuilder.Configurations.Add(new T_RiskList_TaskBreakdownConfiguration());
            modelBuilder.Configurations.Add(new T_RiskList_TaskBreakdown_TaskBreakdownSheetConfiguration());
            modelBuilder.Configurations.Add(new T_RiskList_TaskCompletionReportConfiguration());
            modelBuilder.Configurations.Add(new T_RM_ReimbursementFormConfiguration());
            modelBuilder.Configurations.Add(new T_RM_ReimbursementForm_BXRYBXCLFRQConfiguration());
            modelBuilder.Configurations.Add(new T_RM_ReimbursementForm_DetailsConfiguration());
            modelBuilder.Configurations.Add(new T_RM_ReimbursementForm_GNFYJTFConfiguration());
            modelBuilder.Configurations.Add(new T_RM_ReimbursementForm_LoanInfoConfiguration());
            modelBuilder.Configurations.Add(new T_RM_ReimbursementForm_OtherFeeConfiguration());
            modelBuilder.Configurations.Add(new T_SceneMark_DictionariesConfiguration());
            modelBuilder.Configurations.Add(new T_SceneMark_EntryConfiguration());
            modelBuilder.Configurations.Add(new T_SceneMark_Entry_EntryDetailConfiguration());
            modelBuilder.Configurations.Add(new T_SceneMark_ReceiveConfiguration());
            modelBuilder.Configurations.Add(new T_SceneMark_Receive_ReceiveDetailConfiguration());
            modelBuilder.Configurations.Add(new T_sdsConfiguration());
            modelBuilder.Configurations.Add(new T_sds_YYSXConfiguration());
            modelBuilder.Configurations.Add(new T_Seal_ApplyConfiguration());
            modelBuilder.Configurations.Add(new T_Seal_Apply_DetailConfiguration());
            modelBuilder.Configurations.Add(new T_Seal_BorrowConfiguration());
            modelBuilder.Configurations.Add(new T_Seal_Borrow_DetailConfiguration());
            modelBuilder.Configurations.Add(new T_Seal_ChangeConfiguration());
            modelBuilder.Configurations.Add(new T_Seal_RepealConfiguration());
            modelBuilder.Configurations.Add(new T_Seal_SealInfoConfiguration());
            modelBuilder.Configurations.Add(new T_Seal_TransferConfiguration());
            modelBuilder.Configurations.Add(new T_SoftwareArticle_InstallationAcceptanceConfiguration());
            modelBuilder.Configurations.Add(new T_SoftwareArticle_ProcurementApprovalConfiguration());
            modelBuilder.Configurations.Add(new T_SoftwareArticle_ProcurementApproval_PaymentDetailConfiguration());
            modelBuilder.Configurations.Add(new T_SoftwareArticle_ProcurementApproval_SupplierDetailConfiguration());
            modelBuilder.Configurations.Add(new T_SoftwareArticle_ProcurementApproval_UseDetailConfiguration());
            modelBuilder.Configurations.Add(new T_SoftwareArticle_ProcurementDemandConfiguration());
            modelBuilder.Configurations.Add(new T_SoftwareArticle_ProcurementDemand_PurchaseDetailConfiguration());
            modelBuilder.Configurations.Add(new T_SoftwareArticle_ReceiveApplyConfiguration());
            modelBuilder.Configurations.Add(new T_SoftwareArticle_ReceiveApply_ReceiveDetailConfiguration());
            modelBuilder.Configurations.Add(new T_Standardengineer_StandardichecklistConfiguration());
            modelBuilder.Configurations.Add(new T_Standardengineer_Standardichecklist_ContentConfiguration());
            modelBuilder.Configurations.Add(new T_Standardengineer_StandardpeoplemanageConfiguration());
            modelBuilder.Configurations.Add(new T_Technicalcommittee_ExamandapprovalformConfiguration());
            modelBuilder.Configurations.Add(new T_Technicalcommittee_ExaminationandapprovalformConfiguration());
            modelBuilder.Configurations.Add(new T_Technicalcommittee_TechnicalpersonConfiguration());
            modelBuilder.Configurations.Add(new T_Technicalcommittee_trainingrecordConfiguration());
            modelBuilder.Configurations.Add(new T_Technicalcommittee_trainingrecord_TrainparticipantsConfiguration());
            modelBuilder.Configurations.Add(new T_Technicalcommittee_YouthexamformConfiguration());
            modelBuilder.Configurations.Add(new T_Technology_AttachmentConfiguration());
            modelBuilder.Configurations.Add(new T_Technology_ContractApprovalConfiguration());
            modelBuilder.Configurations.Add(new T_Technology_ContractApproval_PaymentPlanConfiguration());
            modelBuilder.Configurations.Add(new T_Technology_CostPlanConfiguration());
            modelBuilder.Configurations.Add(new T_Technology_CostPlan_TechnicalexpertConfiguration());
            modelBuilder.Configurations.Add(new T_Technology_CostPlan_TechnologyGroupConfiguration());
            modelBuilder.Configurations.Add(new T_Technology_CostPlanAttachmentConfiguration());
            modelBuilder.Configurations.Add(new T_Technology_ExpertReviewConfiguration());
            modelBuilder.Configurations.Add(new T_Technology_PaymentApplyConfiguration());
            modelBuilder.Configurations.Add(new T_Technology_PaymentApply_PaymentPlanConfiguration());
            modelBuilder.Configurations.Add(new T_Technology_PersonnelPlacementConfiguration());
            modelBuilder.Configurations.Add(new T_Technology_PersonnelPlacement_PlacementDetailConfiguration());
            modelBuilder.Configurations.Add(new T_Technology_ProjectapplicationformConfiguration());
            modelBuilder.Configurations.Add(new T_Technology_Projectapplicationform_TechnicalexpertConfiguration());
            modelBuilder.Configurations.Add(new T_Technology_ProjectDelayApplyConfiguration());
            modelBuilder.Configurations.Add(new T_Technology_ProjectProgressConfiguration());
            modelBuilder.Configurations.Add(new T_Technology_ProjectProgress_PlanDetailConfiguration());
            modelBuilder.Configurations.Add(new T_Technology_ResultCommitConfiguration());
            modelBuilder.Configurations.Add(new T_TM_ApplicationFormOfChinaIDCardConfiguration());
            modelBuilder.Configurations.Add(new T_TM_CKTSZLSJConfiguration());
            modelBuilder.Configurations.Add(new T_TM_CrossRegionTaxReportingConfiguration());
            modelBuilder.Configurations.Add(new T_TM_ExternalPaymentApplyConfiguration());
            modelBuilder.Configurations.Add(new T_TM_ForeignRelatedTaxContractConfiguration());
            modelBuilder.Configurations.Add(new T_TM_TaxpayerInfoConfiguration());
            modelBuilder.Configurations.Add(new T_TravelRecord_PersonConfiguration());
            modelBuilder.Configurations.Add(new T_TravelRecord_Person_EvectionDetailConfiguration());
            modelBuilder.Configurations.Add(new T_TwoLevelReporting_CompletionReportConfiguration());
            modelBuilder.Configurations.Add(new T_TwoLevelReporting_LawActivityConfiguration());
            modelBuilder.Configurations.Add(new T_TwoLevelReporting_NonLitigationDisputeRegistConfiguration());
            modelBuilder.Configurations.Add(new T_UseSealApplyConfiguration());
            modelBuilder.Configurations.Add(new T_Win_AwardItemConfiguration());
            modelBuilder.Configurations.Add(new T_Win_AwardManagerConfiguration());
            modelBuilder.Configurations.Add(new T_Win_AwardManager_JoinPersonConfiguration());
            modelBuilder.Configurations.Add(new T_Win_CurrentYearExpertConfiguration());
            modelBuilder.Configurations.Add(new T_Win_DeclareConfiguration());
            modelBuilder.Configurations.Add(new T_Win_DeclareManagerConfiguration());
            modelBuilder.Configurations.Add(new T_Win_DeclareManager_JoinPersonsConfiguration());
            modelBuilder.Configurations.Add(new T_Win_ExpertGradeConfiguration());
            modelBuilder.Configurations.Add(new T_Win_ExpertGrade_AwardItemsConfiguration());
            modelBuilder.Configurations.Add(new T_Win_ExpertManagerConfiguration());
            modelBuilder.Configurations.Add(new T_Win_IndustryAwardDeclareConfiguration());
            modelBuilder.Configurations.Add(new T_Win_IndustryAwardDeclare_JoinPersonConfiguration());
            modelBuilder.Configurations.Add(new T_Win_IndustryAwardDemandRecordConfiguration());
            modelBuilder.Configurations.Add(new T_Win_IndustryAwardManagerConfiguration());
            modelBuilder.Configurations.Add(new T_Win_IndustryAwardManager_JoinPersonConfiguration());
            modelBuilder.Configurations.Add(new T_Win_ProjectScoreConfiguration());
            modelBuilder.Configurations.Add(new T_Win_ProjectScore_ExpertDetailConfiguration());
            modelBuilder.Configurations.Add(new T_Win_TechnicalinnovationConfiguration());
            modelBuilder.Configurations.Add(new T_Win_Technicalinnovation_ExpertratingConfiguration());
            modelBuilder.Configurations.Add(new T_WorkClothes_EntryConfiguration());
            modelBuilder.Configurations.Add(new T_WorkClothes_Entry_WorkClothesDetailConfiguration());
            modelBuilder.Configurations.Add(new T_WorkClothes_ManageReceiveConfiguration());
            modelBuilder.Configurations.Add(new T_WorkClothes_ManageReceive_ReceiveDetailConfiguration());
            modelBuilder.Configurations.Add(new T_WorkClothes_StockConfiguration());
            modelBuilder.Configurations.Add(new T_WorkClothes_Stock_ClothesDetailConfiguration());
            modelBuilder.Configurations.Add(new T_WorkClothes_WorkerReceiveConfiguration());
            modelBuilder.Configurations.Add(new T_WorkClothes_WorkerReceive_ReceiveDetailConfiguration());
            modelBuilder.Configurations.Add(new T_YDTestConfiguration());
            modelBuilder.Configurations.Add(new T_YDTest_DetailConfiguration());
            modelBuilder.Configurations.Add(new T_YDTest_JEXXConfiguration());
            modelBuilder.Configurations.Add(new test_1Configuration());
            modelBuilder.Configurations.Add(new V_DocumentFileAuthorityConfiguration());
        }
    }

    // ************************************************************************
    // POCO classes

	/// <summary>无票住宿节约奖励标准</summary>	
	[Description("无票住宿节约奖励标准")]
    public partial class E_BDS_AccommodationSavingEaward : Formula.BaseModel
    {
		/// <summary></summary>	
		[Description("")]
        public string ID { get; set; } // ID (Primary key)
		/// <summary>填写日期</summary>	
		[Description("填写日期")]
        public DateTime? CreateDate { get; set; } // CreateDate
		/// <summary>修改日期</summary>	
		[Description("修改日期")]
        public DateTime? ModifyDate { get; set; } // ModifyDate
		/// <summary></summary>	
		[Description("")]
        public string CreateUserID { get; set; } // CreateUserID
		/// <summary>填写人</summary>	
		[Description("填写人")]
        public string CreateUser { get; set; } // CreateUser
		/// <summary></summary>	
		[Description("")]
        public string ModifyUserID { get; set; } // ModifyUserID
		/// <summary>修改人</summary>	
		[Description("修改人")]
        public string ModifyUser { get; set; } // ModifyUser
		/// <summary></summary>	
		[Description("")]
        public string OrgID { get; set; } // OrgID
		/// <summary></summary>	
		[Description("")]
        public string CompanyID { get; set; } // CompanyID
		/// <summary></summary>	
		[Description("")]
        public string FlowPhase { get; set; } // FlowPhase
		/// <summary></summary>	
		[Description("")]
        public string FlowInfo { get; set; } // FlowInfo
		/// <summary></summary>	
		[Description("")]
        public string StepName { get; set; } // StepName
		/// <summary>国家</summary>	
		[Description("国家")]
        public string Country { get; set; } // Country
		/// <summary>币种</summary>	
		[Description("币种")]
        public string Currency { get; set; } // Currency
		/// <summary>开始使用日期</summary>	
		[Description("开始使用日期")]
        public DateTime? StartDate { get; set; } // StartDate
		/// <summary>无票住宿节约奖励标准</summary>	
		[Description("无票住宿节约奖励标准")]
        public decimal? Reward { get; set; } // Reward
		/// <summary>备注</summary>	
		[Description("备注")]
        public string Remark { get; set; } // Remark
    }

	/// <summary>每年报销有效期设置</summary>	
	[Description("每年报销有效期设置")]
    public partial class E_BDS_AnnualValidityPeriodSet : Formula.BaseModel
    {
		/// <summary></summary>	
		[Description("")]
        public string ID { get; set; } // ID (Primary key)
		/// <summary>填写日期</summary>	
		[Description("填写日期")]
        public DateTime? CreateDate { get; set; } // CreateDate
		/// <summary>修改日期</summary>	
		[Description("修改日期")]
        public DateTime? ModifyDate { get; set; } // ModifyDate
		/// <summary></summary>	
		[Description("")]
        public string CreateUserID { get; set; } // CreateUserID
		/// <summary>填写人</summary>	
		[Description("填写人")]
        public string CreateUser { get; set; } // CreateUser
		/// <summary></summary>	
		[Description("")]
        public string ModifyUserID { get; set; } // ModifyUserID
		/// <summary>修改人</summary>	
		[Description("修改人")]
        public string ModifyUser { get; set; } // ModifyUser
		/// <summary></summary>	
		[Description("")]
        public string OrgID { get; set; } // OrgID
		/// <summary></summary>	
		[Description("")]
        public string CompanyID { get; set; } // CompanyID
		/// <summary></summary>	
		[Description("")]
        public string FlowPhase { get; set; } // FlowPhase
		/// <summary></summary>	
		[Description("")]
        public string FlowInfo { get; set; } // FlowInfo
		/// <summary></summary>	
		[Description("")]
        public string StepName { get; set; } // StepName
		/// <summary>年份</summary>	
		[Description("年份")]
        public string Year { get; set; } // Year
		/// <summary>报销单</summary>	
		[Description("报销单")]
        public string Expenseaccount { get; set; } // Expenseaccount
		/// <summary>报销起始日期</summary>	
		[Description("报销起始日期")]
        public DateTime? StartDate { get; set; } // StartDate
		/// <summary>报销截至日期</summary>	
		[Description("报销截至日期")]
        public DateTime? EndDate { get; set; } // EndDate
    }

	/// <summary>中国人民银行外汇牌价中间价表</summary>	
	[Description("中国人民银行外汇牌价中间价表")]
    public partial class E_BDS_BankForeignExchangeRate : Formula.BaseModel
    {
		/// <summary></summary>	
		[Description("")]
        public string ID { get; set; } // ID (Primary key)
		/// <summary></summary>	
		[Description("")]
        public DateTime? CreateDate { get; set; } // CreateDate
		/// <summary></summary>	
		[Description("")]
        public DateTime? ModifyDate { get; set; } // ModifyDate
		/// <summary></summary>	
		[Description("")]
        public string CreateUserID { get; set; } // CreateUserID
		/// <summary></summary>	
		[Description("")]
        public string CreateUser { get; set; } // CreateUser
		/// <summary></summary>	
		[Description("")]
        public string ModifyUserID { get; set; } // ModifyUserID
		/// <summary></summary>	
		[Description("")]
        public string ModifyUser { get; set; } // ModifyUser
		/// <summary></summary>	
		[Description("")]
        public string OrgID { get; set; } // OrgID
		/// <summary></summary>	
		[Description("")]
        public string CompanyID { get; set; } // CompanyID
		/// <summary></summary>	
		[Description("")]
        public string FlowPhase { get; set; } // FlowPhase
		/// <summary></summary>	
		[Description("")]
        public string FlowInfo { get; set; } // FlowInfo
		/// <summary></summary>	
		[Description("")]
        public string StepName { get; set; } // StepName
		/// <summary>外汇币种</summary>	
		[Description("外汇币种")]
        public string ForeignCurrency { get; set; } // ForeignCurrency
		/// <summary>中间价</summary>	
		[Description("中间价")]
        public decimal? MiddlePrice { get; set; } // MiddlePrice
		/// <summary>外汇牌价中间价汇率</summary>	
		[Description("外汇牌价中间价汇率")]
        public decimal? MiddlePriceRate { get; set; } // MiddlePriceRate
		/// <summary>现汇卖出价</summary>	
		[Description("现汇卖出价")]
        public decimal? SpotRate { get; set; } // SpotRate
		/// <summary>现汇买入价</summary>	
		[Description("现汇买入价")]
        public decimal? BuyingRate { get; set; } // BuyingRate
		/// <summary>现钞卖出价</summary>	
		[Description("现钞卖出价")]
        public decimal? CashOffer { get; set; } // CashOffer
		/// <summary>现钞买入价</summary>	
		[Description("现钞买入价")]
        public decimal? CashBuyRate { get; set; } // CashBuyRate
		/// <summary>数据更新时间</summary>	
		[Description("数据更新时间")]
        public DateTime? DataUpdatetTime { get; set; } // DataUpdatetTime
		/// <summary>年</summary>	
		[Description("年")]
        public string BelongYear { get; set; } // BelongYear
		/// <summary>月</summary>	
		[Description("月")]
        public string BelongMonth { get; set; } // BelongMonth
		/// <summary>日</summary>	
		[Description("日")]
        public string BelongDay { get; set; } // BelongDay
    }

	/// <summary>市内交通费标准</summary>	
	[Description("市内交通费标准")]
    public partial class E_BDS_Citytransfeestandard : Formula.BaseModel
    {
		/// <summary></summary>	
		[Description("")]
        public string ID { get; set; } // ID (Primary key)
		/// <summary>填写日期</summary>	
		[Description("填写日期")]
        public DateTime? CreateDate { get; set; } // CreateDate
		/// <summary>修改日期</summary>	
		[Description("修改日期")]
        public DateTime? ModifyDate { get; set; } // ModifyDate
		/// <summary></summary>	
		[Description("")]
        public string CreateUserID { get; set; } // CreateUserID
		/// <summary>填写人</summary>	
		[Description("填写人")]
        public string CreateUser { get; set; } // CreateUser
		/// <summary></summary>	
		[Description("")]
        public string ModifyUserID { get; set; } // ModifyUserID
		/// <summary>修改人</summary>	
		[Description("修改人")]
        public string ModifyUser { get; set; } // ModifyUser
		/// <summary></summary>	
		[Description("")]
        public string OrgID { get; set; } // OrgID
		/// <summary></summary>	
		[Description("")]
        public string CompanyID { get; set; } // CompanyID
		/// <summary></summary>	
		[Description("")]
        public string FlowPhase { get; set; } // FlowPhase
		/// <summary></summary>	
		[Description("")]
        public string FlowInfo { get; set; } // FlowInfo
		/// <summary></summary>	
		[Description("")]
        public string StepName { get; set; } // StepName
		/// <summary>人员级次</summary>	
		[Description("人员级次")]
        public string PersonLevel { get; set; } // PersonLevel
		/// <summary>开始使用日期</summary>	
		[Description("开始使用日期")]
        public DateTime? StartDate { get; set; } // StartDate
		/// <summary>市内交通费标准(元)</summary>	
		[Description("市内交通费标准(元)")]
        public decimal? CityTransfeeStandard { get; set; } // CityTransfeeStandard
		/// <summary>备注</summary>	
		[Description("备注")]
        public string Remark { get; set; } // Remark
    }

	/// <summary>公司银行账号</summary>	
	[Description("公司银行账号")]
    public partial class E_BDS_CompanyBankAccountInfo : Formula.BaseModel
    {
		/// <summary></summary>	
		[Description("")]
        public string ID { get; set; } // ID (Primary key)
		/// <summary></summary>	
		[Description("")]
        public DateTime? CreateDate { get; set; } // CreateDate
		/// <summary></summary>	
		[Description("")]
        public DateTime? ModifyDate { get; set; } // ModifyDate
		/// <summary></summary>	
		[Description("")]
        public string CreateUserID { get; set; } // CreateUserID
		/// <summary></summary>	
		[Description("")]
        public string CreateUser { get; set; } // CreateUser
		/// <summary></summary>	
		[Description("")]
        public string ModifyUserID { get; set; } // ModifyUserID
		/// <summary></summary>	
		[Description("")]
        public string ModifyUser { get; set; } // ModifyUser
		/// <summary></summary>	
		[Description("")]
        public string OrgID { get; set; } // OrgID
		/// <summary></summary>	
		[Description("")]
        public string CompanyID { get; set; } // CompanyID
		/// <summary></summary>	
		[Description("")]
        public string FlowPhase { get; set; } // FlowPhase
		/// <summary></summary>	
		[Description("")]
        public string FlowInfo { get; set; } // FlowInfo
		/// <summary></summary>	
		[Description("")]
        public string StepName { get; set; } // StepName
		/// <summary>银行名称</summary>	
		[Description("银行名称")]
        public string BankName { get; set; } // BankName
		/// <summary>银行账号</summary>	
		[Description("银行账号")]
        public string BankAccount { get; set; } // BankAccount
		/// <summary>地址</summary>	
		[Description("地址")]
        public string Address { get; set; } // Address
		/// <summary>联系电话</summary>	
		[Description("联系电话")]
        public string Phone { get; set; } // Phone
    }

	/// <summary>国内有票住宿标准</summary>	
	[Description("国内有票住宿标准")]
    public partial class E_BDS_Domesticaccommodationstandard : Formula.BaseModel
    {
		/// <summary></summary>	
		[Description("")]
        public string ID { get; set; } // ID (Primary key)
		/// <summary>填写日期</summary>	
		[Description("填写日期")]
        public DateTime? CreateDate { get; set; } // CreateDate
		/// <summary>修改日期</summary>	
		[Description("修改日期")]
        public DateTime? ModifyDate { get; set; } // ModifyDate
		/// <summary></summary>	
		[Description("")]
        public string CreateUserID { get; set; } // CreateUserID
		/// <summary>填写人</summary>	
		[Description("填写人")]
        public string CreateUser { get; set; } // CreateUser
		/// <summary></summary>	
		[Description("")]
        public string ModifyUserID { get; set; } // ModifyUserID
		/// <summary>修改人</summary>	
		[Description("修改人")]
        public string ModifyUser { get; set; } // ModifyUser
		/// <summary></summary>	
		[Description("")]
        public string OrgID { get; set; } // OrgID
		/// <summary></summary>	
		[Description("")]
        public string CompanyID { get; set; } // CompanyID
		/// <summary></summary>	
		[Description("")]
        public string FlowPhase { get; set; } // FlowPhase
		/// <summary></summary>	
		[Description("")]
        public string FlowInfo { get; set; } // FlowInfo
		/// <summary></summary>	
		[Description("")]
        public string StepName { get; set; } // StepName
		/// <summary>人员级次</summary>	
		[Description("人员级次")]
        public string PersonLevel { get; set; } // PersonLevel
		/// <summary>开始使用日期</summary>	
		[Description("开始使用日期")]
        public DateTime? StartDate { get; set; } // StartDate
		/// <summary>住宿费标准</summary>	
		[Description("住宿费标准")]
        public decimal? StandardAmount { get; set; } // StandardAmount
		/// <summary>备注</summary>	
		[Description("备注")]
        public string Remark { get; set; } // Remark
		/// <summary>住宿费节约额奖励表</summary>	
		[Description("住宿费节约额奖励表")]
        public string Reward { get; set; } // Reward

        // Reverse navigation
		[JsonIgnore]
        public virtual ICollection<E_BDS_Domesticaccommodationstandard_Reward> E_BDS_Domesticaccommodationstandard_Reward { get { onE_BDS_Domesticaccommodationstandard_RewardGetting(); return _E_BDS_Domesticaccommodationstandard_Reward;} }
		private ICollection<E_BDS_Domesticaccommodationstandard_Reward> _E_BDS_Domesticaccommodationstandard_Reward;
		partial void onE_BDS_Domesticaccommodationstandard_RewardGetting();


        public E_BDS_Domesticaccommodationstandard()
        {
            _E_BDS_Domesticaccommodationstandard_Reward = new List<E_BDS_Domesticaccommodationstandard_Reward>();
        }
    }

	/// <summary>住宿费节约额奖励表</summary>	
	[Description("住宿费节约额奖励表")]
    public partial class E_BDS_Domesticaccommodationstandard_Reward : Formula.BaseModel
    {
		/// <summary></summary>	
		[Description("")]
        public string ID { get; set; } // ID (Primary key)
		/// <summary></summary>	
		[Description("")]
        public string E_BDS_DomesticaccommodationstandardID { get; set; } // E_BDS_DomesticaccommodationstandardID
		/// <summary></summary>	
		[Description("")]
        public double? SortIndex { get; set; } // SortIndex
		/// <summary></summary>	
		[Description("")]
        public string IsReleased { get; set; } // IsReleased
		/// <summary>平均日节约奖励额起</summary>	
		[Description("平均日节约奖励额起")]
        public decimal? PJRJYJLEQ { get; set; } // PJRJYJLEQ
		/// <summary>平均日节约奖励额止</summary>	
		[Description("平均日节约奖励额止")]
        public decimal? PJRJYJLEZ { get; set; } // PJRJYJLEZ
		/// <summary>奖励(%)</summary>	
		[Description("奖励(%)")]
        public int? Reward { get; set; } // Reward

        // Foreign keys
		[JsonIgnore]
        public virtual E_BDS_Domesticaccommodationstandard E_BDS_Domesticaccommodationstandard { get; set; } //  E_BDS_DomesticaccommodationstandardID - FK_E_BDS_Domesticaccommodationstandard_Reward_E_BDS_Domesticaccommodationstandard
    }

	/// <summary>国内伙食费标准</summary>	
	[Description("国内伙食费标准")]
    public partial class E_BDS_DomesticFoodCostStandard : Formula.BaseModel
    {
		/// <summary></summary>	
		[Description("")]
        public string ID { get; set; } // ID (Primary key)
		/// <summary>填写日期</summary>	
		[Description("填写日期")]
        public DateTime? CreateDate { get; set; } // CreateDate
		/// <summary>修改日期</summary>	
		[Description("修改日期")]
        public DateTime? ModifyDate { get; set; } // ModifyDate
		/// <summary></summary>	
		[Description("")]
        public string CreateUserID { get; set; } // CreateUserID
		/// <summary>填写人</summary>	
		[Description("填写人")]
        public string CreateUser { get; set; } // CreateUser
		/// <summary></summary>	
		[Description("")]
        public string ModifyUserID { get; set; } // ModifyUserID
		/// <summary>修改人</summary>	
		[Description("修改人")]
        public string ModifyUser { get; set; } // ModifyUser
		/// <summary></summary>	
		[Description("")]
        public string OrgID { get; set; } // OrgID
		/// <summary></summary>	
		[Description("")]
        public string CompanyID { get; set; } // CompanyID
		/// <summary></summary>	
		[Description("")]
        public string FlowPhase { get; set; } // FlowPhase
		/// <summary></summary>	
		[Description("")]
        public string FlowInfo { get; set; } // FlowInfo
		/// <summary></summary>	
		[Description("")]
        public string StepName { get; set; } // StepName
		/// <summary>国家</summary>	
		[Description("国家")]
        public string Country { get; set; } // Country
		/// <summary>开始使用日期</summary>	
		[Description("开始使用日期")]
        public DateTime? StartDate { get; set; } // StartDate
		/// <summary>伙食费标准</summary>	
		[Description("伙食费标准")]
        public decimal? Foods { get; set; } // Foods
		/// <summary>备注</summary>	
		[Description("备注")]
        public string Remark { get; set; } // Remark
    }

	/// <summary>国内项目经理岗位补贴标准</summary>	
	[Description("国内项目经理岗位补贴标准")]
    public partial class E_BDS_DomesticProjectManagerSubsidyStandard : Formula.BaseModel
    {
		/// <summary></summary>	
		[Description("")]
        public string ID { get; set; } // ID (Primary key)
		/// <summary>填写日期</summary>	
		[Description("填写日期")]
        public DateTime? CreateDate { get; set; } // CreateDate
		/// <summary>修改日期</summary>	
		[Description("修改日期")]
        public DateTime? ModifyDate { get; set; } // ModifyDate
		/// <summary></summary>	
		[Description("")]
        public string CreateUserID { get; set; } // CreateUserID
		/// <summary>填写人</summary>	
		[Description("填写人")]
        public string CreateUser { get; set; } // CreateUser
		/// <summary></summary>	
		[Description("")]
        public string ModifyUserID { get; set; } // ModifyUserID
		/// <summary>修改人</summary>	
		[Description("修改人")]
        public string ModifyUser { get; set; } // ModifyUser
		/// <summary></summary>	
		[Description("")]
        public string OrgID { get; set; } // OrgID
		/// <summary></summary>	
		[Description("")]
        public string CompanyID { get; set; } // CompanyID
		/// <summary></summary>	
		[Description("")]
        public string FlowPhase { get; set; } // FlowPhase
		/// <summary></summary>	
		[Description("")]
        public string FlowInfo { get; set; } // FlowInfo
		/// <summary></summary>	
		[Description("")]
        public string StepName { get; set; } // StepName
		/// <summary>国家</summary>	
		[Description("国家")]
        public string Country { get; set; } // Country
		/// <summary>开始使用日期</summary>	
		[Description("开始使用日期")]
        public DateTime? StartDate { get; set; } // StartDate
		/// <summary>岗位名称</summary>	
		[Description("岗位名称")]
        public string Position { get; set; } // Position
		/// <summary>岗位补贴标准(元)</summary>	
		[Description("岗位补贴标准(元)")]
        public decimal? Positionsubsidy { get; set; } // Positionsubsidy
		/// <summary>备注</summary>	
		[Description("备注")]
        public string Remark { get; set; } // Remark
    }

	/// <summary>国外有票住宿费用标准</summary>	
	[Description("国外有票住宿费用标准")]
    public partial class E_BDS_ForeignAccommodationStandard : Formula.BaseModel
    {
		/// <summary></summary>	
		[Description("")]
        public string ID { get; set; } // ID (Primary key)
		/// <summary>填写日期</summary>	
		[Description("填写日期")]
        public DateTime? CreateDate { get; set; } // CreateDate
		/// <summary>修改日期</summary>	
		[Description("修改日期")]
        public DateTime? ModifyDate { get; set; } // ModifyDate
		/// <summary></summary>	
		[Description("")]
        public string CreateUserID { get; set; } // CreateUserID
		/// <summary>填写人</summary>	
		[Description("填写人")]
        public string CreateUser { get; set; } // CreateUser
		/// <summary></summary>	
		[Description("")]
        public string ModifyUserID { get; set; } // ModifyUserID
		/// <summary>修改人</summary>	
		[Description("修改人")]
        public string ModifyUser { get; set; } // ModifyUser
		/// <summary></summary>	
		[Description("")]
        public string OrgID { get; set; } // OrgID
		/// <summary></summary>	
		[Description("")]
        public string CompanyID { get; set; } // CompanyID
		/// <summary></summary>	
		[Description("")]
        public string FlowPhase { get; set; } // FlowPhase
		/// <summary></summary>	
		[Description("")]
        public string FlowInfo { get; set; } // FlowInfo
		/// <summary></summary>	
		[Description("")]
        public string StepName { get; set; } // StepName
		/// <summary>出差类型</summary>	
		[Description("出差类型")]
        public string Businesstype { get; set; } // Businesstype
		/// <summary>国家</summary>	
		[Description("国家")]
        public string Country { get; set; } // Country
		/// <summary>城市</summary>	
		[Description("城市")]
        public string City { get; set; } // City
		/// <summary>币种</summary>	
		[Description("币种")]
        public string Currency { get; set; } // Currency
		/// <summary>住宿费标准</summary>	
		[Description("住宿费标准")]
        public decimal? Accommodation { get; set; } // Accommodation
		/// <summary>开始使用日期</summary>	
		[Description("开始使用日期")]
        public DateTime? Startdate { get; set; } // Startdate
		/// <summary>备注</summary>	
		[Description("备注")]
        public string Remark { get; set; } // Remark
    }

	/// <summary>国外伙食及公杂费补贴标准</summary>	
	[Description("国外伙食及公杂费补贴标准")]
    public partial class E_BDS_ForeignFoodSubsidyStandard : Formula.BaseModel
    {
		/// <summary></summary>	
		[Description("")]
        public string ID { get; set; } // ID (Primary key)
		/// <summary>填写日期</summary>	
		[Description("填写日期")]
        public DateTime? CreateDate { get; set; } // CreateDate
		/// <summary>修改日期</summary>	
		[Description("修改日期")]
        public DateTime? ModifyDate { get; set; } // ModifyDate
		/// <summary></summary>	
		[Description("")]
        public string CreateUserID { get; set; } // CreateUserID
		/// <summary>填写人</summary>	
		[Description("填写人")]
        public string CreateUser { get; set; } // CreateUser
		/// <summary></summary>	
		[Description("")]
        public string ModifyUserID { get; set; } // ModifyUserID
		/// <summary>修改人</summary>	
		[Description("修改人")]
        public string ModifyUser { get; set; } // ModifyUser
		/// <summary></summary>	
		[Description("")]
        public string OrgID { get; set; } // OrgID
		/// <summary></summary>	
		[Description("")]
        public string CompanyID { get; set; } // CompanyID
		/// <summary></summary>	
		[Description("")]
        public string FlowPhase { get; set; } // FlowPhase
		/// <summary></summary>	
		[Description("")]
        public string FlowInfo { get; set; } // FlowInfo
		/// <summary></summary>	
		[Description("")]
        public string StepName { get; set; } // StepName
		/// <summary>出差类型</summary>	
		[Description("出差类型")]
        public string Businesstype { get; set; } // Businesstype
		/// <summary>国家</summary>	
		[Description("国家")]
        public string Country { get; set; } // Country
		/// <summary>城市</summary>	
		[Description("城市")]
        public string City { get; set; } // City
		/// <summary>币种</summary>	
		[Description("币种")]
        public string Currency { get; set; } // Currency
		/// <summary>伙食补贴</summary>	
		[Description("伙食补贴")]
        public decimal? Mealallowance { get; set; } // Mealallowance
		/// <summary>公杂费补贴</summary>	
		[Description("公杂费补贴")]
        public decimal? Subsidies { get; set; } // Subsidies
		/// <summary>开始使用日期</summary>	
		[Description("开始使用日期")]
        public DateTime? StartDate { get; set; } // StartDate
		/// <summary>备注</summary>	
		[Description("备注")]
        public string Remark { get; set; } // Remark
    }

	/// <summary>国外有票住宿费节约奖励配置</summary>	
	[Description("国外有票住宿费节约奖励配置")]
    public partial class E_BDS_ForeignSavingReward : Formula.BaseModel
    {
		/// <summary></summary>	
		[Description("")]
        public string ID { get; set; } // ID (Primary key)
		/// <summary>填写日期</summary>	
		[Description("填写日期")]
        public DateTime? CreateDate { get; set; } // CreateDate
		/// <summary>修改日期</summary>	
		[Description("修改日期")]
        public DateTime? ModifyDate { get; set; } // ModifyDate
		/// <summary></summary>	
		[Description("")]
        public string CreateUserID { get; set; } // CreateUserID
		/// <summary>填写人</summary>	
		[Description("填写人")]
        public string CreateUser { get; set; } // CreateUser
		/// <summary></summary>	
		[Description("")]
        public string ModifyUserID { get; set; } // ModifyUserID
		/// <summary>修改人</summary>	
		[Description("修改人")]
        public string ModifyUser { get; set; } // ModifyUser
		/// <summary></summary>	
		[Description("")]
        public string OrgID { get; set; } // OrgID
		/// <summary></summary>	
		[Description("")]
        public string CompanyID { get; set; } // CompanyID
		/// <summary></summary>	
		[Description("")]
        public string FlowPhase { get; set; } // FlowPhase
		/// <summary></summary>	
		[Description("")]
        public string FlowInfo { get; set; } // FlowInfo
		/// <summary></summary>	
		[Description("")]
        public string StepName { get; set; } // StepName
		/// <summary>国家</summary>	
		[Description("国家")]
        public string Country { get; set; } // Country
		/// <summary>币种</summary>	
		[Description("币种")]
        public string Currency { get; set; } // Currency
		/// <summary>开始使用日期</summary>	
		[Description("开始使用日期")]
        public DateTime? StartDate { get; set; } // StartDate
		/// <summary>备注</summary>	
		[Description("备注")]
        public string Remark { get; set; } // Remark
		/// <summary>住宿费节约额奖励表</summary>	
		[Description("住宿费节约额奖励表")]
        public string Reward { get; set; } // Reward

        // Reverse navigation
		[JsonIgnore]
        public virtual ICollection<E_BDS_ForeignSavingReward_Reward> E_BDS_ForeignSavingReward_Reward { get { onE_BDS_ForeignSavingReward_RewardGetting(); return _E_BDS_ForeignSavingReward_Reward;} }
		private ICollection<E_BDS_ForeignSavingReward_Reward> _E_BDS_ForeignSavingReward_Reward;
		partial void onE_BDS_ForeignSavingReward_RewardGetting();


        public E_BDS_ForeignSavingReward()
        {
            _E_BDS_ForeignSavingReward_Reward = new List<E_BDS_ForeignSavingReward_Reward>();
        }
    }

	/// <summary>住宿费节约额奖励表</summary>	
	[Description("住宿费节约额奖励表")]
    public partial class E_BDS_ForeignSavingReward_Reward : Formula.BaseModel
    {
		/// <summary></summary>	
		[Description("")]
        public string ID { get; set; } // ID (Primary key)
		/// <summary></summary>	
		[Description("")]
        public string E_BDS_ForeignSavingRewardID { get; set; } // E_BDS_ForeignSavingRewardID
		/// <summary></summary>	
		[Description("")]
        public double? SortIndex { get; set; } // SortIndex
		/// <summary></summary>	
		[Description("")]
        public string IsReleased { get; set; } // IsReleased
		/// <summary>平均日节约奖励额起</summary>	
		[Description("平均日节约奖励额起")]
        public decimal? PJRJYJLEQ { get; set; } // PJRJYJLEQ
		/// <summary>平均日节约奖励额止</summary>	
		[Description("平均日节约奖励额止")]
        public decimal? PJRJYJLEZ { get; set; } // PJRJYJLEZ
		/// <summary>奖励(%)</summary>	
		[Description("奖励(%)")]
        public decimal? Reward { get; set; } // Reward

        // Foreign keys
		[JsonIgnore]
        public virtual E_BDS_ForeignSavingReward E_BDS_ForeignSavingReward { get; set; } //  E_BDS_ForeignSavingRewardID - FK_E_BDS_ForeignSavingReward_Reward_E_BDS_ForeignSavingReward
    }

	/// <summary></summary>	
	[Description("")]
    public partial class E_BDS_LaborsInfo : Formula.BaseModel
    {
		/// <summary>主键</summary>	
		[Description("主键")]
        public string ID { get; set; } // ID (Primary key)
		/// <summary>姓名</summary>	
		[Description("姓名")]
        public string UserName { get; set; } // UserName
		/// <summary>证件类型</summary>	
		[Description("证件类型")]
        public string CertificateType { get; set; } // CertificateType
		/// <summary>证件号码</summary>	
		[Description("证件号码")]
        public string IDCard { get; set; } // IDCard
		/// <summary>手机号</summary>	
		[Description("手机号")]
        public string UserPhone { get; set; } // UserPhone
		/// <summary>聘用时间</summary>	
		[Description("聘用时间")]
        public DateTime? HiringTime { get; set; } // HiringTime
		/// <summary>收款户名</summary>	
		[Description("收款户名")]
        public string AccountName { get; set; } // AccountName
		/// <summary>开户银行</summary>	
		[Description("开户银行")]
        public string OpenBank { get; set; } // OpenBank
		/// <summary>银行卡号</summary>	
		[Description("银行卡号")]
        public string CardNumber { get; set; } // CardNumber
    }

	/// <summary>我的银行卡信息</summary>	
	[Description("我的银行卡信息")]
    public partial class E_BDS_MyBankCardInfo : Formula.BaseModel
    {
		/// <summary></summary>	
		[Description("")]
        public string ID { get; set; } // ID (Primary key)
		/// <summary>创建日期</summary>	
		[Description("创建日期")]
        public DateTime? CreateDate { get; set; } // CreateDate
		/// <summary></summary>	
		[Description("")]
        public DateTime? ModifyDate { get; set; } // ModifyDate
		/// <summary>创建人ID</summary>	
		[Description("创建人ID")]
        public string CreateUserID { get; set; } // CreateUserID
		/// <summary>创建人Name</summary>	
		[Description("创建人Name")]
        public string CreateUser { get; set; } // CreateUser
		/// <summary></summary>	
		[Description("")]
        public string ModifyUserID { get; set; } // ModifyUserID
		/// <summary></summary>	
		[Description("")]
        public string ModifyUser { get; set; } // ModifyUser
		/// <summary></summary>	
		[Description("")]
        public string OrgID { get; set; } // OrgID
		/// <summary></summary>	
		[Description("")]
        public string CompanyID { get; set; } // CompanyID
		/// <summary></summary>	
		[Description("")]
        public string FlowPhase { get; set; } // FlowPhase
		/// <summary></summary>	
		[Description("")]
        public string FlowInfo { get; set; } // FlowInfo
		/// <summary></summary>	
		[Description("")]
        public string StepName { get; set; } // StepName
		/// <summary>户名</summary>	
		[Description("户名")]
        public string AccountName { get; set; } // AccountName
		/// <summary>开户行</summary>	
		[Description("开户行")]
        public string OpenBank { get; set; } // OpenBank
		/// <summary>银行卡号</summary>	
		[Description("银行卡号")]
        public string CardNumber { get; set; } // CardNumber
    }

	/// <summary>驻场补贴标准</summary>	
	[Description("驻场补贴标准")]
    public partial class E_BDS_OnsiteSubsidyStandard : Formula.BaseModel
    {
		/// <summary></summary>	
		[Description("")]
        public string ID { get; set; } // ID (Primary key)
		/// <summary>填写日期</summary>	
		[Description("填写日期")]
        public DateTime? CreateDate { get; set; } // CreateDate
		/// <summary>修改日期</summary>	
		[Description("修改日期")]
        public DateTime? ModifyDate { get; set; } // ModifyDate
		/// <summary></summary>	
		[Description("")]
        public string CreateUserID { get; set; } // CreateUserID
		/// <summary>填写人</summary>	
		[Description("填写人")]
        public string CreateUser { get; set; } // CreateUser
		/// <summary></summary>	
		[Description("")]
        public string ModifyUserID { get; set; } // ModifyUserID
		/// <summary>修改人</summary>	
		[Description("修改人")]
        public string ModifyUser { get; set; } // ModifyUser
		/// <summary></summary>	
		[Description("")]
        public string OrgID { get; set; } // OrgID
		/// <summary></summary>	
		[Description("")]
        public string CompanyID { get; set; } // CompanyID
		/// <summary></summary>	
		[Description("")]
        public string FlowPhase { get; set; } // FlowPhase
		/// <summary></summary>	
		[Description("")]
        public string FlowInfo { get; set; } // FlowInfo
		/// <summary></summary>	
		[Description("")]
        public string StepName { get; set; } // StepName
		/// <summary>出差类型</summary>	
		[Description("出差类型")]
        public string Businesstype { get; set; } // Businesstype
		/// <summary>国家</summary>	
		[Description("国家")]
        public string Country { get; set; } // Country
		/// <summary>城市</summary>	
		[Description("城市")]
        public string City { get; set; } // City
		/// <summary>币种</summary>	
		[Description("币种")]
        public string Currency { get; set; } // Currency
		/// <summary>驻场补贴金额</summary>	
		[Description("驻场补贴金额")]
        public decimal? Subsidyamount { get; set; } // Subsidyamount
		/// <summary>开始使用日期</summary>	
		[Description("开始使用日期")]
        public DateTime? StartDate { get; set; } // StartDate
		/// <summary>备注</summary>	
		[Description("备注")]
        public string Remark { get; set; } // Remark
    }

	/// <summary>党费预算设置</summary>	
	[Description("党费预算设置")]
    public partial class E_BDS_PartyAndUnionBudget : Formula.BaseModel
    {
		/// <summary></summary>	
		[Description("")]
        public string ID { get; set; } // ID (Primary key)
		/// <summary>填写日期</summary>	
		[Description("填写日期")]
        public DateTime? CreateDate { get; set; } // CreateDate
		/// <summary>修改日期</summary>	
		[Description("修改日期")]
        public DateTime? ModifyDate { get; set; } // ModifyDate
		/// <summary></summary>	
		[Description("")]
        public string CreateUserID { get; set; } // CreateUserID
		/// <summary>填写人</summary>	
		[Description("填写人")]
        public string CreateUser { get; set; } // CreateUser
		/// <summary></summary>	
		[Description("")]
        public string ModifyUserID { get; set; } // ModifyUserID
		/// <summary>修改人</summary>	
		[Description("修改人")]
        public string ModifyUser { get; set; } // ModifyUser
		/// <summary></summary>	
		[Description("")]
        public string OrgID { get; set; } // OrgID
		/// <summary></summary>	
		[Description("")]
        public string CompanyID { get; set; } // CompanyID
		/// <summary></summary>	
		[Description("")]
        public string FlowPhase { get; set; } // FlowPhase
		/// <summary></summary>	
		[Description("")]
        public string FlowInfo { get; set; } // FlowInfo
		/// <summary></summary>	
		[Description("")]
        public string StepName { get; set; } // StepName
		/// <summary>预算年份</summary>	
		[Description("预算年份")]
        public string BelongYear { get; set; } // BelongYear
		/// <summary>党费预算</summary>	
		[Description("党费预算")]
        public decimal? Budget { get; set; } // Budget
		/// <summary>名称</summary>	
		[Description("名称")]
        public string Name { get; set; } // Name
		/// <summary>预算类型</summary>	
		[Description("预算类型")]
        public string BudgetType { get; set; } // BudgetType
    }

	/// <summary>人员级次与岗位对应关系</summary>	
	[Description("人员级次与岗位对应关系")]
    public partial class E_BDS_Personnellevelsandpositions : Formula.BaseModel
    {
		/// <summary></summary>	
		[Description("")]
        public string ID { get; set; } // ID (Primary key)
		/// <summary>填写日期</summary>	
		[Description("填写日期")]
        public DateTime? CreateDate { get; set; } // CreateDate
		/// <summary>修改日期</summary>	
		[Description("修改日期")]
        public DateTime? ModifyDate { get; set; } // ModifyDate
		/// <summary></summary>	
		[Description("")]
        public string CreateUserID { get; set; } // CreateUserID
		/// <summary>填写人</summary>	
		[Description("填写人")]
        public string CreateUser { get; set; } // CreateUser
		/// <summary></summary>	
		[Description("")]
        public string ModifyUserID { get; set; } // ModifyUserID
		/// <summary>修改人</summary>	
		[Description("修改人")]
        public string ModifyUser { get; set; } // ModifyUser
		/// <summary></summary>	
		[Description("")]
        public string OrgID { get; set; } // OrgID
		/// <summary></summary>	
		[Description("")]
        public string CompanyID { get; set; } // CompanyID
		/// <summary></summary>	
		[Description("")]
        public string FlowPhase { get; set; } // FlowPhase
		/// <summary></summary>	
		[Description("")]
        public string FlowInfo { get; set; } // FlowInfo
		/// <summary></summary>	
		[Description("")]
        public string StepName { get; set; } // StepName
		/// <summary>人员级次</summary>	
		[Description("人员级次")]
        public string Personlevel { get; set; } // Personlevel
		/// <summary>开始使用日期</summary>	
		[Description("开始使用日期")]
        public DateTime? StartDate { get; set; } // StartDate
		/// <summary>人员岗位</summary>	
		[Description("人员岗位")]
        public string Personposition { get; set; } // Personposition
		/// <summary>备注说明</summary>	
		[Description("备注说明")]
        public string Remark { get; set; } // Remark
    }

	/// <summary>交通工具标准</summary>	
	[Description("交通工具标准")]
    public partial class E_BDS_Transportationstandards : Formula.BaseModel
    {
		/// <summary></summary>	
		[Description("")]
        public string ID { get; set; } // ID (Primary key)
		/// <summary>填写日期</summary>	
		[Description("填写日期")]
        public DateTime? CreateDate { get; set; } // CreateDate
		/// <summary>修改日期</summary>	
		[Description("修改日期")]
        public DateTime? ModifyDate { get; set; } // ModifyDate
		/// <summary></summary>	
		[Description("")]
        public string CreateUserID { get; set; } // CreateUserID
		/// <summary>填写人</summary>	
		[Description("填写人")]
        public string CreateUser { get; set; } // CreateUser
		/// <summary></summary>	
		[Description("")]
        public string ModifyUserID { get; set; } // ModifyUserID
		/// <summary>修改人</summary>	
		[Description("修改人")]
        public string ModifyUser { get; set; } // ModifyUser
		/// <summary></summary>	
		[Description("")]
        public string OrgID { get; set; } // OrgID
		/// <summary></summary>	
		[Description("")]
        public string CompanyID { get; set; } // CompanyID
		/// <summary></summary>	
		[Description("")]
        public string FlowPhase { get; set; } // FlowPhase
		/// <summary></summary>	
		[Description("")]
        public string FlowInfo { get; set; } // FlowInfo
		/// <summary></summary>	
		[Description("")]
        public string StepName { get; set; } // StepName
		/// <summary>人员级次</summary>	
		[Description("人员级次")]
        public string PersonLevel { get; set; } // PersonLevel
		/// <summary>开始使用日期</summary>	
		[Description("开始使用日期")]
        public DateTime? StartDate { get; set; } // StartDate
		/// <summary>可使用交通工具</summary>	
		[Description("可使用交通工具")]
        public string Transportation { get; set; } // Transportation
		/// <summary>备注</summary>	
		[Description("备注")]
        public string Remark { get; set; } // Remark
    }

	/// <summary></summary>	
	[Description("")]
    public partial class E_BDS_UserAllowLoan : Formula.BaseModel
    {
		/// <summary>主键ID</summary>	
		[Description("主键ID")]
        public string ID { get; set; } // ID (Primary key)
		/// <summary>人员ID</summary>	
		[Description("人员ID")]
        public string UserID { get; set; } // UserID
		/// <summary>人员姓名</summary>	
		[Description("人员姓名")]
        public string UserName { get; set; } // UserName
		/// <summary>人员工号</summary>	
		[Description("人员工号")]
        public string UserCode { get; set; } // UserCode
		/// <summary>是否可借款</summary>	
		[Description("是否可借款")]
        public string IsAllowLoan { get; set; } // IsAllowLoan
    }

	/// <summary>借款申请单</summary>	
	[Description("借款申请单")]
    public partial class S_BM_LoanApply : Formula.BaseModel
    {
		/// <summary></summary>	
		[Description("")]
        public string ID { get; set; } // ID (Primary key)
		/// <summary></summary>	
		[Description("")]
        public DateTime? CreateDate { get; set; } // CreateDate
		/// <summary></summary>	
		[Description("")]
        public DateTime? ModifyDate { get; set; } // ModifyDate
		/// <summary></summary>	
		[Description("")]
        public string CreateUserID { get; set; } // CreateUserID
		/// <summary></summary>	
		[Description("")]
        public string CreateUser { get; set; } // CreateUser
		/// <summary></summary>	
		[Description("")]
        public string ModifyUserID { get; set; } // ModifyUserID
		/// <summary></summary>	
		[Description("")]
        public string ModifyUser { get; set; } // ModifyUser
		/// <summary></summary>	
		[Description("")]
        public string OrgID { get; set; } // OrgID
		/// <summary></summary>	
		[Description("")]
        public string CompanyID { get; set; } // CompanyID
		/// <summary></summary>	
		[Description("")]
        public string FlowPhase { get; set; } // FlowPhase
		/// <summary></summary>	
		[Description("")]
        public string FlowInfo { get; set; } // FlowInfo
		/// <summary></summary>	
		[Description("")]
        public string StepName { get; set; } // StepName
		/// <summary>申请人</summary>	
		[Description("申请人")]
        public string ApplyName { get; set; } // ApplyName
		/// <summary>申请人工号</summary>	
		[Description("申请人工号")]
        public string ApplyNumber { get; set; } // ApplyNumber
		/// <summary>申请日期</summary>	
		[Description("申请日期")]
        public DateTime? ApplyDate { get; set; } // ApplyDate
		/// <summary>申请人部门</summary>	
		[Description("申请人部门")]
        public string ApplyDept { get; set; } // ApplyDept
		/// <summary>申请人部门名称</summary>	
		[Description("申请人部门名称")]
        public string ApplyDeptName { get; set; } // ApplyDeptName
		/// <summary>上级部门</summary>	
		[Description("上级部门")]
        public string SuperiorDept { get; set; } // SuperiorDept
		/// <summary>上级部门名称</summary>	
		[Description("上级部门名称")]
        public string SuperiorDeptName { get; set; } // SuperiorDeptName
		/// <summary>借款流水号</summary>	
		[Description("借款流水号")]
        public string SerialNumber { get; set; } // SerialNumber
		/// <summary>实际借款人</summary>	
		[Description("实际借款人")]
        public string ActualBorrower { get; set; } // ActualBorrower
		/// <summary>实际借款人名称</summary>	
		[Description("实际借款人名称")]
        public string ActualBorrowerName { get; set; } // ActualBorrowerName
		/// <summary>借款地点</summary>	
		[Description("借款地点")]
        public string BorrowLocation { get; set; } // BorrowLocation
		/// <summary>任务性质</summary>	
		[Description("任务性质")]
        public string TaskNature { get; set; } // TaskNature
		/// <summary>付款方式</summary>	
		[Description("付款方式")]
        public string PaymentType { get; set; } // PaymentType
		/// <summary>借款金额(元)</summary>	
		[Description("借款金额(元)")]
        public decimal? LoanAmount { get; set; } // LoanAmount
		/// <summary>借款金额(大写)</summary>	
		[Description("借款金额(大写)")]
        public string LoanAmountCaps { get; set; } // LoanAmountCaps
		/// <summary>收款单位收款人</summary>	
		[Description("收款单位收款人")]
        public string Payee { get; set; } // Payee
		/// <summary>银行账号卡号</summary>	
		[Description("银行账号卡号")]
        public string CardNumber { get; set; } // CardNumber
		/// <summary>开户行</summary>	
		[Description("开户行")]
        public string OpenBank { get; set; } // OpenBank
		/// <summary>借款事由</summary>	
		[Description("借款事由")]
        public string LoanReason { get; set; } // LoanReason
		/// <summary>附件</summary>	
		[Description("附件")]
        public string Attachment { get; set; } // Attachment
		/// <summary>项目名称</summary>	
		[Description("项目名称")]
        public string Project { get; set; } // Project
		/// <summary>项目名称名称</summary>	
		[Description("项目名称名称")]
        public string ProjectName { get; set; } // ProjectName
		/// <summary>顾客名称</summary>	
		[Description("顾客名称")]
        public string Customer { get; set; } // Customer
		/// <summary>备注</summary>	
		[Description("备注")]
        public string Remark { get; set; } // Remark
		/// <summary>打印备注</summary>	
		[Description("打印备注")]
        public string IsPrintNote { get; set; } // IsPrintNote
		/// <summary>打印事由</summary>	
		[Description("打印事由")]
        public string IsPrintReason { get; set; } // IsPrintReason
		/// <summary>申请人签字意见</summary>	
		[Description("申请人签字意见")]
        public string ApplySign { get; set; } // ApplySign
		/// <summary>专业所长签字意见</summary>	
		[Description("专业所长签字意见")]
        public string ProfessionalSign { get; set; } // ProfessionalSign
		/// <summary>部门正职签字意见</summary>	
		[Description("部门正职签字意见")]
        public string DeptheadSign { get; set; } // DeptheadSign
		/// <summary>归口部门签字意见</summary>	
		[Description("归口部门签字意见")]
        public string CentraldeptSign { get; set; } // CentraldeptSign
		/// <summary>主管领导签字意见</summary>	
		[Description("主管领导签字意见")]
        public string LeaderSign { get; set; } // LeaderSign
		/// <summary>总经理签字意见</summary>	
		[Description("总经理签字意见")]
        public string GeneralmanagerSign { get; set; } // GeneralmanagerSign
		/// <summary>财务部领导签字意见</summary>	
		[Description("财务部领导签字意见")]
        public string FinancialSign { get; set; } // FinancialSign
		/// <summary>办理借款签字意见</summary>	
		[Description("办理借款签字意见")]
        public string BorrowSign { get; set; } // BorrowSign
		/// <summary>已还款金额</summary>	
		[Description("已还款金额")]
        public decimal? RepayAmount { get; set; } // RepayAmount
		/// <summary>流程结束日期</summary>	
		[Description("流程结束日期")]
        public DateTime? FlowEndDate { get; set; } // FlowEndDate
		/// <summary>是否可欠款借款</summary>	
		[Description("是否可欠款借款")]
        public string IsAllowBorrow { get; set; } // IsAllowBorrow
		/// <summary>实际借款人电话</summary>	
		[Description("实际借款人电话")]
        public string ActualBorrowerPhone { get; set; } // ActualBorrowerPhone
		/// <summary>表单编号</summary>	
		[Description("表单编号")]
        public string FormCode { get; set; } // FormCode
		/// <summary>是否分院借款</summary>	
		[Description("是否分院借款")]
        public string IsBranchLoan { get; set; } // IsBranchLoan
		/// <summary>已还款金额</summary>	
		[Description("已还款金额")]
        public decimal? AlreadyReturnAmount { get; set; } // AlreadyReturnAmount
		/// <summary>申请人电话</summary>	
		[Description("申请人电话")]
        public string ApplyUserPhone { get; set; } // ApplyUserPhone
		/// <summary>计划借款金额(元)</summary>	
		[Description("计划借款金额(元)")]
        public decimal? PlanLoanAmount { get; set; } // PlanLoanAmount
		/// <summary>项目号</summary>	
		[Description("项目号")]
        public string ProjectCode { get; set; } // ProjectCode
		/// <summary>合同号</summary>	
		[Description("合同号")]
        public string ContractCode { get; set; } // ContractCode
		/// <summary>主管领导</summary>	
		[Description("主管领导")]
        public string ProjectLeader { get; set; } // ProjectLeader
		/// <summary>主管领导名称</summary>	
		[Description("主管领导名称")]
        public string ProjectLeaderName { get; set; } // ProjectLeaderName
		/// <summary>申请部门类型</summary>	
		[Description("申请部门类型")]
        public string ApplyDeptType { get; set; } // ApplyDeptType
		/// <summary>截至目前为止实际借款人总未还款金额</summary>	
		[Description("截至目前为止实际借款人总未还款金额")]
        public decimal? JZMQWZSJJKRZWHKJE { get; set; } // JZMQWZSJJKRZWHKJE
		/// <summary>借款年份</summary>	
		[Description("借款年份")]
        public int? BelongYear { get; set; } // BelongYear
		/// <summary>借款月份</summary>	
		[Description("借款月份")]
        public int? BelongMonth { get; set; } // BelongMonth
		/// <summary>借款季度</summary>	
		[Description("借款季度")]
        public int? BelongQuarter { get; set; } // BelongQuarter
		/// <summary>未还款确认日期</summary>	
		[Description("未还款确认日期")]
        public DateTime? UnReturnConfirmDate { get; set; } // UnReturnConfirmDate
		/// <summary>下达催款通知日期</summary>	
		[Description("下达催款通知日期")]
        public DateTime? UnReturnNoticeDate { get; set; } // UnReturnNoticeDate
    }

	/// <summary>批语</summary>	
	[Description("批语")]
    public partial class S_D_Comment : Formula.BaseModel
    {
		/// <summary></summary>	
		[Description("")]
        public string ID { get; set; } // ID (Primary key)
		/// <summary>批语类型</summary>	
		[Description("批语类型")]
        public string Type { get; set; } // Type
		/// <summary>用户名称</summary>	
		[Description("用户名称")]
        public string UserName { get; set; } // UserName
		/// <summary>用户ID</summary>	
		[Description("用户ID")]
        public string UserID { get; set; } // UserID
		/// <summary>批语</summary>	
		[Description("批语")]
        public string Comment { get; set; } // Comment
		/// <summary>是否是模板</summary>	
		[Description("是否是模板")]
        public string IsTemplate { get; set; } // IsTemplate
		/// <summary>启用</summary>	
		[Description("启用")]
        public string IsUse { get; set; } // IsUse
		/// <summary></summary>	
		[Description("")]
        public string CreateUserName { get; set; } // CreateUserName
		/// <summary></summary>	
		[Description("")]
        public string CreateUserID { get; set; } // CreateUserID
		/// <summary></summary>	
		[Description("")]
        public DateTime? CreateDate { get; set; } // CreateDate
    }

	/// <summary>收文登记</summary>	
	[Description("收文登记")]
    public partial class S_D_Incoming : Formula.BaseModel
    {
		/// <summary></summary>	
		[Description("")]
        public string ID { get; set; } // ID (Primary key)
		/// <summary></summary>	
		[Description("")]
        public DateTime? CreateDate { get; set; } // CreateDate
		/// <summary></summary>	
		[Description("")]
        public DateTime? ModifyDate { get; set; } // ModifyDate
		/// <summary></summary>	
		[Description("")]
        public string CreateUserID { get; set; } // CreateUserID
		/// <summary></summary>	
		[Description("")]
        public string CreateUser { get; set; } // CreateUser
		/// <summary></summary>	
		[Description("")]
        public string ModifyUserID { get; set; } // ModifyUserID
		/// <summary></summary>	
		[Description("")]
        public string ModifyUser { get; set; } // ModifyUser
		/// <summary></summary>	
		[Description("")]
        public string OrgID { get; set; } // OrgID
		/// <summary></summary>	
		[Description("")]
        public string CompanyID { get; set; } // CompanyID
		/// <summary></summary>	
		[Description("")]
        public string FlowPhase { get; set; } // FlowPhase
		/// <summary></summary>	
		[Description("")]
        public string FlowInfo { get; set; } // FlowInfo
		/// <summary></summary>	
		[Description("")]
        public string StepName { get; set; } // StepName
		/// <summary>文件名称</summary>	
		[Description("文件名称")]
        public string FileTitle { get; set; } // FileTitle
		/// <summary>文件</summary>	
		[Description("文件")]
        public string Files { get; set; } // Files
		/// <summary>来文机关</summary>	
		[Description("来文机关")]
        public string OfficeFrom { get; set; } // OfficeFrom
		/// <summary>来文字号</summary>	
		[Description("来文字号")]
        public string FontSize { get; set; } // FontSize
		/// <summary>收文类别</summary>	
		[Description("收文类别")]
        public string Type { get; set; } // Type
		/// <summary>收文编号</summary>	
		[Description("收文编号")]
        public string Code { get; set; } // Code
		/// <summary>序号</summary>	
		[Description("序号")]
        public string Number { get; set; } // Number
		/// <summary>收文日期</summary>	
		[Description("收文日期")]
        public DateTime? IncomingDate { get; set; } // IncomingDate
		/// <summary>密级</summary>	
		[Description("密级")]
        public string Security { get; set; } // Security
		/// <summary>紧急程度</summary>	
		[Description("紧急程度")]
        public string EmergencyLevel { get; set; } // EmergencyLevel
		/// <summary>附件（个）</summary>	
		[Description("附件（个）")]
        public int? FileCount { get; set; } // FileCount
		/// <summary>需报材料</summary>	
		[Description("需报材料")]
        public string Materials { get; set; } // Materials
		/// <summary>办文截止时间</summary>	
		[Description("办文截止时间")]
        public DateTime? UndertakeDeadline { get; set; } // UndertakeDeadline
		/// <summary>主题词</summary>	
		[Description("主题词")]
        public string Subject { get; set; } // Subject
		/// <summary>收文登记</summary>	
		[Description("收文登记")]
        public string Register { get; set; } // Register
		/// <summary>院办党办主任批签</summary>	
		[Description("院办党办主任批签")]
        public string OfficialSign { get; set; } // OfficialSign
		/// <summary>相关领导批阅</summary>	
		[Description("相关领导批阅")]
        public string LeaderApprove { get; set; } // LeaderApprove
		/// <summary>主办部门领导办理</summary>	
		[Description("主办部门领导办理")]
        public string DeptLeaderHandle { get; set; } // DeptLeaderHandle
		/// <summary>会办部门领导办理</summary>	
		[Description("会办部门领导办理")]
        public string PresidentHandle { get; set; } // PresidentHandle
		/// <summary>相关人员办理</summary>	
		[Description("相关人员办理")]
        public string PeopleHandle { get; set; } // PeopleHandle
		/// <summary>是否归档字段</summary>	
		[Description("是否归档字段")]
        public string IsArchiveField { get; set; } // IsArchiveField
		/// <summary>是否二级机构</summary>	
		[Description("是否二级机构")]
        public string IsTwo { get; set; } // IsTwo
		/// <summary>二级机构部门</summary>	
		[Description("二级机构部门")]
        public string TwoDept { get; set; } // TwoDept
		/// <summary>综合部领导办理</summary>	
		[Description("综合部领导办理")]
        public string ComprehensiveLeaderSign { get; set; } // ComprehensiveLeaderSign
		/// <summary>二级机构综合部领导办理</summary>	
		[Description("二级机构综合部领导办理")]
        public string TwoComprehensiveLeaderSign { get; set; } // TwoComprehensiveLeaderSign
		/// <summary>二级机构领导办理</summary>	
		[Description("二级机构领导办理")]
        public string TwoLeaderSign { get; set; } // TwoLeaderSign
		/// <summary>公司领导办理</summary>	
		[Description("公司领导办理")]
        public string LeaderSign { get; set; } // LeaderSign
		/// <summary></summary>	
		[Description("")]
        public string Applicant { get; set; } // Applicant
		/// <summary></summary>	
		[Description("")]
        public string ApplicantID { get; set; } // ApplicantID
		/// <summary></summary>	
		[Description("")]
        public string Status { get; set; } // Status
		/// <summary></summary>	
		[Description("")]
        public string InsFlowID { get; set; } // InsFlowID
		/// <summary></summary>	
		[Description("")]
        public string ExecutedSteps { get; set; } // ExecutedSteps
    }

	/// <summary>文件签发单</summary>	
	[Description("文件签发单")]
    public partial class S_D_Posting : Formula.BaseModel
    {
		/// <summary></summary>	
		[Description("")]
        public string ID { get; set; } // ID (Primary key)
		/// <summary></summary>	
		[Description("")]
        public DateTime? CreateDate { get; set; } // CreateDate
		/// <summary></summary>	
		[Description("")]
        public DateTime? ModifyDate { get; set; } // ModifyDate
		/// <summary></summary>	
		[Description("")]
        public string CreateUserID { get; set; } // CreateUserID
		/// <summary></summary>	
		[Description("")]
        public string CreateUser { get; set; } // CreateUser
		/// <summary></summary>	
		[Description("")]
        public string ModifyUserID { get; set; } // ModifyUserID
		/// <summary></summary>	
		[Description("")]
        public string ModifyUser { get; set; } // ModifyUser
		/// <summary></summary>	
		[Description("")]
        public string OrgID { get; set; } // OrgID
		/// <summary></summary>	
		[Description("")]
        public string CompanyID { get; set; } // CompanyID
		/// <summary></summary>	
		[Description("")]
        public string FlowPhase { get; set; } // FlowPhase
		/// <summary></summary>	
		[Description("")]
        public string FlowInfo { get; set; } // FlowInfo
		/// <summary></summary>	
		[Description("")]
        public string StepName { get; set; } // StepName
		/// <summary></summary>	
		[Description("")]
        public byte[] MainFile { get; set; } // MainFile
		/// <summary></summary>	
		[Description("")]
        public byte[] RedFile { get; set; } // RedFile
		/// <summary>文稿标题</summary>	
		[Description("文稿标题")]
        public string Title { get; set; } // Title
		/// <summary>文号</summary>	
		[Description("文号")]
        public string FileNo { get; set; } // FileNo
		/// <summary>拟稿人</summary>	
		[Description("拟稿人")]
        public string Drafter { get; set; } // Drafter
		/// <summary>拟稿人名称</summary>	
		[Description("拟稿人名称")]
        public string DrafterName { get; set; } // DrafterName
		/// <summary>拟稿日期</summary>	
		[Description("拟稿日期")]
        public DateTime? DraftDate { get; set; } // DraftDate
		/// <summary>拟稿部门</summary>	
		[Description("拟稿部门")]
        public string DraftDept { get; set; } // DraftDept
		/// <summary>拟稿部门名称</summary>	
		[Description("拟稿部门名称")]
        public string DraftDeptName { get; set; } // DraftDeptName
		/// <summary>部门负责人</summary>	
		[Description("部门负责人")]
        public string DeptLeader { get; set; } // DeptLeader
		/// <summary>部门负责人名称</summary>	
		[Description("部门负责人名称")]
        public string DeptLeaderName { get; set; } // DeptLeaderName
		/// <summary>密级</summary>	
		[Description("密级")]
        public string Security { get; set; } // Security
		/// <summary>紧急程度</summary>	
		[Description("紧急程度")]
        public string EmergencyLevel { get; set; } // EmergencyLevel
		/// <summary>正文份数</summary>	
		[Description("正文份数")]
        public int? FormalNumber { get; set; } // FormalNumber
		/// <summary>附件份数</summary>	
		[Description("附件份数")]
        public int? AttachNumber { get; set; } // AttachNumber
		/// <summary>总份数</summary>	
		[Description("总份数")]
        public int? TotalNumber { get; set; } // TotalNumber
		/// <summary>主送单位</summary>	
		[Description("主送单位")]
        public string SendTo { get; set; } // SendTo
		/// <summary>主送单位名称</summary>	
		[Description("主送单位名称")]
        public string SendToName { get; set; } // SendToName
		/// <summary>抄送单位</summary>	
		[Description("抄送单位")]
        public string CopyTo { get; set; } // CopyTo
		/// <summary>抄送单位名称</summary>	
		[Description("抄送单位名称")]
        public string CopyToName { get; set; } // CopyToName
		/// <summary>主送人员</summary>	
		[Description("主送人员")]
        public string SpecificStaff { get; set; } // SpecificStaff
		/// <summary>主送人员名称</summary>	
		[Description("主送人员名称")]
        public string SpecificStaffName { get; set; } // SpecificStaffName
		/// <summary>拟稿意见</summary>	
		[Description("拟稿意见")]
        public string DraftSign { get; set; } // DraftSign
		/// <summary>科长审批</summary>	
		[Description("科长审批")]
        public string SectionChiefAudit { get; set; } // SectionChiefAudit
		/// <summary>处长审批</summary>	
		[Description("处长审批")]
        public string DirectorApprove { get; set; } // DirectorApprove
		/// <summary>院办收发</summary>	
		[Description("院办收发")]
        public string OfficialTransfer { get; set; } // OfficialTransfer
		/// <summary>主管院领导</summary>	
		[Description("主管院领导")]
        public string LeaderApprove { get; set; } // LeaderApprove
		/// <summary>院办文书</summary>	
		[Description("院办文书")]
        public string OfficialDocument { get; set; } // OfficialDocument
		/// <summary>是否归档字段</summary>	
		[Description("是否归档字段")]
        public string IsArchiveField { get; set; } // IsArchiveField
		/// <summary>是否为规章制度类型</summary>	
		[Description("是否为规章制度类型")]
        public string IsRegulationRuleType { get; set; } // IsRegulationRuleType
		/// <summary>文件类型</summary>	
		[Description("文件类型")]
        public string FileType { get; set; } // FileType
		/// <summary>发文附件</summary>	
		[Description("发文附件")]
        public string PostAttach { get; set; } // PostAttach
		/// <summary>部门领导</summary>	
		[Description("部门领导")]
        public string DeptLeaderSign { get; set; } // DeptLeaderSign
		/// <summary>会签人部门领导</summary>	
		[Description("会签人部门领导")]
        public string CountersignDeptLeader { get; set; } // CountersignDeptLeader
		/// <summary>综合部领导</summary>	
		[Description("综合部领导")]
        public string ComprehensiveSign { get; set; } // ComprehensiveSign
		/// <summary>公司领导</summary>	
		[Description("公司领导")]
        public string CompanyLeader { get; set; } // CompanyLeader
		/// <summary></summary>	
		[Description("")]
        public string MergeDocID { get; set; } // MergeDocID
    }

	/// <summary>红头文件管理</summary>	
	[Description("红头文件管理")]
    public partial class S_D_RedTitle : Formula.BaseModel
    {
		/// <summary></summary>	
		[Description("")]
        public string ID { get; set; } // ID (Primary key)
		/// <summary></summary>	
		[Description("")]
        public DateTime? CreateDate { get; set; } // CreateDate
		/// <summary></summary>	
		[Description("")]
        public DateTime? ModifyDate { get; set; } // ModifyDate
		/// <summary></summary>	
		[Description("")]
        public string CreateUserID { get; set; } // CreateUserID
		/// <summary></summary>	
		[Description("")]
        public string CreateUser { get; set; } // CreateUser
		/// <summary></summary>	
		[Description("")]
        public string ModifyUserID { get; set; } // ModifyUserID
		/// <summary></summary>	
		[Description("")]
        public string ModifyUser { get; set; } // ModifyUser
		/// <summary></summary>	
		[Description("")]
        public string OrgID { get; set; } // OrgID
		/// <summary></summary>	
		[Description("")]
        public string CompanyID { get; set; } // CompanyID
		/// <summary></summary>	
		[Description("")]
        public string FlowPhase { get; set; } // FlowPhase
		/// <summary></summary>	
		[Description("")]
        public string FlowInfo { get; set; } // FlowInfo
		/// <summary></summary>	
		[Description("")]
        public string StepName { get; set; } // StepName
		/// <summary>标题</summary>	
		[Description("标题")]
        public string Title { get; set; } // Title
		/// <summary>所属部门</summary>	
		[Description("所属部门")]
        public string DeptInfo { get; set; } // DeptInfo
		/// <summary>所属部门名称</summary>	
		[Description("所属部门名称")]
        public string DeptInfoName { get; set; } // DeptInfoName
		/// <summary>登记人</summary>	
		[Description("登记人")]
        public string Register { get; set; } // Register
		/// <summary>登记人名称</summary>	
		[Description("登记人名称")]
        public string RegisterName { get; set; } // RegisterName
		/// <summary>文件</summary>	
		[Description("文件")]
        public string RedFile { get; set; } // RedFile
		/// <summary>备注</summary>	
		[Description("备注")]
        public string Remark { get; set; } // Remark
    }

	/// <summary>办公室位置核心表</summary>	
	[Description("办公室位置核心表")]
    public partial class S_E_Logistics_OfficePos : Formula.BaseModel
    {
		/// <summary></summary>	
		[Description("")]
        public string ID { get; set; } // ID (Primary key)
		/// <summary></summary>	
		[Description("")]
        public DateTime? CreateDate { get; set; } // CreateDate
		/// <summary></summary>	
		[Description("")]
        public DateTime? ModifyDate { get; set; } // ModifyDate
		/// <summary></summary>	
		[Description("")]
        public string CreateUserID { get; set; } // CreateUserID
		/// <summary></summary>	
		[Description("")]
        public string CreateUser { get; set; } // CreateUser
		/// <summary></summary>	
		[Description("")]
        public string ModifyUserID { get; set; } // ModifyUserID
		/// <summary></summary>	
		[Description("")]
        public string ModifyUser { get; set; } // ModifyUser
		/// <summary></summary>	
		[Description("")]
        public string OrgID { get; set; } // OrgID
		/// <summary></summary>	
		[Description("")]
        public string CompanyID { get; set; } // CompanyID
		/// <summary></summary>	
		[Description("")]
        public string FlowPhase { get; set; } // FlowPhase
		/// <summary></summary>	
		[Description("")]
        public string FlowInfo { get; set; } // FlowInfo
		/// <summary></summary>	
		[Description("")]
        public string StepName { get; set; } // StepName
		/// <summary>名称</summary>	
		[Description("名称")]
        public string Name { get; set; } // Name
		/// <summary>编码</summary>	
		[Description("编码")]
        public string Code { get; set; } // Code
		/// <summary>层级</summary>	
		[Description("层级")]
        public int? Level { get; set; } // Level
		/// <summary>ParentID</summary>	
		[Description("ParentID")]
        public string ParentID { get; set; } // ParentID
		/// <summary>FullID</summary>	
		[Description("FullID")]
        public string FullID { get; set; } // FullID
		/// <summary>排序索引</summary>	
		[Description("排序索引")]
        public string SortIndex { get; set; } // SortIndex
		/// <summary>描述</summary>	
		[Description("描述")]
        public string Description { get; set; } // Description
    }

	/// <summary>办公室使用记录核心表</summary>	
	[Description("办公室使用记录核心表")]
    public partial class S_E_Logistics_OfficeRecord : Formula.BaseModel
    {
		/// <summary></summary>	
		[Description("")]
        public string ID { get; set; } // ID (Primary key)
		/// <summary></summary>	
		[Description("")]
        public DateTime? CreateDate { get; set; } // CreateDate
		/// <summary></summary>	
		[Description("")]
        public DateTime? ModifyDate { get; set; } // ModifyDate
		/// <summary></summary>	
		[Description("")]
        public string CreateUserID { get; set; } // CreateUserID
		/// <summary></summary>	
		[Description("")]
        public string CreateUser { get; set; } // CreateUser
		/// <summary></summary>	
		[Description("")]
        public string ModifyUserID { get; set; } // ModifyUserID
		/// <summary></summary>	
		[Description("")]
        public string ModifyUser { get; set; } // ModifyUser
		/// <summary></summary>	
		[Description("")]
        public string OrgID { get; set; } // OrgID
		/// <summary></summary>	
		[Description("")]
        public string CompanyID { get; set; } // CompanyID
		/// <summary></summary>	
		[Description("")]
        public string FlowPhase { get; set; } // FlowPhase
		/// <summary></summary>	
		[Description("")]
        public string FlowInfo { get; set; } // FlowInfo
		/// <summary></summary>	
		[Description("")]
        public string StepName { get; set; } // StepName
		/// <summary>部门ID</summary>	
		[Description("部门ID")]
        public string Dept { get; set; } // Dept
		/// <summary>部门名称</summary>	
		[Description("部门名称")]
        public string DeptName { get; set; } // DeptName
		/// <summary>办公室ID</summary>	
		[Description("办公室ID")]
        public string Office { get; set; } // Office
		/// <summary>办公室名称</summary>	
		[Description("办公室名称")]
        public string OfficeName { get; set; } // OfficeName
		/// <summary>办公室位置ID</summary>	
		[Description("办公室位置ID")]
        public string Pos { get; set; } // Pos
		/// <summary>办公室位置名称</summary>	
		[Description("办公室位置名称")]
        public string PosName { get; set; } // PosName
		/// <summary>办公室面积</summary>	
		[Description("办公室面积")]
        public decimal? Area { get; set; } // Area
		/// <summary>办公家具套数</summary>	
		[Description("办公家具套数")]
        public int? Number { get; set; } // Number
		/// <summary>开始时间</summary>	
		[Description("开始时间")]
        public DateTime? StartDate { get; set; } // StartDate
		/// <summary>结束时间</summary>	
		[Description("结束时间")]
        public DateTime? EndDate { get; set; } // EndDate
    }

	/// <summary></summary>	
	[Description("")]
    public partial class S_EP_DefineSubject : Formula.BaseModel
    {
		/// <summary></summary>	
		[Description("")]
        public string ID { get; set; } // ID (Primary key)
		/// <summary>科目名称</summary>	
		[Description("科目名称")]
        public string Name { get; set; } // Name
		/// <summary>科目编号</summary>	
		[Description("科目编号")]
        public string Code { get; set; } // Code
		/// <summary>科目编码全称</summary>	
		[Description("科目编码全称")]
        public string FullCode { get; set; } // FullCode
		/// <summary>父节点</summary>	
		[Description("父节点")]
        public string ParentID { get; set; } // ParentID
		/// <summary>全路径FullID</summary>	
		[Description("全路径FullID")]
        public string FullID { get; set; } // FullID
		/// <summary>层级</summary>	
		[Description("层级")]
        public int Level { get; set; } // Level
		/// <summary>说明</summary>	
		[Description("说明")]
        public string Remark { get; set; } // Remark
		/// <summary>科目类别</summary>	
		[Description("科目类别")]
        public string SubjectType { get; set; } // SubjectType
		/// <summary>排序值</summary>	
		[Description("排序值")]
        public decimal SortIndex { get; set; } // SortIndex
		/// <summary></summary>	
		[Description("")]
        public string BindFinaceCBSID { get; set; } // BindFinaceCBSID
		/// <summary></summary>	
		[Description("")]
        public string BindFinaceCBSCode { get; set; } // BindFinaceCBSCode
		/// <summary></summary>	
		[Description("")]
        public string BindFinaceCBSName { get; set; } // BindFinaceCBSName
		/// <summary>节点类型</summary>	
		[Description("节点类型")]
        public string NodeType { get; set; } // NodeType
		/// <summary>使用部门</summary>	
		[Description("使用部门")]
        public string BelongDeptIDs { get; set; } // BelongDeptIDs
		/// <summary>使用部门</summary>	
		[Description("使用部门")]
        public string BelongDeptNames { get; set; } // BelongDeptNames
		/// <summary>创建日期</summary>	
		[Description("创建日期")]
        public DateTime? CreateDate { get; set; } // CreateDate
		/// <summary>创建人</summary>	
		[Description("创建人")]
        public string CreateUserID { get; set; } // CreateUserID
		/// <summary>创建人名称</summary>	
		[Description("创建人名称")]
        public string CreateUserName { get; set; } // CreateUserName
		/// <summary>修改日期</summary>	
		[Description("修改日期")]
        public DateTime? ModifyDate { get; set; } // ModifyDate
		/// <summary>修改人ID</summary>	
		[Description("修改人ID")]
        public string ModifyUserID { get; set; } // ModifyUserID
		/// <summary>修改人名称</summary>	
		[Description("修改人名称")]
        public string ModifyUserName { get; set; } // ModifyUserName
    }

	/// <summary>差旅费报销单</summary>	
	[Description("差旅费报销单")]
    public partial class S_EP_ReimbursementApply : Formula.BaseModel
    {
		/// <summary></summary>	
		[Description("")]
        public string ID { get; set; } // ID (Primary key)
		/// <summary></summary>	
		[Description("")]
        public DateTime? CreateDate { get; set; } // CreateDate
		/// <summary></summary>	
		[Description("")]
        public DateTime? ModifyDate { get; set; } // ModifyDate
		/// <summary></summary>	
		[Description("")]
        public string CreateUserID { get; set; } // CreateUserID
		/// <summary>申请人</summary>	
		[Description("申请人")]
        public string CreateUser { get; set; } // CreateUser
		/// <summary></summary>	
		[Description("")]
        public string ModifyUserID { get; set; } // ModifyUserID
		/// <summary></summary>	
		[Description("")]
        public string ModifyUser { get; set; } // ModifyUser
		/// <summary></summary>	
		[Description("")]
        public string OrgID { get; set; } // OrgID
		/// <summary></summary>	
		[Description("")]
        public string CompanyID { get; set; } // CompanyID
		/// <summary></summary>	
		[Description("")]
        public string FlowPhase { get; set; } // FlowPhase
		/// <summary></summary>	
		[Description("")]
        public string FlowInfo { get; set; } // FlowInfo
		/// <summary></summary>	
		[Description("")]
        public string StepName { get; set; } // StepName
		/// <summary>报销单编号</summary>	
		[Description("报销单编号")]
        public string SerialNumber { get; set; } // SerialNumber
		/// <summary>报销日期</summary>	
		[Description("报销日期")]
        public DateTime? ReimbursementDate { get; set; } // ReimbursementDate
		/// <summary>报销人</summary>	
		[Description("报销人")]
        public string Advertiser { get; set; } // Advertiser
		/// <summary>报销人名称</summary>	
		[Description("报销人名称")]
        public string AdvertiserName { get; set; } // AdvertiserName
		/// <summary>报销人部门</summary>	
		[Description("报销人部门")]
        public string AdvertiserDept { get; set; } // AdvertiserDept
		/// <summary>报销人部门名称</summary>	
		[Description("报销人部门名称")]
        public string AdvertiserDeptName { get; set; } // AdvertiserDeptName
		/// <summary>申请人电话</summary>	
		[Description("申请人电话")]
        public string CreateUserPhone { get; set; } // CreateUserPhone
		/// <summary>报销金额(大写)</summary>	
		[Description("报销金额(大写)")]
        public string CapsReimbursementAmount { get; set; } // CapsReimbursementAmount
		/// <summary>本次冲销金额</summary>	
		[Description("本次冲销金额")]
        public decimal? ThisReversalAmount { get; set; } // ThisReversalAmount
		/// <summary>退补金额(元)</summary>	
		[Description("退补金额(元)")]
        public decimal? RefundAmount { get; set; } // RefundAmount
		/// <summary>报销地点</summary>	
		[Description("报销地点")]
        public string ReimbursementSite { get; set; } // ReimbursementSite
		/// <summary>户名</summary>	
		[Description("户名")]
        public string AccountName { get; set; } // AccountName
		/// <summary>开户银行</summary>	
		[Description("开户银行")]
        public string OpenBank { get; set; } // OpenBank
		/// <summary>银行卡号</summary>	
		[Description("银行卡号")]
        public string CardNumber { get; set; } // CardNumber
		/// <summary>费用报销明细</summary>	
		[Description("费用报销明细")]
        public string Details { get; set; } // Details
		/// <summary>冲销借款信息</summary>	
		[Description("冲销借款信息")]
        public string LoanInfo { get; set; } // LoanInfo
		/// <summary>项目名称</summary>	
		[Description("项目名称")]
        public string ProjectName { get; set; } // ProjectName
		/// <summary>项目名称名称</summary>	
		[Description("项目名称名称")]
        public string ProjectNameName { get; set; } // ProjectNameName
		/// <summary>顾客名称</summary>	
		[Description("顾客名称")]
        public string CustomerName { get; set; } // CustomerName
		/// <summary>顾客名称名称</summary>	
		[Description("顾客名称名称")]
        public string CustomerNameName { get; set; } // CustomerNameName
		/// <summary>项目号</summary>	
		[Description("项目号")]
        public string ProjectCode { get; set; } // ProjectCode
		/// <summary>合同号</summary>	
		[Description("合同号")]
        public string ContractCode { get; set; } // ContractCode
		/// <summary>申请人签字意见</summary>	
		[Description("申请人签字意见")]
        public string SQRQZYJ { get; set; } // SQRQZYJ
		/// <summary>专业所长签字意见</summary>	
		[Description("专业所长签字意见")]
        public string ZYSCQZYJ { get; set; } // ZYSCQZYJ
		/// <summary>部门正职签字意见</summary>	
		[Description("部门正职签字意见")]
        public string BMZZQZYJ { get; set; } // BMZZQZYJ
		/// <summary>部门主管领导签字意见</summary>	
		[Description("部门主管领导签字意见")]
        public string ZGLDQZYJ { get; set; } // ZGLDQZYJ
		/// <summary>总经理审批签字意见</summary>	
		[Description("总经理审批签字意见")]
        public string ZJLSPQZYJ { get; set; } // ZJLSPQZYJ
		/// <summary>财务部正职签字意见</summary>	
		[Description("财务部正职签字意见")]
        public string CWBFZRQZYJ { get; set; } // CWBFZRQZYJ
		/// <summary>部门部会计签字意见</summary>	
		[Description("部门部会计签字意见")]
        public string CWBLQZYJ { get; set; } // CWBLQZYJ
		/// <summary>表单编号</summary>	
		[Description("表单编号")]
        public string ReimbursementFormCode { get; set; } // ReimbursementFormCode
		/// <summary>是否分院报销单</summary>	
		[Description("是否分院报销单")]
        public string IsBranchReimbursement { get; set; } // IsBranchReimbursement
		/// <summary>流程结束日期</summary>	
		[Description("流程结束日期")]
        public DateTime? FlowEndDate { get; set; } // FlowEndDate
		/// <summary>任务性质</summary>	
		[Description("任务性质")]
        public string TaskNature { get; set; } // TaskNature
		/// <summary>结束日期</summary>	
		[Description("结束日期")]
        public DateTime? ExpenseDateEnd { get; set; } // ExpenseDateEnd
		/// <summary>开始日期</summary>	
		[Description("开始日期")]
        public DateTime? ExpenseDateStart { get; set; } // ExpenseDateStart
		/// <summary>小计天数</summary>	
		[Description("小计天数")]
        public int? SubtotalDays { get; set; } // SubtotalDays
		/// <summary>国内费用交通费</summary>	
		[Description("国内费用交通费")]
        public string GNFYJTF { get; set; } // GNFYJTF
		/// <summary>国内住宿标准(元)</summary>	
		[Description("国内住宿标准(元)")]
        public decimal? GNZSBZY { get; set; } // GNZSBZY
		/// <summary>国内有票住宿天数</summary>	
		[Description("国内有票住宿天数")]
        public int? GNYPZSTS { get; set; } // GNYPZSTS
		/// <summary>每日住宿费</summary>	
		[Description("每日住宿费")]
        public decimal? GNMRZFS { get; set; } // GNMRZFS
		/// <summary>国内住宿费合计(元)</summary>	
		[Description("国内住宿费合计(元)")]
        public decimal? GNZSFHJY { get; set; } // GNZSFHJY
		/// <summary>国内有票住宿费用(元)</summary>	
		[Description("国内有票住宿费用(元)")]
        public decimal? GNYPZSFYY { get; set; } // GNYPZSFYY
		/// <summary>国内无票住宿天数</summary>	
		[Description("国内无票住宿天数")]
        public int? GNWPZSTS { get; set; } // GNWPZSTS
		/// <summary>国内有票住宿节约奖励(元)</summary>	
		[Description("国内有票住宿节约奖励(元)")]
        public decimal? GNYPZSJYJLY { get; set; } // GNYPZSJYJLY
		/// <summary>国内无票住宿奖励标准(元)</summary>	
		[Description("国内无票住宿奖励标准(元)")]
        public decimal? GNWPZSJLBZY { get; set; } // GNWPZSJLBZY
		/// <summary>额外住补天数</summary>	
		[Description("额外住补天数")]
        public int? EWZBTS { get; set; } // EWZBTS
		/// <summary>国内无票住宿节约奖励(元)</summary>	
		[Description("国内无票住宿节约奖励(元)")]
        public decimal? GNWPZSJYJLY { get; set; } // GNWPZSJYJLY
		/// <summary>市内交通标准(元)</summary>	
		[Description("市内交通标准(元)")]
        public decimal? SNJTBZY { get; set; } // SNJTBZY
		/// <summary>实际交通费</summary>	
		[Description("实际交通费")]
        public decimal? SJSNJTFJEY { get; set; } // SJSNJTFJEY
		/// <summary>市内交通费金额(元)</summary>	
		[Description("市内交通费金额(元)")]
        public decimal? SNJTFJEY { get; set; } // SNJTFJEY
		/// <summary>实际电话费</summary>	
		[Description("实际电话费")]
        public decimal? ActualPhoneFee { get; set; } // ActualPhoneFee
		/// <summary>确认电话费</summary>	
		[Description("确认电话费")]
        public decimal? ConfirmPhoneFee { get; set; } // ConfirmPhoneFee
		/// <summary>岗位补贴标准</summary>	
		[Description("岗位补贴标准")]
        public decimal? PostSubsidyStandard { get; set; } // PostSubsidyStandard
		/// <summary>岗位补贴合计</summary>	
		[Description("岗位补贴合计")]
        public decimal? TotalPostSubsidyAmount { get; set; } // TotalPostSubsidyAmount
		/// <summary>伙食补贴标准(元)</summary>	
		[Description("伙食补贴标准(元)")]
        public decimal? HSBTBZY { get; set; } // HSBTBZY
		/// <summary>伙食补贴(元)</summary>	
		[Description("伙食补贴(元)")]
        public decimal? HSBTY { get; set; } // HSBTY
		/// <summary>其他补贴(元)</summary>	
		[Description("其他补贴(元)")]
        public decimal? QTBTY { get; set; } // QTBTY
		/// <summary>其他费用</summary>	
		[Description("其他费用")]
        public string OtherFee { get; set; } // OtherFee
		/// <summary>一级费用科目</summary>	
		[Description("一级费用科目")]
        public string ExpenseScourse { get; set; } // ExpenseScourse
		/// <summary>支付原因</summary>	
		[Description("支付原因")]
        public string PayReason { get; set; } // PayReason
		/// <summary>备注</summary>	
		[Description("备注")]
        public string Remark { get; set; } // Remark
		/// <summary>项目主管领导</summary>	
		[Description("项目主管领导")]
        public string ProjectLeader { get; set; } // ProjectLeader
		/// <summary>项目主管领导名称</summary>	
		[Description("项目主管领导名称")]
        public string ProjectLeaderName { get; set; } // ProjectLeaderName
		/// <summary>人力资源部办理签字意见</summary>	
		[Description("人力资源部办理签字意见")]
        public string RLZYBBLQZYJ { get; set; } // RLZYBBLQZYJ
		/// <summary>人力资源部部长签字意见</summary>	
		[Description("人力资源部部长签字意见")]
        public string RLZYBBCQZYJ { get; set; } // RLZYBBCQZYJ
		/// <summary>费用发生地点</summary>	
		[Description("费用发生地点")]
        public string ExpenseSite { get; set; } // ExpenseSite
		/// <summary>项目类别</summary>	
		[Description("项目类别")]
        public string ProjectType { get; set; } // ProjectType
		/// <summary>人员级次</summary>	
		[Description("人员级次")]
        public string EmployeeLevel { get; set; } // EmployeeLevel
		/// <summary>岗位</summary>	
		[Description("岗位")]
        public string PersonPost { get; set; } // PersonPost
		/// <summary>报销金额(元)</summary>	
		[Description("报销金额(元)")]
        public decimal? ReimbursementAmount { get; set; } // ReimbursementAmount
		/// <summary>报销人已报销差旅费日期</summary>	
		[Description("报销人已报销差旅费日期")]
        public string BXRYBXCLFRQ { get; set; } // BXRYBXCLFRQ
		/// <summary>报销有效期起</summary>	
		[Description("报销有效期起")]
        public DateTime? ReimbursementEffectiveDateStart { get; set; } // ReimbursementEffectiveDateStart
		/// <summary>报销有效期止</summary>	
		[Description("报销有效期止")]
        public DateTime? ReimbursementEffectiveDateEnd { get; set; } // ReimbursementEffectiveDateEnd
		/// <summary>付款方式</summary>	
		[Description("付款方式")]
        public string PaymentMethod { get; set; } // PaymentMethod
		/// <summary>一级费用科目名称</summary>	
		[Description("一级费用科目名称")]
        public string ExpenseScourseName { get; set; } // ExpenseScourseName
		/// <summary>费用计入</summary>	
		[Description("费用计入")]
        public string CostIncluded { get; set; } // CostIncluded
		/// <summary>是否退款</summary>	
		[Description("是否退款")]
        public string WhetherRefund { get; set; } // WhetherRefund
		/// <summary>打印事由</summary>	
		[Description("打印事由")]
        public string PrintReason { get; set; } // PrintReason
		/// <summary>非电子票单据</summary>	
		[Description("非电子票单据")]
        public string NoElectronicTicket { get; set; } // NoElectronicTicket
		/// <summary>电子发票</summary>	
		[Description("电子发票")]
        public string ElectronicTicket { get; set; } // ElectronicTicket
		/// <summary>部门分摊明细</summary>	
		[Description("部门分摊明细")]
        public string DeptDetail { get; set; } // DeptDetail
		/// <summary>增值税专用发票进项税额明细</summary>	
		[Description("增值税专用发票进项税额明细")]
        public string ZZSZYFPJXSEMX { get; set; } // ZZSZYFPJXSEMX
		/// <summary>专用发票进项税合计</summary>	
		[Description("专用发票进项税合计")]
        public decimal? SpecialInvoiceTaxTotal { get; set; } // SpecialInvoiceTaxTotal
		/// <summary>主管部门正职签字意见</summary>	
		[Description("主管部门正职签字意见")]
        public string ZGBMQZYJ { get; set; } // ZGBMQZYJ
		/// <summary>一级费用科目ID</summary>	
		[Description("一级费用科目ID")]
        public string ExpenseScourseID { get; set; } // ExpenseScourseID
		/// <summary>是否含境外费用</summary>	
		[Description("是否含境外费用")]
        public string IsIncludedOverseaFee { get; set; } // IsIncludedOverseaFee
		/// <summary>一级费用科目是否包含子科目</summary>	
		[Description("一级费用科目是否包含子科目")]
        public string IsESHaveChildNode { get; set; } // IsESHaveChildNode
		/// <summary>报销人部门类型</summary>	
		[Description("报销人部门类型")]
        public string AdvertiserDeptProject { get; set; } // AdvertiserDeptProject
		/// <summary>报销人部门上级部门</summary>	
		[Description("报销人部门上级部门")]
        public string ParentDept { get; set; } // ParentDept
		/// <summary>报销人部门上级部门名称</summary>	
		[Description("报销人部门上级部门名称")]
        public string ParentDeptName { get; set; } // ParentDeptName
		/// <summary>主管部门</summary>	
		[Description("主管部门")]
        public string CompetentDept { get; set; } // CompetentDept
		/// <summary>主管部门名称</summary>	
		[Description("主管部门名称")]
        public string CompetentDeptName { get; set; } // CompetentDeptName
		/// <summary>报销人部门类型</summary>	
		[Description("报销人部门类型")]
        public string AdvertiserDeptType { get; set; } // AdvertiserDeptType
		/// <summary>费用类型(产品字段暂时无用)</summary>	
		[Description("费用类型(产品字段暂时无用)")]
        public string ReimbursementType { get; set; } // ReimbursementType
		/// <summary>报销形式(产品字段暂时无用)</summary>	
		[Description("报销形式(产品字段暂时无用)")]
        public string ReimbursementClass { get; set; } // ReimbursementClass
		/// <summary>项目负责人(产品字段暂时无用)</summary>	
		[Description("项目负责人(产品字段暂时无用)")]
        public string ChargerUser { get; set; } // ChargerUser
		/// <summary>项目负责人(产品字段暂时无用)名称</summary>	
		[Description("项目负责人(产品字段暂时无用)名称")]
        public string ChargerUserName { get; set; } // ChargerUserName
		/// <summary>责任部门(产品字段暂时无用)</summary>	
		[Description("责任部门(产品字段暂时无用)")]
        public string DeptInfo { get; set; } // DeptInfo
		/// <summary>责任部门(产品字段暂时无用)名称</summary>	
		[Description("责任部门(产品字段暂时无用)名称")]
        public string DeptInfoName { get; set; } // DeptInfoName
		/// <summary>附件</summary>	
		[Description("附件")]
        public string Attachments { get; set; } // Attachments
		/// <summary>是否有超预算(产品字段暂时无用)</summary>	
		[Description("是否有超预算(产品字段暂时无用)")]
        public string IsExceed { get; set; } // IsExceed
		/// <summary>申请人ID</summary>	
		[Description("申请人ID")]
        public string ApplyUser { get; set; } // ApplyUser
		/// <summary>申请人</summary>	
		[Description("申请人")]
        public string ApplyUserName { get; set; } // ApplyUserName
		/// <summary>申请部门</summary>	
		[Description("申请部门")]
        public string ApplyDept { get; set; } // ApplyDept
		/// <summary>申请部门名称</summary>	
		[Description("申请部门名称")]
        public string ApplyDeptName { get; set; } // ApplyDeptName
		/// <summary>费用发生日期</summary>	
		[Description("费用发生日期")]
        public DateTime? ExpenseDate { get; set; } // ExpenseDate
		/// <summary>使用预算年份</summary>	
		[Description("使用预算年份")]
        public string UseBudgetYear { get; set; } // UseBudgetYear
		/// <summary>预算金额</summary>	
		[Description("预算金额")]
        public decimal? BudgetAmount { get; set; } // BudgetAmount
		/// <summary>已使用预算金额</summary>	
		[Description("已使用预算金额")]
        public decimal? UsedBudgetAmount { get; set; } // UsedBudgetAmount
		/// <summary>流程中费用</summary>	
		[Description("流程中费用")]
        public decimal? ProcessExpensesAmount { get; set; } // ProcessExpensesAmount
		/// <summary>剩余预算金额</summary>	
		[Description("剩余预算金额")]
        public decimal? RemainingBudgetAmount { get; set; } // RemainingBudgetAmount
		/// <summary>所属党支部</summary>	
		[Description("所属党支部")]
        public string BelongBranch { get; set; } // BelongBranch
		/// <summary>费用计入支部</summary>	
		[Description("费用计入支部")]
        public string CostIncludedBranch { get; set; } // CostIncludedBranch
		/// <summary>党办出纳签字意见</summary>	
		[Description("党办出纳签字意见")]
        public string DBCNQZYJ { get; set; } // DBCNQZYJ
		/// <summary>党办领导签字意见</summary>	
		[Description("党办领导签字意见")]
        public string DBLDQZYJ { get; set; } // DBLDQZYJ
		/// <summary>党委领导签字意见</summary>	
		[Description("党委领导签字意见")]
        public string DWLDQZYJ { get; set; } // DWLDQZYJ
		/// <summary>费用计入支部名称</summary>	
		[Description("费用计入支部名称")]
        public string CostIncludedBranchName { get; set; } // CostIncludedBranchName
		/// <summary>所属党支部名称</summary>	
		[Description("所属党支部名称")]
        public string BelongBranchName { get; set; } // BelongBranchName
		/// <summary>工会签字意见</summary>	
		[Description("工会签字意见")]
        public string GHQZYJ { get; set; } // GHQZYJ
		/// <summary>工会办公室部长签字意见</summary>	
		[Description("工会办公室部长签字意见")]
        public string GHBGSBCQZYJ { get; set; } // GHBGSBCQZYJ
		/// <summary>工会主席签字意见</summary>	
		[Description("工会主席签字意见")]
        public string GHZXQZYJ { get; set; } // GHZXQZYJ
		/// <summary>实际报销人签字</summary>	
		[Description("实际报销人签字")]
        public string SJBXRQZ { get; set; } // SJBXRQZ
		/// <summary>代扣增值税总额</summary>	
		[Description("代扣增值税总额")]
        public decimal? TotalWithholdVATAMount { get; set; } // TotalWithholdVATAMount
		/// <summary>费用类型</summary>	
		[Description("费用类型")]
        public string LaborCostsType { get; set; } // LaborCostsType
		/// <summary>发票金额(元)</summary>	
		[Description("发票金额(元)")]
        public decimal? InvoiceAmount { get; set; } // InvoiceAmount
		/// <summary>财务部个税审批</summary>	
		[Description("财务部个税审批")]
        public string CWBGSSP { get; set; } // CWBGSSP
		/// <summary>财务部个税审批时间</summary>	
		[Description("财务部个税审批时间")]
        public DateTime? CWBGSSPSJ { get; set; } // CWBGSSPSJ
		/// <summary>固定资产付款计划表</summary>	
		[Description("固定资产付款计划表")]
        public string PaymentSchedule { get; set; } // PaymentSchedule
		/// <summary>设备入库清单</summary>	
		[Description("设备入库清单")]
        public string EquipmentInventory { get; set; } // EquipmentInventory
		/// <summary>信息中心领导签字意见</summary>	
		[Description("信息中心领导签字意见")]
        public string XXZXLDQZYJ { get; set; } // XXZXLDQZYJ
		/// <summary>职务</summary>	
		[Description("职务")]
        public string Position { get; set; } // Position
		/// <summary>工号</summary>	
		[Description("工号")]
        public string WorkNo { get; set; } // WorkNo
		/// <summary>费用计入部门</summary>	
		[Description("费用计入部门")]
        public string CostIncludedDept { get; set; } // CostIncludedDept
		/// <summary>费用计入部门名称</summary>	
		[Description("费用计入部门名称")]
        public string CostIncludedDeptName { get; set; } // CostIncludedDeptName
		/// <summary>实际出差天数</summary>	
		[Description("实际出差天数")]
        public double? ActualTravelDays { get; set; } // ActualTravelDays
		/// <summary>有票住宿天数合计</summary>	
		[Description("有票住宿天数合计")]
        public int? YPZSTSHJ { get; set; } // YPZSTSHJ
		/// <summary>无票住宿天数合计</summary>	
		[Description("无票住宿天数合计")]
        public int? WPZSTSHJ { get; set; } // WPZSTSHJ
		/// <summary>有票住宿费合计</summary>	
		[Description("有票住宿费合计")]
        public decimal? YPZSFHJ { get; set; } // YPZSFHJ
		/// <summary>有票住宿节约奖励</summary>	
		[Description("有票住宿节约奖励")]
        public decimal? YPZSJYJL { get; set; } // YPZSJYJL
		/// <summary>无票住宿节约奖励</summary>	
		[Description("无票住宿节约奖励")]
        public decimal? WPZSJYJL { get; set; } // WPZSJYJL
		/// <summary>交通费合计</summary>	
		[Description("交通费合计")]
        public decimal? JTFHJ { get; set; } // JTFHJ
		/// <summary>出差备案信息</summary>	
		[Description("出差备案信息")]
        public string TravelRecordInfo { get; set; } // TravelRecordInfo
		/// <summary>项目信息</summary>	
		[Description("项目信息")]
        public string ProjectInfo { get; set; } // ProjectInfo
		/// <summary>国内差旅开始日期</summary>	
		[Description("国内差旅开始日期")]
        public DateTime? DomesticExpenseDateStart { get; set; } // DomesticExpenseDateStart
		/// <summary>国内差旅结束日期</summary>	
		[Description("国内差旅结束日期")]
        public DateTime? DomesticExpenseDateEnd { get; set; } // DomesticExpenseDateEnd
		/// <summary>备案日期</summary>	
		[Description("备案日期")]
        public DateTime? TravelRecordDate { get; set; } // TravelRecordDate
		/// <summary>扣减天数</summary>	
		[Description("扣减天数")]
        public double? DeductionDays { get; set; } // DeductionDays
		/// <summary>出差天数</summary>	
		[Description("出差天数")]
        public double? TravelDays { get; set; } // TravelDays
		/// <summary>国内有票住宿每天节约奖励(元)</summary>	
		[Description("国内有票住宿每天节约奖励(元)")]
        public decimal? GNYPZSMTJYJLY { get; set; } // GNYPZSMTJYJLY
		/// <summary>实报实销住宿费用(元)</summary>	
		[Description("实报实销住宿费用(元)")]
        public decimal? SBSXZSFYY { get; set; } // SBSXZSFYY
		/// <summary>市内交通费天数</summary>	
		[Description("市内交通费天数")]
        public int? SNJTFTS { get; set; } // SNJTFTS
		/// <summary>室内交通费扣减天数</summary>	
		[Description("室内交通费扣减天数")]
        public int? SNJTFKJTS { get; set; } // SNJTFKJTS
		/// <summary>伙食补贴天数</summary>	
		[Description("伙食补贴天数")]
        public int? HSBTTS { get; set; } // HSBTTS
		/// <summary>出国起始时间</summary>	
		[Description("出国起始时间")]
        public DateTime? CGQSSJ { get; set; } // CGQSSJ
		/// <summary>出国结束时间</summary>	
		[Description("出国结束时间")]
        public DateTime? CGJSSJ { get; set; } // CGJSSJ
		/// <summary>出国天数</summary>	
		[Description("出国天数")]
        public int? CGTS { get; set; } // CGTS
		/// <summary>随行人员</summary>	
		[Description("随行人员")]
        public string SXRY { get; set; } // SXRY
		/// <summary>随行人员名称</summary>	
		[Description("随行人员名称")]
        public string SXRYName { get; set; } // SXRYName
		/// <summary>随行人员表</summary>	
		[Description("随行人员表")]
        public string SXRYB { get; set; } // SXRYB
		/// <summary>国外费用明细</summary>	
		[Description("国外费用明细")]
        public string GWFYMX { get; set; } // GWFYMX
		/// <summary>国内有票平均住宿费用</summary>	
		[Description("国内有票平均住宿费用")]
        public decimal? GNYPPJZSFY { get; set; } // GNYPPJZSFY
		/// <summary>培训通知会议通知</summary>	
		[Description("培训通知会议通知")]
        public string PXTZHYTZ { get; set; } // PXTZHYTZ
		/// <summary>随行人员部门</summary>	
		[Description("随行人员部门")]
        public string SXRYBM { get; set; } // SXRYBM
		/// <summary>随行人员部门名称</summary>	
		[Description("随行人员部门名称")]
        public string SXRYBMName { get; set; } // SXRYBMName
		/// <summary>交通工具标准</summary>	
		[Description("交通工具标准")]
        public string TransportationStandard { get; set; } // TransportationStandard
		/// <summary>国内有效住宿费节约奖励表</summary>	
		[Description("国内有效住宿费节约奖励表")]
        public string GNYPZSFSRewardStandard { get; set; } // GNYPZSFSRewardStandard
		/// <summary>国内无票住宿节约奖励标准</summary>	
		[Description("国内无票住宿节约奖励标准")]
        public decimal? GNWPZFSRewardStandard { get; set; } // GNWPZFSRewardStandard
		/// <summary>是否自动删除国外费用明细</summary>	
		[Description("是否自动删除国外费用明细")]
        public string AutoDeleteSubItem_GWFYMX { get; set; } // AutoDeleteSubItem_GWFYMX

        // Reverse navigation
		[JsonIgnore]
        public virtual ICollection<S_EP_ReimbursementApply_BXRYBXCLFRQ> S_EP_ReimbursementApply_BXRYBXCLFRQ { get { onS_EP_ReimbursementApply_BXRYBXCLFRQGetting(); return _S_EP_ReimbursementApply_BXRYBXCLFRQ;} }
		private ICollection<S_EP_ReimbursementApply_BXRYBXCLFRQ> _S_EP_ReimbursementApply_BXRYBXCLFRQ;
		partial void onS_EP_ReimbursementApply_BXRYBXCLFRQGetting();

		[JsonIgnore]
        public virtual ICollection<S_EP_ReimbursementApply_DeptDetail> S_EP_ReimbursementApply_DeptDetail { get { onS_EP_ReimbursementApply_DeptDetailGetting(); return _S_EP_ReimbursementApply_DeptDetail;} }
		private ICollection<S_EP_ReimbursementApply_DeptDetail> _S_EP_ReimbursementApply_DeptDetail;
		partial void onS_EP_ReimbursementApply_DeptDetailGetting();

		[JsonIgnore]
        public virtual ICollection<S_EP_ReimbursementApply_Details> S_EP_ReimbursementApply_Details { get { onS_EP_ReimbursementApply_DetailsGetting(); return _S_EP_ReimbursementApply_Details;} }
		private ICollection<S_EP_ReimbursementApply_Details> _S_EP_ReimbursementApply_Details;
		partial void onS_EP_ReimbursementApply_DetailsGetting();

		[JsonIgnore]
        public virtual ICollection<S_EP_ReimbursementApply_ElectronicTicket> S_EP_ReimbursementApply_ElectronicTicket { get { onS_EP_ReimbursementApply_ElectronicTicketGetting(); return _S_EP_ReimbursementApply_ElectronicTicket;} }
		private ICollection<S_EP_ReimbursementApply_ElectronicTicket> _S_EP_ReimbursementApply_ElectronicTicket;
		partial void onS_EP_ReimbursementApply_ElectronicTicketGetting();

		[JsonIgnore]
        public virtual ICollection<S_EP_ReimbursementApply_EquipmentInventory> S_EP_ReimbursementApply_EquipmentInventory { get { onS_EP_ReimbursementApply_EquipmentInventoryGetting(); return _S_EP_ReimbursementApply_EquipmentInventory;} }
		private ICollection<S_EP_ReimbursementApply_EquipmentInventory> _S_EP_ReimbursementApply_EquipmentInventory;
		partial void onS_EP_ReimbursementApply_EquipmentInventoryGetting();

		[JsonIgnore]
        public virtual ICollection<S_EP_ReimbursementApply_GNFYJTF> S_EP_ReimbursementApply_GNFYJTF { get { onS_EP_ReimbursementApply_GNFYJTFGetting(); return _S_EP_ReimbursementApply_GNFYJTF;} }
		private ICollection<S_EP_ReimbursementApply_GNFYJTF> _S_EP_ReimbursementApply_GNFYJTF;
		partial void onS_EP_ReimbursementApply_GNFYJTFGetting();

		[JsonIgnore]
        public virtual ICollection<S_EP_ReimbursementApply_GNYPZSFSRewardStandard> S_EP_ReimbursementApply_GNYPZSFSRewardStandard { get { onS_EP_ReimbursementApply_GNYPZSFSRewardStandardGetting(); return _S_EP_ReimbursementApply_GNYPZSFSRewardStandard;} }
		private ICollection<S_EP_ReimbursementApply_GNYPZSFSRewardStandard> _S_EP_ReimbursementApply_GNYPZSFSRewardStandard;
		partial void onS_EP_ReimbursementApply_GNYPZSFSRewardStandardGetting();

		[JsonIgnore]
        public virtual ICollection<S_EP_ReimbursementApply_GWFYMX> S_EP_ReimbursementApply_GWFYMX { get { onS_EP_ReimbursementApply_GWFYMXGetting(); return _S_EP_ReimbursementApply_GWFYMX;} }
		private ICollection<S_EP_ReimbursementApply_GWFYMX> _S_EP_ReimbursementApply_GWFYMX;
		partial void onS_EP_ReimbursementApply_GWFYMXGetting();

		[JsonIgnore]
        public virtual ICollection<S_EP_ReimbursementApply_LoanInfo> S_EP_ReimbursementApply_LoanInfo { get { onS_EP_ReimbursementApply_LoanInfoGetting(); return _S_EP_ReimbursementApply_LoanInfo;} }
		private ICollection<S_EP_ReimbursementApply_LoanInfo> _S_EP_ReimbursementApply_LoanInfo;
		partial void onS_EP_ReimbursementApply_LoanInfoGetting();

		[JsonIgnore]
        public virtual ICollection<S_EP_ReimbursementApply_OtherFee> S_EP_ReimbursementApply_OtherFee { get { onS_EP_ReimbursementApply_OtherFeeGetting(); return _S_EP_ReimbursementApply_OtherFee;} }
		private ICollection<S_EP_ReimbursementApply_OtherFee> _S_EP_ReimbursementApply_OtherFee;
		partial void onS_EP_ReimbursementApply_OtherFeeGetting();

		[JsonIgnore]
        public virtual ICollection<S_EP_ReimbursementApply_PaymentSchedule> S_EP_ReimbursementApply_PaymentSchedule { get { onS_EP_ReimbursementApply_PaymentScheduleGetting(); return _S_EP_ReimbursementApply_PaymentSchedule;} }
		private ICollection<S_EP_ReimbursementApply_PaymentSchedule> _S_EP_ReimbursementApply_PaymentSchedule;
		partial void onS_EP_ReimbursementApply_PaymentScheduleGetting();

		[JsonIgnore]
        public virtual ICollection<S_EP_ReimbursementApply_ProjectInfo> S_EP_ReimbursementApply_ProjectInfo { get { onS_EP_ReimbursementApply_ProjectInfoGetting(); return _S_EP_ReimbursementApply_ProjectInfo;} }
		private ICollection<S_EP_ReimbursementApply_ProjectInfo> _S_EP_ReimbursementApply_ProjectInfo;
		partial void onS_EP_ReimbursementApply_ProjectInfoGetting();

		[JsonIgnore]
        public virtual ICollection<S_EP_ReimbursementApply_SXRYB> S_EP_ReimbursementApply_SXRYB { get { onS_EP_ReimbursementApply_SXRYBGetting(); return _S_EP_ReimbursementApply_SXRYB;} }
		private ICollection<S_EP_ReimbursementApply_SXRYB> _S_EP_ReimbursementApply_SXRYB;
		partial void onS_EP_ReimbursementApply_SXRYBGetting();

		[JsonIgnore]
        public virtual ICollection<S_EP_ReimbursementApply_TravelRecordInfo> S_EP_ReimbursementApply_TravelRecordInfo { get { onS_EP_ReimbursementApply_TravelRecordInfoGetting(); return _S_EP_ReimbursementApply_TravelRecordInfo;} }
		private ICollection<S_EP_ReimbursementApply_TravelRecordInfo> _S_EP_ReimbursementApply_TravelRecordInfo;
		partial void onS_EP_ReimbursementApply_TravelRecordInfoGetting();

		[JsonIgnore]
        public virtual ICollection<S_EP_ReimbursementApply_ZZSZYFPJXSEMX> S_EP_ReimbursementApply_ZZSZYFPJXSEMX { get { onS_EP_ReimbursementApply_ZZSZYFPJXSEMXGetting(); return _S_EP_ReimbursementApply_ZZSZYFPJXSEMX;} }
		private ICollection<S_EP_ReimbursementApply_ZZSZYFPJXSEMX> _S_EP_ReimbursementApply_ZZSZYFPJXSEMX;
		partial void onS_EP_ReimbursementApply_ZZSZYFPJXSEMXGetting();


        public S_EP_ReimbursementApply()
        {
            _S_EP_ReimbursementApply_BXRYBXCLFRQ = new List<S_EP_ReimbursementApply_BXRYBXCLFRQ>();
            _S_EP_ReimbursementApply_DeptDetail = new List<S_EP_ReimbursementApply_DeptDetail>();
            _S_EP_ReimbursementApply_Details = new List<S_EP_ReimbursementApply_Details>();
            _S_EP_ReimbursementApply_ElectronicTicket = new List<S_EP_ReimbursementApply_ElectronicTicket>();
            _S_EP_ReimbursementApply_EquipmentInventory = new List<S_EP_ReimbursementApply_EquipmentInventory>();
            _S_EP_ReimbursementApply_GNFYJTF = new List<S_EP_ReimbursementApply_GNFYJTF>();
            _S_EP_ReimbursementApply_GNYPZSFSRewardStandard = new List<S_EP_ReimbursementApply_GNYPZSFSRewardStandard>();
            _S_EP_ReimbursementApply_GWFYMX = new List<S_EP_ReimbursementApply_GWFYMX>();
            _S_EP_ReimbursementApply_LoanInfo = new List<S_EP_ReimbursementApply_LoanInfo>();
            _S_EP_ReimbursementApply_OtherFee = new List<S_EP_ReimbursementApply_OtherFee>();
            _S_EP_ReimbursementApply_PaymentSchedule = new List<S_EP_ReimbursementApply_PaymentSchedule>();
            _S_EP_ReimbursementApply_ProjectInfo = new List<S_EP_ReimbursementApply_ProjectInfo>();
            _S_EP_ReimbursementApply_SXRYB = new List<S_EP_ReimbursementApply_SXRYB>();
            _S_EP_ReimbursementApply_TravelRecordInfo = new List<S_EP_ReimbursementApply_TravelRecordInfo>();
            _S_EP_ReimbursementApply_ZZSZYFPJXSEMX = new List<S_EP_ReimbursementApply_ZZSZYFPJXSEMX>();
        }
    }

	/// <summary>报销人已报销差旅费日期</summary>	
	[Description("报销人已报销差旅费日期")]
    public partial class S_EP_ReimbursementApply_BXRYBXCLFRQ : Formula.BaseModel
    {
		/// <summary></summary>	
		[Description("")]
        public string ID { get; set; } // ID (Primary key)
		/// <summary></summary>	
		[Description("")]
        public string S_EP_ReimbursementApplyID { get; set; } // S_EP_ReimbursementApplyID
		/// <summary></summary>	
		[Description("")]
        public double? SortIndex { get; set; } // SortIndex
		/// <summary></summary>	
		[Description("")]
        public string IsReleased { get; set; } // IsReleased
		/// <summary>报销人ID</summary>	
		[Description("报销人ID")]
        public string Advertiser { get; set; } // Advertiser
		/// <summary>报销人</summary>	
		[Description("报销人")]
        public string AdvertiserName { get; set; } // AdvertiserName
		/// <summary>出发日期</summary>	
		[Description("出发日期")]
        public DateTime? StartingDate { get; set; } // StartingDate
		/// <summary>到达日期</summary>	
		[Description("到达日期")]
        public DateTime? ArrivedDate { get; set; } // ArrivedDate
		/// <summary>报销单编号</summary>	
		[Description("报销单编号")]
        public string ReimbursementFormCode { get; set; } // ReimbursementFormCode

        // Foreign keys
		[JsonIgnore]
        public virtual S_EP_ReimbursementApply S_EP_ReimbursementApply { get; set; } //  S_EP_ReimbursementApplyID - FK_S_EP_ReimbursementApply_BXRYBXCLFRQ_S_EP_ReimbursementApply
    }

	/// <summary>部门分摊明细</summary>	
	[Description("部门分摊明细")]
    public partial class S_EP_ReimbursementApply_DeptDetail : Formula.BaseModel
    {
		/// <summary></summary>	
		[Description("")]
        public string ID { get; set; } // ID (Primary key)
		/// <summary></summary>	
		[Description("")]
        public string S_EP_ReimbursementApplyID { get; set; } // S_EP_ReimbursementApplyID
		/// <summary></summary>	
		[Description("")]
        public double? SortIndex { get; set; } // SortIndex
		/// <summary></summary>	
		[Description("")]
        public string IsReleased { get; set; } // IsReleased
		/// <summary>部门</summary>	
		[Description("部门")]
        public string Dept { get; set; } // Dept
		/// <summary>部门名称</summary>	
		[Description("部门名称")]
        public string DeptName { get; set; } // DeptName
		/// <summary>金额(元)</summary>	
		[Description("金额(元)")]
        public decimal? Amount { get; set; } // Amount

        // Foreign keys
		[JsonIgnore]
        public virtual S_EP_ReimbursementApply S_EP_ReimbursementApply { get; set; } //  S_EP_ReimbursementApplyID - FK_T_RM_ReimbursementForm_DeptDetail_T_RM_ReimbursementForm
    }

	/// <summary>费用报销明细</summary>	
	[Description("费用报销明细")]
    public partial class S_EP_ReimbursementApply_Details : Formula.BaseModel
    {
		/// <summary></summary>	
		[Description("")]
        public string ID { get; set; } // ID (Primary key)
		/// <summary></summary>	
		[Description("")]
        public string S_EP_ReimbursementApplyID { get; set; } // S_EP_ReimbursementApplyID
		/// <summary></summary>	
		[Description("")]
        public double? SortIndex { get; set; } // SortIndex
		/// <summary></summary>	
		[Description("")]
        public string IsReleased { get; set; } // IsReleased
		/// <summary>二级费用科目</summary>	
		[Description("二级费用科目")]
        public string TwoExpenseScourse { get; set; } // TwoExpenseScourse
		/// <summary>费用发生日期</summary>	
		[Description("费用发生日期")]
        public DateTime? ExpenseDate { get; set; } // ExpenseDate
		/// <summary>费用金额</summary>	
		[Description("费用金额")]
        public decimal? CostAmount { get; set; } // CostAmount
		/// <summary>费用发生地点</summary>	
		[Description("费用发生地点")]
        public string ExpenseSite { get; set; } // ExpenseSite
		/// <summary>事由</summary>	
		[Description("事由")]
        public string Reason { get; set; } // Reason
		/// <summary>三级费用科目</summary>	
		[Description("三级费用科目")]
        public string ThreeExpenseScourse { get; set; } // ThreeExpenseScourse
		/// <summary>费用发生国家</summary>	
		[Description("费用发生国家")]
        public string ExpenseCountry { get; set; } // ExpenseCountry
		/// <summary>币种</summary>	
		[Description("币种")]
        public string Currency { get; set; } // Currency
		/// <summary>汇率</summary>	
		[Description("汇率")]
        public string ExchangeRate { get; set; } // ExchangeRate
		/// <summary>费用金额(元)</summary>	
		[Description("费用金额(元)")]
        public decimal? TranslatedRMBAmount { get; set; } // TranslatedRMBAmount
		/// <summary>一级费用科目ID</summary>	
		[Description("一级费用科目ID")]
        public string OneExpenseScourseID { get; set; } // OneExpenseScourseID
		/// <summary>二级费用科目编号</summary>	
		[Description("二级费用科目编号")]
        public string TwoExpenseScourseCode { get; set; } // TwoExpenseScourseCode
		/// <summary>二级费用科目ID</summary>	
		[Description("二级费用科目ID")]
        public string TwoExpenseScourseID { get; set; } // TwoExpenseScourseID
		/// <summary>二级费用科目是否含子科目</summary>	
		[Description("二级费用科目是否含子科目")]
        public string IsTwoESHaveChildNode { get; set; } // IsTwoESHaveChildNode
		/// <summary>三级费用科目编号</summary>	
		[Description("三级费用科目编号")]
        public string ThreeExpenseScourseCode { get; set; } // ThreeExpenseScourseCode
		/// <summary>三级费用科目ID</summary>	
		[Description("三级费用科目ID")]
        public string ThreeExpenseScourseID { get; set; } // ThreeExpenseScourseID
		/// <summary>陪同人数</summary>	
		[Description("陪同人数")]
        public int? Accompany { get; set; } // Accompany
		/// <summary>客人人数</summary>	
		[Description("客人人数")]
        public int? Guests { get; set; } // Guests
		/// <summary>姓名</summary>	
		[Description("姓名")]
        public string UserName { get; set; } // UserName
		/// <summary>证件类型</summary>	
		[Description("证件类型")]
        public string CertificateType { get; set; } // CertificateType
		/// <summary>证件号码</summary>	
		[Description("证件号码")]
        public string IDCard { get; set; } // IDCard
		/// <summary>是否新增人员</summary>	
		[Description("是否新增人员")]
        public string IsNewPerson { get; set; } // IsNewPerson
		/// <summary>手机号</summary>	
		[Description("手机号")]
        public string UserPhone { get; set; } // UserPhone
		/// <summary>本月报销次数</summary>	
		[Description("本月报销次数")]
        public int? CurrentMonthReimburseCount { get; set; } // CurrentMonthReimburseCount
		/// <summary>聘用时间</summary>	
		[Description("聘用时间")]
        public DateTime? HiringTime { get; set; } // HiringTime
		/// <summary>代扣代缴个税(元)</summary>	
		[Description("代扣代缴个税(元)")]
        public decimal? TaxAmount { get; set; } // TaxAmount
		/// <summary>实发金额(元)</summary>	
		[Description("实发金额(元)")]
        public decimal? ActualLaborCost { get; set; } // ActualLaborCost
		/// <summary>收款户名</summary>	
		[Description("收款户名")]
        public string AccountName { get; set; } // AccountName
		/// <summary>开户银行</summary>	
		[Description("开户银行")]
        public string OpenBank { get; set; } // OpenBank
		/// <summary>银行卡号</summary>	
		[Description("银行卡号")]
        public string CardNumber { get; set; } // CardNumber
		/// <summary>备注</summary>	
		[Description("备注")]
        public string Remark { get; set; } // Remark
		/// <summary>创建人</summary>	
		[Description("创建人")]
        public string CreateUser { get; set; } // CreateUser
		/// <summary>创建人名称</summary>	
		[Description("创建人名称")]
        public string CreateUserName { get; set; } // CreateUserName

        // Foreign keys
		[JsonIgnore]
        public virtual S_EP_ReimbursementApply S_EP_ReimbursementApply { get; set; } //  S_EP_ReimbursementApplyID - FK_S_EP_ReimbursementApply_Details_S_EP_ReimbursementApply
    }

	/// <summary>电子发票</summary>	
	[Description("电子发票")]
    public partial class S_EP_ReimbursementApply_ElectronicTicket : Formula.BaseModel
    {
		/// <summary></summary>	
		[Description("")]
        public string ID { get; set; } // ID (Primary key)
		/// <summary></summary>	
		[Description("")]
        public string S_EP_ReimbursementApplyID { get; set; } // S_EP_ReimbursementApplyID
		/// <summary></summary>	
		[Description("")]
        public double? SortIndex { get; set; } // SortIndex
		/// <summary></summary>	
		[Description("")]
        public string IsReleased { get; set; } // IsReleased
		/// <summary>电子发票号</summary>	
		[Description("电子发票号")]
        public string ElectronicInvoiceNumber { get; set; } // ElectronicInvoiceNumber

        // Foreign keys
		[JsonIgnore]
        public virtual S_EP_ReimbursementApply S_EP_ReimbursementApply { get; set; } //  S_EP_ReimbursementApplyID - FK_S_EP_ReimbursementApply_ElectronicTicket_S_EP_ReimbursementApply
    }

	/// <summary>设备入库清单</summary>	
	[Description("设备入库清单")]
    public partial class S_EP_ReimbursementApply_EquipmentInventory : Formula.BaseModel
    {
		/// <summary></summary>	
		[Description("")]
        public string ID { get; set; } // ID (Primary key)
		/// <summary></summary>	
		[Description("")]
        public string S_EP_ReimbursementApplyID { get; set; } // S_EP_ReimbursementApplyID
		/// <summary></summary>	
		[Description("")]
        public double? SortIndex { get; set; } // SortIndex
		/// <summary></summary>	
		[Description("")]
        public string IsReleased { get; set; } // IsReleased
		/// <summary>物品名称</summary>	
		[Description("物品名称")]
        public string Name { get; set; } // Name
		/// <summary>品名</summary>	
		[Description("品名")]
        public string ProductName { get; set; } // ProductName
		/// <summary>单价</summary>	
		[Description("单价")]
        public decimal? Price { get; set; } // Price
		/// <summary>数量</summary>	
		[Description("数量")]
        public int? Quantity { get; set; } // Quantity

        // Foreign keys
		[JsonIgnore]
        public virtual S_EP_ReimbursementApply S_EP_ReimbursementApply { get; set; } //  S_EP_ReimbursementApplyID - FK_S_EP_ReimbursementApply_EquipmentInventory_S_EP_ReimbursementApply
    }

	/// <summary>国内费用交通费</summary>	
	[Description("国内费用交通费")]
    public partial class S_EP_ReimbursementApply_GNFYJTF : Formula.BaseModel
    {
		/// <summary></summary>	
		[Description("")]
        public string ID { get; set; } // ID (Primary key)
		/// <summary></summary>	
		[Description("")]
        public string S_EP_ReimbursementApplyID { get; set; } // S_EP_ReimbursementApplyID
		/// <summary></summary>	
		[Description("")]
        public double? SortIndex { get; set; } // SortIndex
		/// <summary></summary>	
		[Description("")]
        public string IsReleased { get; set; } // IsReleased
		/// <summary>出发地</summary>	
		[Description("出发地")]
        public string StartingPlace { get; set; } // StartingPlace
		/// <summary>到达地</summary>	
		[Description("到达地")]
        public string ArrivedPlace { get; set; } // ArrivedPlace
		/// <summary>出发日期</summary>	
		[Description("出发日期")]
        public DateTime? StartingDate { get; set; } // StartingDate
		/// <summary>到达日期</summary>	
		[Description("到达日期")]
        public DateTime? ArrivedDate { get; set; } // ArrivedDate
		/// <summary>发票类型</summary>	
		[Description("发票类型")]
        public string InvoiceType { get; set; } // InvoiceType
		/// <summary>可乘坐的交通工具</summary>	
		[Description("可乘坐的交通工具")]
        public string TransportationStandard { get; set; } // TransportationStandard
		/// <summary>实际交通工具</summary>	
		[Description("实际交通工具")]
        public string Transportation { get; set; } // Transportation
		/// <summary>是否同意超标</summary>	
		[Description("是否同意超标")]
        public string SFTYCB { get; set; } // SFTYCB
		/// <summary>交通费(元)</summary>	
		[Description("交通费(元)")]
        public decimal? TransportationFee { get; set; } // TransportationFee
		/// <summary>税率(%)</summary>	
		[Description("税率(%)")]
        public double? TaxRate { get; set; } // TaxRate
		/// <summary>税额(元)</summary>	
		[Description("税额(元)")]
        public decimal? TaxAmount { get; set; } // TaxAmount
		/// <summary>节约补贴(元)</summary>	
		[Description("节约补贴(元)")]
        public decimal? SavingSubsidy { get; set; } // SavingSubsidy
		/// <summary>确认交通费(元)</summary>	
		[Description("确认交通费(元)")]
        public decimal? ConfirmTransportationFee { get; set; } // ConfirmTransportationFee
		/// <summary>是否超标</summary>	
		[Description("是否超标")]
        public string SFCB { get; set; } // SFCB

        // Foreign keys
		[JsonIgnore]
        public virtual S_EP_ReimbursementApply S_EP_ReimbursementApply { get; set; } //  S_EP_ReimbursementApplyID - FK_S_EP_ReimbursementApply_GNFYJTF_S_EP_ReimbursementApply
    }

	/// <summary>国内有效住宿费节约奖励表</summary>	
	[Description("国内有效住宿费节约奖励表")]
    public partial class S_EP_ReimbursementApply_GNYPZSFSRewardStandard : Formula.BaseModel
    {
		/// <summary></summary>	
		[Description("")]
        public string ID { get; set; } // ID (Primary key)
		/// <summary></summary>	
		[Description("")]
        public string S_EP_ReimbursementApplyID { get; set; } // S_EP_ReimbursementApplyID
		/// <summary></summary>	
		[Description("")]
        public double? SortIndex { get; set; } // SortIndex
		/// <summary></summary>	
		[Description("")]
        public string IsReleased { get; set; } // IsReleased
		/// <summary>平均日节约奖励额起</summary>	
		[Description("平均日节约奖励额起")]
        public decimal? PJRJYJLEQ { get; set; } // PJRJYJLEQ
		/// <summary>平均日节约奖励额止</summary>	
		[Description("平均日节约奖励额止")]
        public decimal? PJRJYJLEZ { get; set; } // PJRJYJLEZ
		/// <summary>奖励(%)</summary>	
		[Description("奖励(%)")]
        public int? Reward { get; set; } // Reward

        // Foreign keys
		[JsonIgnore]
        public virtual S_EP_ReimbursementApply S_EP_ReimbursementApply { get; set; } //  S_EP_ReimbursementApplyID - FK_S_EP_ReimbursementApply_GNYPZSFSRewardStandard_S_EP_ReimbursementApply
    }

	/// <summary>国外费用明细</summary>	
	[Description("国外费用明细")]
    public partial class S_EP_ReimbursementApply_GWFYMX : Formula.BaseModel
    {
		/// <summary></summary>	
		[Description("")]
        public string ID { get; set; } // ID (Primary key)
		/// <summary></summary>	
		[Description("")]
        public string S_EP_ReimbursementApplyID { get; set; } // S_EP_ReimbursementApplyID
		/// <summary></summary>	
		[Description("")]
        public double? SortIndex { get; set; } // SortIndex
		/// <summary></summary>	
		[Description("")]
        public string IsReleased { get; set; } // IsReleased
		/// <summary>出差类型</summary>	
		[Description("出差类型")]
        public string TravelType { get; set; } // TravelType
		/// <summary>人员</summary>	
		[Description("人员")]
        public string TravelUser { get; set; } // TravelUser
		/// <summary>人员名称</summary>	
		[Description("人员名称")]
        public string TravelUserName { get; set; } // TravelUserName
		/// <summary>国家</summary>	
		[Description("国家")]
        public string Country { get; set; } // Country
		/// <summary>出发地</summary>	
		[Description("出发地")]
        public string StartingPlace { get; set; } // StartingPlace
		/// <summary>到达地</summary>	
		[Description("到达地")]
        public string ArrivedPlace { get; set; } // ArrivedPlace
		/// <summary>出发日期</summary>	
		[Description("出发日期")]
        public DateTime? DepartureDate { get; set; } // DepartureDate
		/// <summary>到达日期</summary>	
		[Description("到达日期")]
        public DateTime? ArrivaledDate { get; set; } // ArrivaledDate
		/// <summary>离开日期</summary>	
		[Description("离开日期")]
        public DateTime? LeftDate { get; set; } // LeftDate
		/// <summary>天数</summary>	
		[Description("天数")]
        public int? Days { get; set; } // Days
		/// <summary>交通费.实际金额</summary>	
		[Description("交通费.实际金额")]
        public decimal? JTFSJJE { get; set; } // JTFSJJE
		/// <summary>交通费.币种</summary>	
		[Description("交通费.币种")]
        public string JTFBZ { get; set; } // JTFBZ
		/// <summary>交通费.汇率</summary>	
		[Description("交通费.汇率")]
        public decimal? JTFHL { get; set; } // JTFHL
		/// <summary>交通费.折合人民币金额(元)</summary>	
		[Description("交通费.折合人民币金额(元)")]
        public decimal? JTFZHRMBJE { get; set; } // JTFZHRMBJE
		/// <summary>驻场补贴(美元).补贴标准</summary>	
		[Description("驻场补贴(美元).补贴标准")]
        public decimal? ZCBTMYBTBZ { get; set; } // ZCBTMYBTBZ
		/// <summary>驻场补贴(美元).天数</summary>	
		[Description("驻场补贴(美元).天数")]
        public int? ZCBTMYTS { get; set; } // ZCBTMYTS
		/// <summary>驻场补贴(美元).折合人民币金额(元)</summary>	
		[Description("驻场补贴(美元).折合人民币金额(元)")]
        public decimal? ZCBTMYZHRMBJE { get; set; } // ZCBTMYZHRMBJE
		/// <summary>住宿费.实际金额</summary>	
		[Description("住宿费.实际金额")]
        public decimal? ZSFSJJE { get; set; } // ZSFSJJE
		/// <summary>住宿费.币种</summary>	
		[Description("住宿费.币种")]
        public string ZSFBZ { get; set; } // ZSFBZ
		/// <summary>住宿费.汇率</summary>	
		[Description("住宿费.汇率")]
        public decimal? ZSFHL { get; set; } // ZSFHL
		/// <summary>住宿费.折合人民币金额(元)</summary>	
		[Description("住宿费.折合人民币金额(元)")]
        public decimal? ZSFZHRMBJEY { get; set; } // ZSFZHRMBJEY
		/// <summary>住宿费.有票住宿天数</summary>	
		[Description("住宿费.有票住宿天数")]
        public int? ZSFYPZSTS { get; set; } // ZSFYPZSTS
		/// <summary>住宿费.无票住宿天数</summary>	
		[Description("住宿费.无票住宿天数")]
        public int? ZSFWPZSTS { get; set; } // ZSFWPZSTS
		/// <summary>住宿费.有票平均住宿费天(元)</summary>	
		[Description("住宿费.有票平均住宿费天(元)")]
        public decimal? ZSFYPPJZSFTY { get; set; } // ZSFYPPJZSFTY
		/// <summary>住宿费.有票节约奖励(元)</summary>	
		[Description("住宿费.有票节约奖励(元)")]
        public decimal? ZSFYPJYJLY { get; set; } // ZSFYPJYJLY
		/// <summary>住宿费.节约奖励合计(元)</summary>	
		[Description("住宿费.节约奖励合计(元)")]
        public decimal? ZSFJYJLHJY { get; set; } // ZSFJYJLHJY
		/// <summary>会议费.实际金额</summary>	
		[Description("会议费.实际金额")]
        public decimal? HYFSJJE { get; set; } // HYFSJJE
		/// <summary>会议费.币种</summary>	
		[Description("会议费.币种")]
        public string HYFBZ { get; set; } // HYFBZ
		/// <summary>会议费.汇率</summary>	
		[Description("会议费.汇率")]
        public decimal? HYFHL { get; set; } // HYFHL
		/// <summary>会议费.折合人民币金额(元)</summary>	
		[Description("会议费.折合人民币金额(元)")]
        public decimal? HYFZHRMBJE { get; set; } // HYFZHRMBJE
		/// <summary>培训费.实际金额</summary>	
		[Description("培训费.实际金额")]
        public decimal? PXFSJJE { get; set; } // PXFSJJE
		/// <summary>培训费.币种</summary>	
		[Description("培训费.币种")]
        public string PXFBZ { get; set; } // PXFBZ
		/// <summary>培训费.汇率</summary>	
		[Description("培训费.汇率")]
        public decimal? PXFHL { get; set; } // PXFHL
		/// <summary>培训费.折合人民币金额(元)</summary>	
		[Description("培训费.折合人民币金额(元)")]
        public decimal? PXFZHRMBJE { get; set; } // PXFZHRMBJE
		/// <summary>其他费用.实际金额</summary>	
		[Description("其他费用.实际金额")]
        public decimal? QTFYSJJE { get; set; } // QTFYSJJE
		/// <summary>其他费用.币种</summary>	
		[Description("其他费用.币种")]
        public string QTFYBZ { get; set; } // QTFYBZ
		/// <summary>其他费用.汇率</summary>	
		[Description("其他费用.汇率")]
        public decimal? QTFYHL { get; set; } // QTFYHL
		/// <summary>其他费用.折合人民币金额(元)</summary>	
		[Description("其他费用.折合人民币金额(元)")]
        public decimal? QTFYZHRMBJE { get; set; } // QTFYZHRMBJE
		/// <summary>其他费用.说明</summary>	
		[Description("其他费用.说明")]
        public string QTFYSM { get; set; } // QTFYSM
		/// <summary>伙食补贴.补贴标准</summary>	
		[Description("伙食补贴.补贴标准")]
        public decimal? HSBTBTBZ { get; set; } // HSBTBTBZ
		/// <summary>伙食补贴.折合人民币金额(元)</summary>	
		[Description("伙食补贴.折合人民币金额(元)")]
        public decimal? HSBTZHRMBJE { get; set; } // HSBTZHRMBJE
		/// <summary>公杂费.补贴标准</summary>	
		[Description("公杂费.补贴标准")]
        public decimal? GZFBTBZ { get; set; } // GZFBTBZ
		/// <summary>公杂费.折合人民币金额(元)</summary>	
		[Description("公杂费.折合人民币金额(元)")]
        public decimal? GZFZHRMBJE { get; set; } // GZFZHRMBJE
		/// <summary>费用合计(元)</summary>	
		[Description("费用合计(元)")]
        public decimal? TotalCostAmount { get; set; } // TotalCostAmount
		/// <summary>住宿费.无票节约奖励(元)</summary>	
		[Description("住宿费.无票节约奖励(元)")]
        public decimal? ZSFWPJYJLY { get; set; } // ZSFWPJYJLY

        // Foreign keys
		[JsonIgnore]
        public virtual S_EP_ReimbursementApply S_EP_ReimbursementApply { get; set; } //  S_EP_ReimbursementApplyID - FK_S_EP_ReimbursementApply_GWFYMX_S_EP_ReimbursementApply
    }

	/// <summary>冲销借款信息</summary>	
	[Description("冲销借款信息")]
    public partial class S_EP_ReimbursementApply_LoanInfo : Formula.BaseModel
    {
		/// <summary></summary>	
		[Description("")]
        public string ID { get; set; } // ID (Primary key)
		/// <summary></summary>	
		[Description("")]
        public string S_EP_ReimbursementApplyID { get; set; } // S_EP_ReimbursementApplyID
		/// <summary></summary>	
		[Description("")]
        public double? SortIndex { get; set; } // SortIndex
		/// <summary></summary>	
		[Description("")]
        public string IsReleased { get; set; } // IsReleased
		/// <summary>借款申请单ID</summary>	
		[Description("借款申请单ID")]
        public string LoanApplyID { get; set; } // LoanApplyID
		/// <summary>借款单流水号</summary>	
		[Description("借款单流水号")]
        public string BorrowFormNumber { get; set; } // BorrowFormNumber
		/// <summary>借款日期</summary>	
		[Description("借款日期")]
        public DateTime? BorrowDate { get; set; } // BorrowDate
		/// <summary>实际借款金额(元)</summary>	
		[Description("实际借款金额(元)")]
        public decimal? ActualLoanAmount { get; set; } // ActualLoanAmount
		/// <summary>已还款金额（元）</summary>	
		[Description("已还款金额（元）")]
        public decimal? AmountRepaid { get; set; } // AmountRepaid
		/// <summary>未还款金额(元)</summary>	
		[Description("未还款金额(元)")]
        public decimal? NoRepayAmount { get; set; } // NoRepayAmount
		/// <summary>本次冲销金额(元)</summary>	
		[Description("本次冲销金额(元)")]
        public decimal? ThisReversalAmount { get; set; } // ThisReversalAmount
		/// <summary>借款事由</summary>	
		[Description("借款事由")]
        public string LoanReason { get; set; } // LoanReason
		/// <summary>借款性质</summary>	
		[Description("借款性质")]
        public string BorrowTaskNature { get; set; } // BorrowTaskNature
		/// <summary>借款性质</summary>	
		[Description("借款性质")]
        public string BorrowType { get; set; } // BorrowType
		/// <summary>借款事由</summary>	
		[Description("借款事由")]
        public string JKSY { get; set; } // JKSY

        // Foreign keys
		[JsonIgnore]
        public virtual S_EP_ReimbursementApply S_EP_ReimbursementApply { get; set; } //  S_EP_ReimbursementApplyID - FK_S_EP_ReimbursementApply_LoanInfo_S_EP_ReimbursementApply
    }

	/// <summary>其他费用</summary>	
	[Description("其他费用")]
    public partial class S_EP_ReimbursementApply_OtherFee : Formula.BaseModel
    {
		/// <summary></summary>	
		[Description("")]
        public string ID { get; set; } // ID (Primary key)
		/// <summary></summary>	
		[Description("")]
        public string S_EP_ReimbursementApplyID { get; set; } // S_EP_ReimbursementApplyID
		/// <summary></summary>	
		[Description("")]
        public double? SortIndex { get; set; } // SortIndex
		/// <summary></summary>	
		[Description("")]
        public string IsReleased { get; set; } // IsReleased
		/// <summary>费用类别</summary>	
		[Description("费用类别")]
        public string CostCategory { get; set; } // CostCategory
		/// <summary>费用金额(元)</summary>	
		[Description("费用金额(元)")]
        public decimal? CostAmount { get; set; } // CostAmount
		/// <summary>说明</summary>	
		[Description("说明")]
        public string Remark { get; set; } // Remark

        // Foreign keys
		[JsonIgnore]
        public virtual S_EP_ReimbursementApply S_EP_ReimbursementApply { get; set; } //  S_EP_ReimbursementApplyID - FK_S_EP_ReimbursementApply_OtherFee_S_EP_ReimbursementApply
    }

	/// <summary>固定资产付款计划表</summary>	
	[Description("固定资产付款计划表")]
    public partial class S_EP_ReimbursementApply_PaymentSchedule : Formula.BaseModel
    {
		/// <summary></summary>	
		[Description("")]
        public string ID { get; set; } // ID (Primary key)
		/// <summary></summary>	
		[Description("")]
        public string S_EP_ReimbursementApplyID { get; set; } // S_EP_ReimbursementApplyID
		/// <summary></summary>	
		[Description("")]
        public double? SortIndex { get; set; } // SortIndex
		/// <summary></summary>	
		[Description("")]
        public string IsReleased { get; set; } // IsReleased
		/// <summary>付款计划编号</summary>	
		[Description("付款计划编号")]
        public string PaymentPlanCode { get; set; } // PaymentPlanCode
		/// <summary>付款计划名称</summary>	
		[Description("付款计划名称")]
        public string PaymentPlanName { get; set; } // PaymentPlanName
		/// <summary>计划付款日期</summary>	
		[Description("计划付款日期")]
        public DateTime? PaymentPlanDate { get; set; } // PaymentPlanDate
		/// <summary>计划付款金额(元)</summary>	
		[Description("计划付款金额(元)")]
        public decimal? PlanPaymentAmount { get; set; } // PlanPaymentAmount

        // Foreign keys
		[JsonIgnore]
        public virtual S_EP_ReimbursementApply S_EP_ReimbursementApply { get; set; } //  S_EP_ReimbursementApplyID - FK_S_EP_ReimbursementApply_PaymentSchedule_S_EP_ReimbursementApply
    }

	/// <summary>项目信息</summary>	
	[Description("项目信息")]
    public partial class S_EP_ReimbursementApply_ProjectInfo : Formula.BaseModel
    {
		/// <summary></summary>	
		[Description("")]
        public string ID { get; set; } // ID (Primary key)
		/// <summary></summary>	
		[Description("")]
        public string S_EP_ReimbursementApplyID { get; set; } // S_EP_ReimbursementApplyID
		/// <summary></summary>	
		[Description("")]
        public double? SortIndex { get; set; } // SortIndex
		/// <summary></summary>	
		[Description("")]
        public string IsReleased { get; set; } // IsReleased
		/// <summary>项目号</summary>	
		[Description("项目号")]
        public string ProjectCode { get; set; } // ProjectCode
		/// <summary>项目名称</summary>	
		[Description("项目名称")]
        public string ProjectName { get; set; } // ProjectName
		/// <summary>项目天数</summary>	
		[Description("项目天数")]
        public int? ProjectDays { get; set; } // ProjectDays
		/// <summary>现场手机费(元)</summary>	
		[Description("现场手机费(元)")]
        public decimal? XCSJF { get; set; } // XCSJF
		/// <summary>岗位名称</summary>	
		[Description("岗位名称")]
        public string PositionName { get; set; } // PositionName
		/// <summary>岗位补贴标准(元)</summary>	
		[Description("岗位补贴标准(元)")]
        public decimal? PostSubsidyStandards { get; set; } // PostSubsidyStandards
		/// <summary>岗位补贴金额(元)</summary>	
		[Description("岗位补贴金额(元)")]
        public decimal? PostSubsidyAmount { get; set; } // PostSubsidyAmount
		/// <summary>项目ID</summary>	
		[Description("项目ID")]
        public string ProjectID { get; set; } // ProjectID
		/// <summary>项目经理IDs</summary>	
		[Description("项目经理IDs")]
        public string ProjectManager { get; set; } // ProjectManager
		/// <summary>项目经理Names</summary>	
		[Description("项目经理Names")]
        public string ProjectManagerName { get; set; } // ProjectManagerName
		/// <summary>项目副经理IDs</summary>	
		[Description("项目副经理IDs")]
        public string DeputyProjectManager { get; set; } // DeputyProjectManager
		/// <summary>项目副经理Names</summary>	
		[Description("项目副经理Names")]
        public string DeputyProjectManagerName { get; set; } // DeputyProjectManagerName
		/// <summary>项目分摊的报销费用(元)</summary>	
		[Description("项目分摊的报销费用(元)")]
        public decimal? XMFTDBXFYY { get; set; } // XMFTDBXFYY

        // Foreign keys
		[JsonIgnore]
        public virtual S_EP_ReimbursementApply S_EP_ReimbursementApply { get; set; } //  S_EP_ReimbursementApplyID - FK_S_EP_ReimbursementApply_ProjectInfo_S_EP_ReimbursementApply
    }

	/// <summary>随行人员表</summary>	
	[Description("随行人员表")]
    public partial class S_EP_ReimbursementApply_SXRYB : Formula.BaseModel
    {
		/// <summary></summary>	
		[Description("")]
        public string ID { get; set; } // ID (Primary key)
		/// <summary></summary>	
		[Description("")]
        public string S_EP_ReimbursementApplyID { get; set; } // S_EP_ReimbursementApplyID
		/// <summary></summary>	
		[Description("")]
        public double? SortIndex { get; set; } // SortIndex
		/// <summary></summary>	
		[Description("")]
        public string IsReleased { get; set; } // IsReleased
		/// <summary>报销人</summary>	
		[Description("报销人")]
        public string ReimburseUser { get; set; } // ReimburseUser
		/// <summary>部门</summary>	
		[Description("部门")]
        public string ReimburseUserDept { get; set; } // ReimburseUserDept
		/// <summary>部门名称</summary>	
		[Description("部门名称")]
        public string ReimburseUserDeptName { get; set; } // ReimburseUserDeptName
		/// <summary>出差流水号</summary>	
		[Description("出差流水号")]
        public string TravelRecordCode { get; set; } // TravelRecordCode
		/// <summary>出差天数合计</summary>	
		[Description("出差天数合计")]
        public double? TotalTravelDays { get; set; } // TotalTravelDays
		/// <summary>交通费合计(元)</summary>	
		[Description("交通费合计(元)")]
        public decimal? TotalTrafficFee { get; set; } // TotalTrafficFee
		/// <summary>驻场补贴合计(元)</summary>	
		[Description("驻场补贴合计(元)")]
        public decimal? ZCBTHJY { get; set; } // ZCBTHJY
		/// <summary>有票住宿天数</summary>	
		[Description("有票住宿天数")]
        public int? YPZSTS { get; set; } // YPZSTS
		/// <summary>无票住宿天数</summary>	
		[Description("无票住宿天数")]
        public int? WPZSTS { get; set; } // WPZSTS
		/// <summary>住宿费合计(元)</summary>	
		[Description("住宿费合计(元)")]
        public decimal? ZSFHJY { get; set; } // ZSFHJY
		/// <summary>住宿费节约奖励合计(元)</summary>	
		[Description("住宿费节约奖励合计(元)")]
        public decimal? ZSFJYJLHJY { get; set; } // ZSFJYJLHJY
		/// <summary>伙食补贴合计(元)</summary>	
		[Description("伙食补贴合计(元)")]
        public decimal? HSBTHJY { get; set; } // HSBTHJY
		/// <summary>公杂费合计(元)</summary>	
		[Description("公杂费合计(元)")]
        public decimal? GZFHJY { get; set; } // GZFHJY
		/// <summary>培训费合计(元)</summary>	
		[Description("培训费合计(元)")]
        public decimal? PXFHJY { get; set; } // PXFHJY
		/// <summary>会议费合计(元)</summary>	
		[Description("会议费合计(元)")]
        public decimal? HYFHJY { get; set; } // HYFHJY
		/// <summary>其他费用合计(元)</summary>	
		[Description("其他费用合计(元)")]
        public decimal? QTFYHJY { get; set; } // QTFYHJY
		/// <summary>入关当天补贴(元)</summary>	
		[Description("入关当天补贴(元)")]
        public decimal? RGDTBTY { get; set; } // RGDTBTY
		/// <summary>费用合计(元)</summary>	
		[Description("费用合计(元)")]
        public decimal? TotalCostAmount { get; set; } // TotalCostAmount
		/// <summary>补贴合计(元)</summary>	
		[Description("补贴合计(元)")]
        public decimal? TotalSubsidyAmount { get; set; } // TotalSubsidyAmount
		/// <summary>总计(元)</summary>	
		[Description("总计(元)")]
        public decimal? TotalAmount { get; set; } // TotalAmount
		/// <summary>有票节约奖励(元)</summary>	
		[Description("有票节约奖励(元)")]
        public decimal? ZSFYPJYJLY { get; set; } // ZSFYPJYJLY
		/// <summary>无票节约奖励(元)</summary>	
		[Description("无票节约奖励(元)")]
        public decimal? ZSFWPJYJLY { get; set; } // ZSFWPJYJLY
		/// <summary>报销人名称</summary>	
		[Description("报销人名称")]
        public string ReimburseUserName { get; set; } // ReimburseUserName
		/// <summary>出差流水号名称</summary>	
		[Description("出差流水号名称")]
        public string TravelRecordCodeName { get; set; } // TravelRecordCodeName
		/// <summary>出差事件类型</summary>	
		[Description("出差事件类型")]
        public string TravelRecordType { get; set; } // TravelRecordType

        // Foreign keys
		[JsonIgnore]
        public virtual S_EP_ReimbursementApply S_EP_ReimbursementApply { get; set; } //  S_EP_ReimbursementApplyID - FK_S_EP_ReimbursementApply_SXRYB_S_EP_ReimbursementApply
    }

	/// <summary>出差备案信息</summary>	
	[Description("出差备案信息")]
    public partial class S_EP_ReimbursementApply_TravelRecordInfo : Formula.BaseModel
    {
		/// <summary></summary>	
		[Description("")]
        public string ID { get; set; } // ID (Primary key)
		/// <summary></summary>	
		[Description("")]
        public string S_EP_ReimbursementApplyID { get; set; } // S_EP_ReimbursementApplyID
		/// <summary></summary>	
		[Description("")]
        public double? SortIndex { get; set; } // SortIndex
		/// <summary></summary>	
		[Description("")]
        public string IsReleased { get; set; } // IsReleased
		/// <summary>出差流水号</summary>	
		[Description("出差流水号")]
        public string TravelRecordCode { get; set; } // TravelRecordCode
		/// <summary>出发地点</summary>	
		[Description("出发地点")]
        public string StartingPlace { get; set; } // StartingPlace
		/// <summary>出差地点</summary>	
		[Description("出差地点")]
        public string TravelLocation { get; set; } // TravelLocation
		/// <summary>出差天数</summary>	
		[Description("出差天数")]
        public int? TravelDays { get; set; } // TravelDays
		/// <summary>任务性质</summary>	
		[Description("任务性质")]
        public string TaskNature { get; set; } // TaskNature
		/// <summary>开始日期</summary>	
		[Description("开始日期")]
        public DateTime? StartDate { get; set; } // StartDate
		/// <summary>预计结束日期</summary>	
		[Description("预计结束日期")]
        public DateTime? PlanEndDate { get; set; } // PlanEndDate
		/// <summary>出差备案申请单ID</summary>	
		[Description("出差备案申请单ID")]
        public string TravelRecordID { get; set; } // TravelRecordID
		/// <summary>主出差备案申请单ID</summary>	
		[Description("主出差备案申请单ID")]
        public string ParentID { get; set; } // ParentID
		/// <summary>备案日期</summary>	
		[Description("备案日期")]
        public DateTime? RecordDate { get; set; } // RecordDate

        // Foreign keys
		[JsonIgnore]
        public virtual S_EP_ReimbursementApply S_EP_ReimbursementApply { get; set; } //  S_EP_ReimbursementApplyID - FK_S_EP_ReimbursementApply_TravelRecordInfo_S_EP_ReimbursementApply
    }

	/// <summary>增值税专用发票进项税额明细</summary>	
	[Description("增值税专用发票进项税额明细")]
    public partial class S_EP_ReimbursementApply_ZZSZYFPJXSEMX : Formula.BaseModel
    {
		/// <summary></summary>	
		[Description("")]
        public string ID { get; set; } // ID (Primary key)
		/// <summary></summary>	
		[Description("")]
        public string S_EP_ReimbursementApplyID { get; set; } // S_EP_ReimbursementApplyID
		/// <summary></summary>	
		[Description("")]
        public double? SortIndex { get; set; } // SortIndex
		/// <summary></summary>	
		[Description("")]
        public string IsReleased { get; set; } // IsReleased
		/// <summary>税额(元)</summary>	
		[Description("税额(元)")]
        public decimal? TaxAmount { get; set; } // TaxAmount

        // Foreign keys
		[JsonIgnore]
        public virtual S_EP_ReimbursementApply S_EP_ReimbursementApply { get; set; } //  S_EP_ReimbursementApplyID - FK_S_EP_ReimbursementApply_ZZSZYFPJXSEMX_S_EP_ReimbursementApply
    }

	/// <summary>文件资料库节点权限表</summary>	
	[Description("文件资料库节点权限表")]
    public partial class S_F_DocumentFileAuthority : Formula.BaseModel
    {
		/// <summary>主键ID</summary>	
		[Description("主键ID")]
        public string ID { get; set; } // ID (Primary key)
		/// <summary></summary>	
		[Description("")]
        public string DocumentInfoID { get; set; } // DocumentInfoID
		/// <summary>权限类型（ReadOnly,CanWrite,FullControl）</summary>	
		[Description("权限类型（ReadOnly,CanWrite,FullControl）")]
        public string AuthType { get; set; } // AuthType
		/// <summary>角色类型（User：用户；SysRole：系统角色；Org：组织；OrgRole：组织角色）</summary>	
		[Description("角色类型（User：用户；SysRole：系统角色；Org：组织；OrgRole：组织角色）")]
        public string RoleType { get; set; } // RoleType
		/// <summary>角色ID（对应用户ID，角色ID，部门ID）</summary>	
		[Description("角色ID（对应用户ID，角色ID，部门ID）")]
        public string RoleCode { get; set; } // RoleCode
		/// <summary></summary>	
		[Description("")]
        public int? IsParentAuth { get; set; } // IsParentAuth

        // Foreign keys
		[JsonIgnore]
        public virtual S_F_DocumentInfo S_F_DocumentInfo { get; set; } //  DocumentInfoID - FK_S_F_DocumentFileAuthority_S_F_DocumentInfo
    }

	/// <summary>文件资料柜节点表</summary>	
	[Description("文件资料柜节点表")]
    public partial class S_F_DocumentInfo : Formula.BaseModel
    {
		/// <summary>主键ID</summary>	
		[Description("主键ID")]
        public string ID { get; set; } // ID (Primary key)
		/// <summary>父节点ID</summary>	
		[Description("父节点ID")]
        public string ParentID { get; set; } // ParentID
		/// <summary>全路径ID</summary>	
		[Description("全路径ID")]
        public string FullPathID { get; set; } // FullPathID
		/// <summary>节点名称</summary>	
		[Description("节点名称")]
        public string Name { get; set; } // Name
		/// <summary>节点编号</summary>	
		[Description("节点编号")]
        public string Code { get; set; } // Code
		/// <summary>排序号</summary>	
		[Description("排序号")]
        public double? SortIndex { get; set; } // SortIndex
		/// <summary>节点层级</summary>	
		[Description("节点层级")]
        public int? Level { get; set; } // Level
		/// <summary>创建人ID</summary>	
		[Description("创建人ID")]
        public string CreateUserID { get; set; } // CreateUserID
		/// <summary>创建人</summary>	
		[Description("创建人")]
        public string CreateUserName { get; set; } // CreateUserName
		/// <summary>创建时间</summary>	
		[Description("创建时间")]
        public DateTime? CreateDate { get; set; } // CreateDate
		/// <summary>修改人ID</summary>	
		[Description("修改人ID")]
        public string ModifyUserID { get; set; } // ModifyUserID
		/// <summary>修改人</summary>	
		[Description("修改人")]
        public string ModifyUserName { get; set; } // ModifyUserName
		/// <summary>修改日期</summary>	
		[Description("修改日期")]
        public DateTime? ModifyDate { get; set; } // ModifyDate
		/// <summary>是否继承上级节点（0：不是；1：是）</summary>	
		[Description("是否继承上级节点（0：不是；1：是）")]
        public int? IsInherit { get; set; } // IsInherit
		/// <summary>作废标识（T：正常；F：作废）</summary>	
		[Description("作废标识（T：正常；F：作废）")]
        public string IsValid { get; set; } // IsValid
		/// <summary>删除标识（0：正常；1：删除）</summary>	
		[Description("删除标识（0：正常；1：删除）")]
        public int? IsDeleted { get; set; } // IsDeleted

        // Reverse navigation
		[JsonIgnore]
        public virtual ICollection<S_F_DocumentFileAuthority> S_F_DocumentFileAuthority { get { onS_F_DocumentFileAuthorityGetting(); return _S_F_DocumentFileAuthority;} }
		private ICollection<S_F_DocumentFileAuthority> _S_F_DocumentFileAuthority;
		partial void onS_F_DocumentFileAuthorityGetting();

		[JsonIgnore]
        public virtual ICollection<S_F_FileInfo> S_F_FileInfo { get { onS_F_FileInfoGetting(); return _S_F_FileInfo;} }
		private ICollection<S_F_FileInfo> _S_F_FileInfo;
		partial void onS_F_FileInfoGetting();


        public S_F_DocumentInfo()
        {
            _S_F_DocumentFileAuthority = new List<S_F_DocumentFileAuthority>();
            _S_F_FileInfo = new List<S_F_FileInfo>();
        }
    }

	/// <summary>资料柜文件信息</summary>	
	[Description("资料柜文件信息")]
    public partial class S_F_FileInfo : Formula.BaseModel
    {
		/// <summary>主键ID</summary>	
		[Description("主键ID")]
        public string ID { get; set; } // ID (Primary key)
		/// <summary>文件资料柜对应ID</summary>	
		[Description("文件资料柜对应ID")]
        public string DocumentInfoID { get; set; } // DocumentInfoID
		/// <summary>文件名称</summary>	
		[Description("文件名称")]
        public string FileName { get; set; } // FileName
		/// <summary>文件编号</summary>	
		[Description("文件编号")]
        public string FileCode { get; set; } // FileCode
		/// <summary>文件扩展名称</summary>	
		[Description("文件扩展名称")]
        public string ExtName { get; set; } // ExtName
		/// <summary>文件大小</summary>	
		[Description("文件大小")]
        public int? FileSize { get; set; } // FileSize
		/// <summary>其它</summary>	
		[Description("其它")]
        public string Attachment { get; set; } // Attachment
		/// <summary>上传文件</summary>	
		[Description("上传文件")]
        public string SourceFileID { get; set; } // SourceFileID
		/// <summary>创建人ID</summary>	
		[Description("创建人ID")]
        public string CreateUserID { get; set; } // CreateUserID
		/// <summary>创建人</summary>	
		[Description("创建人")]
        public string CreateUserName { get; set; } // CreateUserName
		/// <summary>创建时间</summary>	
		[Description("创建时间")]
        public DateTime? CreateDate { get; set; } // CreateDate
		/// <summary>修改人ID</summary>	
		[Description("修改人ID")]
        public string ModifyUserID { get; set; } // ModifyUserID
		/// <summary>修改人</summary>	
		[Description("修改人")]
        public string ModifyUserName { get; set; } // ModifyUserName
		/// <summary>修改日期</summary>	
		[Description("修改日期")]
        public DateTime? ModifyDate { get; set; } // ModifyDate
		/// <summary>部门ID</summary>	
		[Description("部门ID")]
        public string OrgID { get; set; } // OrgID
		/// <summary>部门名称</summary>	
		[Description("部门名称")]
        public string OrgName { get; set; } // OrgName
		/// <summary>备注</summary>	
		[Description("备注")]
        public string Remark { get; set; } // Remark
		/// <summary>是否作废</summary>	
		[Description("是否作废")]
        public string IsValid { get; set; } // IsValid
		/// <summary>是否删除</summary>	
		[Description("是否删除")]
        public int? IsDeleted { get; set; } // IsDeleted
		/// <summary>上传人</summary>	
		[Description("上传人")]
        public string SubmitUser { get; set; } // SubmitUser
		/// <summary>上传人名称</summary>	
		[Description("上传人名称")]
        public string SubmitUserName { get; set; } // SubmitUserName
		/// <summary>所属部门</summary>	
		[Description("所属部门")]
        public string SubmitDept { get; set; } // SubmitDept
		/// <summary>所属部门名称</summary>	
		[Description("所属部门名称")]
        public string SubmitDeptName { get; set; } // SubmitDeptName
		/// <summary>上传时间</summary>	
		[Description("上传时间")]
        public DateTime? SubmitDate { get; set; } // SubmitDate

        // Foreign keys
		[JsonIgnore]
        public virtual S_F_DocumentInfo S_F_DocumentInfo { get; set; } //  DocumentInfoID - FK_S_F_FileInfo_S_F_DocumentInfo
    }

	/// <summary>固定资产采购项目信息</summary>	
	[Description("固定资产采购项目信息")]
    public partial class S_FA_ProjectInfo : Formula.BaseModel
    {
		/// <summary></summary>	
		[Description("")]
        public string ID { get; set; } // ID (Primary key)
		/// <summary></summary>	
		[Description("")]
        public DateTime? CreateDate { get; set; } // CreateDate
		/// <summary></summary>	
		[Description("")]
        public DateTime? ModifyDate { get; set; } // ModifyDate
		/// <summary></summary>	
		[Description("")]
        public string CreateUserID { get; set; } // CreateUserID
		/// <summary></summary>	
		[Description("")]
        public string CreateUser { get; set; } // CreateUser
		/// <summary></summary>	
		[Description("")]
        public string ModifyUserID { get; set; } // ModifyUserID
		/// <summary></summary>	
		[Description("")]
        public string ModifyUser { get; set; } // ModifyUser
		/// <summary></summary>	
		[Description("")]
        public string OrgID { get; set; } // OrgID
		/// <summary></summary>	
		[Description("")]
        public string CompanyID { get; set; } // CompanyID
		/// <summary></summary>	
		[Description("")]
        public string FlowPhase { get; set; } // FlowPhase
		/// <summary></summary>	
		[Description("")]
        public string FlowInfo { get; set; } // FlowInfo
		/// <summary></summary>	
		[Description("")]
        public string StepName { get; set; } // StepName
		/// <summary>项目名称</summary>	
		[Description("项目名称")]
        public string ProjectName { get; set; } // ProjectName
		/// <summary>项目类型</summary>	
		[Description("项目类型")]
        public string ProjectType { get; set; } // ProjectType
		/// <summary>项目编号</summary>	
		[Description("项目编号")]
        public string ProjectNumber { get; set; } // ProjectNumber
		/// <summary>申请原因</summary>	
		[Description("申请原因")]
        public string ApplyReason { get; set; } // ApplyReason
		/// <summary>方案简介</summary>	
		[Description("方案简介")]
        public string ProjectDesc { get; set; } // ProjectDesc
		/// <summary>预算</summary>	
		[Description("预算")]
        public decimal? Budget { get; set; } // Budget
		/// <summary>开始时间</summary>	
		[Description("开始时间")]
        public DateTime? StartDate { get; set; } // StartDate
		/// <summary>结束时间</summary>	
		[Description("结束时间")]
        public DateTime? EndDate { get; set; } // EndDate
		/// <summary>业务主管</summary>	
		[Description("业务主管")]
        public string BusinessSupervisor { get; set; } // BusinessSupervisor
		/// <summary>业务主管名称</summary>	
		[Description("业务主管名称")]
        public string BusinessSupervisorName { get; set; } // BusinessSupervisorName
		/// <summary>项目状态</summary>	
		[Description("项目状态")]
        public string ProjectStatus { get; set; } // ProjectStatus
		/// <summary>立项年度</summary>	
		[Description("立项年度")]
        public string ApplyYear { get; set; } // ApplyYear
		/// <summary>填报人</summary>	
		[Description("填报人")]
        public string Applicant { get; set; } // Applicant
		/// <summary>填报时间</summary>	
		[Description("填报时间")]
        public DateTime? ApplyDate { get; set; } // ApplyDate
		/// <summary>附件</summary>	
		[Description("附件")]
        public string Attachments { get; set; } // Attachments
		/// <summary>表单ID</summary>	
		[Description("表单ID")]
        public string FormID { get; set; } // FormID
    }

	/// <summary></summary>	
	[Description("")]
    public partial class S_FC_CostInfo : Formula.BaseModel
    {
		/// <summary></summary>	
		[Description("")]
        public string ID { get; set; } // ID (Primary key)
		/// <summary></summary>	
		[Description("")]
        public string SubjectName { get; set; } // SubjectName
		/// <summary></summary>	
		[Description("")]
        public string SubjectCode { get; set; } // SubjectCode
		/// <summary></summary>	
		[Description("")]
        public string ProjectID { get; set; } // ProjectID
		/// <summary></summary>	
		[Description("")]
        public string ProjectName { get; set; } // ProjectName
		/// <summary></summary>	
		[Description("")]
        public string ProjectCode { get; set; } // ProjectCode
		/// <summary></summary>	
		[Description("")]
        public string CostType { get; set; } // CostType
		/// <summary></summary>	
		[Description("")]
        public string ProjectType { get; set; } // ProjectType
		/// <summary></summary>	
		[Description("")]
        public decimal? UnitPrice { get; set; } // UnitPrice
		/// <summary></summary>	
		[Description("")]
        public decimal? Quantity { get; set; } // Quantity
		/// <summary></summary>	
		[Description("")]
        public decimal CostValue { get; set; } // CostValue
		/// <summary></summary>	
		[Description("")]
        public string CostUserID { get; set; } // CostUserID
		/// <summary></summary>	
		[Description("")]
        public string CostUserName { get; set; } // CostUserName
		/// <summary></summary>	
		[Description("")]
        public string CostUserDeptID { get; set; } // CostUserDeptID
		/// <summary></summary>	
		[Description("")]
        public string CostUserDeptName { get; set; } // CostUserDeptName
		/// <summary></summary>	
		[Description("")]
        public string ProjectDeptID { get; set; } // ProjectDeptID
		/// <summary></summary>	
		[Description("")]
        public string ProjectDeptName { get; set; } // ProjectDeptName
		/// <summary></summary>	
		[Description("")]
        public string ProjectChargerUserID { get; set; } // ProjectChargerUserID
		/// <summary></summary>	
		[Description("")]
        public string ProjectChargerUserName { get; set; } // ProjectChargerUserName
		/// <summary></summary>	
		[Description("")]
        public string ProjectClass { get; set; } // ProjectClass
		/// <summary></summary>	
		[Description("")]
        public DateTime CostDate { get; set; } // CostDate
		/// <summary></summary>	
		[Description("")]
        public int BelongYear { get; set; } // BelongYear
		/// <summary></summary>	
		[Description("")]
        public int BelongMonth { get; set; } // BelongMonth
		/// <summary></summary>	
		[Description("")]
        public int BelongQuarter { get; set; } // BelongQuarter
		/// <summary></summary>	
		[Description("")]
        public string RelateID { get; set; } // RelateID
		/// <summary></summary>	
		[Description("")]
        public string FormID { get; set; } // FormID
		/// <summary></summary>	
		[Description("")]
        public string Extend1 { get; set; } // Extend1
		/// <summary></summary>	
		[Description("")]
        public string Extend2 { get; set; } // Extend2
		/// <summary></summary>	
		[Description("")]
        public string Extend3 { get; set; } // Extend3
		/// <summary></summary>	
		[Description("")]
        public string Extend4 { get; set; } // Extend4
		/// <summary></summary>	
		[Description("")]
        public string Extend5 { get; set; } // Extend5
		/// <summary></summary>	
		[Description("")]
        public string Extend6 { get; set; } // Extend6
		/// <summary></summary>	
		[Description("")]
        public string Extend7 { get; set; } // Extend7
		/// <summary></summary>	
		[Description("")]
        public string Extend8 { get; set; } // Extend8
    }

	/// <summary>还款</summary>	
	[Description("还款")]
    public partial class S_FC_UserLoanAccount : Formula.BaseModel
    {
		/// <summary></summary>	
		[Description("")]
        public string ID { get; set; } // ID (Primary key)
		/// <summary>姓名ID</summary>	
		[Description("姓名ID")]
        public string UserID { get; set; } // UserID
		/// <summary>姓名</summary>	
		[Description("姓名")]
        public string UserName { get; set; } // UserName
		/// <summary>所属部门ID</summary>	
		[Description("所属部门ID")]
        public string UserDeptID { get; set; } // UserDeptID
		/// <summary>所属部门</summary>	
		[Description("所属部门")]
        public string UserDeptName { get; set; } // UserDeptName
		/// <summary>款项类型</summary>	
		[Description("款项类型")]
        public string AccountType { get; set; } // AccountType
		/// <summary>款项金额</summary>	
		[Description("款项金额")]
        public decimal AccountValue { get; set; } // AccountValue
		/// <summary></summary>	
		[Description("")]
        public string RelateFormID { get; set; } // RelateFormID
		/// <summary></summary>	
		[Description("")]
        public DateTime? CreateDate { get; set; } // CreateDate
		/// <summary>款项金额(元)</summary>	
		[Description("款项金额(元)")]
        public double? AccountValueABS { get; set; } // AccountValueABS
    }

	/// <summary>会议室基本信息</summary>	
	[Description("会议室基本信息")]
    public partial class S_M_ConferenceRoom : Formula.BaseModel
    {
		/// <summary></summary>	
		[Description("")]
        public string ID { get; set; } // ID (Primary key)
		/// <summary></summary>	
		[Description("")]
        public DateTime? CreateDate { get; set; } // CreateDate
		/// <summary></summary>	
		[Description("")]
        public DateTime? ModifyDate { get; set; } // ModifyDate
		/// <summary></summary>	
		[Description("")]
        public string CreateUserID { get; set; } // CreateUserID
		/// <summary></summary>	
		[Description("")]
        public string CreateUser { get; set; } // CreateUser
		/// <summary></summary>	
		[Description("")]
        public string ModifyUserID { get; set; } // ModifyUserID
		/// <summary></summary>	
		[Description("")]
        public string ModifyUser { get; set; } // ModifyUser
		/// <summary></summary>	
		[Description("")]
        public string OrgID { get; set; } // OrgID
		/// <summary></summary>	
		[Description("")]
        public string CompanyID { get; set; } // CompanyID
		/// <summary></summary>	
		[Description("")]
        public string FlowPhase { get; set; } // FlowPhase
		/// <summary></summary>	
		[Description("")]
        public string FlowInfo { get; set; } // FlowInfo
		/// <summary></summary>	
		[Description("")]
        public string StepName { get; set; } // StepName
		/// <summary>会议室编号</summary>	
		[Description("会议室编号")]
        public string RoomName { get; set; } // RoomName
		/// <summary>联系人</summary>	
		[Description("联系人")]
        public string LinkName { get; set; } // LinkName
		/// <summary>最大使用人数</summary>	
		[Description("最大使用人数")]
        public int? Capacity { get; set; } // Capacity
		/// <summary>管理部门</summary>	
		[Description("管理部门")]
        public string ManageDeptID { get; set; } // ManageDeptID
		/// <summary>管理部门名称</summary>	
		[Description("管理部门名称")]
        public string ManageDeptIDName { get; set; } // ManageDeptIDName
		/// <summary>会议室地址</summary>	
		[Description("会议室地址")]
        public string RoomAddress { get; set; } // RoomAddress
		/// <summary>设施情况</summary>	
		[Description("设施情况")]
        public string Configuredevice { get; set; } // Configuredevice
		/// <summary>联系人名称</summary>	
		[Description("联系人名称")]
        public string LinkNameName { get; set; } // LinkNameName
    }

	/// <summary>问卷调查问题选项维护</summary>	
	[Description("问卷调查问题选项维护")]
    public partial class S_Survey_Option : Formula.BaseModel
    {
		/// <summary>主键ID</summary>	
		[Description("主键ID")]
        public string ID { get; set; } // ID (Primary key)
		/// <summary>问题ID</summary>	
		[Description("问题ID")]
        public string QuestionID { get; set; } // QuestionID
		/// <summary>选项名称</summary>	
		[Description("选项名称")]
        public string OptionName { get; set; } // OptionName
		/// <summary>投票总数</summary>	
		[Description("投票总数")]
        public int? VoteNum { get; set; } // VoteNum
		/// <summary>创建人ID</summary>	
		[Description("创建人ID")]
        public string CreateUserID { get; set; } // CreateUserID
		/// <summary>创建人</summary>	
		[Description("创建人")]
        public string CreateUserName { get; set; } // CreateUserName
		/// <summary>创建时间</summary>	
		[Description("创建时间")]
        public DateTime? CreateDate { get; set; } // CreateDate

        // Reverse navigation
		[JsonIgnore]
        public virtual ICollection<S_Survey_Vote> S_Survey_Vote { get { onS_Survey_VoteGetting(); return _S_Survey_Vote;} }
		private ICollection<S_Survey_Vote> _S_Survey_Vote;
		partial void onS_Survey_VoteGetting();


        // Foreign keys
		[JsonIgnore]
        public virtual S_Survey_Question S_Survey_Question { get; set; } //  QuestionID - FK_S_Survey_Option_S_Survey_Question

        public S_Survey_Option()
        {
            _S_Survey_Vote = new List<S_Survey_Vote>();
        }
    }

	/// <summary>问卷调查问题维护</summary>	
	[Description("问卷调查问题维护")]
    public partial class S_Survey_Question : Formula.BaseModel
    {
		/// <summary>主键ID</summary>	
		[Description("主键ID")]
        public string ID { get; set; } // ID (Primary key)
		/// <summary>调查主题ID</summary>	
		[Description("调查主题ID")]
        public string SurveyID { get; set; } // SurveyID
		/// <summary>调查问题标题</summary>	
		[Description("调查问题标题")]
        public string QuestionName { get; set; } // QuestionName
		/// <summary>问题类型(单选 ，多选 ，文本)</summary>	
		[Description("问题类型(单选 ，多选 ，文本)")]
        public string QuestionType { get; set; } // QuestionType
		/// <summary>是否必须回复</summary>	
		[Description("是否必须回复")]
        public string IsMustAnswer { get; set; } // IsMustAnswer
		/// <summary>是否需要评论</summary>	
		[Description("是否需要评论")]
        public string IsComment { get; set; } // IsComment
		/// <summary>创建人ID</summary>	
		[Description("创建人ID")]
        public string CreateUserID { get; set; } // CreateUserID
		/// <summary>创建人</summary>	
		[Description("创建人")]
        public string CreateUserName { get; set; } // CreateUserName
		/// <summary>创建日期</summary>	
		[Description("创建日期")]
        public DateTime? CreateDate { get; set; } // CreateDate

        // Reverse navigation
		[JsonIgnore]
        public virtual ICollection<S_Survey_Option> S_Survey_Option { get { onS_Survey_OptionGetting(); return _S_Survey_Option;} }
		private ICollection<S_Survey_Option> _S_Survey_Option;
		partial void onS_Survey_OptionGetting();

		[JsonIgnore]
        public virtual ICollection<S_Survey_QuestionComment> S_Survey_QuestionComment { get { onS_Survey_QuestionCommentGetting(); return _S_Survey_QuestionComment;} }
		private ICollection<S_Survey_QuestionComment> _S_Survey_QuestionComment;
		partial void onS_Survey_QuestionCommentGetting();

		[JsonIgnore]
        public virtual ICollection<S_Survey_QuestionVote> S_Survey_QuestionVote { get { onS_Survey_QuestionVoteGetting(); return _S_Survey_QuestionVote;} }
		private ICollection<S_Survey_QuestionVote> _S_Survey_QuestionVote;
		partial void onS_Survey_QuestionVoteGetting();


        // Foreign keys
		[JsonIgnore]
        public virtual S_Survey_Subject S_Survey_Subject { get; set; } //  SurveyID - FK_S_Survey_Question_S_Survey_Subject

        public S_Survey_Question()
        {
            _S_Survey_Option = new List<S_Survey_Option>();
            _S_Survey_QuestionComment = new List<S_Survey_QuestionComment>();
            _S_Survey_QuestionVote = new List<S_Survey_QuestionVote>();
        }
    }

	/// <summary>用户问卷调查问题评论表</summary>	
	[Description("用户问卷调查问题评论表")]
    public partial class S_Survey_QuestionComment : Formula.BaseModel
    {
		/// <summary>主键ID</summary>	
		[Description("主键ID")]
        public string ID { get; set; } // ID (Primary key)
		/// <summary>问题ID</summary>	
		[Description("问题ID")]
        public string QuestionID { get; set; } // QuestionID
		/// <summary>投票人ID</summary>	
		[Description("投票人ID")]
        public string UserID { get; set; } // UserID
		/// <summary>投票人</summary>	
		[Description("投票人")]
        public string UserName { get; set; } // UserName
		/// <summary>评论</summary>	
		[Description("评论")]
        public string Comment { get; set; } // Comment
		/// <summary>投票时间</summary>	
		[Description("投票时间")]
        public DateTime? VoteDate { get; set; } // VoteDate

        // Foreign keys
		[JsonIgnore]
        public virtual S_Survey_Question S_Survey_Question { get; set; } //  QuestionID - FK_S_Survey_QuestionComment_S_Survey_Question
    }

	/// <summary>问卷调查问题文本描述表</summary>	
	[Description("问卷调查问题文本描述表")]
    public partial class S_Survey_QuestionVote : Formula.BaseModel
    {
		/// <summary>主键ID</summary>	
		[Description("主键ID")]
        public string ID { get; set; } // ID (Primary key)
		/// <summary>问题ID</summary>	
		[Description("问题ID")]
        public string QuestionID { get; set; } // QuestionID
		/// <summary>投票人ID</summary>	
		[Description("投票人ID")]
        public string UserID { get; set; } // UserID
		/// <summary>投票人</summary>	
		[Description("投票人")]
        public string UserName { get; set; } // UserName
		/// <summary>问题信息</summary>	
		[Description("问题信息")]
        public string QuestionMsg { get; set; } // QuestionMsg
		/// <summary>投票时间</summary>	
		[Description("投票时间")]
        public DateTime? VoteDate { get; set; } // VoteDate

        // Foreign keys
		[JsonIgnore]
        public virtual S_Survey_Question S_Survey_Question { get; set; } //  QuestionID - FK_S_Survey_QuestionVote_S_Survey_Question
    }

	/// <summary>问卷调查配置</summary>	
	[Description("问卷调查配置")]
    public partial class S_Survey_Subject : Formula.BaseModel
    {
		/// <summary>主键ID</summary>	
		[Description("主键ID")]
        public string ID { get; set; } // ID (Primary key)
		/// <summary>调查主题</summary>	
		[Description("调查主题")]
        public string SurveyName { get; set; } // SurveyName
		/// <summary>问题数量</summary>	
		[Description("问题数量")]
        public int? QuestionNum { get; set; } // QuestionNum
		/// <summary>是否当前调查主题</summary>	
		[Description("是否当前调查主题")]
        public string IsPeriod { get; set; } // IsPeriod
		/// <summary>调查开始时间</summary>	
		[Description("调查开始时间")]
        public DateTime? SurveyStartDate { get; set; } // SurveyStartDate
		/// <summary>调查结束时间</summary>	
		[Description("调查结束时间")]
        public DateTime? SurveyEndDate { get; set; } // SurveyEndDate
		/// <summary>是否记名</summary>	
		[Description("是否记名")]
        public string IsMemoryUser { get; set; } // IsMemoryUser
		/// <summary>查询人员ID</summary>	
		[Description("查询人员ID")]
        public string QueryUserIDs { get; set; } // QueryUserIDs
		/// <summary>查询人员</summary>	
		[Description("查询人员")]
        public string QueryUserNames { get; set; } // QueryUserNames
		/// <summary>统计人员ID</summary>	
		[Description("统计人员ID")]
        public string StatisticsUserIDs { get; set; } // StatisticsUserIDs
		/// <summary>统计 人员 </summary>	
		[Description("统计 人员 ")]
        public string StatisticsUserNames { get; set; } // StatisticsUserNames
		/// <summary>相关附件</summary>	
		[Description("相关附件")]
        public string SurveyAttchment { get; set; } // SurveyAttchment
		/// <summary>备注 </summary>	
		[Description("备注 ")]
        public string Remark { get; set; } // Remark
		/// <summary>发布人ID</summary>	
		[Description("发布人ID")]
        public string IssueID { get; set; } // IssueID
		/// <summary>发布人姓名</summary>	
		[Description("发布人姓名")]
        public string IssueName { get; set; } // IssueName
		/// <summary>发布时间</summary>	
		[Description("发布时间")]
        public DateTime? IssueDate { get; set; } // IssueDate
		/// <summary>创建人ID</summary>	
		[Description("创建人ID")]
        public string CreateUserID { get; set; } // CreateUserID
		/// <summary>创建人</summary>	
		[Description("创建人")]
        public string CreateUserName { get; set; } // CreateUserName
		/// <summary>创建日期</summary>	
		[Description("创建日期")]
        public DateTime? CreateDate { get; set; } // CreateDate
		/// <summary>是否开启投票</summary>	
		[Description("是否开启投票")]
        public string State { get; set; } // State
		/// <summary></summary>	
		[Description("")]
        public string QueryDeptIDs { get; set; } // QueryDeptIDs
		/// <summary></summary>	
		[Description("")]
        public string QueryDeptNames { get; set; } // QueryDeptNames

        // Reverse navigation
		[JsonIgnore]
        public virtual ICollection<S_Survey_Question> S_Survey_Question { get { onS_Survey_QuestionGetting(); return _S_Survey_Question;} }
		private ICollection<S_Survey_Question> _S_Survey_Question;
		partial void onS_Survey_QuestionGetting();


        public S_Survey_Subject()
        {
            _S_Survey_Question = new List<S_Survey_Question>();
        }
    }

	/// <summary>投票表</summary>	
	[Description("投票表")]
    public partial class S_Survey_Vote : Formula.BaseModel
    {
		/// <summary>主键ID</summary>	
		[Description("主键ID")]
        public string ID { get; set; } // ID (Primary key)
		/// <summary>问题选项ID</summary>	
		[Description("问题选项ID")]
        public string OptionID { get; set; } // OptionID
		/// <summary>投票人ID</summary>	
		[Description("投票人ID")]
        public string UserID { get; set; } // UserID
		/// <summary>投票人</summary>	
		[Description("投票人")]
        public string UserName { get; set; } // UserName
		/// <summary>投票时间</summary>	
		[Description("投票时间")]
        public DateTime? VoteDate { get; set; } // VoteDate

        // Foreign keys
		[JsonIgnore]
        public virtual S_Survey_Option S_Survey_Option { get; set; } //  OptionID - FK_S_Survey_Vote_S_Survey_Option
    }

	/// <summary>请休假流程</summary>	
	[Description("请休假流程")]
    public partial class T_AskingLeave : Formula.BaseModel
    {
		/// <summary></summary>	
		[Description("")]
        public string ID { get; set; } // ID (Primary key)
		/// <summary></summary>	
		[Description("")]
        public DateTime? CreateDate { get; set; } // CreateDate
		/// <summary></summary>	
		[Description("")]
        public DateTime? ModifyDate { get; set; } // ModifyDate
		/// <summary></summary>	
		[Description("")]
        public string CreateUserID { get; set; } // CreateUserID
		/// <summary></summary>	
		[Description("")]
        public string CreateUser { get; set; } // CreateUser
		/// <summary></summary>	
		[Description("")]
        public string ModifyUserID { get; set; } // ModifyUserID
		/// <summary></summary>	
		[Description("")]
        public string ModifyUser { get; set; } // ModifyUser
		/// <summary></summary>	
		[Description("")]
        public string OrgID { get; set; } // OrgID
		/// <summary></summary>	
		[Description("")]
        public string CompanyID { get; set; } // CompanyID
		/// <summary></summary>	
		[Description("")]
        public string FlowPhase { get; set; } // FlowPhase
		/// <summary></summary>	
		[Description("")]
        public string FlowInfo { get; set; } // FlowInfo
		/// <summary></summary>	
		[Description("")]
        public string StepName { get; set; } // StepName
		/// <summary>流程编号</summary>	
		[Description("流程编号")]
        public string SerialNumber { get; set; } // SerialNumber
		/// <summary>申请人</summary>	
		[Description("申请人")]
        public string ApplyUser { get; set; } // ApplyUser
		/// <summary>申请人名称</summary>	
		[Description("申请人名称")]
        public string ApplyUserName { get; set; } // ApplyUserName
		/// <summary>申请时间</summary>	
		[Description("申请时间")]
        public DateTime? ApplyDate { get; set; } // ApplyDate
		/// <summary>请假信息</summary>	
		[Description("请假信息")]
        public string ApplyDuration { get; set; } // ApplyDuration
		/// <summary>附件</summary>	
		[Description("附件")]
        public string ApplyFile { get; set; } // ApplyFile
		/// <summary>审批意见</summary>	
		[Description("审批意见")]
        public string ApprovalList { get; set; } // ApprovalList
		/// <summary>申请时长</summary>	
		[Description("申请时长")]
        public decimal? ApplyToyalTime { get; set; } // ApplyToyalTime

        // Reverse navigation
		[JsonIgnore]
        public virtual ICollection<T_AskingLeave_ApplyDuration> T_AskingLeave_ApplyDuration { get { onT_AskingLeave_ApplyDurationGetting(); return _T_AskingLeave_ApplyDuration;} }
		private ICollection<T_AskingLeave_ApplyDuration> _T_AskingLeave_ApplyDuration;
		partial void onT_AskingLeave_ApplyDurationGetting();


        public T_AskingLeave()
        {
            _T_AskingLeave_ApplyDuration = new List<T_AskingLeave_ApplyDuration>();
        }
    }

	/// <summary>请假信息</summary>	
	[Description("请假信息")]
    public partial class T_AskingLeave_ApplyDuration : Formula.BaseModel
    {
		/// <summary></summary>	
		[Description("")]
        public string ID { get; set; } // ID (Primary key)
		/// <summary></summary>	
		[Description("")]
        public string T_AskingLeaveID { get; set; } // T_AskingLeaveID
		/// <summary></summary>	
		[Description("")]
        public double? SortIndex { get; set; } // SortIndex
		/// <summary></summary>	
		[Description("")]
        public string IsReleased { get; set; } // IsReleased
		/// <summary>开始日期</summary>	
		[Description("开始日期")]
        public DateTime? StartDate { get; set; } // StartDate
		/// <summary>结束日期</summary>	
		[Description("结束日期")]
        public DateTime? EndDate { get; set; } // EndDate
		/// <summary>请假类型</summary>	
		[Description("请假类型")]
        public string ApplyType { get; set; } // ApplyType
		/// <summary>可用时长</summary>	
		[Description("可用时长")]
        public string RemainTime { get; set; } // RemainTime
		/// <summary>请假时长</summary>	
		[Description("请假时长")]
        public string ApplyTime { get; set; } // ApplyTime

        // Foreign keys
		[JsonIgnore]
        public virtual T_AskingLeave T_AskingLeave { get; set; } //  T_AskingLeaveID - FK_T_AskingLeave_ApplyDuration_T_AskingLeave
    }

	/// <summary>审计委托书</summary>	
	[Description("审计委托书")]
    public partial class T_Audit_Mandate : Formula.BaseModel
    {
		/// <summary></summary>	
		[Description("")]
        public string ID { get; set; } // ID (Primary key)
		/// <summary></summary>	
		[Description("")]
        public DateTime? CreateDate { get; set; } // CreateDate
		/// <summary></summary>	
		[Description("")]
        public DateTime? ModifyDate { get; set; } // ModifyDate
		/// <summary></summary>	
		[Description("")]
        public string CreateUserID { get; set; } // CreateUserID
		/// <summary></summary>	
		[Description("")]
        public string CreateUser { get; set; } // CreateUser
		/// <summary></summary>	
		[Description("")]
        public string ModifyUserID { get; set; } // ModifyUserID
		/// <summary></summary>	
		[Description("")]
        public string ModifyUser { get; set; } // ModifyUser
		/// <summary></summary>	
		[Description("")]
        public string OrgID { get; set; } // OrgID
		/// <summary></summary>	
		[Description("")]
        public string CompanyID { get; set; } // CompanyID
		/// <summary></summary>	
		[Description("")]
        public string FlowPhase { get; set; } // FlowPhase
		/// <summary></summary>	
		[Description("")]
        public string FlowInfo { get; set; } // FlowInfo
		/// <summary></summary>	
		[Description("")]
        public string StepName { get; set; } // StepName
		/// <summary>审计类型</summary>	
		[Description("审计类型")]
        public string TypesOfAudit { get; set; } // TypesOfAudit
		/// <summary>涉及部门</summary>	
		[Description("涉及部门")]
        public string RelatedDepartments { get; set; } // RelatedDepartments
		/// <summary>涉及部门名称</summary>	
		[Description("涉及部门名称")]
        public string RelatedDepartmentsName { get; set; } // RelatedDepartmentsName
		/// <summary>被审计单位</summary>	
		[Description("被审计单位")]
        public string Auditee { get; set; } // Auditee
		/// <summary>被审计单位名称</summary>	
		[Description("被审计单位名称")]
        public string AuditeeName { get; set; } // AuditeeName
		/// <summary>被审计人</summary>	
		[Description("被审计人")]
        public string Auditor { get; set; } // Auditor
		/// <summary>被审计人名称</summary>	
		[Description("被审计人名称")]
        public string AuditorName { get; set; } // AuditorName
		/// <summary>审计开始时间</summary>	
		[Description("审计开始时间")]
        public DateTime? AuditStartTime { get; set; } // AuditStartTime
		/// <summary>审计结束时间</summary>	
		[Description("审计结束时间")]
        public DateTime? AuditEndTime { get; set; } // AuditEndTime
		/// <summary>审计事项</summary>	
		[Description("审计事项")]
        public string AuditMatters { get; set; } // AuditMatters
		/// <summary>附件</summary>	
		[Description("附件")]
        public string Enclosure { get; set; } // Enclosure
		/// <summary>发起人签字</summary>	
		[Description("发起人签字")]
        public string AuthorizedDepartmentSignForApproval { get; set; } // AuthorizedDepartmentSignForApproval
		/// <summary>公司领导签批</summary>	
		[Description("公司领导签批")]
        public string SignedAndApprovedByCompanyLeaders { get; set; } // SignedAndApprovedByCompanyLeaders
		/// <summary>法务审计部领导意见</summary>	
		[Description("法务审计部领导意见")]
        public string OpinionsOfLeadersOfLegalAuditDepartment { get; set; } // OpinionsOfLeadersOfLegalAuditDepartment
		/// <summary>申请人</summary>	
		[Description("申请人")]
        public string ApplyUser { get; set; } // ApplyUser
		/// <summary>申请人名称</summary>	
		[Description("申请人名称")]
        public string ApplyUserName { get; set; } // ApplyUserName
    }

	/// <summary>审计通知下达</summary>	
	[Description("审计通知下达")]
    public partial class T_Audit_Notice : Formula.BaseModel
    {
		/// <summary></summary>	
		[Description("")]
        public string ID { get; set; } // ID (Primary key)
		/// <summary></summary>	
		[Description("")]
        public DateTime? CreateDate { get; set; } // CreateDate
		/// <summary></summary>	
		[Description("")]
        public DateTime? ModifyDate { get; set; } // ModifyDate
		/// <summary></summary>	
		[Description("")]
        public string CreateUserID { get; set; } // CreateUserID
		/// <summary></summary>	
		[Description("")]
        public string CreateUser { get; set; } // CreateUser
		/// <summary></summary>	
		[Description("")]
        public string ModifyUserID { get; set; } // ModifyUserID
		/// <summary></summary>	
		[Description("")]
        public string ModifyUser { get; set; } // ModifyUser
		/// <summary></summary>	
		[Description("")]
        public string OrgID { get; set; } // OrgID
		/// <summary></summary>	
		[Description("")]
        public string CompanyID { get; set; } // CompanyID
		/// <summary></summary>	
		[Description("")]
        public string FlowPhase { get; set; } // FlowPhase
		/// <summary></summary>	
		[Description("")]
        public string FlowInfo { get; set; } // FlowInfo
		/// <summary></summary>	
		[Description("")]
        public string StepName { get; set; } // StepName
		/// <summary>审计下达日期</summary>	
		[Description("审计下达日期")]
        public string AuditReleaseDate { get; set; } // AuditReleaseDate
		/// <summary>审计编号</summary>	
		[Description("审计编号")]
        public string AuditNumber { get; set; } // AuditNumber
		/// <summary>接收部门</summary>	
		[Description("接收部门")]
        public string ReceivingDepartment { get; set; } // ReceivingDepartment
		/// <summary>接收人</summary>	
		[Description("接收人")]
        public string Receiver { get; set; } // Receiver
		/// <summary>审计开始时间</summary>	
		[Description("审计开始时间")]
        public DateTime? AuditStartTime { get; set; } // AuditStartTime
		/// <summary>审计结束时间</summary>	
		[Description("审计结束时间")]
        public DateTime? AuditEndTime { get; set; } // AuditEndTime
		/// <summary>审计组长</summary>	
		[Description("审计组长")]
        public string AuditTeamLeader { get; set; } // AuditTeamLeader
		/// <summary>审计组成员</summary>	
		[Description("审计组成员")]
        public string MembersOfAuditTeam { get; set; } // MembersOfAuditTeam
		/// <summary>审计内容</summary>	
		[Description("审计内容")]
        public string AuditContents { get; set; } // AuditContents
		/// <summary>通知附件</summary>	
		[Description("通知附件")]
        public string NoticeAnnex { get; set; } // NoticeAnnex
		/// <summary>法务审计部意见</summary>	
		[Description("法务审计部意见")]
        public string OpinionOfLegalAuditDepartment { get; set; } // OpinionOfLegalAuditDepartment
		/// <summary>审计部门主管领导</summary>	
		[Description("审计部门主管领导")]
        public string LeaderInChargeOfAuditDepartment { get; set; } // LeaderInChargeOfAuditDepartment
		/// <summary>接收部门主管领导</summary>	
		[Description("接收部门主管领导")]
        public string LeaderInChargeOfReceivingDepartment { get; set; } // LeaderInChargeOfReceivingDepartment
		/// <summary>接收部门名称</summary>	
		[Description("接收部门名称")]
        public string ReceivingDepartmentName { get; set; } // ReceivingDepartmentName
		/// <summary>接收人名称</summary>	
		[Description("接收人名称")]
        public string ReceiverName { get; set; } // ReceiverName
		/// <summary>审计组长名称</summary>	
		[Description("审计组长名称")]
        public string AuditTeamLeaderName { get; set; } // AuditTeamLeaderName
		/// <summary>审计组成员名称</summary>	
		[Description("审计组成员名称")]
        public string MembersOfAuditTeamName { get; set; } // MembersOfAuditTeamName
		/// <summary>审计组组长意见</summary>	
		[Description("审计组组长意见")]
        public string AuditTeamHeadLeaderSign { get; set; } // AuditTeamHeadLeaderSign
		/// <summary>被审计对象意见</summary>	
		[Description("被审计对象意见")]
        public string AuditeeOpinion { get; set; } // AuditeeOpinion
    }

	/// <summary>审计立项书</summary>	
	[Description("审计立项书")]
    public partial class T_Audit_Project : Formula.BaseModel
    {
		/// <summary></summary>	
		[Description("")]
        public string ID { get; set; } // ID (Primary key)
		/// <summary></summary>	
		[Description("")]
        public DateTime? CreateDate { get; set; } // CreateDate
		/// <summary></summary>	
		[Description("")]
        public DateTime? ModifyDate { get; set; } // ModifyDate
		/// <summary></summary>	
		[Description("")]
        public string CreateUserID { get; set; } // CreateUserID
		/// <summary></summary>	
		[Description("")]
        public string CreateUser { get; set; } // CreateUser
		/// <summary></summary>	
		[Description("")]
        public string ModifyUserID { get; set; } // ModifyUserID
		/// <summary></summary>	
		[Description("")]
        public string ModifyUser { get; set; } // ModifyUser
		/// <summary></summary>	
		[Description("")]
        public string OrgID { get; set; } // OrgID
		/// <summary></summary>	
		[Description("")]
        public string CompanyID { get; set; } // CompanyID
		/// <summary></summary>	
		[Description("")]
        public string FlowPhase { get; set; } // FlowPhase
		/// <summary></summary>	
		[Description("")]
        public string FlowInfo { get; set; } // FlowInfo
		/// <summary></summary>	
		[Description("")]
        public string StepName { get; set; } // StepName
		/// <summary>被审计人</summary>	
		[Description("被审计人")]
        public string Auditor { get; set; } // Auditor
		/// <summary>被审计人名称</summary>	
		[Description("被审计人名称")]
        public string AuditorName { get; set; } // AuditorName
		/// <summary>审计事项</summary>	
		[Description("审计事项")]
        public string AuditMatters { get; set; } // AuditMatters
		/// <summary>立项依据</summary>	
		[Description("立项依据")]
        public string BasisForEstablishment { get; set; } // BasisForEstablishment
		/// <summary>审计组组长</summary>	
		[Description("审计组组长")]
        public string AuditTeamLeader { get; set; } // AuditTeamLeader
		/// <summary>审计组成员</summary>	
		[Description("审计组成员")]
        public string MembersOfAuditTeam { get; set; } // MembersOfAuditTeam
		/// <summary>审计组成员名称</summary>	
		[Description("审计组成员名称")]
        public string MembersOfAuditTeamName { get; set; } // MembersOfAuditTeamName
		/// <summary>审计主要内容</summary>	
		[Description("审计主要内容")]
        public string MainContentsOfAudit { get; set; } // MainContentsOfAudit
		/// <summary>附件</summary>	
		[Description("附件")]
        public string Enclosure { get; set; } // Enclosure
		/// <summary>法务审计部领导意见</summary>	
		[Description("法务审计部领导意见")]
        public string OpinionsOfLeadersOfLegalAuditDepartment { get; set; } // OpinionsOfLeadersOfLegalAuditDepartment
		/// <summary>审计组长意见</summary>	
		[Description("审计组长意见")]
        public string OpinionOfAuditTeamLeader { get; set; } // OpinionOfAuditTeamLeader
		/// <summary>审计主管领导意见</summary>	
		[Description("审计主管领导意见")]
        public string OpinionOfAuditLeaderInCharge { get; set; } // OpinionOfAuditLeaderInCharge
		/// <summary>立项依据名称</summary>	
		[Description("立项依据名称")]
        public string BasisForEstablishmentName { get; set; } // BasisForEstablishmentName
		/// <summary>审计组组长名称</summary>	
		[Description("审计组组长名称")]
        public string AuditTeamLeaderName { get; set; } // AuditTeamLeaderName
    }

	/// <summary>整改结果收集</summary>	
	[Description("整改结果收集")]
    public partial class T_Audit_RectificationResultsCollection : Formula.BaseModel
    {
		/// <summary></summary>	
		[Description("")]
        public string ID { get; set; } // ID (Primary key)
		/// <summary></summary>	
		[Description("")]
        public DateTime? CreateDate { get; set; } // CreateDate
		/// <summary></summary>	
		[Description("")]
        public DateTime? ModifyDate { get; set; } // ModifyDate
		/// <summary></summary>	
		[Description("")]
        public string CreateUserID { get; set; } // CreateUserID
		/// <summary></summary>	
		[Description("")]
        public string CreateUser { get; set; } // CreateUser
		/// <summary></summary>	
		[Description("")]
        public string ModifyUserID { get; set; } // ModifyUserID
		/// <summary></summary>	
		[Description("")]
        public string ModifyUser { get; set; } // ModifyUser
		/// <summary></summary>	
		[Description("")]
        public string OrgID { get; set; } // OrgID
		/// <summary></summary>	
		[Description("")]
        public string CompanyID { get; set; } // CompanyID
		/// <summary></summary>	
		[Description("")]
        public string FlowPhase { get; set; } // FlowPhase
		/// <summary></summary>	
		[Description("")]
        public string FlowInfo { get; set; } // FlowInfo
		/// <summary></summary>	
		[Description("")]
        public string StepName { get; set; } // StepName
		/// <summary>填报人</summary>	
		[Description("填报人")]
        public string Applicant { get; set; } // Applicant
		/// <summary>填报日期</summary>	
		[Description("填报日期")]
        public DateTime? DateOfSubmission { get; set; } // DateOfSubmission
		/// <summary>关联审计报告</summary>	
		[Description("关联审计报告")]
        public string RelatedAuditReport { get; set; } // RelatedAuditReport
		/// <summary>关联审计报告名称</summary>	
		[Description("关联审计报告名称")]
        public string RelatedAuditReportName { get; set; } // RelatedAuditReportName
		/// <summary>被审计部门</summary>	
		[Description("被审计部门")]
        public string AuditedDepartment { get; set; } // AuditedDepartment
		/// <summary>被审计部门名称</summary>	
		[Description("被审计部门名称")]
        public string AuditedDepartmentName { get; set; } // AuditedDepartmentName
		/// <summary>被审计人</summary>	
		[Description("被审计人")]
        public string Auditor { get; set; } // Auditor
		/// <summary>被审计人名称</summary>	
		[Description("被审计人名称")]
        public string AuditorName { get; set; } // AuditorName
		/// <summary>审计开始时间</summary>	
		[Description("审计开始时间")]
        public DateTime? AuditStartTime { get; set; } // AuditStartTime
		/// <summary>审计结束时间</summary>	
		[Description("审计结束时间")]
        public DateTime? AuditEndTime { get; set; } // AuditEndTime
		/// <summary>审计报告编号</summary>	
		[Description("审计报告编号")]
        public string AuditReportNo { get; set; } // AuditReportNo
		/// <summary>审计组长</summary>	
		[Description("审计组长")]
        public string AuditTeamLeader { get; set; } // AuditTeamLeader
		/// <summary>审计组长名称</summary>	
		[Description("审计组长名称")]
        public string AuditTeamLeaderName { get; set; } // AuditTeamLeaderName
		/// <summary>审计组成员</summary>	
		[Description("审计组成员")]
        public string MembersOfAuditTeam { get; set; } // MembersOfAuditTeam
		/// <summary>审计组成员名称</summary>	
		[Description("审计组成员名称")]
        public string MembersOfAuditTeamName { get; set; } // MembersOfAuditTeamName
		/// <summary>整改要求</summary>	
		[Description("整改要求")]
        public string RectificationRequirements { get; set; } // RectificationRequirements
		/// <summary>整改完成状态</summary>	
		[Description("整改完成状态")]
        public string RectificationCompletionStatus { get; set; } // RectificationCompletionStatus
		/// <summary>整改日期</summary>	
		[Description("整改日期")]
        public DateTime? RectificationDate { get; set; } // RectificationDate
		/// <summary>整改负责人</summary>	
		[Description("整改负责人")]
        public string PersonInChargeOfRectification { get; set; } // PersonInChargeOfRectification
		/// <summary>部门负责人</summary>	
		[Description("部门负责人")]
        public string DepartmentHead { get; set; } // DepartmentHead
		/// <summary>整改结果说明</summary>	
		[Description("整改结果说明")]
        public string DescriptionOfRectificationResults { get; set; } // DescriptionOfRectificationResults
		/// <summary>整改附件</summary>	
		[Description("整改附件")]
        public string RectificationAnnex { get; set; } // RectificationAnnex
		/// <summary>部门领导意见</summary>	
		[Description("部门领导意见")]
        public string OpinionsOfDepartmentLeaders { get; set; } // OpinionsOfDepartmentLeaders
		/// <summary>审计组长意见</summary>	
		[Description("审计组长意见")]
        public string OpinionOfAuditTeamLeader { get; set; } // OpinionOfAuditTeamLeader
		/// <summary>法务审计部意见</summary>	
		[Description("法务审计部意见")]
        public string OpinionOfLegalAuditDepartment { get; set; } // OpinionOfLegalAuditDepartment
		/// <summary>主管领导意见</summary>	
		[Description("主管领导意见")]
        public string OpinionsOfLeadersInCharge { get; set; } // OpinionsOfLeadersInCharge
		/// <summary>填报人名称</summary>	
		[Description("填报人名称")]
        public string ApplicantName { get; set; } // ApplicantName
    }

	/// <summary>审计报告沟通</summary>	
	[Description("审计报告沟通")]
    public partial class T_Audit_ReportCommunication : Formula.BaseModel
    {
		/// <summary></summary>	
		[Description("")]
        public string ID { get; set; } // ID (Primary key)
		/// <summary></summary>	
		[Description("")]
        public DateTime? CreateDate { get; set; } // CreateDate
		/// <summary></summary>	
		[Description("")]
        public DateTime? ModifyDate { get; set; } // ModifyDate
		/// <summary></summary>	
		[Description("")]
        public string CreateUserID { get; set; } // CreateUserID
		/// <summary></summary>	
		[Description("")]
        public string CreateUser { get; set; } // CreateUser
		/// <summary></summary>	
		[Description("")]
        public string ModifyUserID { get; set; } // ModifyUserID
		/// <summary></summary>	
		[Description("")]
        public string ModifyUser { get; set; } // ModifyUser
		/// <summary></summary>	
		[Description("")]
        public string OrgID { get; set; } // OrgID
		/// <summary></summary>	
		[Description("")]
        public string CompanyID { get; set; } // CompanyID
		/// <summary></summary>	
		[Description("")]
        public string FlowPhase { get; set; } // FlowPhase
		/// <summary></summary>	
		[Description("")]
        public string FlowInfo { get; set; } // FlowInfo
		/// <summary></summary>	
		[Description("")]
        public string StepName { get; set; } // StepName
		/// <summary>审计年度</summary>	
		[Description("审计年度")]
        public string AuditYear { get; set; } // AuditYear
		/// <summary>报告下达日期</summary>	
		[Description("报告下达日期")]
        public string ReportReleaseDate { get; set; } // ReportReleaseDate
		/// <summary>审计报告名称</summary>	
		[Description("审计报告名称")]
        public string NameOfAuditReport { get; set; } // NameOfAuditReport
		/// <summary>被审计部门</summary>	
		[Description("被审计部门")]
        public string AuditedDepartment { get; set; } // AuditedDepartment
		/// <summary>被审计部门名称</summary>	
		[Description("被审计部门名称")]
        public string AuditedDepartmentName { get; set; } // AuditedDepartmentName
		/// <summary>被审计人</summary>	
		[Description("被审计人")]
        public string Auditor { get; set; } // Auditor
		/// <summary>被审计人名称</summary>	
		[Description("被审计人名称")]
        public string AuditorName { get; set; } // AuditorName
		/// <summary>审计开始时间</summary>	
		[Description("审计开始时间")]
        public DateTime? AuditStartTime { get; set; } // AuditStartTime
		/// <summary>审计结束时间</summary>	
		[Description("审计结束时间")]
        public DateTime? AuditEndTime { get; set; } // AuditEndTime
		/// <summary>审计报告编号</summary>	
		[Description("审计报告编号")]
        public string AuditReportNo { get; set; } // AuditReportNo
		/// <summary>审计组长</summary>	
		[Description("审计组长")]
        public string AuditTeamLeader { get; set; } // AuditTeamLeader
		/// <summary>审计组长名称</summary>	
		[Description("审计组长名称")]
        public string AuditTeamLeaderName { get; set; } // AuditTeamLeaderName
		/// <summary>整改结果提交期限</summary>	
		[Description("整改结果提交期限")]
        public DateTime? DeadlineForSubmissionOfRectificationResults { get; set; } // DeadlineForSubmissionOfRectificationResults
		/// <summary>审计组成员</summary>	
		[Description("审计组成员")]
        public string MembersOfAuditTeam { get; set; } // MembersOfAuditTeam
		/// <summary>审计组成员名称</summary>	
		[Description("审计组成员名称")]
        public string MembersOfAuditTeamName { get; set; } // MembersOfAuditTeamName
		/// <summary>整改要求</summary>	
		[Description("整改要求")]
        public string RectificationRequirements { get; set; } // RectificationRequirements
		/// <summary>审计报告正文</summary>	
		[Description("审计报告正文")]
        public string BodyOfAuditReport { get; set; } // BodyOfAuditReport
		/// <summary>审计报告附件</summary>	
		[Description("审计报告附件")]
        public string AppendixToAuditReport { get; set; } // AppendixToAuditReport
		/// <summary>法务审计部领导批示</summary>	
		[Description("法务审计部领导批示")]
        public string InstructionsFromTheLeaderInChargeOfFinance { get; set; } // InstructionsFromTheLeaderInChargeOfFinance
		/// <summary>被审计部门领导批示</summary>	
		[Description("被审计部门领导批示")]
        public string InstructionsOfTheLeaderInChargeOfTheAuditedSite { get; set; } // InstructionsOfTheLeaderInChargeOfTheAuditedSite
		/// <summary>审计工作主管领导批示</summary>	
		[Description("审计工作主管领导批示")]
        public string ApprovalOfTheLeaderInChargeOfAudit { get; set; } // ApprovalOfTheLeaderInChargeOfAudit
		/// <summary>公司领导批示</summary>	
		[Description("公司领导批示")]
        public string GeneralManagerInstructions { get; set; } // GeneralManagerInstructions
		/// <summary>填报人</summary>	
		[Description("填报人")]
        public string ApplyUser { get; set; } // ApplyUser
		/// <summary>填报人名称</summary>	
		[Description("填报人名称")]
        public string ApplyUserName { get; set; } // ApplyUserName
    }

	/// <summary>审计报告签发</summary>	
	[Description("审计报告签发")]
    public partial class T_Audit_ReportIssuance : Formula.BaseModel
    {
		/// <summary></summary>	
		[Description("")]
        public string ID { get; set; } // ID (Primary key)
		/// <summary></summary>	
		[Description("")]
        public DateTime? CreateDate { get; set; } // CreateDate
		/// <summary></summary>	
		[Description("")]
        public DateTime? ModifyDate { get; set; } // ModifyDate
		/// <summary></summary>	
		[Description("")]
        public string CreateUserID { get; set; } // CreateUserID
		/// <summary></summary>	
		[Description("")]
        public string CreateUser { get; set; } // CreateUser
		/// <summary></summary>	
		[Description("")]
        public string ModifyUserID { get; set; } // ModifyUserID
		/// <summary></summary>	
		[Description("")]
        public string ModifyUser { get; set; } // ModifyUser
		/// <summary></summary>	
		[Description("")]
        public string OrgID { get; set; } // OrgID
		/// <summary></summary>	
		[Description("")]
        public string CompanyID { get; set; } // CompanyID
		/// <summary></summary>	
		[Description("")]
        public string FlowPhase { get; set; } // FlowPhase
		/// <summary></summary>	
		[Description("")]
        public string FlowInfo { get; set; } // FlowInfo
		/// <summary></summary>	
		[Description("")]
        public string StepName { get; set; } // StepName
		/// <summary>审计年度</summary>	
		[Description("审计年度")]
        public string AuditYear { get; set; } // AuditYear
		/// <summary>报告下达日期</summary>	
		[Description("报告下达日期")]
        public DateTime? ReportReleaseDate { get; set; } // ReportReleaseDate
		/// <summary>关联审计报告沟通记录</summary>	
		[Description("关联审计报告沟通记录")]
        public string CommunicationRecordOfRelatedAuditReport { get; set; } // CommunicationRecordOfRelatedAuditReport
		/// <summary>关联审计报告沟通记录名称</summary>	
		[Description("关联审计报告沟通记录名称")]
        public string CommunicationRecordOfRelatedAuditReportName { get; set; } // CommunicationRecordOfRelatedAuditReportName
		/// <summary>审计报告名称</summary>	
		[Description("审计报告名称")]
        public string NameOfAuditReport { get; set; } // NameOfAuditReport
		/// <summary>被审计部门</summary>	
		[Description("被审计部门")]
        public string AuditedDepartment { get; set; } // AuditedDepartment
		/// <summary>被审计人</summary>	
		[Description("被审计人")]
        public string Auditor { get; set; } // Auditor
		/// <summary>审计开始时间</summary>	
		[Description("审计开始时间")]
        public DateTime? AuditStartTime { get; set; } // AuditStartTime
		/// <summary>审计结束时间</summary>	
		[Description("审计结束时间")]
        public DateTime? AuditEndTime { get; set; } // AuditEndTime
		/// <summary>审计报告编号</summary>	
		[Description("审计报告编号")]
        public string AuditReportNo { get; set; } // AuditReportNo
		/// <summary>审计组长</summary>	
		[Description("审计组长")]
        public string AuditTeamLeader { get; set; } // AuditTeamLeader
		/// <summary>整改结果提交期限</summary>	
		[Description("整改结果提交期限")]
        public DateTime? DeadlineForSubmissionOfRectificationResults { get; set; } // DeadlineForSubmissionOfRectificationResults
		/// <summary>审计组成员</summary>	
		[Description("审计组成员")]
        public string MembersOfAuditTeam { get; set; } // MembersOfAuditTeam
		/// <summary>整改要求</summary>	
		[Description("整改要求")]
        public string RectificationRequirements { get; set; } // RectificationRequirements
		/// <summary>审计报告正文</summary>	
		[Description("审计报告正文")]
        public string BodyOfAuditReport { get; set; } // BodyOfAuditReport
		/// <summary>审计报告附件</summary>	
		[Description("审计报告附件")]
        public string AppendixToAuditReport { get; set; } // AppendixToAuditReport
		/// <summary>财务主管领导批示</summary>	
		[Description("财务主管领导批示")]
        public string InstructionsFromTheLeaderInChargeOfFinance { get; set; } // InstructionsFromTheLeaderInChargeOfFinance
		/// <summary>被审计部门主管领导批示</summary>	
		[Description("被审计部门主管领导批示")]
        public string InstructionsOfTheLeaderInChargeOfTheAuditedSite { get; set; } // InstructionsOfTheLeaderInChargeOfTheAuditedSite
		/// <summary>审计工作主管领导批示</summary>	
		[Description("审计工作主管领导批示")]
        public string ApprovalOfTheLeaderInChargeOfAudit { get; set; } // ApprovalOfTheLeaderInChargeOfAudit
		/// <summary>总经理批示</summary>	
		[Description("总经理批示")]
        public string GeneralManagerInstructions { get; set; } // GeneralManagerInstructions
		/// <summary>填报人</summary>	
		[Description("填报人")]
        public string ApplyUser { get; set; } // ApplyUser
		/// <summary>填报人名称</summary>	
		[Description("填报人名称")]
        public string ApplyUserName { get; set; } // ApplyUserName
		/// <summary>被审计部门名称</summary>	
		[Description("被审计部门名称")]
        public string AuditedDepartmentName { get; set; } // AuditedDepartmentName
		/// <summary>被审计人名称</summary>	
		[Description("被审计人名称")]
        public string AuditorName { get; set; } // AuditorName
		/// <summary>审计组长名称</summary>	
		[Description("审计组长名称")]
        public string AuditTeamLeaderName { get; set; } // AuditTeamLeaderName
		/// <summary>审计组成员名称</summary>	
		[Description("审计组成员名称")]
        public string MembersOfAuditTeamName { get; set; } // MembersOfAuditTeamName
		/// <summary>法务审计部领导批示</summary>	
		[Description("法务审计部领导批示")]
        public string LegalAuditDepartmentLeaderSign { get; set; } // LegalAuditDepartmentLeaderSign
    }

	/// <summary>便函管理</summary>	
	[Description("便函管理")]
    public partial class T_B_MemoManagement : Formula.BaseModel
    {
		/// <summary></summary>	
		[Description("")]
        public string ID { get; set; } // ID (Primary key)
		/// <summary>创建人ID</summary>	
		[Description("创建人ID")]
        public string CreateUserID { get; set; } // CreateUserID
		/// <summary>创建人</summary>	
		[Description("创建人")]
        public string CreateUser { get; set; } // CreateUser
		/// <summary>创建时间</summary>	
		[Description("创建时间")]
        public DateTime? CreateDate { get; set; } // CreateDate
		/// <summary>操作人ID</summary>	
		[Description("操作人ID")]
        public string ModifyUserID { get; set; } // ModifyUserID
		/// <summary>操作人</summary>	
		[Description("操作人")]
        public string ModifyUser { get; set; } // ModifyUser
		/// <summary>操作时间</summary>	
		[Description("操作时间")]
        public DateTime? ModifyDate { get; set; } // ModifyDate
		/// <summary></summary>	
		[Description("")]
        public string OrgID { get; set; } // OrgID
		/// <summary></summary>	
		[Description("")]
        public string OrgName { get; set; } // OrgName
		/// <summary>流程阶段</summary>	
		[Description("流程阶段")]
        public string FlowPhase { get; set; } // FlowPhase
		/// <summary>流程环节</summary>	
		[Description("流程环节")]
        public string StepName { get; set; } // StepName
		/// <summary>密级</summary>	
		[Description("密级")]
        public string Dense { get; set; } // Dense
		/// <summary>急缓</summary>	
		[Description("急缓")]
        public string UrgentSlow { get; set; } // UrgentSlow
		/// <summary>签发人</summary>	
		[Description("签发人")]
        public string LeaderIssueName { get; set; } // LeaderIssueName
		/// <summary>签发人ID</summary>	
		[Description("签发人ID")]
        public string LeaderIssueID { get; set; } // LeaderIssueID
		/// <summary>签发意见</summary>	
		[Description("签发意见")]
        public string LeaderIssueComment { get; set; } // LeaderIssueComment
		/// <summary>部门负责人</summary>	
		[Description("部门负责人")]
        public string WorkDeptLeaderName { get; set; } // WorkDeptLeaderName
		/// <summary>部门负责人ID</summary>	
		[Description("部门负责人ID")]
        public string WorkDeptLeaderID { get; set; } // WorkDeptLeaderID
		/// <summary>签发部门领导意见</summary>	
		[Description("签发部门领导意见")]
        public string WorkDeptLeaderComment { get; set; } // WorkDeptLeaderComment
		/// <summary>公共事业部核稿人</summary>	
		[Description("公共事业部核稿人")]
        public string PublicCareerDeptName { get; set; } // PublicCareerDeptName
		/// <summary>公共事业部核稿人ID</summary>	
		[Description("公共事业部核稿人ID")]
        public string PublicCareerDeptID { get; set; } // PublicCareerDeptID
		/// <summary>公共事业部核稿</summary>	
		[Description("公共事业部核稿")]
        public string PublicCareerDeptComment { get; set; } // PublicCareerDeptComment
		/// <summary>会签人</summary>	
		[Description("会签人")]
        public string LeaderCountersignNames { get; set; } // LeaderCountersignNames
		/// <summary>会签人ID</summary>	
		[Description("会签人ID")]
        public string LeaderCountersignIDs { get; set; } // LeaderCountersignIDs
		/// <summary>会签意见</summary>	
		[Description("会签意见")]
        public string LeaderCountersignComment { get; set; } // LeaderCountersignComment
		/// <summary>部门负责人</summary>	
		[Description("部门负责人")]
        public string DeptLeaderName { get; set; } // DeptLeaderName
		/// <summary>部门负责人ID</summary>	
		[Description("部门负责人ID")]
        public string DeptLeaderID { get; set; } // DeptLeaderID
		/// <summary>会签部门负责人意见</summary>	
		[Description("会签部门负责人意见")]
        public string DeptLeaderComment { get; set; } // DeptLeaderComment
		/// <summary>拟稿人意见</summary>	
		[Description("拟稿人意见")]
        public string DraftManComment { get; set; } // DraftManComment
		/// <summary>文号</summary>	
		[Description("文号")]
        public string PaperNumber { get; set; } // PaperNumber
		/// <summary>标题</summary>	
		[Description("标题")]
        public string Title { get; set; } // Title
		/// <summary>附件</summary>	
		[Description("附件")]
        public string DocID { get; set; } // DocID
		/// <summary>套红签章Word</summary>	
		[Description("套红签章Word")]
        public string MergeDocID { get; set; } // MergeDocID
		/// <summary>主送人</summary>	
		[Description("主送人")]
        public string MainSendUserName { get; set; } // MainSendUserName
		/// <summary>主送人ID</summary>	
		[Description("主送人ID")]
        public string MainSendUserID { get; set; } // MainSendUserID
		/// <summary>抄送人</summary>	
		[Description("抄送人")]
        public string OtherSendUserNames { get; set; } // OtherSendUserNames
		/// <summary>抄送人ID</summary>	
		[Description("抄送人ID")]
        public string OtherSendUserIDs { get; set; } // OtherSendUserIDs
		/// <summary>总份数</summary>	
		[Description("总份数")]
        public string TotalNumber { get; set; } // TotalNumber
		/// <summary>正文总份数</summary>	
		[Description("正文总份数")]
        public string BodyTotalNumber { get; set; } // BodyTotalNumber
		/// <summary>附件总份数</summary>	
		[Description("附件总份数")]
        public string AttachmentTotalNumber { get; set; } // AttachmentTotalNumber
		/// <summary>状态</summary>	
		[Description("状态")]
        public string Status { get; set; } // Status
		/// <summary>流程已执行步骤</summary>	
		[Description("流程已执行步骤")]
        public string ExecutedSteps { get; set; } // ExecutedSteps
    }

	/// <summary>发文</summary>	
	[Description("发文")]
    public partial class T_B_OutgoingFile : Formula.BaseModel
    {
		/// <summary>红头编辑ID</summary>	
		[Description("红头编辑ID")]
        public string ID { get; set; } // ID (Primary key)
		/// <summary>创建人ID</summary>	
		[Description("创建人ID")]
        public string CreateUserID { get; set; } // CreateUserID
		/// <summary>创建人</summary>	
		[Description("创建人")]
        public string CreateUser { get; set; } // CreateUser
		/// <summary>创建时间</summary>	
		[Description("创建时间")]
        public DateTime? CreateDate { get; set; } // CreateDate
		/// <summary>流程状态</summary>	
		[Description("流程状态")]
        public string FlowState { get; set; } // FlowState
		/// <summary>流程阶段</summary>	
		[Description("流程阶段")]
        public string FlowPhase { get; set; } // FlowPhase
		/// <summary>流程阶段</summary>	
		[Description("流程阶段")]
        public string StepName { get; set; } // StepName
		/// <summary>登记人ID</summary>	
		[Description("登记人ID")]
        public string WriteID { get; set; } // WriteID
		/// <summary>登记人姓名</summary>	
		[Description("登记人姓名")]
        public string WriteName { get; set; } // WriteName
		/// <summary>登记日期</summary>	
		[Description("登记日期")]
        public DateTime? WriteDate { get; set; } // WriteDate
		/// <summary>拟稿人部门ID</summary>	
		[Description("拟稿人部门ID")]
        public string WriteDeptID { get; set; } // WriteDeptID
		/// <summary>拟稿人部门名称</summary>	
		[Description("拟稿人部门名称")]
        public string WriteDeptName { get; set; } // WriteDeptName
		/// <summary>拟办日期</summary>	
		[Description("拟办日期")]
        public DateTime? HandleDate { get; set; } // HandleDate
		/// <summary>发文类型</summary>	
		[Description("发文类型")]
        public string OutType { get; set; } // OutType
		/// <summary>年份</summary>	
		[Description("年份")]
        public string Year { get; set; } // Year
		/// <summary>文号</summary>	
		[Description("文号")]
        public string Code { get; set; } // Code
		/// <summary>密级</summary>	
		[Description("密级")]
        public string Security { get; set; } // Security
		/// <summary>缓急</summary>	
		[Description("缓急")]
        public string Urgency { get; set; } // Urgency
		/// <summary>份数</summary>	
		[Description("份数")]
        public int? CopyCount { get; set; } // CopyCount
		/// <summary>标题</summary>	
		[Description("标题")]
        public string Title { get; set; } // Title
		/// <summary>主送</summary>	
		[Description("主送")]
        public string MainSend { get; set; } // MainSend
		/// <summary>抄报</summary>	
		[Description("抄报")]
        public string TellDept { get; set; } // TellDept
		/// <summary>抄送</summary>	
		[Description("抄送")]
        public string CopySend { get; set; } // CopySend
		/// <summary>正文（单附件）</summary>	
		[Description("正文（单附件）")]
        public string MainBody { get; set; } // MainBody
		/// <summary>正文（单附件）</summary>	
		[Description("正文（单附件）")]
        public string NewMainBody { get; set; } // NewMainBody
		/// <summary>附件</summary>	
		[Description("附件")]
        public string Attachment { get; set; } // Attachment
		/// <summary>主办单位核稿</summary>	
		[Description("主办单位核稿")]
        public string MainDeptCheckSign { get; set; } // MainDeptCheckSign
		/// <summary>拟稿</summary>	
		[Description("拟稿")]
        public string DrafterSign { get; set; } // DrafterSign
		/// <summary>多人会签</summary>	
		[Description("多人会签")]
        public string HuiQinSign { get; set; } // HuiQinSign
		/// <summary>签发</summary>	
		[Description("签发")]
        public string LeaderSign { get; set; } // LeaderSign
		/// <summary>套红管理员(要根据发文类型选择党办套红管理人员或者院办办理套红)</summary>	
		[Description("套红管理员(要根据发文类型选择党办套红管理人员或者院办办理套红)")]
        public string TaoHongAdmin { get; set; } // TaoHongAdmin
		/// <summary>印章ID</summary>	
		[Description("印章ID")]
        public string SealID { get; set; } // SealID
    }

	/// <summary></summary>	
	[Description("")]
    public partial class T_B_Remind : Formula.BaseModel
    {
		/// <summary></summary>	
		[Description("")]
        public string ID { get; set; } // ID (Primary key)
		/// <summary>创建人ID</summary>	
		[Description("创建人ID")]
        public string CreateUserID { get; set; } // CreateUserID
		/// <summary>创建人</summary>	
		[Description("创建人")]
        public string CreateUser { get; set; } // CreateUser
		/// <summary>创建时间</summary>	
		[Description("创建时间")]
        public DateTime? CreateDate { get; set; } // CreateDate
		/// <summary>发文ID</summary>	
		[Description("发文ID")]
        public string OutgoingFileID { get; set; } // OutgoingFileID
		/// <summary>被提醒的人员ID</summary>	
		[Description("被提醒的人员ID")]
        public string UserID { get; set; } // UserID
		/// <summary>被提醒的人员姓名</summary>	
		[Description("被提醒的人员姓名")]
        public string UserName { get; set; } // UserName
		/// <summary>提醒内容</summary>	
		[Description("提醒内容")]
        public string Msg { get; set; } // Msg
    }

	/// <summary>发传真管理</summary>	
	[Description("发传真管理")]
    public partial class T_B_SendFaxManagement : Formula.BaseModel
    {
		/// <summary></summary>	
		[Description("")]
        public string ID { get; set; } // ID (Primary key)
		/// <summary>创建人ID</summary>	
		[Description("创建人ID")]
        public string CreateUserID { get; set; } // CreateUserID
		/// <summary>创建人</summary>	
		[Description("创建人")]
        public string CreateUser { get; set; } // CreateUser
		/// <summary>创建时间</summary>	
		[Description("创建时间")]
        public DateTime? CreateDate { get; set; } // CreateDate
		/// <summary>操作人ID</summary>	
		[Description("操作人ID")]
        public string ModifyUserID { get; set; } // ModifyUserID
		/// <summary>操作人</summary>	
		[Description("操作人")]
        public string ModifyUser { get; set; } // ModifyUser
		/// <summary>操作时间</summary>	
		[Description("操作时间")]
        public DateTime? ModifyDate { get; set; } // ModifyDate
		/// <summary></summary>	
		[Description("")]
        public string OrgID { get; set; } // OrgID
		/// <summary></summary>	
		[Description("")]
        public string OrgName { get; set; } // OrgName
		/// <summary>收件单位</summary>	
		[Description("收件单位")]
        public string ReceiveDept { get; set; } // ReceiveDept
		/// <summary>发送单位</summary>	
		[Description("发送单位")]
        public string SendDept { get; set; } // SendDept
		/// <summary></summary>	
		[Description("")]
        public string SendDeptID { get; set; } // SendDeptID
		/// <summary>收件人</summary>	
		[Description("收件人")]
        public string ReceiveUserName { get; set; } // ReceiveUserName
		/// <summary>发件人</summary>	
		[Description("发件人")]
        public string SendUserName { get; set; } // SendUserName
		/// <summary></summary>	
		[Description("")]
        public string SendUserID { get; set; } // SendUserID
		/// <summary>抄送人</summary>	
		[Description("抄送人")]
        public string OtherSendUserNames { get; set; } // OtherSendUserNames
		/// <summary></summary>	
		[Description("")]
        public string OtherSendUserIDs { get; set; } // OtherSendUserIDs
		/// <summary></summary>	
		[Description("")]
        public string SignedUserIDs { get; set; } // SignedUserIDs
		/// <summary>签发</summary>	
		[Description("签发")]
        public string SignedUserNames { get; set; } // SignedUserNames
		/// <summary>页数</summary>	
		[Description("页数")]
        public string PageNo { get; set; } // PageNo
		/// <summary>电话</summary>	
		[Description("电话")]
        public string Telephone { get; set; } // Telephone
		/// <summary></summary>	
		[Description("")]
        public string Telephone2 { get; set; } // Telephone2
		/// <summary>传真</summary>	
		[Description("传真")]
        public string FaxNumber { get; set; } // FaxNumber
		/// <summary></summary>	
		[Description("")]
        public string FaxNumber2 { get; set; } // FaxNumber2
		/// <summary>传真主题</summary>	
		[Description("传真主题")]
        public string FaxTheme { get; set; } // FaxTheme
		/// <summary>附件</summary>	
		[Description("附件")]
        public string Attachment { get; set; } // Attachment
		/// <summary>核稿人意见</summary>	
		[Description("核稿人意见")]
        public string CheckorComment { get; set; } // CheckorComment
		/// <summary>部门领导意见</summary>	
		[Description("部门领导意见")]
        public string DeptLeaderComment { get; set; } // DeptLeaderComment
		/// <summary>分管领导意见</summary>	
		[Description("分管领导意见")]
        public string DepartLeaderComment { get; set; } // DepartLeaderComment
		/// <summary>流程阶段</summary>	
		[Description("流程阶段")]
        public string FlowPhase { get; set; } // FlowPhase
    }

	/// <summary>供应商维护</summary>	
	[Description("供应商维护")]
    public partial class T_BasicData_Supplier : Formula.BaseModel
    {
		/// <summary></summary>	
		[Description("")]
        public string ID { get; set; } // ID (Primary key)
		/// <summary></summary>	
		[Description("")]
        public DateTime? CreateDate { get; set; } // CreateDate
		/// <summary></summary>	
		[Description("")]
        public DateTime? ModifyDate { get; set; } // ModifyDate
		/// <summary></summary>	
		[Description("")]
        public string CreateUserID { get; set; } // CreateUserID
		/// <summary></summary>	
		[Description("")]
        public string CreateUser { get; set; } // CreateUser
		/// <summary></summary>	
		[Description("")]
        public string ModifyUserID { get; set; } // ModifyUserID
		/// <summary></summary>	
		[Description("")]
        public string ModifyUser { get; set; } // ModifyUser
		/// <summary></summary>	
		[Description("")]
        public string OrgID { get; set; } // OrgID
		/// <summary></summary>	
		[Description("")]
        public string CompanyID { get; set; } // CompanyID
		/// <summary></summary>	
		[Description("")]
        public string FlowPhase { get; set; } // FlowPhase
		/// <summary></summary>	
		[Description("")]
        public string FlowInfo { get; set; } // FlowInfo
		/// <summary></summary>	
		[Description("")]
        public string StepName { get; set; } // StepName
		/// <summary>单位名称</summary>	
		[Description("单位名称")]
        public string CompanyName { get; set; } // CompanyName
		/// <summary>单位简称</summary>	
		[Description("单位简称")]
        public string Abbreviation { get; set; } // Abbreviation
		/// <summary>注册性质</summary>	
		[Description("注册性质")]
        public string CompanyNature { get; set; } // CompanyNature
		/// <summary>法人代表</summary>	
		[Description("法人代表")]
        public string CorporateRepresentative { get; set; } // CorporateRepresentative
		/// <summary>注册资金</summary>	
		[Description("注册资金")]
        public string RegisteredCapital { get; set; } // RegisteredCapital
		/// <summary>成立日期</summary>	
		[Description("成立日期")]
        public DateTime? RegisteredDate { get; set; } // RegisteredDate
		/// <summary>单位网站</summary>	
		[Description("单位网站")]
        public string CompanyWebSite { get; set; } // CompanyWebSite
		/// <summary>单位地址</summary>	
		[Description("单位地址")]
        public string CompanyAddress { get; set; } // CompanyAddress
		/// <summary>单位简介</summary>	
		[Description("单位简介")]
        public string CompanyDesc { get; set; } // CompanyDesc
		/// <summary>开户银行</summary>	
		[Description("开户银行")]
        public string OpenAccountBank { get; set; } // OpenAccountBank
		/// <summary>开户行地址</summary>	
		[Description("开户行地址")]
        public string BankAddress { get; set; } // BankAddress
		/// <summary>税务账号</summary>	
		[Description("税务账号")]
        public string Taxation { get; set; } // Taxation
		/// <summary>银行账号</summary>	
		[Description("银行账号")]
        public string BankAccount { get; set; } // BankAccount
		/// <summary>录入人</summary>	
		[Description("录入人")]
        public string Registrant { get; set; } // Registrant
		/// <summary>录入人名称</summary>	
		[Description("录入人名称")]
        public string RegistrantName { get; set; } // RegistrantName
		/// <summary>录入日期</summary>	
		[Description("录入日期")]
        public DateTime? RegisterDate { get; set; } // RegisterDate
		/// <summary>备注</summary>	
		[Description("备注")]
        public string Remark { get; set; } // Remark
		/// <summary>相关资料</summary>	
		[Description("相关资料")]
        public string Attachments { get; set; } // Attachments
    }

	/// <summary>未还款确认单</summary>	
	[Description("未还款确认单")]
    public partial class T_BM_NoPaymentConfirmation : Formula.BaseModel
    {
		/// <summary></summary>	
		[Description("")]
        public string ID { get; set; } // ID (Primary key)
		/// <summary>填写日期</summary>	
		[Description("填写日期")]
        public DateTime? CreateDate { get; set; } // CreateDate
		/// <summary></summary>	
		[Description("")]
        public DateTime? ModifyDate { get; set; } // ModifyDate
		/// <summary></summary>	
		[Description("")]
        public string CreateUserID { get; set; } // CreateUserID
		/// <summary>填写人</summary>	
		[Description("填写人")]
        public string CreateUser { get; set; } // CreateUser
		/// <summary></summary>	
		[Description("")]
        public string ModifyUserID { get; set; } // ModifyUserID
		/// <summary></summary>	
		[Description("")]
        public string ModifyUser { get; set; } // ModifyUser
		/// <summary></summary>	
		[Description("")]
        public string OrgID { get; set; } // OrgID
		/// <summary></summary>	
		[Description("")]
        public string CompanyID { get; set; } // CompanyID
		/// <summary></summary>	
		[Description("")]
        public string FlowPhase { get; set; } // FlowPhase
		/// <summary></summary>	
		[Description("")]
        public string FlowInfo { get; set; } // FlowInfo
		/// <summary></summary>	
		[Description("")]
        public string StepName { get; set; } // StepName
		/// <summary>填写人工号</summary>	
		[Description("填写人工号")]
        public string CreateUserWorkNo { get; set; } // CreateUserWorkNo
		/// <summary>填写人部门</summary>	
		[Description("填写人部门")]
        public string CreateUserDept { get; set; } // CreateUserDept
		/// <summary>填写人部门名称</summary>	
		[Description("填写人部门名称")]
        public string CreateUserDeptName { get; set; } // CreateUserDeptName
		/// <summary>填写人电话</summary>	
		[Description("填写人电话")]
        public string CreateUserPhone { get; set; } // CreateUserPhone
		/// <summary>截至目前为止总款金额(元)</summary>	
		[Description("截至目前为止总款金额(元)")]
        public decimal? TotalLoanAmount { get; set; } // TotalLoanAmount
		/// <summary>截至目前为止已冲销金额(元)</summary>	
		[Description("截至目前为止已冲销金额(元)")]
        public decimal? SumAlreadyReturnAmount { get; set; } // SumAlreadyReturnAmount
		/// <summary>截至目前为止未冲销金额(元)</summary>	
		[Description("截至目前为止未冲销金额(元)")]
        public decimal? SumUnReturnAmount { get; set; } // SumUnReturnAmount
		/// <summary>部门领导是否同意</summary>	
		[Description("部门领导是否同意")]
        public string DeptHeadIsAgree { get; set; } // DeptHeadIsAgree
		/// <summary>未还款借款申请单明细</summary>	
		[Description("未还款借款申请单明细")]
        public string LoanInfo { get; set; } // LoanInfo
		/// <summary>申请人签字意见</summary>	
		[Description("申请人签字意见")]
        public string Applysign { get; set; } // Applysign
		/// <summary>部门正职签字意见</summary>	
		[Description("部门正职签字意见")]
        public string DeptLeaderSign { get; set; } // DeptLeaderSign
		/// <summary>财务审核签字意见</summary>	
		[Description("财务审核签字意见")]
        public string FinancialSign { get; set; } // FinancialSign
		/// <summary>流程结束日期</summary>	
		[Description("流程结束日期")]
        public DateTime? FlowEndDate { get; set; } // FlowEndDate

        // Reverse navigation
		[JsonIgnore]
        public virtual ICollection<T_BM_NoPaymentConfirmation_LoanInfo> T_BM_NoPaymentConfirmation_LoanInfo { get { onT_BM_NoPaymentConfirmation_LoanInfoGetting(); return _T_BM_NoPaymentConfirmation_LoanInfo;} }
		private ICollection<T_BM_NoPaymentConfirmation_LoanInfo> _T_BM_NoPaymentConfirmation_LoanInfo;
		partial void onT_BM_NoPaymentConfirmation_LoanInfoGetting();


        public T_BM_NoPaymentConfirmation()
        {
            _T_BM_NoPaymentConfirmation_LoanInfo = new List<T_BM_NoPaymentConfirmation_LoanInfo>();
        }
    }

	/// <summary>未还款借款申请单明细</summary>	
	[Description("未还款借款申请单明细")]
    public partial class T_BM_NoPaymentConfirmation_LoanInfo : Formula.BaseModel
    {
		/// <summary></summary>	
		[Description("")]
        public string ID { get; set; } // ID (Primary key)
		/// <summary></summary>	
		[Description("")]
        public string T_BM_NoPaymentConfirmationID { get; set; } // T_BM_NoPaymentConfirmationID
		/// <summary></summary>	
		[Description("")]
        public double? SortIndex { get; set; } // SortIndex
		/// <summary></summary>	
		[Description("")]
        public string IsReleased { get; set; } // IsReleased
		/// <summary>借款申请单ID</summary>	
		[Description("借款申请单ID")]
        public string LoanApplyID { get; set; } // LoanApplyID
		/// <summary>借款单流水号</summary>	
		[Description("借款单流水号")]
        public string LoanSerialNumber { get; set; } // LoanSerialNumber
		/// <summary>借款日期</summary>	
		[Description("借款日期")]
        public DateTime? LoanDate { get; set; } // LoanDate
		/// <summary>借款性质</summary>	
		[Description("借款性质")]
        public string TaskNature { get; set; } // TaskNature
		/// <summary>借款金额(元)</summary>	
		[Description("借款金额(元)")]
        public decimal? LoanAmount { get; set; } // LoanAmount
		/// <summary>已还款金额（元）</summary>	
		[Description("已还款金额（元）")]
        public decimal? AlreadyReturnAmount { get; set; } // AlreadyReturnAmount
		/// <summary>未还款金额(元)</summary>	
		[Description("未还款金额(元)")]
        public decimal? UnReturnAmount { get; set; } // UnReturnAmount
		/// <summary>未还款原因</summary>	
		[Description("未还款原因")]
        public string UnReturnReason { get; set; } // UnReturnReason
		/// <summary>计划还款或报销日期</summary>	
		[Description("计划还款或报销日期")]
        public DateTime? PlanRepayDate { get; set; } // PlanRepayDate

        // Foreign keys
		[JsonIgnore]
        public virtual T_BM_NoPaymentConfirmation T_BM_NoPaymentConfirmation { get; set; } //  T_BM_NoPaymentConfirmationID - FK_T_BM_NoPaymentConfirmation_LoanInfo_T_BM_NoPaymentConfirmation
    }

	/// <summary>个人借款催款通知单下达</summary>	
	[Description("个人借款催款通知单下达")]
    public partial class T_BM_PersonalLoanUnReturnNotice : Formula.BaseModel
    {
		/// <summary></summary>	
		[Description("")]
        public string ID { get; set; } // ID (Primary key)
		/// <summary></summary>	
		[Description("")]
        public DateTime? CreateDate { get; set; } // CreateDate
		/// <summary></summary>	
		[Description("")]
        public DateTime? ModifyDate { get; set; } // ModifyDate
		/// <summary></summary>	
		[Description("")]
        public string CreateUserID { get; set; } // CreateUserID
		/// <summary></summary>	
		[Description("")]
        public string CreateUser { get; set; } // CreateUser
		/// <summary></summary>	
		[Description("")]
        public string ModifyUserID { get; set; } // ModifyUserID
		/// <summary></summary>	
		[Description("")]
        public string ModifyUser { get; set; } // ModifyUser
		/// <summary></summary>	
		[Description("")]
        public string OrgID { get; set; } // OrgID
		/// <summary></summary>	
		[Description("")]
        public string CompanyID { get; set; } // CompanyID
		/// <summary></summary>	
		[Description("")]
        public string FlowPhase { get; set; } // FlowPhase
		/// <summary></summary>	
		[Description("")]
        public string FlowInfo { get; set; } // FlowInfo
		/// <summary></summary>	
		[Description("")]
        public string StepName { get; set; } // StepName
		/// <summary>统计截至日期</summary>	
		[Description("统计截至日期")]
        public DateTime? TJJZRQ { get; set; } // TJJZRQ
		/// <summary>还款截至日期</summary>	
		[Description("还款截至日期")]
        public DateTime? HKJZRQ { get; set; } // HKJZRQ
		/// <summary>借款人用户ID</summary>	
		[Description("借款人用户ID")]
        public string ABUserIDs { get; set; } // ABUserIDs
		/// <summary>欠款用户</summary>	
		[Description("欠款用户")]
        public string ABUser { get; set; } // ABUser
		/// <summary>欠款用户名称</summary>	
		[Description("欠款用户名称")]
        public string ABUserName { get; set; } // ABUserName
    }

	/// <summary>借款冲销</summary>	
	[Description("借款冲销")]
    public partial class T_BM_RepaymentForm : Formula.BaseModel
    {
		/// <summary></summary>	
		[Description("")]
        public string ID { get; set; } // ID (Primary key)
		/// <summary></summary>	
		[Description("")]
        public DateTime? CreateDate { get; set; } // CreateDate
		/// <summary></summary>	
		[Description("")]
        public DateTime? ModifyDate { get; set; } // ModifyDate
		/// <summary></summary>	
		[Description("")]
        public string CreateUserID { get; set; } // CreateUserID
		/// <summary></summary>	
		[Description("")]
        public string CreateUser { get; set; } // CreateUser
		/// <summary></summary>	
		[Description("")]
        public string ModifyUserID { get; set; } // ModifyUserID
		/// <summary></summary>	
		[Description("")]
        public string ModifyUser { get; set; } // ModifyUser
		/// <summary></summary>	
		[Description("")]
        public string OrgID { get; set; } // OrgID
		/// <summary></summary>	
		[Description("")]
        public string CompanyID { get; set; } // CompanyID
		/// <summary></summary>	
		[Description("")]
        public string FlowPhase { get; set; } // FlowPhase
		/// <summary></summary>	
		[Description("")]
        public string FlowInfo { get; set; } // FlowInfo
		/// <summary></summary>	
		[Description("")]
        public string StepName { get; set; } // StepName
		/// <summary>冲销人</summary>	
		[Description("冲销人")]
        public string Repayor { get; set; } // Repayor
		/// <summary>冲销人部门</summary>	
		[Description("冲销人部门")]
        public string RepayorDept { get; set; } // RepayorDept
		/// <summary>冲销人部门名称</summary>	
		[Description("冲销人部门名称")]
        public string RepayorDeptName { get; set; } // RepayorDeptName
		/// <summary>还款日期</summary>	
		[Description("还款日期")]
        public DateTime? RepayDate { get; set; } // RepayDate
		/// <summary>总未还款金额</summary>	
		[Description("总未还款金额")]
        public decimal? UnReturnAmount { get; set; } // UnReturnAmount
		/// <summary>冲销金额</summary>	
		[Description("冲销金额")]
        public decimal? RepayAmount { get; set; } // RepayAmount
		/// <summary>冲销地点</summary>	
		[Description("冲销地点")]
        public string RepayLocation { get; set; } // RepayLocation
		/// <summary>冲销方式</summary>	
		[Description("冲销方式")]
        public string RepayType { get; set; } // RepayType
		/// <summary>备注</summary>	
		[Description("备注")]
        public string Remark { get; set; } // Remark
		/// <summary>附件</summary>	
		[Description("附件")]
        public string Attachment { get; set; } // Attachment
		/// <summary>未冲销借款信息</summary>	
		[Description("未冲销借款信息")]
        public string LoanInfo { get; set; } // LoanInfo
		/// <summary>申请人签字意见</summary>	
		[Description("申请人签字意见")]
        public string ApplySign { get; set; } // ApplySign
		/// <summary>财务会计签字意见</summary>	
		[Description("财务会计签字意见")]
        public string FinancialSign { get; set; } // FinancialSign
		/// <summary>表单编号</summary>	
		[Description("表单编号")]
        public string FormCode { get; set; } // FormCode
		/// <summary>是否分院还款单</summary>	
		[Description("是否分院还款单")]
        public string IsBranchRepayment { get; set; } // IsBranchRepayment
		/// <summary>流程结束日期</summary>	
		[Description("流程结束日期")]
        public DateTime? FlowEndDate { get; set; } // FlowEndDate
		/// <summary>还款人工号</summary>	
		[Description("还款人工号")]
        public string RepayorWorkNo { get; set; } // RepayorWorkNo
		/// <summary>还款人电话</summary>	
		[Description("还款人电话")]
        public string RepayorPhone { get; set; } // RepayorPhone
		/// <summary>财务部审核日期</summary>	
		[Description("财务部审核日期")]
        public DateTime? FinanceDeptDate { get; set; } // FinanceDeptDate
		/// <summary>财务部审核人</summary>	
		[Description("财务部审核人")]
        public string FinancialAuditor { get; set; } // FinancialAuditor
		/// <summary>财务部审核人名称</summary>	
		[Description("财务部审核人名称")]
        public string FinancialAuditorName { get; set; } // FinancialAuditorName

        // Reverse navigation
		[JsonIgnore]
        public virtual ICollection<T_BM_RepaymentForm_LoanInfo> T_BM_RepaymentForm_LoanInfo { get { onT_BM_RepaymentForm_LoanInfoGetting(); return _T_BM_RepaymentForm_LoanInfo;} }
		private ICollection<T_BM_RepaymentForm_LoanInfo> _T_BM_RepaymentForm_LoanInfo;
		partial void onT_BM_RepaymentForm_LoanInfoGetting();


        public T_BM_RepaymentForm()
        {
            _T_BM_RepaymentForm_LoanInfo = new List<T_BM_RepaymentForm_LoanInfo>();
        }
    }

	/// <summary>未冲销借款信息</summary>	
	[Description("未冲销借款信息")]
    public partial class T_BM_RepaymentForm_LoanInfo : Formula.BaseModel
    {
		/// <summary></summary>	
		[Description("")]
        public string ID { get; set; } // ID (Primary key)
		/// <summary></summary>	
		[Description("")]
        public string T_BM_RepaymentFormID { get; set; } // T_BM_RepaymentFormID
		/// <summary></summary>	
		[Description("")]
        public double? SortIndex { get; set; } // SortIndex
		/// <summary></summary>	
		[Description("")]
        public string IsReleased { get; set; } // IsReleased
		/// <summary>借款申请单ID</summary>	
		[Description("借款申请单ID")]
        public string LoanApplyID { get; set; } // LoanApplyID
		/// <summary>借款流水号</summary>	
		[Description("借款流水号")]
        public string LoanSerialNumber { get; set; } // LoanSerialNumber
		/// <summary>借款日期</summary>	
		[Description("借款日期")]
        public DateTime? LoanDate { get; set; } // LoanDate
		/// <summary>借款金额(元)</summary>	
		[Description("借款金额(元)")]
        public decimal? LoanAmount { get; set; } // LoanAmount
		/// <summary>已还款金额(元)</summary>	
		[Description("已还款金额(元)")]
        public decimal? AlreadyReturnAmount { get; set; } // AlreadyReturnAmount
		/// <summary>剩余未还款金额(元)</summary>	
		[Description("剩余未还款金额(元)")]
        public decimal? UnReturnAmount { get; set; } // UnReturnAmount
		/// <summary>本次冲销金额(元)</summary>	
		[Description("本次冲销金额(元)")]
        public decimal? ThisTimeAmount { get; set; } // ThisTimeAmount
		/// <summary>借款事由</summary>	
		[Description("借款事由")]
        public string LoanReason { get; set; } // LoanReason
		/// <summary>任务性质</summary>	
		[Description("任务性质")]
        public string TaskNature { get; set; } // TaskNature

        // Foreign keys
		[JsonIgnore]
        public virtual T_BM_RepaymentForm T_BM_RepaymentForm { get; set; } //  T_BM_RepaymentFormID - FK_T_BM_RepaymentForm_LoanInfo_T_BM_RepaymentForm
    }

	/// <summary>车辆基本信息</summary>	
	[Description("车辆基本信息")]
    public partial class T_Car_Base : Formula.BaseModel
    {
		/// <summary></summary>	
		[Description("")]
        public string ID { get; set; } // ID (Primary key)
		/// <summary></summary>	
		[Description("")]
        public DateTime? CreateDate { get; set; } // CreateDate
		/// <summary></summary>	
		[Description("")]
        public DateTime? ModifyDate { get; set; } // ModifyDate
		/// <summary></summary>	
		[Description("")]
        public string CreateUserID { get; set; } // CreateUserID
		/// <summary></summary>	
		[Description("")]
        public string CreateUser { get; set; } // CreateUser
		/// <summary></summary>	
		[Description("")]
        public string ModifyUserID { get; set; } // ModifyUserID
		/// <summary></summary>	
		[Description("")]
        public string ModifyUser { get; set; } // ModifyUser
		/// <summary></summary>	
		[Description("")]
        public string OrgID { get; set; } // OrgID
		/// <summary></summary>	
		[Description("")]
        public string CompanyID { get; set; } // CompanyID
		/// <summary></summary>	
		[Description("")]
        public string FlowPhase { get; set; } // FlowPhase
		/// <summary></summary>	
		[Description("")]
        public string FlowInfo { get; set; } // FlowInfo
		/// <summary></summary>	
		[Description("")]
        public string StepName { get; set; } // StepName
		/// <summary>车辆类别</summary>	
		[Description("车辆类别")]
        public string CarType { get; set; } // CarType
		/// <summary>车辆状态</summary>	
		[Description("车辆状态")]
        public string CarStatus { get; set; } // CarStatus
		/// <summary>车牌号</summary>	
		[Description("车牌号")]
        public string CarNo { get; set; } // CarNo
		/// <summary>发动机编号</summary>	
		[Description("发动机编号")]
        public string EngineNo { get; set; } // EngineNo
		/// <summary>车辆型号</summary>	
		[Description("车辆型号")]
        public string CarModel { get; set; } // CarModel
		/// <summary>车辆品牌</summary>	
		[Description("车辆品牌")]
        public string CarBrand { get; set; } // CarBrand
		/// <summary>车辆座位数</summary>	
		[Description("车辆座位数")]
        public int? CarSeatNum { get; set; } // CarSeatNum
		/// <summary>购买日期</summary>	
		[Description("购买日期")]
        public DateTime? BuyDate { get; set; } // BuyDate
		/// <summary>上牌日期</summary>	
		[Description("上牌日期")]
        public DateTime? LicenseDate { get; set; } // LicenseDate
		/// <summary>供应商名称</summary>	
		[Description("供应商名称")]
        public string SupplyName { get; set; } // SupplyName
		/// <summary>供应商联系人</summary>	
		[Description("供应商联系人")]
        public string SupplyContact { get; set; } // SupplyContact
		/// <summary>供应商电话号码</summary>	
		[Description("供应商电话号码")]
        public string SupplyPhone { get; set; } // SupplyPhone
		/// <summary>备注</summary>	
		[Description("备注")]
        public string Remark { get; set; } // Remark
		/// <summary>车辆图片</summary>	
		[Description("车辆图片")]
        public byte[] CarPhoto { get; set; } // CarPhoto
    }

	/// <summary>驾驶员基本信息</summary>	
	[Description("驾驶员基本信息")]
    public partial class T_Car_Driver : Formula.BaseModel
    {
		/// <summary></summary>	
		[Description("")]
        public string ID { get; set; } // ID (Primary key)
		/// <summary></summary>	
		[Description("")]
        public DateTime? CreateDate { get; set; } // CreateDate
		/// <summary></summary>	
		[Description("")]
        public DateTime? ModifyDate { get; set; } // ModifyDate
		/// <summary></summary>	
		[Description("")]
        public string CreateUserID { get; set; } // CreateUserID
		/// <summary></summary>	
		[Description("")]
        public string CreateUser { get; set; } // CreateUser
		/// <summary></summary>	
		[Description("")]
        public string ModifyUserID { get; set; } // ModifyUserID
		/// <summary></summary>	
		[Description("")]
        public string ModifyUser { get; set; } // ModifyUser
		/// <summary></summary>	
		[Description("")]
        public string OrgID { get; set; } // OrgID
		/// <summary></summary>	
		[Description("")]
        public string CompanyID { get; set; } // CompanyID
		/// <summary></summary>	
		[Description("")]
        public string FlowPhase { get; set; } // FlowPhase
		/// <summary></summary>	
		[Description("")]
        public string FlowInfo { get; set; } // FlowInfo
		/// <summary></summary>	
		[Description("")]
        public string StepName { get; set; } // StepName
		/// <summary>姓名</summary>	
		[Description("姓名")]
        public string Name { get; set; } // Name
		/// <summary>所属部门</summary>	
		[Description("所属部门")]
        public string Dept { get; set; } // Dept
		/// <summary>所属部门名称</summary>	
		[Description("所属部门名称")]
        public string DeptName { get; set; } // DeptName
		/// <summary>性别</summary>	
		[Description("性别")]
        public string Sex { get; set; } // Sex
		/// <summary>出生日期</summary>	
		[Description("出生日期")]
        public DateTime? Bir { get; set; } // Bir
		/// <summary>驾照类型</summary>	
		[Description("驾照类型")]
        public string DrivingLicenseDriveType { get; set; } // DrivingLicenseDriveType
		/// <summary>驾驶照号码</summary>	
		[Description("驾驶照号码")]
        public string DrivingLicenseDriveNo { get; set; } // DrivingLicenseDriveNo
		/// <summary>驾驶员工号</summary>	
		[Description("驾驶员工号")]
        public string DrivingLicenseDriveCode { get; set; } // DrivingLicenseDriveCode
		/// <summary>初次领证日期</summary>	
		[Description("初次领证日期")]
        public DateTime? FirstReissueDate { get; set; } // FirstReissueDate
		/// <summary>下次审验日期</summary>	
		[Description("下次审验日期")]
        public DateTime? NextCheckDate { get; set; } // NextCheckDate
		/// <summary>驾驶证截止有效期</summary>	
		[Description("驾驶证截止有效期")]
        public DateTime? DriverLicenseExpirationDate { get; set; } // DriverLicenseExpirationDate
		/// <summary>聘用开始日期</summary>	
		[Description("聘用开始日期")]
        public DateTime? EmployStartDate { get; set; } // EmployStartDate
		/// <summary>聘用结束日期</summary>	
		[Description("聘用结束日期")]
        public DateTime? EmployEndDate { get; set; } // EmployEndDate
		/// <summary>办公室电话</summary>	
		[Description("办公室电话")]
        public string OfficePhone { get; set; } // OfficePhone
		/// <summary>家庭电话</summary>	
		[Description("家庭电话")]
        public string HomePhone { get; set; } // HomePhone
		/// <summary>手机号码</summary>	
		[Description("手机号码")]
        public string MobilePhone { get; set; } // MobilePhone
		/// <summary>主要车型</summary>	
		[Description("主要车型")]
        public string MainCarType { get; set; } // MainCarType
		/// <summary>附件</summary>	
		[Description("附件")]
        public string Attachment { get; set; } // Attachment
    }

	/// <summary>维修保养</summary>	
	[Description("维修保养")]
    public partial class T_Car_Maintenance : Formula.BaseModel
    {
		/// <summary></summary>	
		[Description("")]
        public string ID { get; set; } // ID (Primary key)
		/// <summary></summary>	
		[Description("")]
        public DateTime? CreateDate { get; set; } // CreateDate
		/// <summary></summary>	
		[Description("")]
        public DateTime? ModifyDate { get; set; } // ModifyDate
		/// <summary></summary>	
		[Description("")]
        public string CreateUserID { get; set; } // CreateUserID
		/// <summary></summary>	
		[Description("")]
        public string CreateUser { get; set; } // CreateUser
		/// <summary></summary>	
		[Description("")]
        public string ModifyUserID { get; set; } // ModifyUserID
		/// <summary></summary>	
		[Description("")]
        public string ModifyUser { get; set; } // ModifyUser
		/// <summary></summary>	
		[Description("")]
        public string OrgID { get; set; } // OrgID
		/// <summary></summary>	
		[Description("")]
        public string CompanyID { get; set; } // CompanyID
		/// <summary></summary>	
		[Description("")]
        public string FlowPhase { get; set; } // FlowPhase
		/// <summary></summary>	
		[Description("")]
        public string FlowInfo { get; set; } // FlowInfo
		/// <summary></summary>	
		[Description("")]
        public string StepName { get; set; } // StepName
		/// <summary>车牌号</summary>	
		[Description("车牌号")]
        public string CarNo { get; set; } // CarNo
		/// <summary>车牌号名称</summary>	
		[Description("车牌号名称")]
        public string CarNoName { get; set; } // CarNoName
		/// <summary>维修保养日期</summary>	
		[Description("维修保养日期")]
        public DateTime? MaintenanceDate { get; set; } // MaintenanceDate
		/// <summary>维修费用清单</summary>	
		[Description("维修费用清单")]
        public string MaintenanceDetail { get; set; } // MaintenanceDetail
		/// <summary>费用合计</summary>	
		[Description("费用合计")]
        public decimal? AllCost { get; set; } // AllCost
		/// <summary>费用经办人</summary>	
		[Description("费用经办人")]
        public string CostOperator { get; set; } // CostOperator
		/// <summary>费用经办人名称</summary>	
		[Description("费用经办人名称")]
        public string CostOperatorName { get; set; } // CostOperatorName
		/// <summary>费用保险内金额</summary>	
		[Description("费用保险内金额")]
        public decimal? CostInsured { get; set; } // CostInsured
		/// <summary>费用保险外金额</summary>	
		[Description("费用保险外金额")]
        public decimal? CostOutInsurance { get; set; } // CostOutInsurance
		/// <summary>维修保养地点</summary>	
		[Description("维修保养地点")]
        public string Pos { get; set; } // Pos
		/// <summary>备注事项</summary>	
		[Description("备注事项")]
        public string Remark { get; set; } // Remark

        // Reverse navigation
		[JsonIgnore]
        public virtual ICollection<T_Car_Maintenance_MaintenanceDetail> T_Car_Maintenance_MaintenanceDetail { get { onT_Car_Maintenance_MaintenanceDetailGetting(); return _T_Car_Maintenance_MaintenanceDetail;} }
		private ICollection<T_Car_Maintenance_MaintenanceDetail> _T_Car_Maintenance_MaintenanceDetail;
		partial void onT_Car_Maintenance_MaintenanceDetailGetting();


        public T_Car_Maintenance()
        {
            _T_Car_Maintenance_MaintenanceDetail = new List<T_Car_Maintenance_MaintenanceDetail>();
        }
    }

	/// <summary>维修费用清单</summary>	
	[Description("维修费用清单")]
    public partial class T_Car_Maintenance_MaintenanceDetail : Formula.BaseModel
    {
		/// <summary></summary>	
		[Description("")]
        public string ID { get; set; } // ID (Primary key)
		/// <summary></summary>	
		[Description("")]
        public string T_Car_MaintenanceID { get; set; } // T_Car_MaintenanceID
		/// <summary></summary>	
		[Description("")]
        public double? SortIndex { get; set; } // SortIndex
		/// <summary></summary>	
		[Description("")]
        public string IsReleased { get; set; } // IsReleased
		/// <summary>维修保养类别</summary>	
		[Description("维修保养类别")]
        public string MaintenanceCategory { get; set; } // MaintenanceCategory
		/// <summary>子类别</summary>	
		[Description("子类别")]
        public string MaintenanceCategorySmall { get; set; } // MaintenanceCategorySmall
		/// <summary>费用</summary>	
		[Description("费用")]
        public string Cost { get; set; } // Cost
		/// <summary>备注</summary>	
		[Description("备注")]
        public string Remark { get; set; } // Remark

        // Foreign keys
		[JsonIgnore]
        public virtual T_Car_Maintenance T_Car_Maintenance { get; set; } //  T_Car_MaintenanceID - FK_T_Car_Maintenance_MaintenanceDetail_T_Car_Maintenance
    }

	/// <summary>用车申请</summary>	
	[Description("用车申请")]
    public partial class T_Car_UseApply : Formula.BaseModel
    {
		/// <summary></summary>	
		[Description("")]
        public string ID { get; set; } // ID (Primary key)
		/// <summary></summary>	
		[Description("")]
        public DateTime? CreateDate { get; set; } // CreateDate
		/// <summary></summary>	
		[Description("")]
        public DateTime? ModifyDate { get; set; } // ModifyDate
		/// <summary></summary>	
		[Description("")]
        public string CreateUserID { get; set; } // CreateUserID
		/// <summary></summary>	
		[Description("")]
        public string CreateUser { get; set; } // CreateUser
		/// <summary></summary>	
		[Description("")]
        public string ModifyUserID { get; set; } // ModifyUserID
		/// <summary></summary>	
		[Description("")]
        public string ModifyUser { get; set; } // ModifyUser
		/// <summary></summary>	
		[Description("")]
        public string OrgID { get; set; } // OrgID
		/// <summary></summary>	
		[Description("")]
        public string CompanyID { get; set; } // CompanyID
		/// <summary></summary>	
		[Description("")]
        public string FlowPhase { get; set; } // FlowPhase
		/// <summary></summary>	
		[Description("")]
        public string FlowInfo { get; set; } // FlowInfo
		/// <summary></summary>	
		[Description("")]
        public string StepName { get; set; } // StepName
		/// <summary>申请人</summary>	
		[Description("申请人")]
        public string Apply { get; set; } // Apply
		/// <summary>申请人名称</summary>	
		[Description("申请人名称")]
        public string ApplyName { get; set; } // ApplyName
		/// <summary>申请日期</summary>	
		[Description("申请日期")]
        public DateTime? ApplyDate { get; set; } // ApplyDate
		/// <summary>用车人</summary>	
		[Description("用车人")]
        public string CarUser { get; set; } // CarUser
		/// <summary>用车人名称</summary>	
		[Description("用车人名称")]
        public string CarUserName { get; set; } // CarUserName
		/// <summary>用车部门</summary>	
		[Description("用车部门")]
        public string CarUseDept { get; set; } // CarUseDept
		/// <summary>用车部门名称</summary>	
		[Description("用车部门名称")]
        public string CarUseDeptName { get; set; } // CarUseDeptName
		/// <summary>电话</summary>	
		[Description("电话")]
        public string Phone { get; set; } // Phone
		/// <summary>项目号</summary>	
		[Description("项目号")]
        public string Project { get; set; } // Project
		/// <summary>项目名称</summary>	
		[Description("项目名称")]
        public string ProjectName { get; set; } // ProjectName
		/// <summary>项目名称名称</summary>	
		[Description("项目名称名称")]
        public string ProjectNameName { get; set; } // ProjectNameName
		/// <summary>用车人数</summary>	
		[Description("用车人数")]
        public int? CarUseNum { get; set; } // CarUseNum
		/// <summary>用车地点</summary>	
		[Description("用车地点")]
        public string CarUsePos { get; set; } // CarUsePos
		/// <summary>目的地</summary>	
		[Description("目的地")]
        public string Destination { get; set; } // Destination
		/// <summary>候车地点</summary>	
		[Description("候车地点")]
        public string WaitPlace { get; set; } // WaitPlace
		/// <summary>事由</summary>	
		[Description("事由")]
        public string Reson { get; set; } // Reson
		/// <summary>出发时间</summary>	
		[Description("出发时间")]
        public DateTime? LeaveDate { get; set; } // LeaveDate
		/// <summary>预计返回时间</summary>	
		[Description("预计返回时间")]
        public DateTime? ExpectBackDate { get; set; } // ExpectBackDate
		/// <summary>备注</summary>	
		[Description("备注")]
        public string Remark { get; set; } // Remark
		/// <summary>内部派车信息</summary>	
		[Description("内部派车信息")]
        public string InternalDispatchInformation { get; set; } // InternalDispatchInformation
		/// <summary>外部租车信息</summary>	
		[Description("外部租车信息")]
        public string ExternalDispatchInformation { get; set; } // ExternalDispatchInformation
		/// <summary>实际出发时间</summary>	
		[Description("实际出发时间")]
        public DateTime? ActualLeaveDate { get; set; } // ActualLeaveDate
		/// <summary>实际返回时间</summary>	
		[Description("实际返回时间")]
        public DateTime? ActualBackDate { get; set; } // ActualBackDate
		/// <summary>实际使用天数</summary>	
		[Description("实际使用天数")]
        public string AcutalUseDays { get; set; } // AcutalUseDays
		/// <summary>本次里程数</summary>	
		[Description("本次里程数")]
        public string MileageThisTime { get; set; } // MileageThisTime
		/// <summary>部门领导意见</summary>	
		[Description("部门领导意见")]
        public string DeptLeaderSign { get; set; } // DeptLeaderSign
		/// <summary>汽车班派车意见</summary>	
		[Description("汽车班派车意见")]
        public string CarClassSendCarSign { get; set; } // CarClassSendCarSign
		/// <summary>汽车班领导意见</summary>	
		[Description("汽车班领导意见")]
        public string CarClassLeaderSign { get; set; } // CarClassLeaderSign
		/// <summary>申请人部门</summary>	
		[Description("申请人部门")]
        public string ApplyDept { get; set; } // ApplyDept
		/// <summary>申请人部门名称</summary>	
		[Description("申请人部门名称")]
        public string ApplyDeptName { get; set; } // ApplyDeptName
		/// <summary>预计使用天数</summary>	
		[Description("预计使用天数")]
        public int? ExpectUseDays { get; set; } // ExpectUseDays
		/// <summary>申请单号</summary>	
		[Description("申请单号")]
        public string SerialNumber { get; set; } // SerialNumber

        // Reverse navigation
		[JsonIgnore]
        public virtual ICollection<T_Car_UseApply_ExternalDispatchInformation> T_Car_UseApply_ExternalDispatchInformation { get { onT_Car_UseApply_ExternalDispatchInformationGetting(); return _T_Car_UseApply_ExternalDispatchInformation;} }
		private ICollection<T_Car_UseApply_ExternalDispatchInformation> _T_Car_UseApply_ExternalDispatchInformation;
		partial void onT_Car_UseApply_ExternalDispatchInformationGetting();

		[JsonIgnore]
        public virtual ICollection<T_Car_UseApply_InternalDispatchInformation> T_Car_UseApply_InternalDispatchInformation { get { onT_Car_UseApply_InternalDispatchInformationGetting(); return _T_Car_UseApply_InternalDispatchInformation;} }
		private ICollection<T_Car_UseApply_InternalDispatchInformation> _T_Car_UseApply_InternalDispatchInformation;
		partial void onT_Car_UseApply_InternalDispatchInformationGetting();


        public T_Car_UseApply()
        {
            _T_Car_UseApply_ExternalDispatchInformation = new List<T_Car_UseApply_ExternalDispatchInformation>();
            _T_Car_UseApply_InternalDispatchInformation = new List<T_Car_UseApply_InternalDispatchInformation>();
        }
    }

	/// <summary>外部租车信息</summary>	
	[Description("外部租车信息")]
    public partial class T_Car_UseApply_ExternalDispatchInformation : Formula.BaseModel
    {
		/// <summary></summary>	
		[Description("")]
        public string ID { get; set; } // ID (Primary key)
		/// <summary></summary>	
		[Description("")]
        public string T_Car_UseApplyID { get; set; } // T_Car_UseApplyID
		/// <summary></summary>	
		[Description("")]
        public double? SortIndex { get; set; } // SortIndex
		/// <summary></summary>	
		[Description("")]
        public string IsReleased { get; set; } // IsReleased
		/// <summary>租车公司</summary>	
		[Description("租车公司")]
        public string RentalCarCompany { get; set; } // RentalCarCompany
		/// <summary>车辆品牌</summary>	
		[Description("车辆品牌")]
        public string CarBrand { get; set; } // CarBrand
		/// <summary>车辆型号</summary>	
		[Description("车辆型号")]
        public string CarModel { get; set; } // CarModel
		/// <summary>座位数</summary>	
		[Description("座位数")]
        public int? CarSeatNum { get; set; } // CarSeatNum
		/// <summary>车牌号</summary>	
		[Description("车牌号")]
        public string CarNo { get; set; } // CarNo
		/// <summary>联系人姓名</summary>	
		[Description("联系人姓名")]
        public string ContactName { get; set; } // ContactName
		/// <summary>手机号</summary>	
		[Description("手机号")]
        public string MobilePhone { get; set; } // MobilePhone

        // Foreign keys
		[JsonIgnore]
        public virtual T_Car_UseApply T_Car_UseApply { get; set; } //  T_Car_UseApplyID - FK_T_Car_UseApply_ExternalDispatchInformation_T_Car_UseApply
    }

	/// <summary>内部派车信息</summary>	
	[Description("内部派车信息")]
    public partial class T_Car_UseApply_InternalDispatchInformation : Formula.BaseModel
    {
		/// <summary></summary>	
		[Description("")]
        public string ID { get; set; } // ID (Primary key)
		/// <summary></summary>	
		[Description("")]
        public string T_Car_UseApplyID { get; set; } // T_Car_UseApplyID
		/// <summary></summary>	
		[Description("")]
        public double? SortIndex { get; set; } // SortIndex
		/// <summary></summary>	
		[Description("")]
        public string IsReleased { get; set; } // IsReleased
		/// <summary>车牌号</summary>	
		[Description("车牌号")]
        public string CarNo { get; set; } // CarNo
		/// <summary>车牌号名称</summary>	
		[Description("车牌号名称")]
        public string CarNoName { get; set; } // CarNoName
		/// <summary>车辆品牌</summary>	
		[Description("车辆品牌")]
        public string CarBrand { get; set; } // CarBrand
		/// <summary>车辆型号</summary>	
		[Description("车辆型号")]
        public string CarModel { get; set; } // CarModel
		/// <summary>座位数</summary>	
		[Description("座位数")]
        public string CarSeatNum { get; set; } // CarSeatNum
		/// <summary>驾驶员姓名</summary>	
		[Description("驾驶员姓名")]
        public string DriverName { get; set; } // DriverName
		/// <summary>驾驶员姓名名称</summary>	
		[Description("驾驶员姓名名称")]
        public string DriverNameName { get; set; } // DriverNameName
		/// <summary>手机号</summary>	
		[Description("手机号")]
        public string MobilePhone { get; set; } // MobilePhone

        // Foreign keys
		[JsonIgnore]
        public virtual T_Car_UseApply T_Car_UseApply { get; set; } //  T_Car_UseApplyID - FK_T_Car_UseApply_InternalDispatchInformation_T_Car_UseApply
    }

	/// <summary>项目资料查阅申请</summary>	
	[Description("项目资料查阅申请")]
    public partial class T_ContractsAndProjects_ProjectDataAccessRequest : Formula.BaseModel
    {
		/// <summary></summary>	
		[Description("")]
        public string ID { get; set; } // ID (Primary key)
		/// <summary></summary>	
		[Description("")]
        public DateTime? CreateDate { get; set; } // CreateDate
		/// <summary></summary>	
		[Description("")]
        public DateTime? ModifyDate { get; set; } // ModifyDate
		/// <summary></summary>	
		[Description("")]
        public string CreateUserID { get; set; } // CreateUserID
		/// <summary></summary>	
		[Description("")]
        public string CreateUser { get; set; } // CreateUser
		/// <summary></summary>	
		[Description("")]
        public string ModifyUserID { get; set; } // ModifyUserID
		/// <summary></summary>	
		[Description("")]
        public string ModifyUser { get; set; } // ModifyUser
		/// <summary></summary>	
		[Description("")]
        public string OrgID { get; set; } // OrgID
		/// <summary></summary>	
		[Description("")]
        public string CompanyID { get; set; } // CompanyID
		/// <summary></summary>	
		[Description("")]
        public string FlowPhase { get; set; } // FlowPhase
		/// <summary></summary>	
		[Description("")]
        public string FlowInfo { get; set; } // FlowInfo
		/// <summary></summary>	
		[Description("")]
        public string StepName { get; set; } // StepName
		/// <summary>填写人</summary>	
		[Description("填写人")]
        public string FillInPerson { get; set; } // FillInPerson
		/// <summary>填写日期</summary>	
		[Description("填写日期")]
        public DateTime? DateOfCompletion { get; set; } // DateOfCompletion
		/// <summary>涉及项目名称</summary>	
		[Description("涉及项目名称")]
        public string ProjectNameInvolved { get; set; } // ProjectNameInvolved
		/// <summary>涉及项目名称名称</summary>	
		[Description("涉及项目名称名称")]
        public string ProjectNameInvolvedName { get; set; } // ProjectNameInvolvedName
		/// <summary>涉及案件名称</summary>	
		[Description("涉及案件名称")]
        public string NameOfCaseInvolved { get; set; } // NameOfCaseInvolved
		/// <summary>涉及案件名称名称</summary>	
		[Description("涉及案件名称名称")]
        public string NameOfCaseInvolvedName { get; set; } // NameOfCaseInvolvedName
		/// <summary>申请查询资料内容</summary>	
		[Description("申请查询资料内容")]
        public string ContentOfApplicationInformation { get; set; } // ContentOfApplicationInformation
		/// <summary>查阅原因</summary>	
		[Description("查阅原因")]
        public string ReasonsForInspection { get; set; } // ReasonsForInspection
		/// <summary>授权开始时间</summary>	
		[Description("授权开始时间")]
        public DateTime? AuthorizationStartTime { get; set; } // AuthorizationStartTime
		/// <summary>授权截止时间</summary>	
		[Description("授权截止时间")]
        public DateTime? AuthorizationDeadline { get; set; } // AuthorizationDeadline
		/// <summary>授权用户</summary>	
		[Description("授权用户")]
        public string AuthorizedUser { get; set; } // AuthorizedUser
		/// <summary>授权用户名称</summary>	
		[Description("授权用户名称")]
        public string AuthorizedUserName { get; set; } // AuthorizedUserName
		/// <summary>备注</summary>	
		[Description("备注")]
        public string Remarks { get; set; } // Remarks
		/// <summary>附件</summary>	
		[Description("附件")]
        public string Enclosure { get; set; } // Enclosure
		/// <summary>法务部领导</summary>	
		[Description("法务部领导")]
        public string HeadOfLegalDepartment { get; set; } // HeadOfLegalDepartment
		/// <summary>管理部门意见</summary>	
		[Description("管理部门意见")]
        public string OpinionsOfProductionManagementDepartment { get; set; } // OpinionsOfProductionManagementDepartment
		/// <summary>承包部意见</summary>	
		[Description("承包部意见")]
        public string OpinionsOfTheContractingDepartment { get; set; } // OpinionsOfTheContractingDepartment
		/// <summary>填写人名称</summary>	
		[Description("填写人名称")]
        public string FillInPersonName { get; set; } // FillInPersonName
    }

	/// <summary>解密申请</summary>	
	[Description("解密申请")]
    public partial class T_Decrypt_Apply : Formula.BaseModel
    {
		/// <summary></summary>	
		[Description("")]
        public string ID { get; set; } // ID (Primary key)
		/// <summary></summary>	
		[Description("")]
        public DateTime? CreateDate { get; set; } // CreateDate
		/// <summary></summary>	
		[Description("")]
        public DateTime? ModifyDate { get; set; } // ModifyDate
		/// <summary></summary>	
		[Description("")]
        public string CreateUserID { get; set; } // CreateUserID
		/// <summary></summary>	
		[Description("")]
        public string CreateUser { get; set; } // CreateUser
		/// <summary></summary>	
		[Description("")]
        public string ModifyUserID { get; set; } // ModifyUserID
		/// <summary></summary>	
		[Description("")]
        public string ModifyUser { get; set; } // ModifyUser
		/// <summary></summary>	
		[Description("")]
        public string OrgID { get; set; } // OrgID
		/// <summary></summary>	
		[Description("")]
        public string CompanyID { get; set; } // CompanyID
		/// <summary></summary>	
		[Description("")]
        public string FlowPhase { get; set; } // FlowPhase
		/// <summary></summary>	
		[Description("")]
        public string FlowInfo { get; set; } // FlowInfo
		/// <summary></summary>	
		[Description("")]
        public string StepName { get; set; } // StepName
		/// <summary>申请人</summary>	
		[Description("申请人")]
        public string ApplyUser { get; set; } // ApplyUser
		/// <summary>申请人名称</summary>	
		[Description("申请人名称")]
        public string ApplyUserName { get; set; } // ApplyUserName
		/// <summary>申请人部门</summary>	
		[Description("申请人部门")]
        public string ApplyDept { get; set; } // ApplyDept
		/// <summary>申请人部门名称</summary>	
		[Description("申请人部门名称")]
        public string ApplyDeptName { get; set; } // ApplyDeptName
		/// <summary>申请日期</summary>	
		[Description("申请日期")]
        public DateTime? ApplyDate { get; set; } // ApplyDate
		/// <summary>截止日期</summary>	
		[Description("截止日期")]
        public DateTime? Deadline { get; set; } // Deadline
		/// <summary>解密类型</summary>	
		[Description("解密类型")]
        public string DecryptionType { get; set; } // DecryptionType
		/// <summary>具体事由</summary>	
		[Description("具体事由")]
        public string Reson { get; set; } // Reson
		/// <summary>部门领导审批</summary>	
		[Description("部门领导审批")]
        public string DeptLeaderSign { get; set; } // DeptLeaderSign
		/// <summary>审批人意见</summary>	
		[Description("审批人意见")]
        public string ApproverSign { get; set; } // ApproverSign
		/// <summary>经办人意见</summary>	
		[Description("经办人意见")]
        public string AgentSign { get; set; } // AgentSign
    }

	/// <summary>新增设备采购</summary>	
	[Description("新增设备采购")]
    public partial class T_DeviceManage_AddedPurchase : Formula.BaseModel
    {
		/// <summary></summary>	
		[Description("")]
        public string ID { get; set; } // ID (Primary key)
		/// <summary></summary>	
		[Description("")]
        public DateTime? CreateDate { get; set; } // CreateDate
		/// <summary></summary>	
		[Description("")]
        public DateTime? ModifyDate { get; set; } // ModifyDate
		/// <summary></summary>	
		[Description("")]
        public string CreateUserID { get; set; } // CreateUserID
		/// <summary></summary>	
		[Description("")]
        public string CreateUser { get; set; } // CreateUser
		/// <summary></summary>	
		[Description("")]
        public string ModifyUserID { get; set; } // ModifyUserID
		/// <summary></summary>	
		[Description("")]
        public string ModifyUser { get; set; } // ModifyUser
		/// <summary></summary>	
		[Description("")]
        public string OrgID { get; set; } // OrgID
		/// <summary></summary>	
		[Description("")]
        public string CompanyID { get; set; } // CompanyID
		/// <summary></summary>	
		[Description("")]
        public string FlowPhase { get; set; } // FlowPhase
		/// <summary></summary>	
		[Description("")]
        public string FlowInfo { get; set; } // FlowInfo
		/// <summary></summary>	
		[Description("")]
        public string StepName { get; set; } // StepName
		/// <summary>申请人</summary>	
		[Description("申请人")]
        public string Applicant { get; set; } // Applicant
		/// <summary>申请人名称</summary>	
		[Description("申请人名称")]
        public string ApplicantName { get; set; } // ApplicantName
		/// <summary>申请人部门</summary>	
		[Description("申请人部门")]
        public string ApplicantDept { get; set; } // ApplicantDept
		/// <summary>申请人部门名称</summary>	
		[Description("申请人部门名称")]
        public string ApplicantDeptName { get; set; } // ApplicantDeptName
		/// <summary>申请单名称</summary>	
		[Description("申请单名称")]
        public string FormName { get; set; } // FormName
		/// <summary>采购类型</summary>	
		[Description("采购类型")]
        public string Category { get; set; } // Category
		/// <summary>申请原因</summary>	
		[Description("申请原因")]
        public string ApplyReason { get; set; } // ApplyReason
		/// <summary>供应商</summary>	
		[Description("供应商")]
        public string Supplier { get; set; } // Supplier
		/// <summary>供应商名称</summary>	
		[Description("供应商名称")]
        public string SupplierName { get; set; } // SupplierName
		/// <summary>申请采购时间</summary>	
		[Description("申请采购时间")]
        public DateTime? ApplyDate { get; set; } // ApplyDate
		/// <summary>采购金额合计</summary>	
		[Description("采购金额合计")]
        public string TotalPrice { get; set; } // TotalPrice
		/// <summary>采购金额合计大写</summary>	
		[Description("采购金额合计大写")]
        public string TotalPriceCase { get; set; } // TotalPriceCase
		/// <summary>是否完成立项</summary>	
		[Description("是否完成立项")]
        public string IsCompleted { get; set; } // IsCompleted
		/// <summary>项目类型</summary>	
		[Description("项目类型")]
        public string ProjectType { get; set; } // ProjectType
		/// <summary>项目编号</summary>	
		[Description("项目编号")]
        public string ProjectNumber { get; set; } // ProjectNumber
		/// <summary>项目编号名称</summary>	
		[Description("项目编号名称")]
        public string ProjectNumberName { get; set; } // ProjectNumberName
		/// <summary>项目名称</summary>	
		[Description("项目名称")]
        public string ProjectName { get; set; } // ProjectName
		/// <summary>是否有合同</summary>	
		[Description("是否有合同")]
        public string IsContract { get; set; } // IsContract
		/// <summary>合同类型</summary>	
		[Description("合同类型")]
        public string ContractCategory { get; set; } // ContractCategory
		/// <summary>印章地点</summary>	
		[Description("印章地点")]
        public string SealLocation { get; set; } // SealLocation
		/// <summary>合同号</summary>	
		[Description("合同号")]
        public string ContractNumber { get; set; } // ContractNumber
		/// <summary>合同名称</summary>	
		[Description("合同名称")]
        public string ContractName { get; set; } // ContractName
		/// <summary>合同附件</summary>	
		[Description("合同附件")]
        public string ContractAttachments { get; set; } // ContractAttachments
		/// <summary>合同付款计划</summary>	
		[Description("合同付款计划")]
        public string PaymentDetail { get; set; } // PaymentDetail
		/// <summary>供方比选</summary>	
		[Description("供方比选")]
        public string SupplierDetail { get; set; } // SupplierDetail
		/// <summary>附件</summary>	
		[Description("附件")]
        public string Attachments { get; set; } // Attachments
		/// <summary>综合意见</summary>	
		[Description("综合意见")]
        public string ComprehensiveOpinion { get; set; } // ComprehensiveOpinion
		/// <summary>采购主管意见</summary>	
		[Description("采购主管意见")]
        public string PurchasingSupervisor { get; set; } // PurchasingSupervisor
		/// <summary>部门领导意见</summary>	
		[Description("部门领导意见")]
        public string DeptLeader { get; set; } // DeptLeader
		/// <summary>公司领导意见</summary>	
		[Description("公司领导意见")]
        public string CompanyLeader { get; set; } // CompanyLeader

        // Reverse navigation
		[JsonIgnore]
        public virtual ICollection<T_DeviceManage_AddedPurchase_PaymentDetail> T_DeviceManage_AddedPurchase_PaymentDetail { get { onT_DeviceManage_AddedPurchase_PaymentDetailGetting(); return _T_DeviceManage_AddedPurchase_PaymentDetail;} }
		private ICollection<T_DeviceManage_AddedPurchase_PaymentDetail> _T_DeviceManage_AddedPurchase_PaymentDetail;
		partial void onT_DeviceManage_AddedPurchase_PaymentDetailGetting();

		[JsonIgnore]
        public virtual ICollection<T_DeviceManage_AddedPurchase_SupplierDetail> T_DeviceManage_AddedPurchase_SupplierDetail { get { onT_DeviceManage_AddedPurchase_SupplierDetailGetting(); return _T_DeviceManage_AddedPurchase_SupplierDetail;} }
		private ICollection<T_DeviceManage_AddedPurchase_SupplierDetail> _T_DeviceManage_AddedPurchase_SupplierDetail;
		partial void onT_DeviceManage_AddedPurchase_SupplierDetailGetting();


        public T_DeviceManage_AddedPurchase()
        {
            _T_DeviceManage_AddedPurchase_PaymentDetail = new List<T_DeviceManage_AddedPurchase_PaymentDetail>();
            _T_DeviceManage_AddedPurchase_SupplierDetail = new List<T_DeviceManage_AddedPurchase_SupplierDetail>();
        }
    }

	/// <summary>合同付款计划</summary>	
	[Description("合同付款计划")]
    public partial class T_DeviceManage_AddedPurchase_PaymentDetail : Formula.BaseModel
    {
		/// <summary></summary>	
		[Description("")]
        public string ID { get; set; } // ID (Primary key)
		/// <summary></summary>	
		[Description("")]
        public string T_DeviceManage_AddedPurchaseID { get; set; } // T_DeviceManage_AddedPurchaseID
		/// <summary></summary>	
		[Description("")]
        public double? SortIndex { get; set; } // SortIndex
		/// <summary></summary>	
		[Description("")]
        public string IsReleased { get; set; } // IsReleased
		/// <summary>付款年度</summary>	
		[Description("付款年度")]
        public string PaymentYear { get; set; } // PaymentYear
		/// <summary>付款月度</summary>	
		[Description("付款月度")]
        public string PaymentMonth { get; set; } // PaymentMonth
		/// <summary>付款批次</summary>	
		[Description("付款批次")]
        public string PaymentBatch { get; set; } // PaymentBatch
		/// <summary>付款比例</summary>	
		[Description("付款比例")]
        public string PaymentProportion { get; set; } // PaymentProportion
		/// <summary>付款金额</summary>	
		[Description("付款金额")]
        public string PaymentAmount { get; set; } // PaymentAmount
		/// <summary>付款说明</summary>	
		[Description("付款说明")]
        public string PaymentExplain { get; set; } // PaymentExplain

        // Foreign keys
		[JsonIgnore]
        public virtual T_DeviceManage_AddedPurchase T_DeviceManage_AddedPurchase { get; set; } //  T_DeviceManage_AddedPurchaseID - FK_T_DeviceManage_AddedPurchase_PaymentDetail_T_DeviceManage_AddedPurchase
    }

	/// <summary>供方比选</summary>	
	[Description("供方比选")]
    public partial class T_DeviceManage_AddedPurchase_SupplierDetail : Formula.BaseModel
    {
		/// <summary></summary>	
		[Description("")]
        public string ID { get; set; } // ID (Primary key)
		/// <summary></summary>	
		[Description("")]
        public string T_DeviceManage_AddedPurchaseID { get; set; } // T_DeviceManage_AddedPurchaseID
		/// <summary></summary>	
		[Description("")]
        public double? SortIndex { get; set; } // SortIndex
		/// <summary></summary>	
		[Description("")]
        public string IsReleased { get; set; } // IsReleased
		/// <summary>推荐</summary>	
		[Description("推荐")]
        public string Recommend { get; set; } // Recommend
		/// <summary>供应商</summary>	
		[Description("供应商")]
        public string Supplier { get; set; } // Supplier
		/// <summary>供应商名称</summary>	
		[Description("供应商名称")]
        public string SupplierName { get; set; } // SupplierName
		/// <summary>功能模块</summary>	
		[Description("功能模块")]
        public string Module { get; set; } // Module
		/// <summary>报价</summary>	
		[Description("报价")]
        public string Price { get; set; } // Price
		/// <summary>优惠价</summary>	
		[Description("优惠价")]
        public string DiscountPrice { get; set; } // DiscountPrice
		/// <summary>采购价</summary>	
		[Description("采购价")]
        public string UnitPrice { get; set; } // UnitPrice
		/// <summary>技术能力</summary>	
		[Description("技术能力")]
        public string TechnologyAbility { get; set; } // TechnologyAbility
		/// <summary>服务水平</summary>	
		[Description("服务水平")]
        public string ServiceLevel { get; set; } // ServiceLevel
		/// <summary>测试过程</summary>	
		[Description("测试过程")]
        public string TestProcess { get; set; } // TestProcess

        // Foreign keys
		[JsonIgnore]
        public virtual T_DeviceManage_AddedPurchase T_DeviceManage_AddedPurchase { get; set; } //  T_DeviceManage_AddedPurchaseID - FK_T_DeviceManage_AddedPurchase_SupplierDetail_T_DeviceManage_AddedPurchase
    }

	/// <summary>耗材和协议设备追加</summary>	
	[Description("耗材和协议设备追加")]
    public partial class T_DeviceManage_ConsumablesPurchase : Formula.BaseModel
    {
		/// <summary></summary>	
		[Description("")]
        public string ID { get; set; } // ID (Primary key)
		/// <summary></summary>	
		[Description("")]
        public DateTime? CreateDate { get; set; } // CreateDate
		/// <summary></summary>	
		[Description("")]
        public DateTime? ModifyDate { get; set; } // ModifyDate
		/// <summary></summary>	
		[Description("")]
        public string CreateUserID { get; set; } // CreateUserID
		/// <summary></summary>	
		[Description("")]
        public string CreateUser { get; set; } // CreateUser
		/// <summary></summary>	
		[Description("")]
        public string ModifyUserID { get; set; } // ModifyUserID
		/// <summary></summary>	
		[Description("")]
        public string ModifyUser { get; set; } // ModifyUser
		/// <summary></summary>	
		[Description("")]
        public string OrgID { get; set; } // OrgID
		/// <summary></summary>	
		[Description("")]
        public string CompanyID { get; set; } // CompanyID
		/// <summary></summary>	
		[Description("")]
        public string FlowPhase { get; set; } // FlowPhase
		/// <summary></summary>	
		[Description("")]
        public string FlowInfo { get; set; } // FlowInfo
		/// <summary></summary>	
		[Description("")]
        public string StepName { get; set; } // StepName
		/// <summary>申请人</summary>	
		[Description("申请人")]
        public string Applicant { get; set; } // Applicant
		/// <summary>申请人名称</summary>	
		[Description("申请人名称")]
        public string ApplicantName { get; set; } // ApplicantName
		/// <summary>申请人部门</summary>	
		[Description("申请人部门")]
        public string ApplicantDept { get; set; } // ApplicantDept
		/// <summary>申请人部门名称</summary>	
		[Description("申请人部门名称")]
        public string ApplicantDeptName { get; set; } // ApplicantDeptName
		/// <summary>申请单名称</summary>	
		[Description("申请单名称")]
        public string FormName { get; set; } // FormName
		/// <summary>采购类型</summary>	
		[Description("采购类型")]
        public string Category { get; set; } // Category
		/// <summary>申请原因</summary>	
		[Description("申请原因")]
        public string ApplyReason { get; set; } // ApplyReason
		/// <summary>供应商</summary>	
		[Description("供应商")]
        public string Supplier { get; set; } // Supplier
		/// <summary>供应商名称</summary>	
		[Description("供应商名称")]
        public string SupplierName { get; set; } // SupplierName
		/// <summary>申请采购时间</summary>	
		[Description("申请采购时间")]
        public DateTime? ApplyDate { get; set; } // ApplyDate
		/// <summary>采购金额合计</summary>	
		[Description("采购金额合计")]
        public string TotalPrice { get; set; } // TotalPrice
		/// <summary>采购金额合计大写</summary>	
		[Description("采购金额合计大写")]
        public string TotalPriceCase { get; set; } // TotalPriceCase
		/// <summary>是否完成立项</summary>	
		[Description("是否完成立项")]
        public string IsCompleted { get; set; } // IsCompleted
		/// <summary>项目类型</summary>	
		[Description("项目类型")]
        public string ProjectType { get; set; } // ProjectType
		/// <summary>项目编号</summary>	
		[Description("项目编号")]
        public string ProjectNumber { get; set; } // ProjectNumber
		/// <summary>项目编号名称</summary>	
		[Description("项目编号名称")]
        public string ProjectNumberName { get; set; } // ProjectNumberName
		/// <summary>项目名称</summary>	
		[Description("项目名称")]
        public string ProjectName { get; set; } // ProjectName
		/// <summary>是否有合同</summary>	
		[Description("是否有合同")]
        public string IsContract { get; set; } // IsContract
		/// <summary>合同类型</summary>	
		[Description("合同类型")]
        public string ContractCategory { get; set; } // ContractCategory
		/// <summary>印章地点</summary>	
		[Description("印章地点")]
        public string SealLocation { get; set; } // SealLocation
		/// <summary>合同号</summary>	
		[Description("合同号")]
        public string ContractNumber { get; set; } // ContractNumber
		/// <summary>合同名称</summary>	
		[Description("合同名称")]
        public string ContractName { get; set; } // ContractName
		/// <summary>合同附件</summary>	
		[Description("合同附件")]
        public string ContractAttachments { get; set; } // ContractAttachments
		/// <summary>合同付款计划</summary>	
		[Description("合同付款计划")]
        public string PaymentDetail { get; set; } // PaymentDetail
		/// <summary>采购列表</summary>	
		[Description("采购列表")]
        public string PurchaseDetail { get; set; } // PurchaseDetail
		/// <summary>附件</summary>	
		[Description("附件")]
        public string Attachments { get; set; } // Attachments
		/// <summary>采购主管意见</summary>	
		[Description("采购主管意见")]
        public string PurchasingSupervisor { get; set; } // PurchasingSupervisor
		/// <summary>部门领导意见</summary>	
		[Description("部门领导意见")]
        public string DeptLeader { get; set; } // DeptLeader
		/// <summary>公司领导意见</summary>	
		[Description("公司领导意见")]
        public string CompanyLeader { get; set; } // CompanyLeader

        // Reverse navigation
		[JsonIgnore]
        public virtual ICollection<T_DeviceManage_ConsumablesPurchase_PaymentDetail> T_DeviceManage_ConsumablesPurchase_PaymentDetail { get { onT_DeviceManage_ConsumablesPurchase_PaymentDetailGetting(); return _T_DeviceManage_ConsumablesPurchase_PaymentDetail;} }
		private ICollection<T_DeviceManage_ConsumablesPurchase_PaymentDetail> _T_DeviceManage_ConsumablesPurchase_PaymentDetail;
		partial void onT_DeviceManage_ConsumablesPurchase_PaymentDetailGetting();

		[JsonIgnore]
        public virtual ICollection<T_DeviceManage_ConsumablesPurchase_PurchaseDetail> T_DeviceManage_ConsumablesPurchase_PurchaseDetail { get { onT_DeviceManage_ConsumablesPurchase_PurchaseDetailGetting(); return _T_DeviceManage_ConsumablesPurchase_PurchaseDetail;} }
		private ICollection<T_DeviceManage_ConsumablesPurchase_PurchaseDetail> _T_DeviceManage_ConsumablesPurchase_PurchaseDetail;
		partial void onT_DeviceManage_ConsumablesPurchase_PurchaseDetailGetting();


        public T_DeviceManage_ConsumablesPurchase()
        {
            _T_DeviceManage_ConsumablesPurchase_PaymentDetail = new List<T_DeviceManage_ConsumablesPurchase_PaymentDetail>();
            _T_DeviceManage_ConsumablesPurchase_PurchaseDetail = new List<T_DeviceManage_ConsumablesPurchase_PurchaseDetail>();
        }
    }

	/// <summary>合同付款计划</summary>	
	[Description("合同付款计划")]
    public partial class T_DeviceManage_ConsumablesPurchase_PaymentDetail : Formula.BaseModel
    {
		/// <summary></summary>	
		[Description("")]
        public string ID { get; set; } // ID (Primary key)
		/// <summary></summary>	
		[Description("")]
        public string T_DeviceManage_ConsumablesPurchaseID { get; set; } // T_DeviceManage_ConsumablesPurchaseID
		/// <summary></summary>	
		[Description("")]
        public double? SortIndex { get; set; } // SortIndex
		/// <summary></summary>	
		[Description("")]
        public string IsReleased { get; set; } // IsReleased
		/// <summary>付款年度</summary>	
		[Description("付款年度")]
        public string PaymentYear { get; set; } // PaymentYear
		/// <summary>付款月度</summary>	
		[Description("付款月度")]
        public string PaymentMonth { get; set; } // PaymentMonth
		/// <summary>付款批次</summary>	
		[Description("付款批次")]
        public string PaymentBatch { get; set; } // PaymentBatch
		/// <summary>付款比例</summary>	
		[Description("付款比例")]
        public string PaymentProportion { get; set; } // PaymentProportion
		/// <summary>付款金额</summary>	
		[Description("付款金额")]
        public string PaymentAmount { get; set; } // PaymentAmount
		/// <summary>付款说明</summary>	
		[Description("付款说明")]
        public string PaymentExplain { get; set; } // PaymentExplain

        // Foreign keys
		[JsonIgnore]
        public virtual T_DeviceManage_ConsumablesPurchase T_DeviceManage_ConsumablesPurchase { get; set; } //  T_DeviceManage_ConsumablesPurchaseID - FK_T_DeviceManage_ConsumablesPurchase_PaymentDetail_T_DeviceManage_ConsumablesPurchase
    }

	/// <summary>采购列表</summary>	
	[Description("采购列表")]
    public partial class T_DeviceManage_ConsumablesPurchase_PurchaseDetail : Formula.BaseModel
    {
		/// <summary></summary>	
		[Description("")]
        public string ID { get; set; } // ID (Primary key)
		/// <summary></summary>	
		[Description("")]
        public string T_DeviceManage_ConsumablesPurchaseID { get; set; } // T_DeviceManage_ConsumablesPurchaseID
		/// <summary></summary>	
		[Description("")]
        public double? SortIndex { get; set; } // SortIndex
		/// <summary></summary>	
		[Description("")]
        public string IsReleased { get; set; } // IsReleased
		/// <summary>地点</summary>	
		[Description("地点")]
        public string Location { get; set; } // Location
		/// <summary>设备分类</summary>	
		[Description("设备分类")]
        public string DeviceCategory { get; set; } // DeviceCategory
		/// <summary>物品名称</summary>	
		[Description("物品名称")]
        public string DeviceName { get; set; } // DeviceName
		/// <summary>品牌</summary>	
		[Description("品牌")]
        public string DeviceBrand { get; set; } // DeviceBrand
		/// <summary>规格型号</summary>	
		[Description("规格型号")]
        public string Specifications { get; set; } // Specifications
		/// <summary>数量</summary>	
		[Description("数量")]
        public string Quantity { get; set; } // Quantity
		/// <summary>单价</summary>	
		[Description("单价")]
        public string UnitPrice { get; set; } // UnitPrice
		/// <summary>单位</summary>	
		[Description("单位")]
        public string Units { get; set; } // Units
		/// <summary>运杂费</summary>	
		[Description("运杂费")]
        public string Incidental { get; set; } // Incidental
		/// <summary>合计</summary>	
		[Description("合计")]
        public string TotalPrice { get; set; } // TotalPrice
		/// <summary>保修信息</summary>	
		[Description("保修信息")]
        public string Information { get; set; } // Information
		/// <summary>性能描述</summary>	
		[Description("性能描述")]
        public string Description { get; set; } // Description

        // Foreign keys
		[JsonIgnore]
        public virtual T_DeviceManage_ConsumablesPurchase T_DeviceManage_ConsumablesPurchase { get; set; } //  T_DeviceManage_ConsumablesPurchaseID - FK_T_DeviceManage_ConsumablesPurchase_PurchaseDetail_T_DeviceManage_ConsumablesPurchase
    }

	/// <summary>设备入库</summary>	
	[Description("设备入库")]
    public partial class T_DeviceManage_Entry : Formula.BaseModel
    {
		/// <summary></summary>	
		[Description("")]
        public string ID { get; set; } // ID (Primary key)
		/// <summary></summary>	
		[Description("")]
        public DateTime? CreateDate { get; set; } // CreateDate
		/// <summary></summary>	
		[Description("")]
        public DateTime? ModifyDate { get; set; } // ModifyDate
		/// <summary></summary>	
		[Description("")]
        public string CreateUserID { get; set; } // CreateUserID
		/// <summary></summary>	
		[Description("")]
        public string CreateUser { get; set; } // CreateUser
		/// <summary></summary>	
		[Description("")]
        public string ModifyUserID { get; set; } // ModifyUserID
		/// <summary></summary>	
		[Description("")]
        public string ModifyUser { get; set; } // ModifyUser
		/// <summary></summary>	
		[Description("")]
        public string OrgID { get; set; } // OrgID
		/// <summary></summary>	
		[Description("")]
        public string CompanyID { get; set; } // CompanyID
		/// <summary></summary>	
		[Description("")]
        public string FlowPhase { get; set; } // FlowPhase
		/// <summary></summary>	
		[Description("")]
        public string FlowInfo { get; set; } // FlowInfo
		/// <summary></summary>	
		[Description("")]
        public string StepName { get; set; } // StepName
		/// <summary>登记人</summary>	
		[Description("登记人")]
        public string Registrant { get; set; } // Registrant
		/// <summary>登记人名称</summary>	
		[Description("登记人名称")]
        public string RegistrantName { get; set; } // RegistrantName
		/// <summary>登记日期</summary>	
		[Description("登记日期")]
        public DateTime? RegistrantDate { get; set; } // RegistrantDate
		/// <summary>采购类型</summary>	
		[Description("采购类型")]
        public string PurchaseCategory { get; set; } // PurchaseCategory
		/// <summary>实际采购日期</summary>	
		[Description("实际采购日期")]
        public DateTime? PurchaseDate { get; set; } // PurchaseDate
		/// <summary>采购申请单</summary>	
		[Description("采购申请单")]
        public string PurchaseForm { get; set; } // PurchaseForm
		/// <summary>采购申请单名称</summary>	
		[Description("采购申请单名称")]
        public string PurchaseFormName { get; set; } // PurchaseFormName
		/// <summary>供应商</summary>	
		[Description("供应商")]
        public string Supplier { get; set; } // Supplier
		/// <summary>供应商名称</summary>	
		[Description("供应商名称")]
        public string SupplierName { get; set; } // SupplierName
		/// <summary>入库列表</summary>	
		[Description("入库列表")]
        public string PurchaseDetail { get; set; } // PurchaseDetail
		/// <summary>附件</summary>	
		[Description("附件")]
        public string Attachments { get; set; } // Attachments
		/// <summary>部门领导意见</summary>	
		[Description("部门领导意见")]
        public string DeptLeader { get; set; } // DeptLeader

        // Reverse navigation
		[JsonIgnore]
        public virtual ICollection<T_DeviceManage_Entry_PurchaseDetail> T_DeviceManage_Entry_PurchaseDetail { get { onT_DeviceManage_Entry_PurchaseDetailGetting(); return _T_DeviceManage_Entry_PurchaseDetail;} }
		private ICollection<T_DeviceManage_Entry_PurchaseDetail> _T_DeviceManage_Entry_PurchaseDetail;
		partial void onT_DeviceManage_Entry_PurchaseDetailGetting();


        public T_DeviceManage_Entry()
        {
            _T_DeviceManage_Entry_PurchaseDetail = new List<T_DeviceManage_Entry_PurchaseDetail>();
        }
    }

	/// <summary>入库列表</summary>	
	[Description("入库列表")]
    public partial class T_DeviceManage_Entry_PurchaseDetail : Formula.BaseModel
    {
		/// <summary></summary>	
		[Description("")]
        public string ID { get; set; } // ID (Primary key)
		/// <summary></summary>	
		[Description("")]
        public string T_DeviceManage_EntryID { get; set; } // T_DeviceManage_EntryID
		/// <summary></summary>	
		[Description("")]
        public double? SortIndex { get; set; } // SortIndex
		/// <summary></summary>	
		[Description("")]
        public string IsReleased { get; set; } // IsReleased
		/// <summary>地点</summary>	
		[Description("地点")]
        public string Location { get; set; } // Location
		/// <summary>设备分类</summary>	
		[Description("设备分类")]
        public string DeviceCategory { get; set; } // DeviceCategory
		/// <summary>物品名称</summary>	
		[Description("物品名称")]
        public string ArticlesName { get; set; } // ArticlesName
		/// <summary>供应商</summary>	
		[Description("供应商")]
        public string Supplier { get; set; } // Supplier
		/// <summary>品牌</summary>	
		[Description("品牌")]
        public string Brand { get; set; } // Brand
		/// <summary>规格型号</summary>	
		[Description("规格型号")]
        public string Specification { get; set; } // Specification
		/// <summary>数量</summary>	
		[Description("数量")]
        public string Quantity { get; set; } // Quantity
		/// <summary>单价</summary>	
		[Description("单价")]
        public string Price { get; set; } // Price
		/// <summary>单位</summary>	
		[Description("单位")]
        public string Units { get; set; } // Units
		/// <summary>合计</summary>	
		[Description("合计")]
        public string TotalPrice { get; set; } // TotalPrice
		/// <summary>设备SN号</summary>	
		[Description("设备SN号")]
        public string SNNumber { get; set; } // SNNumber
		/// <summary>资产类型</summary>	
		[Description("资产类型")]
        public string AssetsType { get; set; } // AssetsType
		/// <summary>备注</summary>	
		[Description("备注")]
        public string Remark { get; set; } // Remark
		/// <summary>状态</summary>	
		[Description("状态")]
        public string Status { get; set; } // Status

        // Foreign keys
		[JsonIgnore]
        public virtual T_DeviceManage_Entry T_DeviceManage_Entry { get; set; } //  T_DeviceManage_EntryID - FK_T_DeviceManage_Entry_PurchaseDetail_T_DeviceManage_Entry
    }

	/// <summary>采购需求上报</summary>	
	[Description("采购需求上报")]
    public partial class T_DeviceManage_PurchaseDemand : Formula.BaseModel
    {
		/// <summary></summary>	
		[Description("")]
        public string ID { get; set; } // ID (Primary key)
		/// <summary></summary>	
		[Description("")]
        public DateTime? CreateDate { get; set; } // CreateDate
		/// <summary></summary>	
		[Description("")]
        public DateTime? ModifyDate { get; set; } // ModifyDate
		/// <summary></summary>	
		[Description("")]
        public string CreateUserID { get; set; } // CreateUserID
		/// <summary></summary>	
		[Description("")]
        public string CreateUser { get; set; } // CreateUser
		/// <summary></summary>	
		[Description("")]
        public string ModifyUserID { get; set; } // ModifyUserID
		/// <summary></summary>	
		[Description("")]
        public string ModifyUser { get; set; } // ModifyUser
		/// <summary></summary>	
		[Description("")]
        public string OrgID { get; set; } // OrgID
		/// <summary></summary>	
		[Description("")]
        public string CompanyID { get; set; } // CompanyID
		/// <summary></summary>	
		[Description("")]
        public string FlowPhase { get; set; } // FlowPhase
		/// <summary></summary>	
		[Description("")]
        public string FlowInfo { get; set; } // FlowInfo
		/// <summary></summary>	
		[Description("")]
        public string StepName { get; set; } // StepName
		/// <summary>填报人</summary>	
		[Description("填报人")]
        public string Applicant { get; set; } // Applicant
		/// <summary>填报人名称</summary>	
		[Description("填报人名称")]
        public string ApplicantName { get; set; } // ApplicantName
		/// <summary>填报人部门</summary>	
		[Description("填报人部门")]
        public string ApplyDept { get; set; } // ApplyDept
		/// <summary>填报人部门名称</summary>	
		[Description("填报人部门名称")]
        public string ApplyDeptName { get; set; } // ApplyDeptName
		/// <summary>填报人电话</summary>	
		[Description("填报人电话")]
        public string ApplyPhone { get; set; } // ApplyPhone
		/// <summary>填报日期</summary>	
		[Description("填报日期")]
        public DateTime? ApplyDate { get; set; } // ApplyDate
		/// <summary>采购需求说明</summary>	
		[Description("采购需求说明")]
        public string DemandDesc { get; set; } // DemandDesc
		/// <summary>采购需求</summary>	
		[Description("采购需求")]
        public string DemandDetail { get; set; } // DemandDetail
		/// <summary>部门领导意见</summary>	
		[Description("部门领导意见")]
        public string DeptLeader { get; set; } // DeptLeader
		/// <summary>信息中心意见</summary>	
		[Description("信息中心意见")]
        public string Information { get; set; } // Information
		/// <summary>设备管理员意见</summary>	
		[Description("设备管理员意见")]
        public string DeviceManagement { get; set; } // DeviceManagement

        // Reverse navigation
		[JsonIgnore]
        public virtual ICollection<T_DeviceManage_PurchaseDemand_DemandDetail> T_DeviceManage_PurchaseDemand_DemandDetail { get { onT_DeviceManage_PurchaseDemand_DemandDetailGetting(); return _T_DeviceManage_PurchaseDemand_DemandDetail;} }
		private ICollection<T_DeviceManage_PurchaseDemand_DemandDetail> _T_DeviceManage_PurchaseDemand_DemandDetail;
		partial void onT_DeviceManage_PurchaseDemand_DemandDetailGetting();


        public T_DeviceManage_PurchaseDemand()
        {
            _T_DeviceManage_PurchaseDemand_DemandDetail = new List<T_DeviceManage_PurchaseDemand_DemandDetail>();
        }
    }

	/// <summary>采购需求</summary>	
	[Description("采购需求")]
    public partial class T_DeviceManage_PurchaseDemand_DemandDetail : Formula.BaseModel
    {
		/// <summary></summary>	
		[Description("")]
        public string ID { get; set; } // ID (Primary key)
		/// <summary></summary>	
		[Description("")]
        public string T_DeviceManage_PurchaseDemandID { get; set; } // T_DeviceManage_PurchaseDemandID
		/// <summary></summary>	
		[Description("")]
        public double? SortIndex { get; set; } // SortIndex
		/// <summary></summary>	
		[Description("")]
        public string IsReleased { get; set; } // IsReleased
		/// <summary>物品名称</summary>	
		[Description("物品名称")]
        public string MaterialsName { get; set; } // MaterialsName
		/// <summary>品牌</summary>	
		[Description("品牌")]
        public string Brand { get; set; } // Brand
		/// <summary>设备分类</summary>	
		[Description("设备分类")]
        public string Category { get; set; } // Category
		/// <summary>规格型号</summary>	
		[Description("规格型号")]
        public string Specifications { get; set; } // Specifications
		/// <summary>数量</summary>	
		[Description("数量")]
        public string Quantity { get; set; } // Quantity
		/// <summary>备注</summary>	
		[Description("备注")]
        public string Remark { get; set; } // Remark

        // Foreign keys
		[JsonIgnore]
        public virtual T_DeviceManage_PurchaseDemand T_DeviceManage_PurchaseDemand { get; set; } //  T_DeviceManage_PurchaseDemandID - FK_T_DeviceManage_PurchaseDemand_DemandDetail_T_DeviceManage_PurchaseDemand
    }

	/// <summary>维保及服务采购</summary>	
	[Description("维保及服务采购")]
    public partial class T_DeviceManage_ServicePurchase : Formula.BaseModel
    {
		/// <summary></summary>	
		[Description("")]
        public string ID { get; set; } // ID (Primary key)
		/// <summary></summary>	
		[Description("")]
        public DateTime? CreateDate { get; set; } // CreateDate
		/// <summary></summary>	
		[Description("")]
        public DateTime? ModifyDate { get; set; } // ModifyDate
		/// <summary></summary>	
		[Description("")]
        public string CreateUserID { get; set; } // CreateUserID
		/// <summary></summary>	
		[Description("")]
        public string CreateUser { get; set; } // CreateUser
		/// <summary></summary>	
		[Description("")]
        public string ModifyUserID { get; set; } // ModifyUserID
		/// <summary></summary>	
		[Description("")]
        public string ModifyUser { get; set; } // ModifyUser
		/// <summary></summary>	
		[Description("")]
        public string OrgID { get; set; } // OrgID
		/// <summary></summary>	
		[Description("")]
        public string CompanyID { get; set; } // CompanyID
		/// <summary></summary>	
		[Description("")]
        public string FlowPhase { get; set; } // FlowPhase
		/// <summary></summary>	
		[Description("")]
        public string FlowInfo { get; set; } // FlowInfo
		/// <summary></summary>	
		[Description("")]
        public string StepName { get; set; } // StepName
		/// <summary>申请人</summary>	
		[Description("申请人")]
        public string Applicant { get; set; } // Applicant
		/// <summary>申请人名称</summary>	
		[Description("申请人名称")]
        public string ApplicantName { get; set; } // ApplicantName
		/// <summary>申请人部门</summary>	
		[Description("申请人部门")]
        public string ApplicantDept { get; set; } // ApplicantDept
		/// <summary>申请人部门名称</summary>	
		[Description("申请人部门名称")]
        public string ApplicantDeptName { get; set; } // ApplicantDeptName
		/// <summary>申请单名称</summary>	
		[Description("申请单名称")]
        public string FormName { get; set; } // FormName
		/// <summary>采购类型</summary>	
		[Description("采购类型")]
        public string Category { get; set; } // Category
		/// <summary>申请原因</summary>	
		[Description("申请原因")]
        public string ApplyReason { get; set; } // ApplyReason
		/// <summary>供应商</summary>	
		[Description("供应商")]
        public string Supplier { get; set; } // Supplier
		/// <summary>供应商名称</summary>	
		[Description("供应商名称")]
        public string SupplierName { get; set; } // SupplierName
		/// <summary>申请采购时间</summary>	
		[Description("申请采购时间")]
        public DateTime? ApplyDate { get; set; } // ApplyDate
		/// <summary>采购金额合计</summary>	
		[Description("采购金额合计")]
        public string TotalPrice { get; set; } // TotalPrice
		/// <summary>采购金额合计大写</summary>	
		[Description("采购金额合计大写")]
        public string TotalPriceCase { get; set; } // TotalPriceCase
		/// <summary>附件</summary>	
		[Description("附件")]
        public string Attachments { get; set; } // Attachments
		/// <summary>综合意见</summary>	
		[Description("综合意见")]
        public string ComprehensiveOpinion { get; set; } // ComprehensiveOpinion
		/// <summary>是否完成立项</summary>	
		[Description("是否完成立项")]
        public string IsCompleted { get; set; } // IsCompleted
		/// <summary>项目类型</summary>	
		[Description("项目类型")]
        public string ProjectType { get; set; } // ProjectType
		/// <summary>项目编号</summary>	
		[Description("项目编号")]
        public string ProjectNumber { get; set; } // ProjectNumber
		/// <summary>项目编号名称</summary>	
		[Description("项目编号名称")]
        public string ProjectNumberName { get; set; } // ProjectNumberName
		/// <summary>项目名称</summary>	
		[Description("项目名称")]
        public string ProjectName { get; set; } // ProjectName
		/// <summary>是否有合同</summary>	
		[Description("是否有合同")]
        public string IsContract { get; set; } // IsContract
		/// <summary>合同类型</summary>	
		[Description("合同类型")]
        public string ContractCategory { get; set; } // ContractCategory
		/// <summary>印章地点</summary>	
		[Description("印章地点")]
        public string SealLocation { get; set; } // SealLocation
		/// <summary>合同号</summary>	
		[Description("合同号")]
        public string ContractNumber { get; set; } // ContractNumber
		/// <summary>合同名称</summary>	
		[Description("合同名称")]
        public string ContractName { get; set; } // ContractName
		/// <summary>合同付款计划</summary>	
		[Description("合同付款计划")]
        public string PaymentDetail { get; set; } // PaymentDetail
		/// <summary>采购主管意见</summary>	
		[Description("采购主管意见")]
        public string PurchasingSupervisor { get; set; } // PurchasingSupervisor
		/// <summary>部门领导意见</summary>	
		[Description("部门领导意见")]
        public string DeptLeader { get; set; } // DeptLeader
		/// <summary>公司领导意见</summary>	
		[Description("公司领导意见")]
        public string CompanyLeader { get; set; } // CompanyLeader

        // Reverse navigation
		[JsonIgnore]
        public virtual ICollection<T_DeviceManage_ServicePurchase_PaymentDetail> T_DeviceManage_ServicePurchase_PaymentDetail { get { onT_DeviceManage_ServicePurchase_PaymentDetailGetting(); return _T_DeviceManage_ServicePurchase_PaymentDetail;} }
		private ICollection<T_DeviceManage_ServicePurchase_PaymentDetail> _T_DeviceManage_ServicePurchase_PaymentDetail;
		partial void onT_DeviceManage_ServicePurchase_PaymentDetailGetting();


        public T_DeviceManage_ServicePurchase()
        {
            _T_DeviceManage_ServicePurchase_PaymentDetail = new List<T_DeviceManage_ServicePurchase_PaymentDetail>();
        }
    }

	/// <summary>合同付款计划</summary>	
	[Description("合同付款计划")]
    public partial class T_DeviceManage_ServicePurchase_PaymentDetail : Formula.BaseModel
    {
		/// <summary></summary>	
		[Description("")]
        public string ID { get; set; } // ID (Primary key)
		/// <summary></summary>	
		[Description("")]
        public string T_DeviceManage_ServicePurchaseID { get; set; } // T_DeviceManage_ServicePurchaseID
		/// <summary></summary>	
		[Description("")]
        public double? SortIndex { get; set; } // SortIndex
		/// <summary></summary>	
		[Description("")]
        public string IsReleased { get; set; } // IsReleased
		/// <summary>付款年度</summary>	
		[Description("付款年度")]
        public string PaymentYear { get; set; } // PaymentYear
		/// <summary>付款月度</summary>	
		[Description("付款月度")]
        public string PaymentMonth { get; set; } // PaymentMonth
		/// <summary>付款批次</summary>	
		[Description("付款批次")]
        public string PaymentBatch { get; set; } // PaymentBatch
		/// <summary>付款比例</summary>	
		[Description("付款比例")]
        public string PaymentProportion { get; set; } // PaymentProportion
		/// <summary>付款金额</summary>	
		[Description("付款金额")]
        public string PaymentAmount { get; set; } // PaymentAmount
		/// <summary>付款说明</summary>	
		[Description("付款说明")]
        public string PaymentExplain { get; set; } // PaymentExplain

        // Foreign keys
		[JsonIgnore]
        public virtual T_DeviceManage_ServicePurchase T_DeviceManage_ServicePurchase { get; set; } //  T_DeviceManage_ServicePurchaseID - FK_T_DeviceManage_ServicePurchase_PaymentDetail_T_DeviceManage_ServicePurchase
    }

	/// <summary>银行融资申请</summary>	
	[Description("银行融资申请")]
    public partial class T_DRA_BankFinancingApplication : Formula.BaseModel
    {
		/// <summary></summary>	
		[Description("")]
        public string ID { get; set; } // ID (Primary key)
		/// <summary>申请日期</summary>	
		[Description("申请日期")]
        public DateTime? CreateDate { get; set; } // CreateDate
		/// <summary></summary>	
		[Description("")]
        public DateTime? ModifyDate { get; set; } // ModifyDate
		/// <summary></summary>	
		[Description("")]
        public string CreateUserID { get; set; } // CreateUserID
		/// <summary>申请人</summary>	
		[Description("申请人")]
        public string CreateUser { get; set; } // CreateUser
		/// <summary></summary>	
		[Description("")]
        public string ModifyUserID { get; set; } // ModifyUserID
		/// <summary></summary>	
		[Description("")]
        public string ModifyUser { get; set; } // ModifyUser
		/// <summary></summary>	
		[Description("")]
        public string OrgID { get; set; } // OrgID
		/// <summary></summary>	
		[Description("")]
        public string CompanyID { get; set; } // CompanyID
		/// <summary></summary>	
		[Description("")]
        public string FlowPhase { get; set; } // FlowPhase
		/// <summary></summary>	
		[Description("")]
        public string FlowInfo { get; set; } // FlowInfo
		/// <summary></summary>	
		[Description("")]
        public string StepName { get; set; } // StepName
		/// <summary>申请部门</summary>	
		[Description("申请部门")]
        public string CreateUserDept { get; set; } // CreateUserDept
		/// <summary>申请部门名称</summary>	
		[Description("申请部门名称")]
        public string CreateUserDeptName { get; set; } // CreateUserDeptName
		/// <summary>融资类别</summary>	
		[Description("融资类别")]
        public string FinancingCategory { get; set; } // FinancingCategory
		/// <summary>融资预估取得时间</summary>	
		[Description("融资预估取得时间")]
        public DateTime? EstimatedFinancingDate { get; set; } // EstimatedFinancingDate
		/// <summary>融资到期日</summary>	
		[Description("融资到期日")]
        public DateTime? FinancingExpireDate { get; set; } // FinancingExpireDate
		/// <summary>项目名称</summary>	
		[Description("项目名称")]
        public string ProjectName { get; set; } // ProjectName
		/// <summary>对方单位(保函受益人)</summary>	
		[Description("对方单位(保函受益人)")]
        public string GuaranteeBeneficiary { get; set; } // GuaranteeBeneficiary
		/// <summary>融资金额</summary>	
		[Description("融资金额")]
        public decimal? FinancingAmount { get; set; } // FinancingAmount
		/// <summary>融资金额大写</summary>	
		[Description("融资金额大写")]
        public string CapsFinancingAmount { get; set; } // CapsFinancingAmount
		/// <summary>附件</summary>	
		[Description("附件")]
        public string Enclosure { get; set; } // Enclosure
		/// <summary>备注</summary>	
		[Description("备注")]
        public string Remark { get; set; } // Remark
		/// <summary>申请人签字意见</summary>	
		[Description("申请人签字意见")]
        public string SQRQZYJ { get; set; } // SQRQZYJ
		/// <summary>部门正职签字意见</summary>	
		[Description("部门正职签字意见")]
        public string BMZZQZYJ { get; set; } // BMZZQZYJ
		/// <summary>总经理签字意见</summary>	
		[Description("总经理签字意见")]
        public string ZJLQZYJ { get; set; } // ZJLQZYJ
		/// <summary>流程结束日期</summary>	
		[Description("流程结束日期")]
        public DateTime? FlowEndDate { get; set; } // FlowEndDate
		/// <summary>提供融资银行</summary>	
		[Description("提供融资银行")]
        public string FinancingBank { get; set; } // FinancingBank
    }

	/// <summary>公积金贷款利息抵扣个税</summary>	
	[Description("公积金贷款利息抵扣个税")]
    public partial class T_DRA_GJJDLLXDKGS : Formula.BaseModel
    {
		/// <summary></summary>	
		[Description("")]
        public string ID { get; set; } // ID (Primary key)
		/// <summary></summary>	
		[Description("")]
        public DateTime? CreateDate { get; set; } // CreateDate
		/// <summary></summary>	
		[Description("")]
        public DateTime? ModifyDate { get; set; } // ModifyDate
		/// <summary></summary>	
		[Description("")]
        public string CreateUserID { get; set; } // CreateUserID
		/// <summary>姓名</summary>	
		[Description("姓名")]
        public string CreateUser { get; set; } // CreateUser
		/// <summary></summary>	
		[Description("")]
        public string ModifyUserID { get; set; } // ModifyUserID
		/// <summary></summary>	
		[Description("")]
        public string ModifyUser { get; set; } // ModifyUser
		/// <summary></summary>	
		[Description("")]
        public string OrgID { get; set; } // OrgID
		/// <summary></summary>	
		[Description("")]
        public string CompanyID { get; set; } // CompanyID
		/// <summary></summary>	
		[Description("")]
        public string FlowPhase { get; set; } // FlowPhase
		/// <summary></summary>	
		[Description("")]
        public string FlowInfo { get; set; } // FlowInfo
		/// <summary></summary>	
		[Description("")]
        public string StepName { get; set; } // StepName
		/// <summary>工号</summary>	
		[Description("工号")]
        public string WokNo { get; set; } // WokNo
		/// <summary>身份证号</summary>	
		[Description("身份证号")]
        public string IDCard { get; set; } // IDCard
		/// <summary>年份</summary>	
		[Description("年份")]
        public string BelongYear { get; set; } // BelongYear
		/// <summary>利息信息</summary>	
		[Description("利息信息")]
        public string InterestInfo { get; set; } // InterestInfo

        // Reverse navigation
		[JsonIgnore]
        public virtual ICollection<T_DRA_GJJDLLXDKGS_InterestInfo> T_DRA_GJJDLLXDKGS_InterestInfo { get { onT_DRA_GJJDLLXDKGS_InterestInfoGetting(); return _T_DRA_GJJDLLXDKGS_InterestInfo;} }
		private ICollection<T_DRA_GJJDLLXDKGS_InterestInfo> _T_DRA_GJJDLLXDKGS_InterestInfo;
		partial void onT_DRA_GJJDLLXDKGS_InterestInfoGetting();


        public T_DRA_GJJDLLXDKGS()
        {
            _T_DRA_GJJDLLXDKGS_InterestInfo = new List<T_DRA_GJJDLLXDKGS_InterestInfo>();
        }
    }

	/// <summary>利息信息</summary>	
	[Description("利息信息")]
    public partial class T_DRA_GJJDLLXDKGS_InterestInfo : Formula.BaseModel
    {
		/// <summary></summary>	
		[Description("")]
        public string ID { get; set; } // ID (Primary key)
		/// <summary></summary>	
		[Description("")]
        public string T_DRA_GJJDLLXDKGSID { get; set; } // T_DRA_GJJDLLXDKGSID
		/// <summary></summary>	
		[Description("")]
        public double? SortIndex { get; set; } // SortIndex
		/// <summary></summary>	
		[Description("")]
        public string IsReleased { get; set; } // IsReleased
		/// <summary>实际还款年份</summary>	
		[Description("实际还款年份")]
        public string ARIBelongYear { get; set; } // ARIBelongYear
		/// <summary>实际还款月份</summary>	
		[Description("实际还款月份")]
        public string ARIBelongMonth { get; set; } // ARIBelongMonth
		/// <summary>实际还款利息(元)</summary>	
		[Description("实际还款利息(元)")]
        public decimal? ActualRepaymentInterest { get; set; } // ActualRepaymentInterest
		/// <summary>实际抵扣年份</summary>	
		[Description("实际抵扣年份")]
        public string ADIBelongYear { get; set; } // ADIBelongYear
		/// <summary>实际抵扣月份</summary>	
		[Description("实际抵扣月份")]
        public string ADIBelongMonth { get; set; } // ADIBelongMonth
		/// <summary>实际抵扣利息(元)</summary>	
		[Description("实际抵扣利息(元)")]
        public decimal? ActualDeductionInterest { get; set; } // ActualDeductionInterest

        // Foreign keys
		[JsonIgnore]
        public virtual T_DRA_GJJDLLXDKGS T_DRA_GJJDLLXDKGS { get; set; } //  T_DRA_GJJDLLXDKGSID - FK_T_DRA_GJJDLLXDKGS_InterestInfo_T_DRA_GJJDLLXDKGS
    }

	/// <summary>保函申请</summary>	
	[Description("保函申请")]
    public partial class T_DRA_IncludeApplication : Formula.BaseModel
    {
		/// <summary></summary>	
		[Description("")]
        public string ID { get; set; } // ID (Primary key)
		/// <summary>申请日期</summary>	
		[Description("申请日期")]
        public DateTime? CreateDate { get; set; } // CreateDate
		/// <summary></summary>	
		[Description("")]
        public DateTime? ModifyDate { get; set; } // ModifyDate
		/// <summary></summary>	
		[Description("")]
        public string CreateUserID { get; set; } // CreateUserID
		/// <summary>申请人</summary>	
		[Description("申请人")]
        public string CreateUser { get; set; } // CreateUser
		/// <summary></summary>	
		[Description("")]
        public string ModifyUserID { get; set; } // ModifyUserID
		/// <summary></summary>	
		[Description("")]
        public string ModifyUser { get; set; } // ModifyUser
		/// <summary></summary>	
		[Description("")]
        public string OrgID { get; set; } // OrgID
		/// <summary></summary>	
		[Description("")]
        public string CompanyID { get; set; } // CompanyID
		/// <summary></summary>	
		[Description("")]
        public string FlowPhase { get; set; } // FlowPhase
		/// <summary></summary>	
		[Description("")]
        public string FlowInfo { get; set; } // FlowInfo
		/// <summary></summary>	
		[Description("")]
        public string StepName { get; set; } // StepName
		/// <summary>申请人部门</summary>	
		[Description("申请人部门")]
        public string CreateUserDept { get; set; } // CreateUserDept
		/// <summary>申请人部门名称</summary>	
		[Description("申请人部门名称")]
        public string CreateUserDeptName { get; set; } // CreateUserDeptName
		/// <summary>申请人电话</summary>	
		[Description("申请人电话")]
        public string CreateUserPhone { get; set; } // CreateUserPhone
		/// <summary>保函类型</summary>	
		[Description("保函类型")]
        public string GuaranteeType { get; set; } // GuaranteeType
		/// <summary>保函金额</summary>	
		[Description("保函金额")]
        public decimal? GuaranteeAmount { get; set; } // GuaranteeAmount
		/// <summary>保函金额大写</summary>	
		[Description("保函金额大写")]
        public string CapsGuaranteeAmount { get; set; } // CapsGuaranteeAmount
		/// <summary>保函受益人</summary>	
		[Description("保函受益人")]
        public string GuaranteeBeneficiary { get; set; } // GuaranteeBeneficiary
		/// <summary>开具保函银行</summary>	
		[Description("开具保函银行")]
        public string IssuedGuaranteeBank { get; set; } // IssuedGuaranteeBank
		/// <summary>保函到期日期</summary>	
		[Description("保函到期日期")]
        public DateTime? GuaranteeExpiryDate { get; set; } // GuaranteeExpiryDate
		/// <summary>处理方式</summary>	
		[Description("处理方式")]
        public string HandleMode { get; set; } // HandleMode
		/// <summary>最迟取得保函日期</summary>	
		[Description("最迟取得保函日期")]
        public DateTime? GuaranteeLatestDate { get; set; } // GuaranteeLatestDate
		/// <summary>合同附件</summary>	
		[Description("合同附件")]
        public string ContractEnclosure { get; set; } // ContractEnclosure
		/// <summary>说明</summary>	
		[Description("说明")]
        public string Remark { get; set; } // Remark
		/// <summary>申请人签字意见</summary>	
		[Description("申请人签字意见")]
        public string SQRQZYJ { get; set; } // SQRQZYJ
		/// <summary>部门正职签字意见</summary>	
		[Description("部门正职签字意见")]
        public string BMZZQZYJ { get; set; } // BMZZQZYJ
		/// <summary>公司生管副总</summary>	
		[Description("公司生管副总")]
        public string GSSGFZ { get; set; } // GSSGFZ
		/// <summary>财务部经办人</summary>	
		[Description("财务部经办人")]
        public string CWBJBR { get; set; } // CWBJBR
		/// <summary>财务部办公室主任</summary>	
		[Description("财务部办公室主任")]
        public string CWBBGSZR { get; set; } // CWBBGSZR
		/// <summary>流程结束日期</summary>	
		[Description("流程结束日期")]
        public DateTime? FlowEndDate { get; set; } // FlowEndDate
    }

	/// <summary>开收据流程</summary>	
	[Description("开收据流程")]
    public partial class T_DRA_ReceiptAcquittanceForm : Formula.BaseModel
    {
		/// <summary></summary>	
		[Description("")]
        public string ID { get; set; } // ID (Primary key)
		/// <summary>申请日期</summary>	
		[Description("申请日期")]
        public DateTime? CreateDate { get; set; } // CreateDate
		/// <summary></summary>	
		[Description("")]
        public DateTime? ModifyDate { get; set; } // ModifyDate
		/// <summary></summary>	
		[Description("")]
        public string CreateUserID { get; set; } // CreateUserID
		/// <summary>申请人</summary>	
		[Description("申请人")]
        public string CreateUser { get; set; } // CreateUser
		/// <summary></summary>	
		[Description("")]
        public string ModifyUserID { get; set; } // ModifyUserID
		/// <summary></summary>	
		[Description("")]
        public string ModifyUser { get; set; } // ModifyUser
		/// <summary></summary>	
		[Description("")]
        public string OrgID { get; set; } // OrgID
		/// <summary></summary>	
		[Description("")]
        public string CompanyID { get; set; } // CompanyID
		/// <summary></summary>	
		[Description("")]
        public string FlowPhase { get; set; } // FlowPhase
		/// <summary></summary>	
		[Description("")]
        public string FlowInfo { get; set; } // FlowInfo
		/// <summary></summary>	
		[Description("")]
        public string StepName { get; set; } // StepName
		/// <summary>申请人部门</summary>	
		[Description("申请人部门")]
        public string CreateUserDept { get; set; } // CreateUserDept
		/// <summary>申请人部门名称</summary>	
		[Description("申请人部门名称")]
        public string CreateUserDeptName { get; set; } // CreateUserDeptName
		/// <summary>申请人电话</summary>	
		[Description("申请人电话")]
        public string CreateUserPhone { get; set; } // CreateUserPhone
		/// <summary>顾客名称</summary>	
		[Description("顾客名称")]
        public string CustomerName { get; set; } // CustomerName
		/// <summary>申请地点</summary>	
		[Description("申请地点")]
        public string ApplicationPlace { get; set; } // ApplicationPlace
		/// <summary>开收据金额</summary>	
		[Description("开收据金额")]
        public decimal? ReceiptAmount { get; set; } // ReceiptAmount
		/// <summary>开收据金额大写</summary>	
		[Description("开收据金额大写")]
        public string CapsReceiptAmount { get; set; } // CapsReceiptAmount
		/// <summary>票据处理方式</summary>	
		[Description("票据处理方式")]
        public string BillProcessingMethod { get; set; } // BillProcessingMethod
		/// <summary>预计回款日期</summary>	
		[Description("预计回款日期")]
        public DateTime? EstimatedCollectionDate { get; set; } // EstimatedCollectionDate
		/// <summary>收据事由</summary>	
		[Description("收据事由")]
        public string ReceiptReason { get; set; } // ReceiptReason
		/// <summary>备注</summary>	
		[Description("备注")]
        public string Remark { get; set; } // Remark
		/// <summary>邮寄信息</summary>	
		[Description("邮寄信息")]
        public string MailInfo { get; set; } // MailInfo
		/// <summary>实际开收据日期</summary>	
		[Description("实际开收据日期")]
        public DateTime? ActualReceiptDate { get; set; } // ActualReceiptDate
		/// <summary>收据编号</summary>	
		[Description("收据编号")]
        public string ReceiptCode { get; set; } // ReceiptCode
		/// <summary>收据张数</summary>	
		[Description("收据张数")]
        public int? ReceiptCount { get; set; } // ReceiptCount
		/// <summary>取收据人</summary>	
		[Description("取收据人")]
        public string TakeReceiptPerson { get; set; } // TakeReceiptPerson
		/// <summary>取收据人名称</summary>	
		[Description("取收据人名称")]
        public string TakeReceiptPersonName { get; set; } // TakeReceiptPersonName
		/// <summary>快递单号</summary>	
		[Description("快递单号")]
        public string CourierNumber { get; set; } // CourierNumber
		/// <summary>申请人签字意见</summary>	
		[Description("申请人签字意见")]
        public string SQRQZYJ { get; set; } // SQRQZYJ
		/// <summary>部门正职签字意见</summary>	
		[Description("部门正职签字意见")]
        public string BMZZQZYJ { get; set; } // BMZZQZYJ
		/// <summary>财务部正职签字意见</summary>	
		[Description("财务部正职签字意见")]
        public string CWBZZQZYJ { get; set; } // CWBZZQZYJ
		/// <summary>财务出纳签字意见</summary>	
		[Description("财务出纳签字意见")]
        public string CWCNQZYJ { get; set; } // CWCNQZYJ
		/// <summary>流程结束日期</summary>	
		[Description("流程结束日期")]
        public DateTime? FlowEndDate { get; set; } // FlowEndDate
    }

	/// <summary>工程立项申请Demo</summary>	
	[Description("工程立项申请Demo")]
    public partial class T_EngineeringBuildApplyDemo : Formula.BaseModel
    {
		/// <summary></summary>	
		[Description("")]
        public string ID { get; set; } // ID (Primary key)
		/// <summary></summary>	
		[Description("")]
        public DateTime? CreateDate { get; set; } // CreateDate
		/// <summary></summary>	
		[Description("")]
        public DateTime? ModifyDate { get; set; } // ModifyDate
		/// <summary></summary>	
		[Description("")]
        public string CreateUserID { get; set; } // CreateUserID
		/// <summary></summary>	
		[Description("")]
        public string CreateUser { get; set; } // CreateUser
		/// <summary></summary>	
		[Description("")]
        public string ModifyUserID { get; set; } // ModifyUserID
		/// <summary></summary>	
		[Description("")]
        public string ModifyUser { get; set; } // ModifyUser
		/// <summary></summary>	
		[Description("")]
        public string OrgID { get; set; } // OrgID
		/// <summary></summary>	
		[Description("")]
        public string CompanyID { get; set; } // CompanyID
		/// <summary></summary>	
		[Description("")]
        public string FlowPhase { get; set; } // FlowPhase
		/// <summary></summary>	
		[Description("")]
        public string FlowInfo { get; set; } // FlowInfo
		/// <summary></summary>	
		[Description("")]
        public string StepName { get; set; } // StepName
		/// <summary>项目名称</summary>	
		[Description("项目名称")]
        public string Name { get; set; } // Name
		/// <summary>项目编号</summary>	
		[Description("项目编号")]
        public string SerialNumber { get; set; } // SerialNumber
		/// <summary>客户名称</summary>	
		[Description("客户名称")]
        public string CustomerInfo { get; set; } // CustomerInfo
		/// <summary>客户名称名称</summary>	
		[Description("客户名称名称")]
        public string CustomerInfoName { get; set; } // CustomerInfoName
		/// <summary>客户编号</summary>	
		[Description("客户编号")]
        public string CustomerCode { get; set; } // CustomerCode
		/// <summary>客户地址</summary>	
		[Description("客户地址")]
        public string CustomerAddress { get; set; } // CustomerAddress
		/// <summary>项目类别</summary>	
		[Description("项目类别")]
        public string ProjectClass { get; set; } // ProjectClass
		/// <summary>项目规模</summary>	
		[Description("项目规模")]
        public string ProjectScale { get; set; } // ProjectScale
		/// <summary>项目所处阶段</summary>	
		[Description("项目所处阶段")]
        public string ProjectPhase { get; set; } // ProjectPhase
		/// <summary>销售周期</summary>	
		[Description("销售周期")]
        public string SalePeriod { get; set; } // SalePeriod
		/// <summary>项目产值</summary>	
		[Description("项目产值")]
        public string ProductionValue { get; set; } // ProductionValue
		/// <summary>建设方式</summary>	
		[Description("建设方式")]
        public string BuildType { get; set; } // BuildType
		/// <summary>项目周期</summary>	
		[Description("项目周期")]
        public string ProjectPreiod { get; set; } // ProjectPreiod
		/// <summary>竞标状态</summary>	
		[Description("竞标状态")]
        public string Competition { get; set; } // Competition
		/// <summary>是否公司考察</summary>	
		[Description("是否公司考察")]
        public string IsInvestigate { get; set; } // IsInvestigate
		/// <summary>是否业绩考察</summary>	
		[Description("是否业绩考察")]
        public string ExaminePerformance { get; set; } // ExaminePerformance
		/// <summary>考察日期</summary>	
		[Description("考察日期")]
        public DateTime? IsInvestigateDate { get; set; } // IsInvestigateDate
		/// <summary>考察项目</summary>	
		[Description("考察项目")]
        public string IsInvestigateProject { get; set; } // IsInvestigateProject
		/// <summary>承包方式</summary>	
		[Description("承包方式")]
        public string ContractMode { get; set; } // ContractMode
		/// <summary>详细说明</summary>	
		[Description("详细说明")]
        public string ProjectContent { get; set; } // ProjectContent
		/// <summary>优势</summary>	
		[Description("优势")]
        public string Advantage { get; set; } // Advantage
		/// <summary>预计成功率</summary>	
		[Description("预计成功率")]
        public string SuccessRate { get; set; } // SuccessRate
		/// <summary>是否立项</summary>	
		[Description("是否立项")]
        public string CanBuilder { get; set; } // CanBuilder
		/// <summary>补充内容</summary>	
		[Description("补充内容")]
        public string Remark { get; set; } // Remark
		/// <summary>State</summary>	
		[Description("State")]
        public string State { get; set; } // State
		/// <summary>附件</summary>	
		[Description("附件")]
        public string Attachment { get; set; } // Attachment
		/// <summary>申请人</summary>	
		[Description("申请人")]
        public string Register { get; set; } // Register
		/// <summary>申请人名称</summary>	
		[Description("申请人名称")]
        public string RegisterName { get; set; } // RegisterName
		/// <summary>申请日期</summary>	
		[Description("申请日期")]
        public DateTime? RegistDate { get; set; } // RegistDate
		/// <summary>报价部签字</summary>	
		[Description("报价部签字")]
        public string DeptSign { get; set; } // DeptSign
		/// <summary>销售总监签字</summary>	
		[Description("销售总监签字")]
        public string SaleDirectorSign { get; set; } // SaleDirectorSign
		/// <summary>总经理签字</summary>	
		[Description("总经理签字")]
        public string CEOSign { get; set; } // CEOSign
		/// <summary>ClueID</summary>	
		[Description("ClueID")]
        public string ClueID { get; set; } // ClueID
		/// <summary>是否重点客户</summary>	
		[Description("是否重点客户")]
        public string IsImportantCustomer { get; set; } // IsImportantCustomer
		/// <summary>纬度</summary>	
		[Description("纬度")]
        public string Lat { get; set; } // Lat
		/// <summary>经度</summary>	
		[Description("经度")]
        public string Long { get; set; } // Long
		/// <summary>省份</summary>	
		[Description("省份")]
        public string Province { get; set; } // Province
		/// <summary>城市</summary>	
		[Description("城市")]
        public string City { get; set; } // City
		/// <summary>所在区域</summary>	
		[Description("所在区域")]
        public string Area { get; set; } // Area
		/// <summary>工程地址</summary>	
		[Description("工程地址")]
        public string EngineerAddress { get; set; } // EngineerAddress
		/// <summary>责任部门</summary>	
		[Description("责任部门")]
        public string ChargerDept { get; set; } // ChargerDept
		/// <summary>责任部门名称</summary>	
		[Description("责任部门名称")]
        public string ChargerDeptName { get; set; } // ChargerDeptName

        // Reverse navigation
		[JsonIgnore]
        public virtual ICollection<T_EngineeringBuildApplyDemo_Competitor> T_EngineeringBuildApplyDemo_Competitor { get { onT_EngineeringBuildApplyDemo_CompetitorGetting(); return _T_EngineeringBuildApplyDemo_Competitor;} }
		private ICollection<T_EngineeringBuildApplyDemo_Competitor> _T_EngineeringBuildApplyDemo_Competitor;
		partial void onT_EngineeringBuildApplyDemo_CompetitorGetting();

		[JsonIgnore]
        public virtual ICollection<T_EngineeringBuildApplyDemo_CustomerContace> T_EngineeringBuildApplyDemo_CustomerContace { get { onT_EngineeringBuildApplyDemo_CustomerContaceGetting(); return _T_EngineeringBuildApplyDemo_CustomerContace;} }
		private ICollection<T_EngineeringBuildApplyDemo_CustomerContace> _T_EngineeringBuildApplyDemo_CustomerContace;
		partial void onT_EngineeringBuildApplyDemo_CustomerContaceGetting();


        public T_EngineeringBuildApplyDemo()
        {
            _T_EngineeringBuildApplyDemo_Competitor = new List<T_EngineeringBuildApplyDemo_Competitor>();
            _T_EngineeringBuildApplyDemo_CustomerContace = new List<T_EngineeringBuildApplyDemo_CustomerContace>();
        }
    }

	/// <summary>竞争对手</summary>	
	[Description("竞争对手")]
    public partial class T_EngineeringBuildApplyDemo_Competitor : Formula.BaseModel
    {
		/// <summary></summary>	
		[Description("")]
        public string ID { get; set; } // ID (Primary key)
		/// <summary></summary>	
		[Description("")]
        public string T_EngineeringBuildApplyDemoID { get; set; } // T_EngineeringBuildApplyDemoID
		/// <summary></summary>	
		[Description("")]
        public double? SortIndex { get; set; } // SortIndex
		/// <summary></summary>	
		[Description("")]
        public string IsReleased { get; set; } // IsReleased
		/// <summary>竞争对手名称</summary>	
		[Description("竞争对手名称")]
        public string Competitor { get; set; } // Competitor
		/// <summary>对手说明</summary>	
		[Description("对手说明")]
        public string Remark { get; set; } // Remark

        // Foreign keys
		[JsonIgnore]
        public virtual T_EngineeringBuildApplyDemo T_EngineeringBuildApplyDemo { get; set; } //  T_EngineeringBuildApplyDemoID - FK_T_EngineeringBuildApplyDemo_Competitor_T_EngineeringBuildApplyDemo
    }

	/// <summary>客户联系人</summary>	
	[Description("客户联系人")]
    public partial class T_EngineeringBuildApplyDemo_CustomerContace : Formula.BaseModel
    {
		/// <summary></summary>	
		[Description("")]
        public string ID { get; set; } // ID (Primary key)
		/// <summary></summary>	
		[Description("")]
        public string T_EngineeringBuildApplyDemoID { get; set; } // T_EngineeringBuildApplyDemoID
		/// <summary></summary>	
		[Description("")]
        public double? SortIndex { get; set; } // SortIndex
		/// <summary></summary>	
		[Description("")]
        public string IsReleased { get; set; } // IsReleased
		/// <summary>联系人</summary>	
		[Description("联系人")]
        public string Name { get; set; } // Name
		/// <summary>职位</summary>	
		[Description("职位")]
        public string Position { get; set; } // Position
		/// <summary>手机</summary>	
		[Description("手机")]
        public string CellPhone { get; set; } // CellPhone
		/// <summary>座机</summary>	
		[Description("座机")]
        public string OfficePhone { get; set; } // OfficePhone
		/// <summary>电子邮件</summary>	
		[Description("电子邮件")]
        public string EMail { get; set; } // EMail
		/// <summary>备注</summary>	
		[Description("备注")]
        public string Remark { get; set; } // Remark

        // Foreign keys
		[JsonIgnore]
        public virtual T_EngineeringBuildApplyDemo T_EngineeringBuildApplyDemo { get; set; } //  T_EngineeringBuildApplyDemoID - FK_T_EngineeringBuildApplyDemo_CustomerContace_T_EngineeringBuildApplyDemo
    }

	/// <summary>借款申请单</summary>	
	[Description("借款申请单")]
    public partial class T_F_LoanApply : Formula.BaseModel
    {
		/// <summary></summary>	
		[Description("")]
        public string ID { get; set; } // ID (Primary key)
		/// <summary></summary>	
		[Description("")]
        public DateTime? CreateDate { get; set; } // CreateDate
		/// <summary></summary>	
		[Description("")]
        public DateTime? ModifyDate { get; set; } // ModifyDate
		/// <summary></summary>	
		[Description("")]
        public string CreateUserID { get; set; } // CreateUserID
		/// <summary></summary>	
		[Description("")]
        public string CreateUser { get; set; } // CreateUser
		/// <summary></summary>	
		[Description("")]
        public string ModifyUserID { get; set; } // ModifyUserID
		/// <summary></summary>	
		[Description("")]
        public string ModifyUser { get; set; } // ModifyUser
		/// <summary></summary>	
		[Description("")]
        public string OrgID { get; set; } // OrgID
		/// <summary></summary>	
		[Description("")]
        public string CompanyID { get; set; } // CompanyID
		/// <summary></summary>	
		[Description("")]
        public string FlowPhase { get; set; } // FlowPhase
		/// <summary></summary>	
		[Description("")]
        public string FlowInfo { get; set; } // FlowInfo
		/// <summary></summary>	
		[Description("")]
        public string StepName { get; set; } // StepName
		/// <summary>表单编号</summary>	
		[Description("表单编号")]
        public string SerialNumber { get; set; } // SerialNumber
		/// <summary>借款人</summary>	
		[Description("借款人")]
        public string ApplyUser { get; set; } // ApplyUser
		/// <summary>借款人名称</summary>	
		[Description("借款人名称")]
        public string ApplyUserName { get; set; } // ApplyUserName
		/// <summary>借款人部门</summary>	
		[Description("借款人部门")]
        public string ApplyDept { get; set; } // ApplyDept
		/// <summary>借款人部门名称</summary>	
		[Description("借款人部门名称")]
        public string ApplyDeptName { get; set; } // ApplyDeptName
		/// <summary>申请时间</summary>	
		[Description("申请时间")]
        public DateTime? ApplyDate { get; set; } // ApplyDate
		/// <summary>借款金额（元）</summary>	
		[Description("借款金额（元）")]
        public decimal? LoanValue { get; set; } // LoanValue
		/// <summary>款项用途</summary>	
		[Description("款项用途")]
        public string Reason { get; set; } // Reason
		/// <summary>相关项目</summary>	
		[Description("相关项目")]
        public string ProjectInfo { get; set; } // ProjectInfo
		/// <summary>相关项目</summary>	
		[Description("相关项目")]
        public string ProjectInfoName { get; set; } // ProjectInfoName
		/// <summary>说明</summary>	
		[Description("说明")]
        public string Remark { get; set; } // Remark
		/// <summary>附件</summary>	
		[Description("附件")]
        public string Attachment { get; set; } // Attachment
		/// <summary>实际借出金额（元）</summary>	
		[Description("实际借出金额（元）")]
        public decimal? FactValue { get; set; } // FactValue
		/// <summary>申请金额大写</summary>	
		[Description("申请金额大写")]
        public string LoanValueDX { get; set; } // LoanValueDX
		/// <summary>实际借出大写</summary>	
		[Description("实际借出大写")]
        public string FactValueDX { get; set; } // FactValueDX
		/// <summary>关联出差申请单</summary>	
		[Description("关联出差申请单")]
        public string TravelApply { get; set; } // TravelApply
		/// <summary>关联出差申请单</summary>	
		[Description("关联出差申请单")]
        public string TravelApplyName { get; set; } // TravelApplyName
    }

	/// <summary>付款申请表</summary>	
	[Description("付款申请表")]
    public partial class T_F_PaymentApply : Formula.BaseModel
    {
		/// <summary></summary>	
		[Description("")]
        public string ID { get; set; } // ID (Primary key)
		/// <summary></summary>	
		[Description("")]
        public DateTime? CreateDate { get; set; } // CreateDate
		/// <summary></summary>	
		[Description("")]
        public DateTime? ModifyDate { get; set; } // ModifyDate
		/// <summary></summary>	
		[Description("")]
        public string CreateUserID { get; set; } // CreateUserID
		/// <summary></summary>	
		[Description("")]
        public string CreateUser { get; set; } // CreateUser
		/// <summary></summary>	
		[Description("")]
        public string ModifyUserID { get; set; } // ModifyUserID
		/// <summary></summary>	
		[Description("")]
        public string ModifyUser { get; set; } // ModifyUser
		/// <summary></summary>	
		[Description("")]
        public string OrgID { get; set; } // OrgID
		/// <summary></summary>	
		[Description("")]
        public string CompanyID { get; set; } // CompanyID
		/// <summary></summary>	
		[Description("")]
        public string FlowPhase { get; set; } // FlowPhase
		/// <summary></summary>	
		[Description("")]
        public string FlowInfo { get; set; } // FlowInfo
		/// <summary></summary>	
		[Description("")]
        public string StepName { get; set; } // StepName
		/// <summary>申请人</summary>	
		[Description("申请人")]
        public string ApplyUser { get; set; } // ApplyUser
		/// <summary>申请人名称</summary>	
		[Description("申请人名称")]
        public string ApplyUserName { get; set; } // ApplyUserName
		/// <summary>申请部门</summary>	
		[Description("申请部门")]
        public string ApplyDept { get; set; } // ApplyDept
		/// <summary>申请部门名称</summary>	
		[Description("申请部门名称")]
        public string ApplyDeptName { get; set; } // ApplyDeptName
		/// <summary>申请日期</summary>	
		[Description("申请日期")]
        public DateTime? ApplyDate { get; set; } // ApplyDate
		/// <summary>付款类别</summary>	
		[Description("付款类别")]
        public string PaymentType { get; set; } // PaymentType
		/// <summary>申请金额</summary>	
		[Description("申请金额")]
        public decimal? ApplyValue { get; set; } // ApplyValue
		/// <summary>申请金额大写</summary>	
		[Description("申请金额大写")]
        public string ApplyValueDX { get; set; } // ApplyValueDX
		/// <summary>相关合同</summary>	
		[Description("相关合同")]
        public string Contract { get; set; } // Contract
		/// <summary>相关合同名称</summary>	
		[Description("相关合同名称")]
        public string ContractName { get; set; } // ContractName
		/// <summary>合同已支付</summary>	
		[Description("合同已支付")]
        public decimal? PaymentValue { get; set; } // PaymentValue
		/// <summary>合同总金额</summary>	
		[Description("合同总金额")]
        public decimal? ContractValue { get; set; } // ContractValue
		/// <summary>收款单位</summary>	
		[Description("收款单位")]
        public string ReceiptUnit { get; set; } // ReceiptUnit
		/// <summary>付款说明</summary>	
		[Description("付款说明")]
        public string Remark { get; set; } // Remark
		/// <summary>项目名称</summary>	
		[Description("项目名称")]
        public string ProjectInfo { get; set; } // ProjectInfo
		/// <summary>项目名称名称</summary>	
		[Description("项目名称名称")]
        public string ProjectInfoName { get; set; } // ProjectInfoName
		/// <summary>科目名称</summary>	
		[Description("科目名称")]
        public string SubjectCode { get; set; } // SubjectCode
    }

	/// <summary>报销单</summary>	
	[Description("报销单")]
    public partial class T_F_ReimbursementApply : Formula.BaseModel
    {
		/// <summary></summary>	
		[Description("")]
        public string ID { get; set; } // ID (Primary key)
		/// <summary></summary>	
		[Description("")]
        public DateTime? CreateDate { get; set; } // CreateDate
		/// <summary></summary>	
		[Description("")]
        public DateTime? ModifyDate { get; set; } // ModifyDate
		/// <summary></summary>	
		[Description("")]
        public string CreateUserID { get; set; } // CreateUserID
		/// <summary></summary>	
		[Description("")]
        public string CreateUser { get; set; } // CreateUser
		/// <summary></summary>	
		[Description("")]
        public string ModifyUserID { get; set; } // ModifyUserID
		/// <summary></summary>	
		[Description("")]
        public string ModifyUser { get; set; } // ModifyUser
		/// <summary></summary>	
		[Description("")]
        public string OrgID { get; set; } // OrgID
		/// <summary></summary>	
		[Description("")]
        public string CompanyID { get; set; } // CompanyID
		/// <summary></summary>	
		[Description("")]
        public string FlowPhase { get; set; } // FlowPhase
		/// <summary></summary>	
		[Description("")]
        public string FlowInfo { get; set; } // FlowInfo
		/// <summary></summary>	
		[Description("")]
        public string StepName { get; set; } // StepName
		/// <summary>申请人</summary>	
		[Description("申请人")]
        public string ApplyUser { get; set; } // ApplyUser
		/// <summary>申请人名称</summary>	
		[Description("申请人名称")]
        public string ApplyUserName { get; set; } // ApplyUserName
		/// <summary>申请日期</summary>	
		[Description("申请日期")]
        public DateTime? ApplyDate { get; set; } // ApplyDate
		/// <summary>申请人部门</summary>	
		[Description("申请人部门")]
        public string ApplyDept { get; set; } // ApplyDept
		/// <summary>申请人部门名称</summary>	
		[Description("申请人部门名称")]
        public string ApplyDeptName { get; set; } // ApplyDeptName
		/// <summary>类型</summary>	
		[Description("类型")]
        public string ReimbursementType { get; set; } // ReimbursementType
		/// <summary>报销形式</summary>	
		[Description("报销形式")]
        public string ReimbursementClass { get; set; } // ReimbursementClass
		/// <summary>相关责任部门</summary>	
		[Description("相关责任部门")]
        public string DeptInfo { get; set; } // DeptInfo
		/// <summary>相关责任部门名称</summary>	
		[Description("相关责任部门名称")]
        public string DeptInfoName { get; set; } // DeptInfoName
		/// <summary>关联出差申请单</summary>	
		[Description("关联出差申请单")]
        public string TravelApplyInfo { get; set; } // TravelApplyInfo
		/// <summary>关联出差申请单名称</summary>	
		[Description("关联出差申请单名称")]
        public string TravelApplyInfoName { get; set; } // TravelApplyInfoName
		/// <summary>实际支付金额</summary>	
		[Description("实际支付金额")]
        public decimal? FactPaymentValue { get; set; } // FactPaymentValue
		/// <summary>报销金额总计</summary>	
		[Description("报销金额总计")]
        public decimal? ReimbursementValue { get; set; } // ReimbursementValue
		/// <summary>申请支付金额</summary>	
		[Description("申请支付金额")]
        public decimal? ApplyValue { get; set; } // ApplyValue
		/// <summary>欠款</summary>	
		[Description("欠款")]
        public decimal? LoanValue { get; set; } // LoanValue
		/// <summary>附件</summary>	
		[Description("附件")]
        public string Attachments { get; set; } // Attachments
		/// <summary>备注</summary>	
		[Description("备注")]
        public string Remark { get; set; } // Remark
		/// <summary>报销单编号</summary>	
		[Description("报销单编号")]
        public string SerialNumber { get; set; } // SerialNumber
		/// <summary>关联项目</summary>	
		[Description("关联项目")]
        public string ProjectInfo { get; set; } // ProjectInfo
		/// <summary>关联项目名称</summary>	
		[Description("关联项目名称")]
        public string ProjectInfoName { get; set; } // ProjectInfoName
		/// <summary>明细</summary>	
		[Description("明细")]
        public string Details { get; set; } // Details

        // Reverse navigation
		[JsonIgnore]
        public virtual ICollection<T_F_ReimbursementApply_Details> T_F_ReimbursementApply_Details { get { onT_F_ReimbursementApply_DetailsGetting(); return _T_F_ReimbursementApply_Details;} }
		private ICollection<T_F_ReimbursementApply_Details> _T_F_ReimbursementApply_Details;
		partial void onT_F_ReimbursementApply_DetailsGetting();


        public T_F_ReimbursementApply()
        {
            _T_F_ReimbursementApply_Details = new List<T_F_ReimbursementApply_Details>();
        }
    }

	/// <summary>明细</summary>	
	[Description("明细")]
    public partial class T_F_ReimbursementApply_Details : Formula.BaseModel
    {
		/// <summary></summary>	
		[Description("")]
        public string ID { get; set; } // ID (Primary key)
		/// <summary></summary>	
		[Description("")]
        public string T_F_ReimbursementApplyID { get; set; } // T_F_ReimbursementApplyID
		/// <summary></summary>	
		[Description("")]
        public double? SortIndex { get; set; } // SortIndex
		/// <summary></summary>	
		[Description("")]
        public string IsReleased { get; set; } // IsReleased
		/// <summary>项目名称</summary>	
		[Description("项目名称")]
        public string ProjectInfo { get; set; } // ProjectInfo
		/// <summary>项目名称名称</summary>	
		[Description("项目名称名称")]
        public string ProjectInfoName { get; set; } // ProjectInfoName
		/// <summary>费用科目</summary>	
		[Description("费用科目")]
        public string SubjectCode { get; set; } // SubjectCode
		/// <summary>申报金额（元）</summary>	
		[Description("申报金额（元）")]
        public decimal? ApplyValue { get; set; } // ApplyValue
		/// <summary>备注</summary>	
		[Description("备注")]
        public string Remark { get; set; } // Remark
		/// <summary>ProjectType</summary>	
		[Description("ProjectType")]
        public string ProjectType { get; set; } // ProjectType
		/// <summary>部门</summary>	
		[Description("部门")]
        public string Dept { get; set; } // Dept
		/// <summary>部门名称</summary>	
		[Description("部门名称")]
        public string DeptName { get; set; } // DeptName

        // Foreign keys
		[JsonIgnore]
        public virtual T_F_ReimbursementApply T_F_ReimbursementApply { get; set; } //  T_F_ReimbursementApplyID - FK_T_F_ReimbursementApply_Details_T_F_ReimbursementApply
    }

	/// <summary>财务电子文档下载申请单</summary>	
	[Description("财务电子文档下载申请单")]
    public partial class T_FDM_FinanceElectronicDocumentDownload : Formula.BaseModel
    {
		/// <summary></summary>	
		[Description("")]
        public string ID { get; set; } // ID (Primary key)
		/// <summary>申请日期</summary>	
		[Description("申请日期")]
        public DateTime? CreateDate { get; set; } // CreateDate
		/// <summary></summary>	
		[Description("")]
        public DateTime? ModifyDate { get; set; } // ModifyDate
		/// <summary></summary>	
		[Description("")]
        public string CreateUserID { get; set; } // CreateUserID
		/// <summary>申请人</summary>	
		[Description("申请人")]
        public string CreateUser { get; set; } // CreateUser
		/// <summary></summary>	
		[Description("")]
        public string ModifyUserID { get; set; } // ModifyUserID
		/// <summary></summary>	
		[Description("")]
        public string ModifyUser { get; set; } // ModifyUser
		/// <summary></summary>	
		[Description("")]
        public string OrgID { get; set; } // OrgID
		/// <summary></summary>	
		[Description("")]
        public string CompanyID { get; set; } // CompanyID
		/// <summary></summary>	
		[Description("")]
        public string FlowPhase { get; set; } // FlowPhase
		/// <summary></summary>	
		[Description("")]
        public string FlowInfo { get; set; } // FlowInfo
		/// <summary></summary>	
		[Description("")]
        public string StepName { get; set; } // StepName
		/// <summary>申请人部门</summary>	
		[Description("申请人部门")]
        public string CreateUserDept { get; set; } // CreateUserDept
		/// <summary>申请人部门名称</summary>	
		[Description("申请人部门名称")]
        public string CreateUserDeptName { get; set; } // CreateUserDeptName
		/// <summary>申请人电话</summary>	
		[Description("申请人电话")]
        public string CreateUserPhone { get; set; } // CreateUserPhone
		/// <summary>申请原因</summary>	
		[Description("申请原因")]
        public string ApplyReason { get; set; } // ApplyReason
		/// <summary>申请文档明细</summary>	
		[Description("申请文档明细")]
        public string Detail { get; set; } // Detail
		/// <summary>申请人签字意见</summary>	
		[Description("申请人签字意见")]
        public string SQRQZYJ { get; set; } // SQRQZYJ
		/// <summary>财务文档保管员签字意见</summary>	
		[Description("财务文档保管员签字意见")]
        public string CWWDBGYQZYJ { get; set; } // CWWDBGYQZYJ
		/// <summary>流程结束日期</summary>	
		[Description("流程结束日期")]
        public DateTime? FlowEndDate { get; set; } // FlowEndDate

        // Reverse navigation
		[JsonIgnore]
        public virtual ICollection<T_FDM_FinanceElectronicDocumentDownload_Detail> T_FDM_FinanceElectronicDocumentDownload_Detail { get { onT_FDM_FinanceElectronicDocumentDownload_DetailGetting(); return _T_FDM_FinanceElectronicDocumentDownload_Detail;} }
		private ICollection<T_FDM_FinanceElectronicDocumentDownload_Detail> _T_FDM_FinanceElectronicDocumentDownload_Detail;
		partial void onT_FDM_FinanceElectronicDocumentDownload_DetailGetting();


        public T_FDM_FinanceElectronicDocumentDownload()
        {
            _T_FDM_FinanceElectronicDocumentDownload_Detail = new List<T_FDM_FinanceElectronicDocumentDownload_Detail>();
        }
    }

	/// <summary>申请文档明细</summary>	
	[Description("申请文档明细")]
    public partial class T_FDM_FinanceElectronicDocumentDownload_Detail : Formula.BaseModel
    {
		/// <summary></summary>	
		[Description("")]
        public string ID { get; set; } // ID (Primary key)
		/// <summary></summary>	
		[Description("")]
        public string T_FDM_FinanceElectronicDocumentDownloadID { get; set; } // T_FDM_FinanceElectronicDocumentDownloadID
		/// <summary></summary>	
		[Description("")]
        public double? SortIndex { get; set; } // SortIndex
		/// <summary></summary>	
		[Description("")]
        public string IsReleased { get; set; } // IsReleased
		/// <summary>FinanceElectronicDocumentInfoID</summary>	
		[Description("FinanceElectronicDocumentInfoID")]
        public string FinanceElectronicDocumentInfoID { get; set; } // FinanceElectronicDocumentInfoID
		/// <summary>流水号</summary>	
		[Description("流水号")]
        public string SerialNumber { get; set; } // SerialNumber
		/// <summary>标题</summary>	
		[Description("标题")]
        public string Title { get; set; } // Title
		/// <summary>文件类型</summary>	
		[Description("文件类型")]
        public string FileType { get; set; } // FileType
		/// <summary>文件小类</summary>	
		[Description("文件小类")]
        public string FileSecondType { get; set; } // FileSecondType
		/// <summary>文件三类</summary>	
		[Description("文件三类")]
        public string FileThirdType { get; set; } // FileThirdType
		/// <summary>是否特殊</summary>	
		[Description("是否特殊")]
        public string IsSpecial { get; set; } // IsSpecial
		/// <summary>到期日期</summary>	
		[Description("到期日期")]
        public DateTime? DueDate { get; set; } // DueDate
		/// <summary>电子文件</summary>	
		[Description("电子文件")]
        public string RelatedEnclosure { get; set; } // RelatedEnclosure

        // Foreign keys
		[JsonIgnore]
        public virtual T_FDM_FinanceElectronicDocumentDownload T_FDM_FinanceElectronicDocumentDownload { get; set; } //  T_FDM_FinanceElectronicDocumentDownloadID - FK_T_FDM_FinanceElectronicDocumentDownload_Detail_T_FDM_FinanceElectronicDocumentDownload
    }

	/// <summary>财务电子文档上传</summary>	
	[Description("财务电子文档上传")]
    public partial class T_FDM_FinanceElectronicDocumentUpload : Formula.BaseModel
    {
		/// <summary></summary>	
		[Description("")]
        public string ID { get; set; } // ID (Primary key)
		/// <summary>填写日期</summary>	
		[Description("填写日期")]
        public DateTime? CreateDate { get; set; } // CreateDate
		/// <summary></summary>	
		[Description("")]
        public DateTime? ModifyDate { get; set; } // ModifyDate
		/// <summary></summary>	
		[Description("")]
        public string CreateUserID { get; set; } // CreateUserID
		/// <summary>填写人</summary>	
		[Description("填写人")]
        public string CreateUser { get; set; } // CreateUser
		/// <summary></summary>	
		[Description("")]
        public string ModifyUserID { get; set; } // ModifyUserID
		/// <summary></summary>	
		[Description("")]
        public string ModifyUser { get; set; } // ModifyUser
		/// <summary></summary>	
		[Description("")]
        public string OrgID { get; set; } // OrgID
		/// <summary></summary>	
		[Description("")]
        public string CompanyID { get; set; } // CompanyID
		/// <summary></summary>	
		[Description("")]
        public string FlowPhase { get; set; } // FlowPhase
		/// <summary></summary>	
		[Description("")]
        public string FlowInfo { get; set; } // FlowInfo
		/// <summary></summary>	
		[Description("")]
        public string StepName { get; set; } // StepName
		/// <summary>填写人部门</summary>	
		[Description("填写人部门")]
        public string CreateUserDept { get; set; } // CreateUserDept
		/// <summary>填写人部门名称</summary>	
		[Description("填写人部门名称")]
        public string CreateUserDeptName { get; set; } // CreateUserDeptName
		/// <summary>流水号</summary>	
		[Description("流水号")]
        public string SerialNumber { get; set; } // SerialNumber
		/// <summary>标题</summary>	
		[Description("标题")]
        public string Title { get; set; } // Title
		/// <summary>文件类型</summary>	
		[Description("文件类型")]
        public string FileType { get; set; } // FileType
		/// <summary>文件类型名称</summary>	
		[Description("文件类型名称")]
        public string FileTypeName { get; set; } // FileTypeName
		/// <summary>文件小类</summary>	
		[Description("文件小类")]
        public string FileSecondType { get; set; } // FileSecondType
		/// <summary>文件三类</summary>	
		[Description("文件三类")]
        public string FileThirdType { get; set; } // FileThirdType
		/// <summary>是否特殊</summary>	
		[Description("是否特殊")]
        public string IsSpecial { get; set; } // IsSpecial
		/// <summary>文件份数</summary>	
		[Description("文件份数")]
        public int? FileCount { get; set; } // FileCount
		/// <summary>简要说明</summary>	
		[Description("简要说明")]
        public string BriefDescription { get; set; } // BriefDescription
		/// <summary>相关附件</summary>	
		[Description("相关附件")]
        public string RelatedEnclosure { get; set; } // RelatedEnclosure
		/// <summary>下载次数</summary>	
		[Description("下载次数")]
        public int? DownLoadCount { get; set; } // DownLoadCount
		/// <summary>借阅次数</summary>	
		[Description("借阅次数")]
        public int? BorrowingCount { get; set; } // BorrowingCount
    }

	/// <summary>财务文档借阅申请</summary>	
	[Description("财务文档借阅申请")]
    public partial class T_FDM_FinancialDocumentBorrowingApplication : Formula.BaseModel
    {
		/// <summary></summary>	
		[Description("")]
        public string ID { get; set; } // ID (Primary key)
		/// <summary>申请日期</summary>	
		[Description("申请日期")]
        public DateTime? CreateDate { get; set; } // CreateDate
		/// <summary></summary>	
		[Description("")]
        public DateTime? ModifyDate { get; set; } // ModifyDate
		/// <summary></summary>	
		[Description("")]
        public string CreateUserID { get; set; } // CreateUserID
		/// <summary>申请人</summary>	
		[Description("申请人")]
        public string CreateUser { get; set; } // CreateUser
		/// <summary></summary>	
		[Description("")]
        public string ModifyUserID { get; set; } // ModifyUserID
		/// <summary></summary>	
		[Description("")]
        public string ModifyUser { get; set; } // ModifyUser
		/// <summary></summary>	
		[Description("")]
        public string OrgID { get; set; } // OrgID
		/// <summary></summary>	
		[Description("")]
        public string CompanyID { get; set; } // CompanyID
		/// <summary></summary>	
		[Description("")]
        public string FlowPhase { get; set; } // FlowPhase
		/// <summary></summary>	
		[Description("")]
        public string FlowInfo { get; set; } // FlowInfo
		/// <summary></summary>	
		[Description("")]
        public string StepName { get; set; } // StepName
		/// <summary>申请人部门</summary>	
		[Description("申请人部门")]
        public string CreateUserDept { get; set; } // CreateUserDept
		/// <summary>申请人部门名称</summary>	
		[Description("申请人部门名称")]
        public string CreateUserDeptName { get; set; } // CreateUserDeptName
		/// <summary>申请人电话</summary>	
		[Description("申请人电话")]
        public string CreateUserPhone { get; set; } // CreateUserPhone
		/// <summary>预计归还日期</summary>	
		[Description("预计归还日期")]
        public DateTime? ExpectedReturnDate { get; set; } // ExpectedReturnDate
		/// <summary>实际归还日期</summary>	
		[Description("实际归还日期")]
        public DateTime? ActualReturnDate { get; set; } // ActualReturnDate
		/// <summary>文件单位</summary>	
		[Description("文件单位")]
        public string FileUnit { get; set; } // FileUnit
		/// <summary>文件类型</summary>	
		[Description("文件类型")]
        public string FileType { get; set; } // FileType
		/// <summary>事由</summary>	
		[Description("事由")]
        public string Reason { get; set; } // Reason
		/// <summary>备注</summary>	
		[Description("备注")]
        public string Remark { get; set; } // Remark
		/// <summary>申请人签字意见</summary>	
		[Description("申请人签字意见")]
        public string SQRQZYJ { get; set; } // SQRQZYJ
		/// <summary>部门正职签字意见</summary>	
		[Description("部门正职签字意见")]
        public string BMZZQZYJ { get; set; } // BMZZQZYJ
		/// <summary>财务部正职签字意见</summary>	
		[Description("财务部正职签字意见")]
        public string CWBZZQZYJ { get; set; } // CWBZZQZYJ
		/// <summary>财务文档保管员签字意见</summary>	
		[Description("财务文档保管员签字意见")]
        public string CWWDBGYQZYJ { get; set; } // CWWDBGYQZYJ
		/// <summary>申请人归还签字意见</summary>	
		[Description("申请人归还签字意见")]
        public string SQRGHQZYJ { get; set; } // SQRGHQZYJ
		/// <summary>财务文档保管员接收签字意见</summary>	
		[Description("财务文档保管员接收签字意见")]
        public string CWWDBGYJSQZYJ { get; set; } // CWWDBGYJSQZYJ
		/// <summary>流程结束日期</summary>	
		[Description("流程结束日期")]
        public DateTime? FlowEndDate { get; set; } // FlowEndDate
    }

	/// <summary>财务文档管理测试</summary>	
	[Description("财务文档管理测试")]
    public partial class T_FDM_FinancialDocumenTest : Formula.BaseModel
    {
		/// <summary></summary>	
		[Description("")]
        public string ID { get; set; } // ID (Primary key)
		/// <summary>申请日期</summary>	
		[Description("申请日期")]
        public DateTime? CreateDate { get; set; } // CreateDate
		/// <summary></summary>	
		[Description("")]
        public DateTime? ModifyDate { get; set; } // ModifyDate
		/// <summary></summary>	
		[Description("")]
        public string CreateUserID { get; set; } // CreateUserID
		/// <summary>申请人</summary>	
		[Description("申请人")]
        public string CreateUser { get; set; } // CreateUser
		/// <summary></summary>	
		[Description("")]
        public string ModifyUserID { get; set; } // ModifyUserID
		/// <summary></summary>	
		[Description("")]
        public string ModifyUser { get; set; } // ModifyUser
		/// <summary></summary>	
		[Description("")]
        public string OrgID { get; set; } // OrgID
		/// <summary></summary>	
		[Description("")]
        public string CompanyID { get; set; } // CompanyID
		/// <summary></summary>	
		[Description("")]
        public string FlowPhase { get; set; } // FlowPhase
		/// <summary></summary>	
		[Description("")]
        public string FlowInfo { get; set; } // FlowInfo
		/// <summary></summary>	
		[Description("")]
        public string StepName { get; set; } // StepName
		/// <summary>申请部门</summary>	
		[Description("申请部门")]
        public string CreateDept { get; set; } // CreateDept
		/// <summary>是由</summary>	
		[Description("是由")]
        public string Reason { get; set; } // Reason
    }

	/// <summary>财务文档测试_刘柳</summary>	
	[Description("财务文档测试_刘柳")]
    public partial class T_FDM_FinancialDocumenTest_liuliu : Formula.BaseModel
    {
		/// <summary></summary>	
		[Description("")]
        public string ID { get; set; } // ID (Primary key)
		/// <summary></summary>	
		[Description("")]
        public DateTime? CreateDate { get; set; } // CreateDate
		/// <summary></summary>	
		[Description("")]
        public DateTime? ModifyDate { get; set; } // ModifyDate
		/// <summary></summary>	
		[Description("")]
        public string CreateUserID { get; set; } // CreateUserID
		/// <summary></summary>	
		[Description("")]
        public string CreateUser { get; set; } // CreateUser
		/// <summary></summary>	
		[Description("")]
        public string ModifyUserID { get; set; } // ModifyUserID
		/// <summary></summary>	
		[Description("")]
        public string ModifyUser { get; set; } // ModifyUser
		/// <summary></summary>	
		[Description("")]
        public string OrgID { get; set; } // OrgID
		/// <summary></summary>	
		[Description("")]
        public string CompanyID { get; set; } // CompanyID
		/// <summary></summary>	
		[Description("")]
        public string FlowPhase { get; set; } // FlowPhase
		/// <summary></summary>	
		[Description("")]
        public string FlowInfo { get; set; } // FlowInfo
		/// <summary></summary>	
		[Description("")]
        public string StepName { get; set; } // StepName
		/// <summary>申请人</summary>	
		[Description("申请人")]
        public string username { get; set; } // username
		/// <summary>申请日期</summary>	
		[Description("申请日期")]
        public DateTime? applydate { get; set; } // applydate
		/// <summary>文档名称</summary>	
		[Description("文档名称")]
        public string filename { get; set; } // filename
		/// <summary>事项类型</summary>	
		[Description("事项类型")]
        public string filetype { get; set; } // filetype
		/// <summary>备注</summary>	
		[Description("备注")]
        public string bz { get; set; } // bz
		/// <summary>任务名称</summary>	
		[Description("任务名称")]
        public string TaskName { get; set; } // TaskName
		/// <summary>文档类型2</summary>	
		[Description("文档类型2")]
        public string filetype2 { get; set; } // filetype2
		/// <summary>文档类型2名称</summary>	
		[Description("文档类型2名称")]
        public string filetype2Name { get; set; } // filetype2Name
		/// <summary>申请人部门</summary>	
		[Description("申请人部门")]
        public string appydept { get; set; } // appydept
		/// <summary>停留天数</summary>	
		[Description("停留天数")]
        public int? staydays { get; set; } // staydays
		/// <summary>出国人员列表</summary>	
		[Description("出国人员列表")]
        public string Gabroadname { get; set; } // Gabroadname
		/// <summary>出国说明</summary>	
		[Description("出国说明")]
        public string cgsm { get; set; } // cgsm
		/// <summary>领导签字</summary>	
		[Description("领导签字")]
        public string deptsign { get; set; } // deptsign
		/// <summary>主管领导签字</summary>	
		[Description("主管领导签字")]
        public string leadersign { get; set; } // leadersign

        // Reverse navigation
		[JsonIgnore]
        public virtual ICollection<T_FDM_FinancialDocumenTest_liuliu_Gabroadname> T_FDM_FinancialDocumenTest_liuliu_Gabroadname { get { onT_FDM_FinancialDocumenTest_liuliu_GabroadnameGetting(); return _T_FDM_FinancialDocumenTest_liuliu_Gabroadname;} }
		private ICollection<T_FDM_FinancialDocumenTest_liuliu_Gabroadname> _T_FDM_FinancialDocumenTest_liuliu_Gabroadname;
		partial void onT_FDM_FinancialDocumenTest_liuliu_GabroadnameGetting();


        public T_FDM_FinancialDocumenTest_liuliu()
        {
            _T_FDM_FinancialDocumenTest_liuliu_Gabroadname = new List<T_FDM_FinancialDocumenTest_liuliu_Gabroadname>();
        }
    }

	/// <summary>出国人员列表</summary>	
	[Description("出国人员列表")]
    public partial class T_FDM_FinancialDocumenTest_liuliu_Gabroadname : Formula.BaseModel
    {
		/// <summary></summary>	
		[Description("")]
        public string ID { get; set; } // ID (Primary key)
		/// <summary></summary>	
		[Description("")]
        public string T_FDM_FinancialDocumenTest_liuliuID { get; set; } // T_FDM_FinancialDocumenTest_liuliuID
		/// <summary></summary>	
		[Description("")]
        public double? SortIndex { get; set; } // SortIndex
		/// <summary></summary>	
		[Description("")]
        public string IsReleased { get; set; } // IsReleased
		/// <summary>姓名</summary>	
		[Description("姓名")]
        public string name { get; set; } // name
		/// <summary>姓名名称</summary>	
		[Description("姓名名称")]
        public string nameName { get; set; } // nameName
		/// <summary>部门</summary>	
		[Description("部门")]
        public string deptname { get; set; } // deptname

        // Foreign keys
		[JsonIgnore]
        public virtual T_FDM_FinancialDocumenTest_liuliu T_FDM_FinancialDocumenTest_liuliu { get; set; } //  T_FDM_FinancialDocumenTest_liuliuID - FK_T_FDM_FinancialDocumenTest_liuliu_Gabroadname_T_FDM_FinancialDocumenTest_liuliu
    }

	/// <summary>财务文档测试类型字典</summary>	
	[Description("财务文档测试类型字典")]
    public partial class T_FDM_FinancialDocumenTesttypedic_liuliu : Formula.BaseModel
    {
		/// <summary></summary>	
		[Description("")]
        public string ID { get; set; } // ID (Primary key)
		/// <summary></summary>	
		[Description("")]
        public DateTime? CreateDate { get; set; } // CreateDate
		/// <summary></summary>	
		[Description("")]
        public DateTime? ModifyDate { get; set; } // ModifyDate
		/// <summary></summary>	
		[Description("")]
        public string CreateUserID { get; set; } // CreateUserID
		/// <summary></summary>	
		[Description("")]
        public string CreateUser { get; set; } // CreateUser
		/// <summary></summary>	
		[Description("")]
        public string ModifyUserID { get; set; } // ModifyUserID
		/// <summary></summary>	
		[Description("")]
        public string ModifyUser { get; set; } // ModifyUser
		/// <summary></summary>	
		[Description("")]
        public string OrgID { get; set; } // OrgID
		/// <summary></summary>	
		[Description("")]
        public string CompanyID { get; set; } // CompanyID
		/// <summary></summary>	
		[Description("")]
        public string FlowPhase { get; set; } // FlowPhase
		/// <summary></summary>	
		[Description("")]
        public string FlowInfo { get; set; } // FlowInfo
		/// <summary></summary>	
		[Description("")]
        public string StepName { get; set; } // StepName
		/// <summary>类型名称</summary>	
		[Description("类型名称")]
        public string LXMC { get; set; } // LXMC
    }

	/// <summary>技术平台文件类型维护</summary>	
	[Description("技术平台文件类型维护")]
    public partial class T_FDM_TechnicalPlatformDocumentTypeMaintenance : Formula.BaseModel
    {
		/// <summary></summary>	
		[Description("")]
        public string ID { get; set; } // ID (Primary key)
		/// <summary></summary>	
		[Description("")]
        public DateTime? CreateDate { get; set; } // CreateDate
		/// <summary></summary>	
		[Description("")]
        public DateTime? ModifyDate { get; set; } // ModifyDate
		/// <summary></summary>	
		[Description("")]
        public string CreateUserID { get; set; } // CreateUserID
		/// <summary>填写人</summary>	
		[Description("填写人")]
        public string CreateUser { get; set; } // CreateUser
		/// <summary></summary>	
		[Description("")]
        public string ModifyUserID { get; set; } // ModifyUserID
		/// <summary></summary>	
		[Description("")]
        public string ModifyUser { get; set; } // ModifyUser
		/// <summary></summary>	
		[Description("")]
        public string OrgID { get; set; } // OrgID
		/// <summary></summary>	
		[Description("")]
        public string CompanyID { get; set; } // CompanyID
		/// <summary></summary>	
		[Description("")]
        public string FlowPhase { get; set; } // FlowPhase
		/// <summary></summary>	
		[Description("")]
        public string FlowInfo { get; set; } // FlowInfo
		/// <summary></summary>	
		[Description("")]
        public string StepName { get; set; } // StepName
		/// <summary>填写人部门</summary>	
		[Description("填写人部门")]
        public string CreateUserDept { get; set; } // CreateUserDept
		/// <summary>填写人部门名称</summary>	
		[Description("填写人部门名称")]
        public string CreateUserDeptName { get; set; } // CreateUserDeptName
		/// <summary>文件类型</summary>	
		[Description("文件类型")]
        public string FileType { get; set; } // FileType
		/// <summary>文件小类</summary>	
		[Description("文件小类")]
        public string FileSecondType { get; set; } // FileSecondType
		/// <summary>文件三类</summary>	
		[Description("文件三类")]
        public string FileThirdType { get; set; } // FileThirdType
		/// <summary>备注</summary>	
		[Description("备注")]
        public string Remark { get; set; } // Remark
    }

	/// <summary>上传案件资料表单</summary>	
	[Description("上传案件资料表单")]
    public partial class T_Lawsuit_CaseFile : Formula.BaseModel
    {
		/// <summary></summary>	
		[Description("")]
        public string ID { get; set; } // ID (Primary key)
		/// <summary></summary>	
		[Description("")]
        public DateTime? CreateDate { get; set; } // CreateDate
		/// <summary></summary>	
		[Description("")]
        public DateTime? ModifyDate { get; set; } // ModifyDate
		/// <summary></summary>	
		[Description("")]
        public string CreateUserID { get; set; } // CreateUserID
		/// <summary></summary>	
		[Description("")]
        public string CreateUser { get; set; } // CreateUser
		/// <summary></summary>	
		[Description("")]
        public string ModifyUserID { get; set; } // ModifyUserID
		/// <summary></summary>	
		[Description("")]
        public string ModifyUser { get; set; } // ModifyUser
		/// <summary></summary>	
		[Description("")]
        public string OrgID { get; set; } // OrgID
		/// <summary></summary>	
		[Description("")]
        public string CompanyID { get; set; } // CompanyID
		/// <summary></summary>	
		[Description("")]
        public string FlowPhase { get; set; } // FlowPhase
		/// <summary></summary>	
		[Description("")]
        public string FlowInfo { get; set; } // FlowInfo
		/// <summary></summary>	
		[Description("")]
        public string StepName { get; set; } // StepName
		/// <summary>案件名称</summary>	
		[Description("案件名称")]
        public string NameOfCase { get; set; } // NameOfCase
		/// <summary>主题词</summary>	
		[Description("主题词")]
        public string SubjectHeadings { get; set; } // SubjectHeadings
		/// <summary>案件类型</summary>	
		[Description("案件类型")]
        public string CaseType { get; set; } // CaseType
		/// <summary>案件标的额</summary>	
		[Description("案件标的额")]
        public string AmountOfTheSubjectMatterOfTheCase { get; set; } // AmountOfTheSubjectMatterOfTheCase
		/// <summary>起诉应诉日期</summary>	
		[Description("起诉应诉日期")]
        public DateTime? LitigationResponseDate { get; set; } // LitigationResponseDate
		/// <summary>案号</summary>	
		[Description("案号")]
        public string CaseNumber { get; set; } // CaseNumber
		/// <summary>原告</summary>	
		[Description("原告")]
        public string Plaintiff { get; set; } // Plaintiff
		/// <summary>被告</summary>	
		[Description("被告")]
        public string Defendant { get; set; } // Defendant
		/// <summary>审判程序</summary>	
		[Description("审判程序")]
        public string TrialProcedure { get; set; } // TrialProcedure
		/// <summary>移交单位</summary>	
		[Description("移交单位")]
        public string TransferingUnit { get; set; } // TransferingUnit
		/// <summary>上传人</summary>	
		[Description("上传人")]
        public string UploadingPeople { get; set; } // UploadingPeople
		/// <summary>上传人名称</summary>	
		[Description("上传人名称")]
        public string UploadingPeopleName { get; set; } // UploadingPeopleName
		/// <summary>上传时间</summary>	
		[Description("上传时间")]
        public DateTime? UploadTime { get; set; } // UploadTime
		/// <summary>资料名称</summary>	
		[Description("资料名称")]
        public string NameOfData { get; set; } // NameOfData
		/// <summary>资料阶段</summary>	
		[Description("资料阶段")]
        public string DataPhase { get; set; } // DataPhase
		/// <summary>资料文件</summary>	
		[Description("资料文件")]
        public string DataFile { get; set; } // DataFile
		/// <summary>补充说明</summary>	
		[Description("补充说明")]
        public string AdditionalExplanation { get; set; } // AdditionalExplanation
		/// <summary>案件ID</summary>	
		[Description("案件ID")]
        public string CaseID { get; set; } // CaseID
    }

	/// <summary>案件信息</summary>	
	[Description("案件信息")]
    public partial class T_Lawsuit_CaseInformation : Formula.BaseModel
    {
		/// <summary></summary>	
		[Description("")]
        public string ID { get; set; } // ID (Primary key)
		/// <summary></summary>	
		[Description("")]
        public DateTime? CreateDate { get; set; } // CreateDate
		/// <summary></summary>	
		[Description("")]
        public DateTime? ModifyDate { get; set; } // ModifyDate
		/// <summary></summary>	
		[Description("")]
        public string CreateUserID { get; set; } // CreateUserID
		/// <summary></summary>	
		[Description("")]
        public string CreateUser { get; set; } // CreateUser
		/// <summary></summary>	
		[Description("")]
        public string ModifyUserID { get; set; } // ModifyUserID
		/// <summary></summary>	
		[Description("")]
        public string ModifyUser { get; set; } // ModifyUser
		/// <summary></summary>	
		[Description("")]
        public string OrgID { get; set; } // OrgID
		/// <summary></summary>	
		[Description("")]
        public string CompanyID { get; set; } // CompanyID
		/// <summary></summary>	
		[Description("")]
        public string FlowPhase { get; set; } // FlowPhase
		/// <summary></summary>	
		[Description("")]
        public string FlowInfo { get; set; } // FlowInfo
		/// <summary></summary>	
		[Description("")]
        public string StepName { get; set; } // StepName
		/// <summary>诉讼类型</summary>	
		[Description("诉讼类型")]
        public string TypesOfLitigation { get; set; } // TypesOfLitigation
		/// <summary>关联诉讼申请</summary>	
		[Description("关联诉讼申请")]
        public string RelatedLitigationApplication { get; set; } // RelatedLitigationApplication
		/// <summary>关联诉讼申请名称</summary>	
		[Description("关联诉讼申请名称")]
        public string RelatedLitigationApplicationName { get; set; } // RelatedLitigationApplicationName
		/// <summary>案件名称</summary>	
		[Description("案件名称")]
        public string NameOfCase { get; set; } // NameOfCase
		/// <summary>主题词</summary>	
		[Description("主题词")]
        public string SubjectHeadings { get; set; } // SubjectHeadings
		/// <summary>案件类型</summary>	
		[Description("案件类型")]
        public string CaseType { get; set; } // CaseType
		/// <summary>案件标的额</summary>	
		[Description("案件标的额")]
        public string AmountOfTheSubjectMatterOfTheCase { get; set; } // AmountOfTheSubjectMatterOfTheCase
		/// <summary>起诉应诉日期</summary>	
		[Description("起诉应诉日期")]
        public DateTime? LitigationResponseDate { get; set; } // LitigationResponseDate
		/// <summary>案号</summary>	
		[Description("案号")]
        public string CaseNumber { get; set; } // CaseNumber
		/// <summary>原告</summary>	
		[Description("原告")]
        public string Plaintiff { get; set; } // Plaintiff
		/// <summary>被告</summary>	
		[Description("被告")]
        public string Defendant { get; set; } // Defendant
		/// <summary>审判程序</summary>	
		[Description("审判程序")]
        public string TrialProcedure { get; set; } // TrialProcedure
		/// <summary>移交单位</summary>	
		[Description("移交单位")]
        public string TransferingUnit { get; set; } // TransferingUnit
		/// <summary>备注</summary>	
		[Description("备注")]
        public string Remarks { get; set; } // Remarks
    }

	/// <summary>结案报告</summary>	
	[Description("结案报告")]
    public partial class T_Lawsuit_CaseReport : Formula.BaseModel
    {
		/// <summary></summary>	
		[Description("")]
        public string ID { get; set; } // ID (Primary key)
		/// <summary></summary>	
		[Description("")]
        public DateTime? CreateDate { get; set; } // CreateDate
		/// <summary></summary>	
		[Description("")]
        public DateTime? ModifyDate { get; set; } // ModifyDate
		/// <summary></summary>	
		[Description("")]
        public string CreateUserID { get; set; } // CreateUserID
		/// <summary></summary>	
		[Description("")]
        public string CreateUser { get; set; } // CreateUser
		/// <summary></summary>	
		[Description("")]
        public string ModifyUserID { get; set; } // ModifyUserID
		/// <summary></summary>	
		[Description("")]
        public string ModifyUser { get; set; } // ModifyUser
		/// <summary></summary>	
		[Description("")]
        public string OrgID { get; set; } // OrgID
		/// <summary></summary>	
		[Description("")]
        public string CompanyID { get; set; } // CompanyID
		/// <summary></summary>	
		[Description("")]
        public string FlowPhase { get; set; } // FlowPhase
		/// <summary></summary>	
		[Description("")]
        public string FlowInfo { get; set; } // FlowInfo
		/// <summary></summary>	
		[Description("")]
        public string StepName { get; set; } // StepName
		/// <summary>填报人</summary>	
		[Description("填报人")]
        public string ApplyUser { get; set; } // ApplyUser
		/// <summary>填报人名称</summary>	
		[Description("填报人名称")]
        public string ApplyUserName { get; set; } // ApplyUserName
		/// <summary>填报日期</summary>	
		[Description("填报日期")]
        public string ApplyDate { get; set; } // ApplyDate
		/// <summary>案名</summary>	
		[Description("案名")]
        public string CaseName { get; set; } // CaseName
		/// <summary>案号</summary>	
		[Description("案号")]
        public string CaseNumber { get; set; } // CaseNumber
		/// <summary>审理日期</summary>	
		[Description("审理日期")]
        public DateTime? TrialDate { get; set; } // TrialDate
		/// <summary>主题词</summary>	
		[Description("主题词")]
        public string SubjectHeadings { get; set; } // SubjectHeadings
		/// <summary>原告或原申请人</summary>	
		[Description("原告或原申请人")]
        public string PlaintiffOrOriginalApplicant { get; set; } // PlaintiffOrOriginalApplicant
		/// <summary>被告或被申请人</summary>	
		[Description("被告或被申请人")]
        public string DefendantOrRespondent { get; set; } // DefendantOrRespondent
		/// <summary>有无独立请求权</summary>	
		[Description("有无独立请求权")]
        public string IsThereAnIndependentClaim { get; set; } // IsThereAnIndependentClaim
		/// <summary>审判程序</summary>	
		[Description("审判程序")]
        public string TrialProcedure { get; set; } // TrialProcedure
		/// <summary>审判庭仲裁庭组成人员</summary>	
		[Description("审判庭仲裁庭组成人员")]
        public string MembersOfTheArbitralTribunal { get; set; } // MembersOfTheArbitralTribunal
		/// <summary>移交单位</summary>	
		[Description("移交单位")]
        public string TransferingUnit { get; set; } // TransferingUnit
		/// <summary>移交单位名称</summary>	
		[Description("移交单位名称")]
        public string TransferingUnitName { get; set; } // TransferingUnitName
		/// <summary>案件标的额</summary>	
		[Description("案件标的额")]
        public decimal? SubjectMatterOfTheCase { get; set; } // SubjectMatterOfTheCase
		/// <summary>案情简介</summary>	
		[Description("案情简介")]
        public string BriefIntroductionOfTheCase { get; set; } // BriefIntroductionOfTheCase
		/// <summary>结案方式</summary>	
		[Description("结案方式")]
        public string ClosingMethod { get; set; } // ClosingMethod
		/// <summary>调解内容</summary>	
		[Description("调解内容")]
        public string MediationContent { get; set; } // MediationContent
		/// <summary>裁判内容</summary>	
		[Description("裁判内容")]
        public string RefereeContent { get; set; } // RefereeContent
		/// <summary>执行情况</summary>	
		[Description("执行情况")]
        public string ImplementationSituation { get; set; } // ImplementationSituation
		/// <summary>其他需说明或注意问题</summary>	
		[Description("其他需说明或注意问题")]
        public string OtherProblemsToBeExplainedOrNoted { get; set; } // OtherProblemsToBeExplainedOrNoted
		/// <summary>项目主管公司领导意见</summary>	
		[Description("项目主管公司领导意见")]
        public string OpinionsOfLeadersOfTheCompanyInChargeOfTheProject { get; set; } // OpinionsOfLeadersOfTheCompanyInChargeOfTheProject
		/// <summary>法务审计部意见</summary>	
		[Description("法务审计部意见")]
        public string OpinionOfLegalAuditDepartment { get; set; } // OpinionOfLegalAuditDepartment
		/// <summary>涉案单位正职意见</summary>	
		[Description("涉案单位正职意见")]
        public string OpinionsOfTheUnitInvolvedInTheCase { get; set; } // OpinionsOfTheUnitInvolvedInTheCase
		/// <summary>申请部门</summary>	
		[Description("申请部门")]
        public string ApplyDept { get; set; } // ApplyDept
		/// <summary>申请部门名称</summary>	
		[Description("申请部门名称")]
        public string ApplyDeptName { get; set; } // ApplyDeptName
		/// <summary>涉案项目</summary>	
		[Description("涉案项目")]
        public string ProjectsInvolved { get; set; } // ProjectsInvolved
		/// <summary>涉案项目名称</summary>	
		[Description("涉案项目名称")]
        public string ProjectsInvolvedName { get; set; } // ProjectsInvolvedName
		/// <summary>涉案项目主管领导</summary>	
		[Description("涉案项目主管领导")]
        public string ProjectsInvolvedLeader { get; set; } // ProjectsInvolvedLeader
		/// <summary>涉案项目主管领导名称</summary>	
		[Description("涉案项目主管领导名称")]
        public string ProjectsInvolvedLeaderName { get; set; } // ProjectsInvolvedLeaderName
    }

	/// <summary>非项目类诉讼案件审批</summary>	
	[Description("非项目类诉讼案件审批")]
    public partial class T_Lawsuit_NoProject : Formula.BaseModel
    {
		/// <summary></summary>	
		[Description("")]
        public string ID { get; set; } // ID (Primary key)
		/// <summary></summary>	
		[Description("")]
        public DateTime? CreateDate { get; set; } // CreateDate
		/// <summary></summary>	
		[Description("")]
        public DateTime? ModifyDate { get; set; } // ModifyDate
		/// <summary></summary>	
		[Description("")]
        public string CreateUserID { get; set; } // CreateUserID
		/// <summary></summary>	
		[Description("")]
        public string CreateUser { get; set; } // CreateUser
		/// <summary></summary>	
		[Description("")]
        public string ModifyUserID { get; set; } // ModifyUserID
		/// <summary></summary>	
		[Description("")]
        public string ModifyUser { get; set; } // ModifyUser
		/// <summary></summary>	
		[Description("")]
        public string OrgID { get; set; } // OrgID
		/// <summary></summary>	
		[Description("")]
        public string CompanyID { get; set; } // CompanyID
		/// <summary></summary>	
		[Description("")]
        public string FlowPhase { get; set; } // FlowPhase
		/// <summary></summary>	
		[Description("")]
        public string FlowInfo { get; set; } // FlowInfo
		/// <summary></summary>	
		[Description("")]
        public string StepName { get; set; } // StepName
		/// <summary>申请人</summary>	
		[Description("申请人")]
        public string Applicant { get; set; } // Applicant
		/// <summary>申请人名称</summary>	
		[Description("申请人名称")]
        public string ApplicantName { get; set; } // ApplicantName
		/// <summary>申请日期</summary>	
		[Description("申请日期")]
        public DateTime? DateOfApplication { get; set; } // DateOfApplication
		/// <summary>移交单位</summary>	
		[Description("移交单位")]
        public string TransferingUnit { get; set; } // TransferingUnit
		/// <summary>移交单位名称</summary>	
		[Description("移交单位名称")]
        public string TransferingUnitName { get; set; } // TransferingUnitName
		/// <summary>移交日期</summary>	
		[Description("移交日期")]
        public DateTime? DateOfTransfer { get; set; } // DateOfTransfer
		/// <summary>诉讼类型</summary>	
		[Description("诉讼类型")]
        public string TypesOfLitigation { get; set; } // TypesOfLitigation
		/// <summary>被诉单位名称</summary>	
		[Description("被诉单位名称")]
        public string NameRespondent { get; set; } // NameRespondent
		/// <summary>我方合同主体名称</summary>	
		[Description("我方合同主体名称")]
        public string NameOfOurContractSubject { get; set; } // NameOfOurContractSubject
		/// <summary>案件名称</summary>	
		[Description("案件名称")]
        public string NameOfCase { get; set; } // NameOfCase
		/// <summary>案情简介</summary>	
		[Description("案情简介")]
        public string BriefIntroductionOfTheCase { get; set; } // BriefIntroductionOfTheCase
		/// <summary>移交理由</summary>	
		[Description("移交理由")]
        public string ReasonsForTransfer { get; set; } // ReasonsForTransfer
		/// <summary>预期目标</summary>	
		[Description("预期目标")]
        public string ExpectedTarget { get; set; } // ExpectedTarget
		/// <summary>我方违约情况</summary>	
		[Description("我方违约情况")]
        public string OurBreach { get; set; } // OurBreach
		/// <summary>我方被诉部门单位</summary>	
		[Description("我方被诉部门单位")]
        public string OurSuedDepartment { get; set; } // OurSuedDepartment
		/// <summary>收文名称</summary>	
		[Description("收文名称")]
        public string ReceiptName { get; set; } // ReceiptName
		/// <summary>传票_案情简介</summary>	
		[Description("传票_案情简介")]
        public string BriefIntroductionToTheCaseOfSubpoena { get; set; } // BriefIntroductionToTheCaseOfSubpoena
		/// <summary>关键问题描述</summary>	
		[Description("关键问题描述")]
        public string DescriptionOfKeyIssues { get; set; } // DescriptionOfKeyIssues
		/// <summary>证据资料要求</summary>	
		[Description("证据资料要求")]
        public string EvidentialDataRequirements { get; set; } // EvidentialDataRequirements
		/// <summary>法律文书扫描件</summary>	
		[Description("法律文书扫描件")]
        public string ScanningCopyOfLegalDocuments { get; set; } // ScanningCopyOfLegalDocuments
		/// <summary>移交单位正职领导</summary>	
		[Description("移交单位正职领导")]
        public string TransferToTheHeadOfTheUnit { get; set; } // TransferToTheHeadOfTheUnit
		/// <summary>法务部签名</summary>	
		[Description("法务部签名")]
        public string LeaderInChargeOfTransferUnit { get; set; } // LeaderInChargeOfTransferUnit
		/// <summary>移交单位指定对接人员</summary>	
		[Description("移交单位指定对接人员")]
        public string DesignatedDockingPersonnelOfHandoverUnit { get; set; } // DesignatedDockingPersonnelOfHandoverUnit
		/// <summary>移交单位指定对接人员名称</summary>	
		[Description("移交单位指定对接人员名称")]
        public string DesignatedDockingPersonnelOfHandoverUnitName { get; set; } // DesignatedDockingPersonnelOfHandoverUnitName
		/// <summary>联系电话</summary>	
		[Description("联系电话")]
        public string ContactNumber { get; set; } // ContactNumber
		/// <summary>证据资料移交清单</summary>	
		[Description("证据资料移交清单")]
        public string ListOfEvidenceTransfer { get; set; } // ListOfEvidenceTransfer
		/// <summary>评议_移交单位</summary>	
		[Description("评议_移交单位")]
        public string CommentOnTheTransferUnit { get; set; } // CommentOnTheTransferUnit
		/// <summary>评议_移交单位名称</summary>	
		[Description("评议_移交单位名称")]
        public string CommentOnTheTransferUnitName { get; set; } // CommentOnTheTransferUnitName
		/// <summary>暂定编号</summary>	
		[Description("暂定编号")]
        public string ProvisionalNumbering { get; set; } // ProvisionalNumbering
		/// <summary>评议_被诉单位名称</summary>	
		[Description("评议_被诉单位名称")]
        public string NameOfRespondent { get; set; } // NameOfRespondent
		/// <summary>评议_我方合同主体名称</summary>	
		[Description("评议_我方合同主体名称")]
        public string CommentOnTheNameOfOurContractSubject { get; set; } // CommentOnTheNameOfOurContractSubject
		/// <summary>评议_案件名称</summary>	
		[Description("评议_案件名称")]
        public string CaseName { get; set; } // CaseName
		/// <summary>评议_案情简介</summary>	
		[Description("评议_案情简介")]
        public string PYBriefIntroductionOfTheCase { get; set; } // PYBriefIntroductionOfTheCase
		/// <summary>移交资料达标情况</summary>	
		[Description("移交资料达标情况")]
        public string ComplianceOfTransferredData { get; set; } // ComplianceOfTransferredData
		/// <summary>移交_是否满足起诉条件</summary>	
		[Description("移交_是否满足起诉条件")]
        public string WhetherTheTransferMeetsTheProsecutionConditions { get; set; } // WhetherTheTransferMeetsTheProsecutionConditions
		/// <summary>诉讼时效是否超过</summary>	
		[Description("诉讼时效是否超过")]
        public string WhetherTheLimitationOfActionExceeds { get; set; } // WhetherTheLimitationOfActionExceeds
		/// <summary>诉讼_是否满足起诉条件</summary>	
		[Description("诉讼_是否满足起诉条件")]
        public string WhetherTheLitigationMeetsTheProsecutionConditions { get; set; } // WhetherTheLitigationMeetsTheProsecutionConditions
		/// <summary>付款节点是否达到</summary>	
		[Description("付款节点是否达到")]
        public string WhetherThePaymentNodeReaches { get; set; } // WhetherThePaymentNodeReaches
		/// <summary>付款_是否满足起诉条件</summary>	
		[Description("付款_是否满足起诉条件")]
        public string WhetherThePaymentMeetsTheProsecutionConditions { get; set; } // WhetherThePaymentMeetsTheProsecutionConditions
		/// <summary>有无重点付款障碍</summary>	
		[Description("有无重点付款障碍")]
        public string AreThereAnyKeyPaymentObstacles { get; set; } // AreThereAnyKeyPaymentObstacles
		/// <summary>有无_是否满足起诉条件</summary>	
		[Description("有无_是否满足起诉条件")]
        public string WhetherTheProsecutionConditionsAreMet { get; set; } // WhetherTheProsecutionConditionsAreMet
		/// <summary>相关数额初步计算</summary>	
		[Description("相关数额初步计算")]
        public decimal? PreliminaryCalculationOfRelevantAmount { get; set; } // PreliminaryCalculationOfRelevantAmount
		/// <summary>预计诉讼成本费用</summary>	
		[Description("预计诉讼成本费用")]
        public decimal? EstimatedLitigationCosts { get; set; } // EstimatedLitigationCosts
		/// <summary>案情综合分析评估</summary>	
		[Description("案情综合分析评估")]
        public string ComprehensiveAnalysisAndEvaluationOfTheCase { get; set; } // ComprehensiveAnalysisAndEvaluationOfTheCase
		/// <summary>我方责任分析评估</summary>	
		[Description("我方责任分析评估")]
        public string OurResponsibilityAnalysisAndEvaluation { get; set; } // OurResponsibilityAnalysisAndEvaluation
		/// <summary>对方能力初步分析</summary>	
		[Description("对方能力初步分析")]
        public string PreliminaryAnalysisOfTheOpponentsAbility { get; set; } // PreliminaryAnalysisOfTheOpponentsAbility
		/// <summary>案件周期与难易程度分析</summary>	
		[Description("案件周期与难易程度分析")]
        public string AnalysisOnTheCycleAndDifficultyOfCases { get; set; } // AnalysisOnTheCycleAndDifficultyOfCases
		/// <summary>评估结论意见</summary>	
		[Description("评估结论意见")]
        public string EvaluationConclusion { get; set; } // EvaluationConclusion
		/// <summary>中介机构主要意见</summary>	
		[Description("中介机构主要意见")]
        public string MainOpinionsOfIntermediary { get; set; } // MainOpinionsOfIntermediary
		/// <summary>处理意见</summary>	
		[Description("处理意见")]
        public string HandlingOpinions { get; set; } // HandlingOpinions
		/// <summary>法务部部门正职领导</summary>	
		[Description("法务部部门正职领导")]
        public string DepartmentHead { get; set; } // DepartmentHead
		/// <summary>发起部门主管领导</summary>	
		[Description("发起部门主管领导")]
        public string DepartmentLeaderInCharge { get; set; } // DepartmentLeaderInCharge

        // Reverse navigation
		[JsonIgnore]
        public virtual ICollection<T_Lawsuit_NoProject_ListOfEvidenceTransfer> T_Lawsuit_NoProject_ListOfEvidenceTransfer { get { onT_Lawsuit_NoProject_ListOfEvidenceTransferGetting(); return _T_Lawsuit_NoProject_ListOfEvidenceTransfer;} }
		private ICollection<T_Lawsuit_NoProject_ListOfEvidenceTransfer> _T_Lawsuit_NoProject_ListOfEvidenceTransfer;
		partial void onT_Lawsuit_NoProject_ListOfEvidenceTransferGetting();


        public T_Lawsuit_NoProject()
        {
            _T_Lawsuit_NoProject_ListOfEvidenceTransfer = new List<T_Lawsuit_NoProject_ListOfEvidenceTransfer>();
        }
    }

	/// <summary>证据资料移交清单</summary>	
	[Description("证据资料移交清单")]
    public partial class T_Lawsuit_NoProject_ListOfEvidenceTransfer : Formula.BaseModel
    {
		/// <summary></summary>	
		[Description("")]
        public string ID { get; set; } // ID (Primary key)
		/// <summary></summary>	
		[Description("")]
        public string T_Lawsuit_NoProjectID { get; set; } // T_Lawsuit_NoProjectID
		/// <summary></summary>	
		[Description("")]
        public double? SortIndex { get; set; } // SortIndex
		/// <summary></summary>	
		[Description("")]
        public string IsReleased { get; set; } // IsReleased
		/// <summary>序号</summary>	
		[Description("序号")]
        public string Number { get; set; } // Number
		/// <summary>需提供资料</summary>	
		[Description("需提供资料")]
        public string NeedFile { get; set; } // NeedFile
		/// <summary>违约类案件资料违约侵权竞合</summary>	
		[Description("违约类案件资料违约侵权竞合")]
        public string BreachOfContractInformation { get; set; } // BreachOfContractInformation
		/// <summary>侵权类案件资料</summary>	
		[Description("侵权类案件资料")]
        public string InformationOnInfringementCases { get; set; } // InformationOnInfringementCases
		/// <summary>其他案件资料</summary>	
		[Description("其他案件资料")]
        public string InformationOnOtherCases { get; set; } // InformationOnOtherCases
		/// <summary>重要等级</summary>	
		[Description("重要等级")]
        public string Level { get; set; } // Level
		/// <summary>提供方式</summary>	
		[Description("提供方式")]
        public string ProvideType { get; set; } // ProvideType
		/// <summary>实际提供情况</summary>	
		[Description("实际提供情况")]
        public string ActualDesc { get; set; } // ActualDesc

        // Foreign keys
		[JsonIgnore]
        public virtual T_Lawsuit_NoProject T_Lawsuit_NoProject { get; set; } //  T_Lawsuit_NoProjectID - FK_T_Lawsuit_NoProject_ListOfEvidenceTransfer_T_Lawsuit_NoProject
    }

	/// <summary>项目类诉讼案件审批</summary>	
	[Description("项目类诉讼案件审批")]
    public partial class T_Lawsuit_Project : Formula.BaseModel
    {
		/// <summary></summary>	
		[Description("")]
        public string ID { get; set; } // ID (Primary key)
		/// <summary></summary>	
		[Description("")]
        public DateTime? CreateDate { get; set; } // CreateDate
		/// <summary></summary>	
		[Description("")]
        public DateTime? ModifyDate { get; set; } // ModifyDate
		/// <summary></summary>	
		[Description("")]
        public string CreateUserID { get; set; } // CreateUserID
		/// <summary></summary>	
		[Description("")]
        public string CreateUser { get; set; } // CreateUser
		/// <summary></summary>	
		[Description("")]
        public string ModifyUserID { get; set; } // ModifyUserID
		/// <summary></summary>	
		[Description("")]
        public string ModifyUser { get; set; } // ModifyUser
		/// <summary></summary>	
		[Description("")]
        public string OrgID { get; set; } // OrgID
		/// <summary></summary>	
		[Description("")]
        public string CompanyID { get; set; } // CompanyID
		/// <summary></summary>	
		[Description("")]
        public string FlowPhase { get; set; } // FlowPhase
		/// <summary></summary>	
		[Description("")]
        public string FlowInfo { get; set; } // FlowInfo
		/// <summary></summary>	
		[Description("")]
        public string StepName { get; set; } // StepName
		/// <summary>申请人</summary>	
		[Description("申请人")]
        public string ApplyUser { get; set; } // ApplyUser
		/// <summary>申请人名称</summary>	
		[Description("申请人名称")]
        public string ApplyUserName { get; set; } // ApplyUserName
		/// <summary>申请日期</summary>	
		[Description("申请日期")]
        public DateTime? ApplyDate { get; set; } // ApplyDate
		/// <summary>移交单位</summary>	
		[Description("移交单位")]
        public string TransferDept { get; set; } // TransferDept
		/// <summary>移交单位名称</summary>	
		[Description("移交单位名称")]
        public string TransferDeptName { get; set; } // TransferDeptName
		/// <summary>移交日期</summary>	
		[Description("移交日期")]
        public DateTime? TransferDate { get; set; } // TransferDate
		/// <summary>诉讼类型</summary>	
		[Description("诉讼类型")]
        public string LitigationType { get; set; } // LitigationType
		/// <summary>被诉单位名称</summary>	
		[Description("被诉单位名称")]
        public string DefendantName { get; set; } // DefendantName
		/// <summary>我方合同主体名称</summary>	
		[Description("我方合同主体名称")]
        public string OurContractSubjectName { get; set; } // OurContractSubjectName
		/// <summary>项目名称</summary>	
		[Description("项目名称")]
        public string ProjectName { get; set; } // ProjectName
		/// <summary>项目名称名称</summary>	
		[Description("项目名称名称")]
        public string ProjectNameName { get; set; } // ProjectNameName
		/// <summary>项目地点</summary>	
		[Description("项目地点")]
        public string ProjectArea { get; set; } // ProjectArea
		/// <summary>项目状态</summary>	
		[Description("项目状态")]
        public string ProjectStatus { get; set; } // ProjectStatus
		/// <summary>项目总额</summary>	
		[Description("项目总额")]
        public string ProjectTotalAmount { get; set; } // ProjectTotalAmount
		/// <summary>数额是否确定无误</summary>	
		[Description("数额是否确定无误")]
        public string AmountIsNoMistake { get; set; } // AmountIsNoMistake
		/// <summary>约定最后一笔付款期限或条件</summary>	
		[Description("约定最后一笔付款期限或条件")]
        public string AgreeTermsAndConditionsLastPayment { get; set; } // AgreeTermsAndConditionsLastPayment
		/// <summary>付款金额或比例</summary>	
		[Description("付款金额或比例")]
        public string AgreeLastPaymentTermOrCondition { get; set; } // AgreeLastPaymentTermOrCondition
		/// <summary>实际最后一笔付款日期</summary>	
		[Description("实际最后一笔付款日期")]
        public DateTime? ActualFinalPayDate { get; set; } // ActualFinalPayDate
		/// <summary>付款金额及方式</summary>	
		[Description("付款金额及方式")]
        public string PayAmountAndWay { get; set; } // PayAmountAndWay
		/// <summary>截止当前欠款金额</summary>	
		[Description("截止当前欠款金额")]
        public string CurrentAmountOwed { get; set; } // CurrentAmountOwed
		/// <summary>需说明情况</summary>	
		[Description("需说明情况")]
        public string NeedDesc { get; set; } // NeedDesc
		/// <summary>违约金赔偿金计算依据</summary>	
		[Description("违约金赔偿金计算依据")]
        public string CalculatingLiquidatedDamagesBasis { get; set; } // CalculatingLiquidatedDamagesBasis
		/// <summary>预估金额</summary>	
		[Description("预估金额")]
        public string EstimateAmount { get; set; } // EstimateAmount
		/// <summary>第一次日期</summary>	
		[Description("第一次日期")]
        public DateTime? FirstDate { get; set; } // FirstDate
		/// <summary>第一次方式</summary>	
		[Description("第一次方式")]
        public string FirstWay { get; set; } // FirstWay
		/// <summary>第二次日期</summary>	
		[Description("第二次日期")]
        public DateTime? SecondDate { get; set; } // SecondDate
		/// <summary>第二次方式</summary>	
		[Description("第二次方式")]
        public string SecondWay { get; set; } // SecondWay
		/// <summary>第三次日期</summary>	
		[Description("第三次日期")]
        public DateTime? ThirdDate { get; set; } // ThirdDate
		/// <summary>第三次方式</summary>	
		[Description("第三次方式")]
        public string ThirdWay { get; set; } // ThirdWay
		/// <summary>已知对方资产情况</summary>	
		[Description("已知对方资产情况")]
        public string KnowingCounterpartyAssets { get; set; } // KnowingCounterpartyAssets
		/// <summary>已知对方被诉情况</summary>	
		[Description("已知对方被诉情况")]
        public string KnowingDefendantCase { get; set; } // KnowingDefendantCase
		/// <summary>移交理由</summary>	
		[Description("移交理由")]
        public string TransferReason { get; set; } // TransferReason
		/// <summary>预期目标</summary>	
		[Description("预期目标")]
        public string ExpectTarget { get; set; } // ExpectTarget
		/// <summary>我方违约情况</summary>	
		[Description("我方违约情况")]
        public string OurBreachOfContract { get; set; } // OurBreachOfContract
		/// <summary>我方被诉部门单位</summary>	
		[Description("我方被诉部门单位")]
        public string OurRespondentDepartmentUnit { get; set; } // OurRespondentDepartmentUnit
		/// <summary>收文名称</summary>	
		[Description("收文名称")]
        public string ReceiptName { get; set; } // ReceiptName
		/// <summary>被诉项目名称</summary>	
		[Description("被诉项目名称")]
        public string RespondentProject { get; set; } // RespondentProject
		/// <summary>被诉项目名称名称</summary>	
		[Description("被诉项目名称名称")]
        public string RespondentProjectName { get; set; } // RespondentProjectName
		/// <summary>案情简介</summary>	
		[Description("案情简介")]
        public string CaseBrief { get; set; } // CaseBrief
		/// <summary>关键问题描述</summary>	
		[Description("关键问题描述")]
        public string DescriptionOfKeyIssues { get; set; } // DescriptionOfKeyIssues
		/// <summary>证据资料要求</summary>	
		[Description("证据资料要求")]
        public string EvidenceInformationRequirements { get; set; } // EvidenceInformationRequirements
		/// <summary>法律文书扫描件</summary>	
		[Description("法律文书扫描件")]
        public string ScannedLegalDocuments { get; set; } // ScannedLegalDocuments
		/// <summary>移交单位正职领导</summary>	
		[Description("移交单位正职领导")]
        public string TransferUnitDeptLeaderSign { get; set; } // TransferUnitDeptLeaderSign
		/// <summary>移交单位指定对接人员</summary>	
		[Description("移交单位指定对接人员")]
        public string TransferUnitDesignatedDockingPersonnel { get; set; } // TransferUnitDesignatedDockingPersonnel
		/// <summary>移交单位指定对接人员名称</summary>	
		[Description("移交单位指定对接人员名称")]
        public string TransferUnitDesignatedDockingPersonnelName { get; set; } // TransferUnitDesignatedDockingPersonnelName
		/// <summary>第一步法务部门正职领导</summary>	
		[Description("第一步法务部门正职领导")]
        public string FistHeadOfLegalDepartment { get; set; } // FistHeadOfLegalDepartment
		/// <summary>联系电话</summary>	
		[Description("联系电话")]
        public string Phone { get; set; } // Phone
		/// <summary>证据资料移交清单</summary>	
		[Description("证据资料移交清单")]
        public string TransferDetail { get; set; } // TransferDetail
		/// <summary>评议_移交单位</summary>	
		[Description("评议_移交单位")]
        public string PY_TransferDept { get; set; } // PY_TransferDept
		/// <summary>评议_移交单位名称</summary>	
		[Description("评议_移交单位名称")]
        public string PY_TransferDeptName { get; set; } // PY_TransferDeptName
		/// <summary>评议_暂定编号</summary>	
		[Description("评议_暂定编号")]
        public string PY_TempNumber { get; set; } // PY_TempNumber
		/// <summary>评议_被诉单位名称</summary>	
		[Description("评议_被诉单位名称")]
        public string PY_DefendantName { get; set; } // PY_DefendantName
		/// <summary>评议_我方合同主体名称</summary>	
		[Description("评议_我方合同主体名称")]
        public string PY_OurContractSubjectName { get; set; } // PY_OurContractSubjectName
		/// <summary>评议_项目名称</summary>	
		[Description("评议_项目名称")]
        public string PY_ProjectName { get; set; } // PY_ProjectName
		/// <summary>评议_项目名称名称</summary>	
		[Description("评议_项目名称名称")]
        public string PY_ProjectNameName { get; set; } // PY_ProjectNameName
		/// <summary>评议_截止当前欠款金额</summary>	
		[Description("评议_截止当前欠款金额")]
        public string PY_JZDQQKJE { get; set; } // PY_JZDQQKJE
		/// <summary>移交单位欠款说明</summary>	
		[Description("移交单位欠款说明")]
        public string TransferUnitArrearsDescription { get; set; } // TransferUnitArrearsDescription
		/// <summary>移交资料达标情况</summary>	
		[Description("移交资料达标情况")]
        public string TransferDataCompliance { get; set; } // TransferDataCompliance
		/// <summary>移交_是否满足起诉条件</summary>	
		[Description("移交_是否满足起诉条件")]
        public string YJ_IsMeetTheConditionsForProsecution { get; set; } // YJ_IsMeetTheConditionsForProsecution
		/// <summary>诉讼时效是否超过</summary>	
		[Description("诉讼时效是否超过")]
        public string IsTheStatuteOfLimitationsOver { get; set; } // IsTheStatuteOfLimitationsOver
		/// <summary>诉讼_是否满足起诉条件</summary>	
		[Description("诉讼_是否满足起诉条件")]
        public string SS_IsMeetTheConditionsForProsecution { get; set; } // SS_IsMeetTheConditionsForProsecution
		/// <summary>付款节点是否达到</summary>	
		[Description("付款节点是否达到")]
        public string WhetherThePaymentNodeHasReached { get; set; } // WhetherThePaymentNodeHasReached
		/// <summary>付款_是否满足起诉条件</summary>	
		[Description("付款_是否满足起诉条件")]
        public string FK_IsMeetTheConditionsForProsecution { get; set; } // FK_IsMeetTheConditionsForProsecution
		/// <summary>有无重点付款障碍</summary>	
		[Description("有无重点付款障碍")]
        public string IsKeyPaymentBarrier { get; set; } // IsKeyPaymentBarrier
		/// <summary>有无重点付款_是否满足起诉条件</summary>	
		[Description("有无重点付款_是否满足起诉条件")]
        public string YWZDFK_IsMeetTheConditionsForProsecution { get; set; } // YWZDFK_IsMeetTheConditionsForProsecution
		/// <summary>相关数额初步计算</summary>	
		[Description("相关数额初步计算")]
        public decimal? PreliminaryCalculationRelevantAmounts { get; set; } // PreliminaryCalculationRelevantAmounts
		/// <summary>预计诉讼成本费用</summary>	
		[Description("预计诉讼成本费用")]
        public decimal? EstimatedLitigationCosts { get; set; } // EstimatedLitigationCosts
		/// <summary>案情综合分析评估</summary>	
		[Description("案情综合分析评估")]
        public string ComprehensiveAnalysisAndEvaluationOfTheCase { get; set; } // ComprehensiveAnalysisAndEvaluationOfTheCase
		/// <summary>我方责任分析评估</summary>	
		[Description("我方责任分析评估")]
        public string OurResponsibilityAnalysisAndEvaluation { get; set; } // OurResponsibilityAnalysisAndEvaluation
		/// <summary>对方能力初步分析</summary>	
		[Description("对方能力初步分析")]
        public string PreliminaryAnalysisOfTheOpponentAbility { get; set; } // PreliminaryAnalysisOfTheOpponentAbility
		/// <summary>案件周期与难以程度分析</summary>	
		[Description("案件周期与难以程度分析")]
        public string AnalysisOfCaseCycleAndDifficulty { get; set; } // AnalysisOfCaseCycleAndDifficulty
		/// <summary>评估结论意见</summary>	
		[Description("评估结论意见")]
        public string EvaluationConclusion { get; set; } // EvaluationConclusion
		/// <summary>中介机构主要意见</summary>	
		[Description("中介机构主要意见")]
        public string MainOpinionsOfIntermediary { get; set; } // MainOpinionsOfIntermediary
		/// <summary>处理意见</summary>	
		[Description("处理意见")]
        public string HandlingOpinions { get; set; } // HandlingOpinions
		/// <summary>法务部门正职领导</summary>	
		[Description("法务部门正职领导")]
        public string HeadOfLegalDepartment { get; set; } // HeadOfLegalDepartment
		/// <summary>发起部门主管领导</summary>	
		[Description("发起部门主管领导")]
        public string LeaderInChargeOfInitiatingDepartment { get; set; } // LeaderInChargeOfInitiatingDepartment
		/// <summary>申请部门</summary>	
		[Description("申请部门")]
        public string ApplyDept { get; set; } // ApplyDept
		/// <summary>申请部门名称</summary>	
		[Description("申请部门名称")]
        public string ApplyDeptName { get; set; } // ApplyDeptName

        // Reverse navigation
		[JsonIgnore]
        public virtual ICollection<T_Lawsuit_Project_TransferDetail> T_Lawsuit_Project_TransferDetail { get { onT_Lawsuit_Project_TransferDetailGetting(); return _T_Lawsuit_Project_TransferDetail;} }
		private ICollection<T_Lawsuit_Project_TransferDetail> _T_Lawsuit_Project_TransferDetail;
		partial void onT_Lawsuit_Project_TransferDetailGetting();


        public T_Lawsuit_Project()
        {
            _T_Lawsuit_Project_TransferDetail = new List<T_Lawsuit_Project_TransferDetail>();
        }
    }

	/// <summary>证据资料移交清单</summary>	
	[Description("证据资料移交清单")]
    public partial class T_Lawsuit_Project_TransferDetail : Formula.BaseModel
    {
		/// <summary></summary>	
		[Description("")]
        public string ID { get; set; } // ID (Primary key)
		/// <summary></summary>	
		[Description("")]
        public string T_Lawsuit_ProjectID { get; set; } // T_Lawsuit_ProjectID
		/// <summary></summary>	
		[Description("")]
        public double? SortIndex { get; set; } // SortIndex
		/// <summary></summary>	
		[Description("")]
        public string IsReleased { get; set; } // IsReleased
		/// <summary>需提供资料</summary>	
		[Description("需提供资料")]
        public string NeedProvideDoc { get; set; } // NeedProvideDoc
		/// <summary>说明 （包括但不限于）</summary>	
		[Description("说明 （包括但不限于）")]
        public string Explain { get; set; } // Explain
		/// <summary>重要等级</summary>	
		[Description("重要等级")]
        public string ImportantLevel { get; set; } // ImportantLevel
		/// <summary>提供方式</summary>	
		[Description("提供方式")]
        public string ProvideWay { get; set; } // ProvideWay
		/// <summary>实际提供情况 （申请人据实填写）</summary>	
		[Description("实际提供情况 （申请人据实填写）")]
        public string ActualProvideDesc { get; set; } // ActualProvideDesc

        // Foreign keys
		[JsonIgnore]
        public virtual T_Lawsuit_Project T_Lawsuit_Project { get; set; } //  T_Lawsuit_ProjectID - FK_T_Lawsuit_Project_TransferDetail_T_Lawsuit_Project
    }

	/// <summary>法治活动</summary>	
	[Description("法治活动")]
    public partial class T_LegalPublicity_LawActivities : Formula.BaseModel
    {
		/// <summary></summary>	
		[Description("")]
        public string ID { get; set; } // ID (Primary key)
		/// <summary></summary>	
		[Description("")]
        public DateTime? CreateDate { get; set; } // CreateDate
		/// <summary></summary>	
		[Description("")]
        public DateTime? ModifyDate { get; set; } // ModifyDate
		/// <summary></summary>	
		[Description("")]
        public string CreateUserID { get; set; } // CreateUserID
		/// <summary></summary>	
		[Description("")]
        public string CreateUser { get; set; } // CreateUser
		/// <summary></summary>	
		[Description("")]
        public string ModifyUserID { get; set; } // ModifyUserID
		/// <summary></summary>	
		[Description("")]
        public string ModifyUser { get; set; } // ModifyUser
		/// <summary></summary>	
		[Description("")]
        public string OrgID { get; set; } // OrgID
		/// <summary></summary>	
		[Description("")]
        public string CompanyID { get; set; } // CompanyID
		/// <summary></summary>	
		[Description("")]
        public string FlowPhase { get; set; } // FlowPhase
		/// <summary></summary>	
		[Description("")]
        public string FlowInfo { get; set; } // FlowInfo
		/// <summary></summary>	
		[Description("")]
        public string StepName { get; set; } // StepName
		/// <summary>活动组织单位</summary>	
		[Description("活动组织单位")]
        public string ActivityOrganizationUnit { get; set; } // ActivityOrganizationUnit
		/// <summary>活动组织单位名称</summary>	
		[Description("活动组织单位名称")]
        public string ActivityOrganizationUnitName { get; set; } // ActivityOrganizationUnitName
		/// <summary>上报日期</summary>	
		[Description("上报日期")]
        public DateTime? ReportingDate { get; set; } // ReportingDate
		/// <summary>活动主题</summary>	
		[Description("活动主题")]
        public string ActivityTheme { get; set; } // ActivityTheme
		/// <summary>活动形式</summary>	
		[Description("活动形式")]
        public string ActivityForm { get; set; } // ActivityForm
		/// <summary>活动时间</summary>	
		[Description("活动时间")]
        public DateTime? ActivityTime { get; set; } // ActivityTime
		/// <summary>参与和影响人数</summary>	
		[Description("参与和影响人数")]
        public decimal? ParticipantsAndInfluencersNumber { get; set; } // ParticipantsAndInfluencersNumber
		/// <summary>活动情况</summary>	
		[Description("活动情况")]
        public string ActivitySituation { get; set; } // ActivitySituation
		/// <summary>活动成效</summary>	
		[Description("活动成效")]
        public string ActivityEffectiveness { get; set; } // ActivityEffectiveness
		/// <summary>不足或需改进之处</summary>	
		[Description("不足或需改进之处")]
        public string DeficienciesOrImprovements { get; set; } // DeficienciesOrImprovements
		/// <summary>备注</summary>	
		[Description("备注")]
        public string Remarks { get; set; } // Remarks
		/// <summary>附件</summary>	
		[Description("附件")]
        public string Enclosure { get; set; } // Enclosure
		/// <summary>联系人</summary>	
		[Description("联系人")]
        public string Contacts { get; set; } // Contacts
		/// <summary>联系电话</summary>	
		[Description("联系电话")]
        public string ContactNumber { get; set; } // ContactNumber
		/// <summary>活动组织人</summary>	
		[Description("活动组织人")]
        public string EventOrganizer { get; set; } // EventOrganizer
		/// <summary>法务部副职领导意见</summary>	
		[Description("法务部副职领导意见")]
        public string DeputyLeadersLegalDepartmentOpinions { get; set; } // DeputyLeadersLegalDepartmentOpinions
		/// <summary>法务部正职领导意见</summary>	
		[Description("法务部正职领导意见")]
        public string PrincipalLeadersLegalDepartmentOpinions { get; set; } // PrincipalLeadersLegalDepartmentOpinions
		/// <summary>公司主管领导</summary>	
		[Description("公司主管领导")]
        public string TheCompanyLeaderInCharge { get; set; } // TheCompanyLeaderInCharge
    }

	/// <summary>用餐申请</summary>	
	[Description("用餐申请")]
    public partial class T_Logistics_DiningApply : Formula.BaseModel
    {
		/// <summary></summary>	
		[Description("")]
        public string ID { get; set; } // ID (Primary key)
		/// <summary></summary>	
		[Description("")]
        public DateTime? CreateDate { get; set; } // CreateDate
		/// <summary></summary>	
		[Description("")]
        public DateTime? ModifyDate { get; set; } // ModifyDate
		/// <summary></summary>	
		[Description("")]
        public string CreateUserID { get; set; } // CreateUserID
		/// <summary></summary>	
		[Description("")]
        public string CreateUser { get; set; } // CreateUser
		/// <summary></summary>	
		[Description("")]
        public string ModifyUserID { get; set; } // ModifyUserID
		/// <summary></summary>	
		[Description("")]
        public string ModifyUser { get; set; } // ModifyUser
		/// <summary></summary>	
		[Description("")]
        public string OrgID { get; set; } // OrgID
		/// <summary></summary>	
		[Description("")]
        public string CompanyID { get; set; } // CompanyID
		/// <summary></summary>	
		[Description("")]
        public string FlowPhase { get; set; } // FlowPhase
		/// <summary></summary>	
		[Description("")]
        public string FlowInfo { get; set; } // FlowInfo
		/// <summary></summary>	
		[Description("")]
        public string StepName { get; set; } // StepName
		/// <summary>申请人</summary>	
		[Description("申请人")]
        public string ApplyUser { get; set; } // ApplyUser
		/// <summary>申请人名称</summary>	
		[Description("申请人名称")]
        public string ApplyUserName { get; set; } // ApplyUserName
		/// <summary>申请人部门</summary>	
		[Description("申请人部门")]
        public string ApplyDept { get; set; } // ApplyDept
		/// <summary>申请人部门名称</summary>	
		[Description("申请人部门名称")]
        public string ApplyDeptName { get; set; } // ApplyDeptName
		/// <summary>申请日期</summary>	
		[Description("申请日期")]
        public DateTime? ApplyDate { get; set; } // ApplyDate
		/// <summary>就餐时间</summary>	
		[Description("就餐时间")]
        public string MealTime { get; set; } // MealTime
		/// <summary>客户单位</summary>	
		[Description("客户单位")]
        public string CustomerUnit { get; set; } // CustomerUnit
		/// <summary>联系人</summary>	
		[Description("联系人")]
        public string Contact { get; set; } // Contact
		/// <summary>联系人名称</summary>	
		[Description("联系人名称")]
        public string ContactName { get; set; } // ContactName
		/// <summary>联系电话</summary>	
		[Description("联系电话")]
        public string ContactPhone { get; set; } // ContactPhone
		/// <summary>申请就餐人数</summary>	
		[Description("申请就餐人数")]
        public int? ApplyMealNumber { get; set; } // ApplyMealNumber
		/// <summary>就餐类型</summary>	
		[Description("就餐类型")]
        public string MealType { get; set; } // MealType
		/// <summary>实际就餐人数</summary>	
		[Description("实际就餐人数")]
        public int? ActualMealNumber { get; set; } // ActualMealNumber
		/// <summary>实际消费金额</summary>	
		[Description("实际消费金额")]
        public decimal? ActualCostMoney { get; set; } // ActualCostMoney
		/// <summary>部门领导审批</summary>	
		[Description("部门领导审批")]
        public string DeptLeaderSign { get; set; } // DeptLeaderSign
		/// <summary>食堂负责人意见</summary>	
		[Description("食堂负责人意见")]
        public string CanteenManagerSign { get; set; } // CanteenManagerSign
		/// <summary>是否餐厅主管</summary>	
		[Description("是否餐厅主管")]
        public string IsRestaurantSupervisor { get; set; } // IsRestaurantSupervisor
    }

	/// <summary>外部客户公寓申请</summary>	
	[Description("外部客户公寓申请")]
    public partial class T_Logistics_ExternalClientApartApply : Formula.BaseModel
    {
		/// <summary></summary>	
		[Description("")]
        public string ID { get; set; } // ID (Primary key)
		/// <summary></summary>	
		[Description("")]
        public DateTime? CreateDate { get; set; } // CreateDate
		/// <summary></summary>	
		[Description("")]
        public DateTime? ModifyDate { get; set; } // ModifyDate
		/// <summary></summary>	
		[Description("")]
        public string CreateUserID { get; set; } // CreateUserID
		/// <summary></summary>	
		[Description("")]
        public string CreateUser { get; set; } // CreateUser
		/// <summary></summary>	
		[Description("")]
        public string ModifyUserID { get; set; } // ModifyUserID
		/// <summary></summary>	
		[Description("")]
        public string ModifyUser { get; set; } // ModifyUser
		/// <summary></summary>	
		[Description("")]
        public string OrgID { get; set; } // OrgID
		/// <summary></summary>	
		[Description("")]
        public string CompanyID { get; set; } // CompanyID
		/// <summary></summary>	
		[Description("")]
        public string FlowPhase { get; set; } // FlowPhase
		/// <summary></summary>	
		[Description("")]
        public string FlowInfo { get; set; } // FlowInfo
		/// <summary></summary>	
		[Description("")]
        public string StepName { get; set; } // StepName
		/// <summary>申请人</summary>	
		[Description("申请人")]
        public string ApplyUser { get; set; } // ApplyUser
		/// <summary>申请人名称</summary>	
		[Description("申请人名称")]
        public string ApplyUserName { get; set; } // ApplyUserName
		/// <summary>申请人部门</summary>	
		[Description("申请人部门")]
        public string ApplyDept { get; set; } // ApplyDept
		/// <summary>申请人部门名称</summary>	
		[Description("申请人部门名称")]
        public string ApplyDeptName { get; set; } // ApplyDeptName
		/// <summary>申请入住日期</summary>	
		[Description("申请入住日期")]
        public DateTime? ApplyCheckInDate { get; set; } // ApplyCheckInDate
		/// <summary>入住天数</summary>	
		[Description("入住天数")]
        public int? CheckInPersonNumber { get; set; } // CheckInPersonNumber
		/// <summary>实际入住人数</summary>	
		[Description("实际入住人数")]
        public int? ActualCheckInPersonNumber { get; set; } // ActualCheckInPersonNumber
		/// <summary>申请房间数量</summary>	
		[Description("申请房间数量")]
        public int? ApplyRoomNumber { get; set; } // ApplyRoomNumber
		/// <summary>客户联系人</summary>	
		[Description("客户联系人")]
        public string CustomerContact { get; set; } // CustomerContact
		/// <summary>入住人联系方式</summary>	
		[Description("入住人联系方式")]
        public string CheckInContact { get; set; } // CheckInContact
		/// <summary>客户名称</summary>	
		[Description("客户名称")]
        public string Customer { get; set; } // Customer
		/// <summary>入住情况说明</summary>	
		[Description("入住情况说明")]
        public string CheckInDesc { get; set; } // CheckInDesc
		/// <summary>部门领导审批</summary>	
		[Description("部门领导审批")]
        public string DeptLeaderSign { get; set; } // DeptLeaderSign
		/// <summary>公寓主管审批</summary>	
		[Description("公寓主管审批")]
        public string ApartmentSupervisorSign { get; set; } // ApartmentSupervisorSign
		/// <summary>工号</summary>	
		[Description("工号")]
        public string ApplyCode { get; set; } // ApplyCode
		/// <summary>性别</summary>	
		[Description("性别")]
        public string ApplySex { get; set; } // ApplySex
		/// <summary>是否宿舍主管</summary>	
		[Description("是否宿舍主管")]
        public string IsApartManage { get; set; } // IsApartManage
    }

	/// <summary>办公室详情</summary>	
	[Description("办公室详情")]
    public partial class T_Logistics_Office : Formula.BaseModel
    {
		/// <summary></summary>	
		[Description("")]
        public string ID { get; set; } // ID (Primary key)
		/// <summary></summary>	
		[Description("")]
        public DateTime? CreateDate { get; set; } // CreateDate
		/// <summary></summary>	
		[Description("")]
        public DateTime? ModifyDate { get; set; } // ModifyDate
		/// <summary></summary>	
		[Description("")]
        public string CreateUserID { get; set; } // CreateUserID
		/// <summary></summary>	
		[Description("")]
        public string CreateUser { get; set; } // CreateUser
		/// <summary></summary>	
		[Description("")]
        public string ModifyUserID { get; set; } // ModifyUserID
		/// <summary></summary>	
		[Description("")]
        public string ModifyUser { get; set; } // ModifyUser
		/// <summary></summary>	
		[Description("")]
        public string OrgID { get; set; } // OrgID
		/// <summary></summary>	
		[Description("")]
        public string CompanyID { get; set; } // CompanyID
		/// <summary></summary>	
		[Description("")]
        public string FlowPhase { get; set; } // FlowPhase
		/// <summary></summary>	
		[Description("")]
        public string FlowInfo { get; set; } // FlowInfo
		/// <summary></summary>	
		[Description("")]
        public string StepName { get; set; } // StepName
		/// <summary>填写人</summary>	
		[Description("填写人")]
        public string Filler { get; set; } // Filler
		/// <summary>填写人名称</summary>	
		[Description("填写人名称")]
        public string FillerName { get; set; } // FillerName
		/// <summary>填写日期</summary>	
		[Description("填写日期")]
        public DateTime? FillDate { get; set; } // FillDate
		/// <summary>办公室名称</summary>	
		[Description("办公室名称")]
        public string Name { get; set; } // Name
		/// <summary>所在位置</summary>	
		[Description("所在位置")]
        public string Pos { get; set; } // Pos
		/// <summary>办公室面积</summary>	
		[Description("办公室面积")]
        public decimal? Area { get; set; } // Area
		/// <summary>当前状态</summary>	
		[Description("当前状态")]
        public string Status { get; set; } // Status
		/// <summary>办公家具套数</summary>	
		[Description("办公家具套数")]
        public int? Number { get; set; } // Number
		/// <summary>说明</summary>	
		[Description("说明")]
        public string Description { get; set; } // Description
		/// <summary>软硬件情况</summary>	
		[Description("软硬件情况")]
        public string SoftwareAndHardwareSituation { get; set; } // SoftwareAndHardwareSituation
		/// <summary>备注</summary>	
		[Description("备注")]
        public string Remark { get; set; } // Remark
		/// <summary>附件</summary>	
		[Description("附件")]
        public string Attach { get; set; } // Attach
		/// <summary>NodeID</summary>	
		[Description("NodeID")]
        public string NodeID { get; set; } // NodeID
		/// <summary>NodeFullID</summary>	
		[Description("NodeFullID")]
        public string NodeFullID { get; set; } // NodeFullID
		/// <summary>当前使用部门</summary>	
		[Description("当前使用部门")]
        public string CurrentUseDept { get; set; } // CurrentUseDept
		/// <summary>当前使用部门名称</summary>	
		[Description("当前使用部门名称")]
        public string CurrentUseDeptName { get; set; } // CurrentUseDeptName
		/// <summary>使用状态</summary>	
		[Description("使用状态")]
        public string UseStatus { get; set; } // UseStatus
		/// <summary>所在位置名称</summary>	
		[Description("所在位置名称")]
        public string PosName { get; set; } // PosName
    }

	/// <summary>办公室申请</summary>	
	[Description("办公室申请")]
    public partial class T_Logistics_OfficeApply : Formula.BaseModel
    {
		/// <summary></summary>	
		[Description("")]
        public string ID { get; set; } // ID (Primary key)
		/// <summary></summary>	
		[Description("")]
        public DateTime? CreateDate { get; set; } // CreateDate
		/// <summary></summary>	
		[Description("")]
        public DateTime? ModifyDate { get; set; } // ModifyDate
		/// <summary></summary>	
		[Description("")]
        public string CreateUserID { get; set; } // CreateUserID
		/// <summary></summary>	
		[Description("")]
        public string CreateUser { get; set; } // CreateUser
		/// <summary></summary>	
		[Description("")]
        public string ModifyUserID { get; set; } // ModifyUserID
		/// <summary></summary>	
		[Description("")]
        public string ModifyUser { get; set; } // ModifyUser
		/// <summary></summary>	
		[Description("")]
        public string OrgID { get; set; } // OrgID
		/// <summary></summary>	
		[Description("")]
        public string CompanyID { get; set; } // CompanyID
		/// <summary></summary>	
		[Description("")]
        public string FlowPhase { get; set; } // FlowPhase
		/// <summary></summary>	
		[Description("")]
        public string FlowInfo { get; set; } // FlowInfo
		/// <summary></summary>	
		[Description("")]
        public string StepName { get; set; } // StepName
		/// <summary>申请人</summary>	
		[Description("申请人")]
        public string ApplyUser { get; set; } // ApplyUser
		/// <summary>申请人名称</summary>	
		[Description("申请人名称")]
        public string ApplyUserName { get; set; } // ApplyUserName
		/// <summary>申请人部门</summary>	
		[Description("申请人部门")]
        public string ApplyDept { get; set; } // ApplyDept
		/// <summary>申请人部门名称</summary>	
		[Description("申请人部门名称")]
        public string ApplyDeptName { get; set; } // ApplyDeptName
		/// <summary>申请日期</summary>	
		[Description("申请日期")]
        public DateTime? ApplyDate { get; set; } // ApplyDate
		/// <summary>申请类型</summary>	
		[Description("申请类型")]
        public string ApplyType { get; set; } // ApplyType
		/// <summary>变更_新办公室名称</summary>	
		[Description("变更_新办公室名称")]
        public string Change_NewOfficeName { get; set; } // Change_NewOfficeName
		/// <summary>变更_新办公室名称名称</summary>	
		[Description("变更_新办公室名称名称")]
        public string Change_NewOfficeNameName { get; set; } // Change_NewOfficeNameName
		/// <summary>变更_新办公室面积</summary>	
		[Description("变更_新办公室面积")]
        public string Change_NewOfficeArea { get; set; } // Change_NewOfficeArea
		/// <summary>变更_开始时间</summary>	
		[Description("变更_开始时间")]
        public DateTime? Change_StartDate { get; set; } // Change_StartDate
		/// <summary>变更_拟使用人数</summary>	
		[Description("变更_拟使用人数")]
        public int? Change_UseNumber { get; set; } // Change_UseNumber
		/// <summary>新办公室名称</summary>	
		[Description("新办公室名称")]
        public string NewOfficeName { get; set; } // NewOfficeName
		/// <summary>新办公室名称名称</summary>	
		[Description("新办公室名称名称")]
        public string NewOfficeNameName { get; set; } // NewOfficeNameName
		/// <summary>新办公室面积</summary>	
		[Description("新办公室面积")]
        public string NewOfficeArea { get; set; } // NewOfficeArea
		/// <summary>开始时间</summary>	
		[Description("开始时间")]
        public DateTime? StartDate { get; set; } // StartDate
		/// <summary>拟使用人数</summary>	
		[Description("拟使用人数")]
        public int? UseNumber { get; set; } // UseNumber
		/// <summary>拟归还办公室名称</summary>	
		[Description("拟归还办公室名称")]
        public string BackOfficeName { get; set; } // BackOfficeName
		/// <summary>拟归还办公室名称名称</summary>	
		[Description("拟归还办公室名称名称")]
        public string BackOfficeNameName { get; set; } // BackOfficeNameName
		/// <summary>办公室面积</summary>	
		[Description("办公室面积")]
        public string OfficeArea { get; set; } // OfficeArea
		/// <summary>归还时间</summary>	
		[Description("归还时间")]
        public DateTime? BackDate { get; set; } // BackDate
		/// <summary>申请事由</summary>	
		[Description("申请事由")]
        public string ApplyReason { get; set; } // ApplyReason
		/// <summary>办公家具需求说明</summary>	
		[Description("办公家具需求说明")]
        public string OfficeFurnitureRequirements { get; set; } // OfficeFurnitureRequirements
		/// <summary>软硬件资源需求</summary>	
		[Description("软硬件资源需求")]
        public string HardwareAndSoftwareResourceRequirements { get; set; } // HardwareAndSoftwareResourceRequirements
		/// <summary>部门领导审批</summary>	
		[Description("部门领导审批")]
        public string DeptLeaderSign { get; set; } // DeptLeaderSign
		/// <summary>综合部领导意见</summary>	
		[Description("综合部领导意见")]
        public string ComprehensiveDeptSign { get; set; } // ComprehensiveDeptSign
		/// <summary>变更_旧办公室名称</summary>	
		[Description("变更_旧办公室名称")]
        public string Change_OldOfficeName { get; set; } // Change_OldOfficeName
		/// <summary>变更_旧办公室名称名称</summary>	
		[Description("变更_旧办公室名称名称")]
        public string Change_OldOfficeNameName { get; set; } // Change_OldOfficeNameName
		/// <summary>变更_旧办公室面积</summary>	
		[Description("变更_旧办公室面积")]
        public string Change_OldOfficeArea { get; set; } // Change_OldOfficeArea
    }

	/// <summary>办公室位置</summary>	
	[Description("办公室位置")]
    public partial class T_Logistics_OfficePos : Formula.BaseModel
    {
		/// <summary></summary>	
		[Description("")]
        public string ID { get; set; } // ID (Primary key)
		/// <summary></summary>	
		[Description("")]
        public DateTime? CreateDate { get; set; } // CreateDate
		/// <summary></summary>	
		[Description("")]
        public DateTime? ModifyDate { get; set; } // ModifyDate
		/// <summary></summary>	
		[Description("")]
        public string CreateUserID { get; set; } // CreateUserID
		/// <summary></summary>	
		[Description("")]
        public string CreateUser { get; set; } // CreateUser
		/// <summary></summary>	
		[Description("")]
        public string ModifyUserID { get; set; } // ModifyUserID
		/// <summary></summary>	
		[Description("")]
        public string ModifyUser { get; set; } // ModifyUser
		/// <summary></summary>	
		[Description("")]
        public string OrgID { get; set; } // OrgID
		/// <summary></summary>	
		[Description("")]
        public string CompanyID { get; set; } // CompanyID
		/// <summary></summary>	
		[Description("")]
        public string FlowPhase { get; set; } // FlowPhase
		/// <summary></summary>	
		[Description("")]
        public string FlowInfo { get; set; } // FlowInfo
		/// <summary></summary>	
		[Description("")]
        public string StepName { get; set; } // StepName
		/// <summary>名称</summary>	
		[Description("名称")]
        public string Name { get; set; } // Name
		/// <summary>编码</summary>	
		[Description("编码")]
        public string Code { get; set; } // Code
		/// <summary>层级</summary>	
		[Description("层级")]
        public string Level { get; set; } // Level
		/// <summary>ParentID</summary>	
		[Description("ParentID")]
        public string ParentID { get; set; } // ParentID
		/// <summary>FullID</summary>	
		[Description("FullID")]
        public string FullID { get; set; } // FullID
		/// <summary>排序索引</summary>	
		[Description("排序索引")]
        public string SortIndex { get; set; } // SortIndex
		/// <summary>描述</summary>	
		[Description("描述")]
        public string Description { get; set; } // Description
    }

	/// <summary>会议申请</summary>	
	[Description("会议申请")]
    public partial class T_M_ConferenceApply : Formula.BaseModel
    {
		/// <summary></summary>	
		[Description("")]
        public string ID { get; set; } // ID (Primary key)
		/// <summary></summary>	
		[Description("")]
        public DateTime? CreateDate { get; set; } // CreateDate
		/// <summary></summary>	
		[Description("")]
        public DateTime? ModifyDate { get; set; } // ModifyDate
		/// <summary></summary>	
		[Description("")]
        public string CreateUserID { get; set; } // CreateUserID
		/// <summary></summary>	
		[Description("")]
        public string CreateUser { get; set; } // CreateUser
		/// <summary></summary>	
		[Description("")]
        public string ModifyUserID { get; set; } // ModifyUserID
		/// <summary></summary>	
		[Description("")]
        public string ModifyUser { get; set; } // ModifyUser
		/// <summary></summary>	
		[Description("")]
        public string OrgID { get; set; } // OrgID
		/// <summary></summary>	
		[Description("")]
        public string CompanyID { get; set; } // CompanyID
		/// <summary></summary>	
		[Description("")]
        public string FlowPhase { get; set; } // FlowPhase
		/// <summary></summary>	
		[Description("")]
        public string FlowInfo { get; set; } // FlowInfo
		/// <summary></summary>	
		[Description("")]
        public string StepName { get; set; } // StepName
		/// <summary>会议主题</summary>	
		[Description("会议主题")]
        public string Title { get; set; } // Title
		/// <summary>主办部门</summary>	
		[Description("主办部门")]
        public string HostDept { get; set; } // HostDept
		/// <summary>主办部门名称</summary>	
		[Description("主办部门名称")]
        public string HostDeptName { get; set; } // HostDeptName
		/// <summary>申请人</summary>	
		[Description("申请人")]
        public string ApplyUser { get; set; } // ApplyUser
		/// <summary>申请人名称</summary>	
		[Description("申请人名称")]
        public string ApplyUserName { get; set; } // ApplyUserName
		/// <summary>申请时间</summary>	
		[Description("申请时间")]
        public DateTime? ApplyDate { get; set; } // ApplyDate
		/// <summary>会议开始日期</summary>	
		[Description("会议开始日期")]
        public DateTime? MeetingStart { get; set; } // MeetingStart
		/// <summary>会议结束日期</summary>	
		[Description("会议结束日期")]
        public DateTime? MeetingEnd { get; set; } // MeetingEnd
		/// <summary>会议开始时间</summary>	
		[Description("会议开始时间")]
        public string MeetingStartHour { get; set; } // MeetingStartHour
		/// <summary>会议结束时间</summary>	
		[Description("会议结束时间")]
        public string MeetingEndHour { get; set; } // MeetingEndHour
		/// <summary>会议室</summary>	
		[Description("会议室")]
        public string MeetingRoom { get; set; } // MeetingRoom
		/// <summary>会议室名称</summary>	
		[Description("会议室名称")]
        public string MeetingRoomName { get; set; } // MeetingRoomName
		/// <summary>会议地点</summary>	
		[Description("会议地点")]
        public string RoomAddress { get; set; } // RoomAddress
		/// <summary>主持人</summary>	
		[Description("主持人")]
        public string Host { get; set; } // Host
		/// <summary>主要内容</summary>	
		[Description("主要内容")]
        public string MainContent { get; set; } // MainContent
		/// <summary>参加人员</summary>	
		[Description("参加人员")]
        public string JoinUser { get; set; } // JoinUser
		/// <summary>参加人员名称</summary>	
		[Description("参加人员名称")]
        public string JoinUserName { get; set; } // JoinUserName
		/// <summary>会场需求</summary>	
		[Description("会场需求")]
        public string IsNeedBanner { get; set; } // IsNeedBanner
		/// <summary>我方人数</summary>	
		[Description("我方人数")]
        public int? SelfTotal { get; set; } // SelfTotal
		/// <summary>他方人数</summary>	
		[Description("他方人数")]
        public int? GuestTotal { get; set; } // GuestTotal
		/// <summary>我方领导数</summary>	
		[Description("我方领导数")]
        public int? SelfLeader { get; set; } // SelfLeader
		/// <summary>他方领导数</summary>	
		[Description("他方领导数")]
        public int? GuestLeader { get; set; } // GuestLeader
		/// <summary>备注</summary>	
		[Description("备注")]
        public string Remark { get; set; } // Remark
		/// <summary>相关资料附件</summary>	
		[Description("相关资料附件")]
        public string Attachments { get; set; } // Attachments
		/// <summary>审批意见</summary>	
		[Description("审批意见")]
        public string AuditorInfo { get; set; } // AuditorInfo
		/// <summary>会议室管理员办理结果</summary>	
		[Description("会议室管理员办理结果")]
        public string MeetingAdmin { get; set; } // MeetingAdmin
		/// <summary>结束分钟</summary>	
		[Description("结束分钟")]
        public int? MeetingEndMin { get; set; } // MeetingEndMin
		/// <summary>开始分钟</summary>	
		[Description("开始分钟")]
        public int? MeetingStartMin { get; set; } // MeetingStartMin
		/// <summary>主持人名称</summary>	
		[Description("主持人名称")]
        public string HostName { get; set; } // HostName
		/// <summary>状态</summary>	
		[Description("状态")]
        public string State { get; set; } // State
		/// <summary>会议室最大使用人数</summary>	
		[Description("会议室最大使用人数")]
        public string RoomCapacity { get; set; } // RoomCapacity
		/// <summary>桌牌</summary>	
		[Description("桌牌")]
        public string IsTableCard { get; set; } // IsTableCard
		/// <summary>视频会议</summary>	
		[Description("视频会议")]
        public string IsVideoConference { get; set; } // IsVideoConference
		/// <summary>视频会议地点</summary>	
		[Description("视频会议地点")]
        public string VideoVenue { get; set; } // VideoVenue
		/// <summary>对方会议管理员</summary>	
		[Description("对方会议管理员")]
        public string OtherManager { get; set; } // OtherManager
		/// <summary>对方会场需求</summary>	
		[Description("对方会场需求")]
        public string Demand { get; set; } // Demand
		/// <summary>实际分配会议室</summary>	
		[Description("实际分配会议室")]
        public string ActualRoom { get; set; } // ActualRoom
    }

	/// <summary>会议登记</summary>	
	[Description("会议登记")]
    public partial class T_M_ConferenceRegist : Formula.BaseModel
    {
		/// <summary>ID</summary>	
		[Description("ID")]
        public string ID { get; set; } // ID (Primary key)
		/// <summary></summary>	
		[Description("")]
        public DateTime? CreateDate { get; set; } // CreateDate
		/// <summary></summary>	
		[Description("")]
        public DateTime? ModifyDate { get; set; } // ModifyDate
		/// <summary></summary>	
		[Description("")]
        public string CreateUserID { get; set; } // CreateUserID
		/// <summary></summary>	
		[Description("")]
        public string CreateUser { get; set; } // CreateUser
		/// <summary></summary>	
		[Description("")]
        public string ModifyUserID { get; set; } // ModifyUserID
		/// <summary></summary>	
		[Description("")]
        public string ModifyUser { get; set; } // ModifyUser
		/// <summary></summary>	
		[Description("")]
        public string OrgID { get; set; } // OrgID
		/// <summary></summary>	
		[Description("")]
        public string PrjID { get; set; } // PrjID
		/// <summary></summary>	
		[Description("")]
        public string FlowPhase { get; set; } // FlowPhase
		/// <summary></summary>	
		[Description("")]
        public string StepName { get; set; } // StepName
		/// <summary>会议主题</summary>	
		[Description("会议主题")]
        public string MeetApplyID { get; set; } // MeetApplyID
		/// <summary>会议主题名称</summary>	
		[Description("会议主题名称")]
        public string MeetApplyIDName { get; set; } // MeetApplyIDName
		/// <summary>主办部门</summary>	
		[Description("主办部门")]
        public string HostDeptID { get; set; } // HostDeptID
		/// <summary>主办部门名称</summary>	
		[Description("主办部门名称")]
        public string HostDeptIDName { get; set; } // HostDeptIDName
		/// <summary>申请人</summary>	
		[Description("申请人")]
        public string ApplyUserID { get; set; } // ApplyUserID
		/// <summary>申请人名称</summary>	
		[Description("申请人名称")]
        public string ApplyUserIDName { get; set; } // ApplyUserIDName
		/// <summary>计划举办时间</summary>	
		[Description("计划举办时间")]
        public DateTime? PlanMeetingDate { get; set; } // PlanMeetingDate
		/// <summary>计划会议地点</summary>	
		[Description("计划会议地点")]
        public string PlanMeetingPlace { get; set; } // PlanMeetingPlace
		/// <summary>编制日期</summary>	
		[Description("编制日期")]
        public DateTime? RegistDate { get; set; } // RegistDate
		/// <summary>编制人</summary>	
		[Description("编制人")]
        public string RegistUserID { get; set; } // RegistUserID
		/// <summary>编制人名称</summary>	
		[Description("编制人名称")]
        public string RegistUserIDName { get; set; } // RegistUserIDName
		/// <summary>计划参会人员</summary>	
		[Description("计划参会人员")]
        public string PlanJoinUserID { get; set; } // PlanJoinUserID
		/// <summary>计划参会人员名称</summary>	
		[Description("计划参会人员名称")]
        public string PlanJoinUserIDName { get; set; } // PlanJoinUserIDName
		/// <summary>实际举办时间起</summary>	
		[Description("实际举办时间起")]
        public DateTime? MeetingStartDate { get; set; } // MeetingStartDate
		/// <summary>实际举办时间止</summary>	
		[Description("实际举办时间止")]
        public DateTime? MeetingEndDate { get; set; } // MeetingEndDate
		/// <summary>实际举办地址</summary>	
		[Description("实际举办地址")]
        public string MettingPlace { get; set; } // MettingPlace
		/// <summary>实际参加人员</summary>	
		[Description("实际参加人员")]
        public string JoinUserID { get; set; } // JoinUserID
		/// <summary>实际参加人员名称</summary>	
		[Description("实际参加人员名称")]
        public string JoinUserIDName { get; set; } // JoinUserIDName
		/// <summary>大字段</summary>	
		[Description("大字段")]
        public string MeetCost { get; set; } // MeetCost
		/// <summary>附件</summary>	
		[Description("附件")]
        public string Attachment { get; set; } // Attachment
    }

	/// <summary>T</summary>	
	[Description("T")]
    public partial class T_M_ConferenceRoom : Formula.BaseModel
    {
		/// <summary>ID</summary>	
		[Description("ID")]
        public string ID { get; set; } // ID (Primary key)
		/// <summary></summary>	
		[Description("")]
        public DateTime? CreateDate { get; set; } // CreateDate
		/// <summary></summary>	
		[Description("")]
        public DateTime? ModifyDate { get; set; } // ModifyDate
		/// <summary></summary>	
		[Description("")]
        public string CreateUserID { get; set; } // CreateUserID
		/// <summary></summary>	
		[Description("")]
        public string CreateUser { get; set; } // CreateUser
		/// <summary></summary>	
		[Description("")]
        public string ModifyUserID { get; set; } // ModifyUserID
		/// <summary></summary>	
		[Description("")]
        public string ModifyUser { get; set; } // ModifyUser
		/// <summary></summary>	
		[Description("")]
        public string OrgID { get; set; } // OrgID
		/// <summary></summary>	
		[Description("")]
        public string PrjID { get; set; } // PrjID
		/// <summary></summary>	
		[Description("")]
        public string FlowPhase { get; set; } // FlowPhase
		/// <summary></summary>	
		[Description("")]
        public string StepName { get; set; } // StepName
		/// <summary>会议室编号</summary>	
		[Description("会议室编号")]
        public string RoomName { get; set; } // RoomName
		/// <summary>联系人</summary>	
		[Description("联系人")]
        public string LinkName { get; set; } // LinkName
		/// <summary>最大使用人数</summary>	
		[Description("最大使用人数")]
        public int? Capacity { get; set; } // Capacity
		/// <summary>管理部门</summary>	
		[Description("管理部门")]
        public string ManageDeptID { get; set; } // ManageDeptID
		/// <summary>管理部门名称</summary>	
		[Description("管理部门名称")]
        public string ManageDeptIDName { get; set; } // ManageDeptIDName
		/// <summary>会议室地址</summary>	
		[Description("会议室地址")]
        public string RoomAddress { get; set; } // RoomAddress
		/// <summary>设施情况</summary>	
		[Description("设施情况")]
        public string Configuredevice { get; set; } // Configuredevice
    }

	/// <summary>会议纪要</summary>	
	[Description("会议纪要")]
    public partial class T_M_ConferenceSummary : Formula.BaseModel
    {
		/// <summary>ID</summary>	
		[Description("ID")]
        public string ID { get; set; } // ID (Primary key)
		/// <summary></summary>	
		[Description("")]
        public DateTime? CreateDate { get; set; } // CreateDate
		/// <summary></summary>	
		[Description("")]
        public DateTime? ModifyDate { get; set; } // ModifyDate
		/// <summary></summary>	
		[Description("")]
        public string CreateUserID { get; set; } // CreateUserID
		/// <summary></summary>	
		[Description("")]
        public string CreateUser { get; set; } // CreateUser
		/// <summary></summary>	
		[Description("")]
        public string ModifyUserID { get; set; } // ModifyUserID
		/// <summary></summary>	
		[Description("")]
        public string ModifyUser { get; set; } // ModifyUser
		/// <summary></summary>	
		[Description("")]
        public string OrgID { get; set; } // OrgID
		/// <summary></summary>	
		[Description("")]
        public string PrjID { get; set; } // PrjID
		/// <summary></summary>	
		[Description("")]
        public string FlowPhase { get; set; } // FlowPhase
		/// <summary></summary>	
		[Description("")]
        public string StepName { get; set; } // StepName
		/// <summary>会议主题</summary>	
		[Description("会议主题")]
        public string Title { get; set; } // Title
		/// <summary>会议主题</summary>	
		[Description("会议主题")]
        public string TitleName { get; set; } // TitleName
		/// <summary>参加人员</summary>	
		[Description("参加人员")]
        public string JoinUserID { get; set; } // JoinUserID
		/// <summary>参加人员名称</summary>	
		[Description("参加人员名称")]
        public string JoinUserIDName { get; set; } // JoinUserIDName
		/// <summary>主办部门</summary>	
		[Description("主办部门")]
        public string HostDepID { get; set; } // HostDepID
		/// <summary>主办部门名称</summary>	
		[Description("主办部门名称")]
        public string HostDepIDName { get; set; } // HostDepIDName
		/// <summary>主持人</summary>	
		[Description("主持人")]
        public string HostUserID { get; set; } // HostUserID
		/// <summary>主持人名称</summary>	
		[Description("主持人名称")]
        public string HostUserIDName { get; set; } // HostUserIDName
		/// <summary>会议日期</summary>	
		[Description("会议日期")]
        public DateTime? MeetingStart { get; set; } // MeetingStart
		/// <summary>记录人</summary>	
		[Description("记录人")]
        public string RecordUserID { get; set; } // RecordUserID
		/// <summary>记录人名称</summary>	
		[Description("记录人名称")]
        public string RecordUserIDName { get; set; } // RecordUserIDName
		/// <summary>会议纪要</summary>	
		[Description("会议纪要")]
        public string MeetingSummary { get; set; } // MeetingSummary
		/// <summary>相关附件</summary>	
		[Description("相关附件")]
        public string AboutInfomation { get; set; } // AboutInfomation
		/// <summary>是否需要审签</summary>	
		[Description("是否需要审签")]
        public string IsNeedSigned { get; set; } // IsNeedSigned
		/// <summary>审签人</summary>	
		[Description("审签人")]
        public string ApproveUserIDs { get; set; } // ApproveUserIDs
		/// <summary>审签人名称</summary>	
		[Description("审签人名称")]
        public string ApproveUserIDsName { get; set; } // ApproveUserIDsName
		/// <summary>批准人</summary>	
		[Description("批准人")]
        public string RatifyUserIDs { get; set; } // RatifyUserIDs
		/// <summary>批准人名称</summary>	
		[Description("批准人名称")]
        public string RatifyUserIDsName { get; set; } // RatifyUserIDsName
		/// <summary>主要内容</summary>	
		[Description("主要内容")]
        public string MainContent { get; set; } // MainContent
		/// <summary>详细内容</summary>	
		[Description("详细内容")]
        public string DetailContent { get; set; } // DetailContent
		/// <summary>审签人意见</summary>	
		[Description("审签人意见")]
        public string CountersignederComment { get; set; } // CountersignederComment
		/// <summary>批准人意见</summary>	
		[Description("批准人意见")]
        public string ApprovalerComment { get; set; } // ApprovalerComment
		/// <summary>请假人员</summary>	
		[Description("请假人员")]
        public string LeaveUserID { get; set; } // LeaveUserID
		/// <summary>请假人员名称</summary>	
		[Description("请假人员名称")]
        public string LeaveUserIDName { get; set; } // LeaveUserIDName
		/// <summary>会议类型</summary>	
		[Description("会议类型")]
        public string MeetingType { get; set; } // MeetingType
		/// <summary>列席人</summary>	
		[Description("列席人")]
        public string liexiren { get; set; } // liexiren
		/// <summary>主要内容附件</summary>	
		[Description("主要内容附件")]
        public string MainContentAttachment { get; set; } // MainContentAttachment
		/// <summary>会议纪要附件</summary>	
		[Description("会议纪要附件")]
        public string MeetingSummaryAttachment { get; set; } // MeetingSummaryAttachment
		/// <summary>综合部领导</summary>	
		[Description("综合部领导")]
        public string ComprehensiveLeader { get; set; } // ComprehensiveLeader
		/// <summary>总经理</summary>	
		[Description("总经理")]
        public string GeneralManager { get; set; } // GeneralManager
		/// <summary>副总以上领导</summary>	
		[Description("副总以上领导")]
        public string VPUpLeader { get; set; } // VPUpLeader

        // Reverse navigation
		[JsonIgnore]
        public virtual ICollection<T_M_ConferenceSummary_MainContent> T_M_ConferenceSummary_MainContent { get { onT_M_ConferenceSummary_MainContentGetting(); return _T_M_ConferenceSummary_MainContent;} }
		private ICollection<T_M_ConferenceSummary_MainContent> _T_M_ConferenceSummary_MainContent;
		partial void onT_M_ConferenceSummary_MainContentGetting();


        public T_M_ConferenceSummary()
        {
            _T_M_ConferenceSummary_MainContent = new List<T_M_ConferenceSummary_MainContent>();
        }
    }

	/// <summary>主要内容</summary>	
	[Description("主要内容")]
    public partial class T_M_ConferenceSummary_MainContent : Formula.BaseModel
    {
		/// <summary></summary>	
		[Description("")]
        public string ID { get; set; } // ID (Primary key)
		/// <summary></summary>	
		[Description("")]
        public string T_M_ConferenceSummaryID { get; set; } // T_M_ConferenceSummaryID
		/// <summary></summary>	
		[Description("")]
        public double? SortIndex { get; set; } // SortIndex
		/// <summary></summary>	
		[Description("")]
        public string IsReleased { get; set; } // IsReleased
		/// <summary>提案内容</summary>	
		[Description("提案内容")]
        public string TANR { get; set; } // TANR
		/// <summary>提案人</summary>	
		[Description("提案人")]
        public string TAR { get; set; } // TAR
		/// <summary>提案部门</summary>	
		[Description("提案部门")]
        public string TABM { get; set; } // TABM
		/// <summary>决议结果</summary>	
		[Description("决议结果")]
        public string JYNR { get; set; } // JYNR
		/// <summary>承办人</summary>	
		[Description("承办人")]
        public string CBRHBM { get; set; } // CBRHBM
		/// <summary>提案人名称</summary>	
		[Description("提案人名称")]
        public string TARName { get; set; } // TARName
		/// <summary>提案部门名称</summary>	
		[Description("提案部门名称")]
        public string TABMName { get; set; } // TABMName
		/// <summary>承办人名称</summary>	
		[Description("承办人名称")]
        public string CBRHBMName { get; set; } // CBRHBMName
		/// <summary>承办人部门</summary>	
		[Description("承办人部门")]
        public string UndertakerDept { get; set; } // UndertakerDept
		/// <summary>承办人部门名称</summary>	
		[Description("承办人部门名称")]
        public string UndertakerDeptName { get; set; } // UndertakerDeptName

        // Foreign keys
		[JsonIgnore]
        public virtual T_M_ConferenceSummary T_M_ConferenceSummary { get; set; } //  T_M_ConferenceSummaryID - FK_T_M_ConferenceSummary_MainContent_T_M_ConferenceSummary
    }

	/// <summary>外部会议</summary>	
	[Description("外部会议")]
    public partial class T_M_OuterConference : Formula.BaseModel
    {
		/// <summary>ID</summary>	
		[Description("ID")]
        public string ID { get; set; } // ID (Primary key)
		/// <summary></summary>	
		[Description("")]
        public DateTime? CreateDate { get; set; } // CreateDate
		/// <summary></summary>	
		[Description("")]
        public DateTime? ModifyDate { get; set; } // ModifyDate
		/// <summary></summary>	
		[Description("")]
        public string CreateUserID { get; set; } // CreateUserID
		/// <summary></summary>	
		[Description("")]
        public string CreateUser { get; set; } // CreateUser
		/// <summary></summary>	
		[Description("")]
        public string ModifyUserID { get; set; } // ModifyUserID
		/// <summary></summary>	
		[Description("")]
        public string ModifyUser { get; set; } // ModifyUser
		/// <summary></summary>	
		[Description("")]
        public string OrgID { get; set; } // OrgID
		/// <summary></summary>	
		[Description("")]
        public string PrjID { get; set; } // PrjID
		/// <summary></summary>	
		[Description("")]
        public string FlowPhase { get; set; } // FlowPhase
		/// <summary></summary>	
		[Description("")]
        public string StepName { get; set; } // StepName
		/// <summary>会议名称</summary>	
		[Description("会议名称")]
        public string MeetingName { get; set; } // MeetingName
		/// <summary>会议举办时间</summary>	
		[Description("会议举办时间")]
        public DateTime? MeetingDate { get; set; } // MeetingDate
		/// <summary>会议举办地址</summary>	
		[Description("会议举办地址")]
        public string MeetingPlace { get; set; } // MeetingPlace
		/// <summary>会议主办单位</summary>	
		[Description("会议主办单位")]
        public string MeetingOrganizers { get; set; } // MeetingOrganizers
		/// <summary>会议承办部门</summary>	
		[Description("会议承办部门")]
        public string MeetingDeptName { get; set; } // MeetingDeptName
		/// <summary>会议承办部门</summary>	
		[Description("会议承办部门")]
        public string MeetingDeptNameName { get; set; } // MeetingDeptNameName
		/// <summary>参加会议人员构成和人数</summary>	
		[Description("参加会议人员构成和人数")]
        public string JoinUserNames { get; set; } // JoinUserNames
		/// <summary>会议预算大字段</summary>	
		[Description("会议预算大字段")]
        public string CostGrid { get; set; } // CostGrid
		/// <summary>合计</summary>	
		[Description("合计")]
        public decimal? TotalMoney { get; set; } // TotalMoney
		/// <summary>预算编制人签名</summary>	
		[Description("预算编制人签名")]
        public string ApplyUserComment { get; set; } // ApplyUserComment
		/// <summary>部门主任意见</summary>	
		[Description("部门主任意见")]
        public string DeptLeaderComment { get; set; } // DeptLeaderComment
		/// <summary>财务会计意见</summary>	
		[Description("财务会计意见")]
        public string FinancialAccountingComment { get; set; } // FinancialAccountingComment
		/// <summary>财务主任意见</summary>	
		[Description("财务主任意见")]
        public string FinancialLeaderComment { get; set; } // FinancialLeaderComment
		/// <summary>分管总经理意见</summary>	
		[Description("分管总经理意见")]
        public string DepartLeaderComment { get; set; } // DepartLeaderComment
		/// <summary>总经理意见</summary>	
		[Description("总经理意见")]
        public string GeneralManagerComment { get; set; } // GeneralManagerComment
		/// <summary>借款金额(元)</summary>	
		[Description("借款金额(元)")]
        public decimal? BorrowMoney { get; set; } // BorrowMoney
		/// <summary>借款日期</summary>	
		[Description("借款日期")]
        public DateTime? BorrowMoneyDate { get; set; } // BorrowMoneyDate
		/// <summary>报销金额(元)</summary>	
		[Description("报销金额(元)")]
        public decimal? ReimbursedMoney { get; set; } // ReimbursedMoney
		/// <summary>报销日期</summary>	
		[Description("报销日期")]
        public DateTime? ReimbursedMoneyDate { get; set; } // ReimbursedMoneyDate

        // Reverse navigation
		[JsonIgnore]
        public virtual ICollection<T_M_OuterConference_CostGrid> T_M_OuterConference_CostGrid { get { onT_M_OuterConference_CostGridGetting(); return _T_M_OuterConference_CostGrid;} }
		private ICollection<T_M_OuterConference_CostGrid> _T_M_OuterConference_CostGrid;
		partial void onT_M_OuterConference_CostGridGetting();


        public T_M_OuterConference()
        {
            _T_M_OuterConference_CostGrid = new List<T_M_OuterConference_CostGrid>();
        }
    }

	/// <summary>会议预算大字段</summary>	
	[Description("会议预算大字段")]
    public partial class T_M_OuterConference_CostGrid : Formula.BaseModel
    {
		/// <summary>ID</summary>	
		[Description("ID")]
        public string ID { get; set; } // ID (Primary key)
		/// <summary>T_MOuterConferenceID</summary>	
		[Description("T_MOuterConferenceID")]
        public string T_M_OuterConferenceID { get; set; } // T_M_OuterConferenceID
		/// <summary>排序号</summary>	
		[Description("排序号")]
        public double? SortIndex { get; set; } // SortIndex
		/// <summary>已发布</summary>	
		[Description("已发布")]
        public string IsReleased { get; set; } // IsReleased
		/// <summary>科目</summary>	
		[Description("科目")]
        public string Project { get; set; } // Project
		/// <summary>标准(单价:元)</summary>	
		[Description("标准(单价:元)")]
        public double? Price { get; set; } // Price
		/// <summary>数量</summary>	
		[Description("数量")]
        public double? Amount { get; set; } // Amount
		/// <summary>费用小计(元)</summary>	
		[Description("费用小计(元)")]
        public double? Subtotal { get; set; } // Subtotal
		/// <summary>备注</summary>	
		[Description("备注")]
        public string Remarks { get; set; } // Remarks

        // Foreign keys
		[JsonIgnore]
        public virtual T_M_OuterConference T_M_OuterConference { get; set; } //  T_M_OuterConferenceID - FK_T_MOuterConference_MeetingCostList_T_MOuterConference
    }

	/// <summary>专利申报审批</summary>	
	[Description("专利申报审批")]
    public partial class T_Patent_DeclarationApproval : Formula.BaseModel
    {
		/// <summary></summary>	
		[Description("")]
        public string ID { get; set; } // ID (Primary key)
		/// <summary></summary>	
		[Description("")]
        public DateTime? CreateDate { get; set; } // CreateDate
		/// <summary></summary>	
		[Description("")]
        public DateTime? ModifyDate { get; set; } // ModifyDate
		/// <summary></summary>	
		[Description("")]
        public string CreateUserID { get; set; } // CreateUserID
		/// <summary></summary>	
		[Description("")]
        public string CreateUser { get; set; } // CreateUser
		/// <summary></summary>	
		[Description("")]
        public string ModifyUserID { get; set; } // ModifyUserID
		/// <summary></summary>	
		[Description("")]
        public string ModifyUser { get; set; } // ModifyUser
		/// <summary></summary>	
		[Description("")]
        public string OrgID { get; set; } // OrgID
		/// <summary></summary>	
		[Description("")]
        public string CompanyID { get; set; } // CompanyID
		/// <summary></summary>	
		[Description("")]
        public string FlowPhase { get; set; } // FlowPhase
		/// <summary></summary>	
		[Description("")]
        public string FlowInfo { get; set; } // FlowInfo
		/// <summary></summary>	
		[Description("")]
        public string StepName { get; set; } // StepName
		/// <summary>申报年度</summary>	
		[Description("申报年度")]
        public string DeclareYear { get; set; } // DeclareYear
		/// <summary>申报日期</summary>	
		[Description("申报日期")]
        public DateTime? DeclareDate { get; set; } // DeclareDate
		/// <summary>申报人</summary>	
		[Description("申报人")]
        public string Declarant { get; set; } // Declarant
		/// <summary>申报人名称</summary>	
		[Description("申报人名称")]
        public string DeclarantName { get; set; } // DeclarantName
		/// <summary>申报部门</summary>	
		[Description("申报部门")]
        public string DeclareDepartment { get; set; } // DeclareDepartment
		/// <summary>申报部门名称</summary>	
		[Description("申报部门名称")]
        public string DeclareDepartmentName { get; set; } // DeclareDepartmentName
		/// <summary>申报类别</summary>	
		[Description("申报类别")]
        public string DeclareCategory { get; set; } // DeclareCategory
		/// <summary>申报地点</summary>	
		[Description("申报地点")]
        public string DeclareLocation { get; set; } // DeclareLocation
		/// <summary>申报专利名称</summary>	
		[Description("申报专利名称")]
        public string DeclarePatentName { get; set; } // DeclarePatentName
		/// <summary>发明人</summary>	
		[Description("发明人")]
        public string Inventor { get; set; } // Inventor
		/// <summary>发明人名称</summary>	
		[Description("发明人名称")]
        public string InventorName { get; set; } // InventorName
		/// <summary>专利编号</summary>	
		[Description("专利编号")]
        public string PatentNumber { get; set; } // PatentNumber
		/// <summary>部门申报材料</summary>	
		[Description("部门申报材料")]
        public string DepartmentAttachment { get; set; } // DepartmentAttachment
		/// <summary>最终版申报资料</summary>	
		[Description("最终版申报资料")]
        public string DeclareAttachment { get; set; } // DeclareAttachment
		/// <summary>申报部门领导</summary>	
		[Description("申报部门领导")]
        public string DeclareLeader { get; set; } // DeclareLeader
		/// <summary>技术部主管意见</summary>	
		[Description("技术部主管意见")]
        public string TechnologyDepartment { get; set; } // TechnologyDepartment
		/// <summary>技术部部长意见</summary>	
		[Description("技术部部长意见")]
        public string TechnologyMinister { get; set; } // TechnologyMinister
		/// <summary>总工程师意见</summary>	
		[Description("总工程师意见")]
        public string ChiefEngineer { get; set; } // ChiefEngineer
    }

	/// <summary>专利管理</summary>	
	[Description("专利管理")]
    public partial class T_Patent_Manager : Formula.BaseModel
    {
		/// <summary></summary>	
		[Description("")]
        public string ID { get; set; } // ID (Primary key)
		/// <summary></summary>	
		[Description("")]
        public DateTime? CreateDate { get; set; } // CreateDate
		/// <summary></summary>	
		[Description("")]
        public DateTime? ModifyDate { get; set; } // ModifyDate
		/// <summary></summary>	
		[Description("")]
        public string CreateUserID { get; set; } // CreateUserID
		/// <summary></summary>	
		[Description("")]
        public string CreateUser { get; set; } // CreateUser
		/// <summary></summary>	
		[Description("")]
        public string ModifyUserID { get; set; } // ModifyUserID
		/// <summary></summary>	
		[Description("")]
        public string ModifyUser { get; set; } // ModifyUser
		/// <summary></summary>	
		[Description("")]
        public string OrgID { get; set; } // OrgID
		/// <summary></summary>	
		[Description("")]
        public string CompanyID { get; set; } // CompanyID
		/// <summary></summary>	
		[Description("")]
        public string FlowPhase { get; set; } // FlowPhase
		/// <summary></summary>	
		[Description("")]
        public string FlowInfo { get; set; } // FlowInfo
		/// <summary></summary>	
		[Description("")]
        public string StepName { get; set; } // StepName
		/// <summary>专利名称</summary>	
		[Description("专利名称")]
        public string PatentName { get; set; } // PatentName
		/// <summary>申请日期</summary>	
		[Description("申请日期")]
        public DateTime? DeclareDate { get; set; } // DeclareDate
		/// <summary>授权日期</summary>	
		[Description("授权日期")]
        public DateTime? ImpowerDate { get; set; } // ImpowerDate
		/// <summary>专利类型</summary>	
		[Description("专利类型")]
        public string PatentCategory { get; set; } // PatentCategory
		/// <summary>专利申请号</summary>	
		[Description("专利申请号")]
        public string PatentNumber { get; set; } // PatentNumber
		/// <summary>发明人</summary>	
		[Description("发明人")]
        public string Inventor { get; set; } // Inventor
		/// <summary>发明人名称</summary>	
		[Description("发明人名称")]
        public string InventorName { get; set; } // InventorName
		/// <summary>专利权人</summary>	
		[Description("专利权人")]
        public string Patentee { get; set; } // Patentee
		/// <summary>专利权人名称</summary>	
		[Description("专利权人名称")]
        public string PatenteeName { get; set; } // PatenteeName
		/// <summary>专利申请部门</summary>	
		[Description("专利申请部门")]
        public string PatentDepartment { get; set; } // PatentDepartment
		/// <summary>专利申请部门名称</summary>	
		[Description("专利申请部门名称")]
        public string PatentDepartmentName { get; set; } // PatentDepartmentName
		/// <summary>专利有效期</summary>	
		[Description("专利有效期")]
        public DateTime? PatentDeadLine { get; set; } // PatentDeadLine
		/// <summary>附件</summary>	
		[Description("附件")]
        public string Attachment { get; set; } // Attachment
    }

	/// <summary>专利计划</summary>	
	[Description("专利计划")]
    public partial class T_Patent_Plan : Formula.BaseModel
    {
		/// <summary></summary>	
		[Description("")]
        public string ID { get; set; } // ID (Primary key)
		/// <summary></summary>	
		[Description("")]
        public DateTime? CreateDate { get; set; } // CreateDate
		/// <summary></summary>	
		[Description("")]
        public DateTime? ModifyDate { get; set; } // ModifyDate
		/// <summary></summary>	
		[Description("")]
        public string CreateUserID { get; set; } // CreateUserID
		/// <summary></summary>	
		[Description("")]
        public string CreateUser { get; set; } // CreateUser
		/// <summary></summary>	
		[Description("")]
        public string ModifyUserID { get; set; } // ModifyUserID
		/// <summary></summary>	
		[Description("")]
        public string ModifyUser { get; set; } // ModifyUser
		/// <summary></summary>	
		[Description("")]
        public string OrgID { get; set; } // OrgID
		/// <summary></summary>	
		[Description("")]
        public string CompanyID { get; set; } // CompanyID
		/// <summary></summary>	
		[Description("")]
        public string FlowPhase { get; set; } // FlowPhase
		/// <summary></summary>	
		[Description("")]
        public string FlowInfo { get; set; } // FlowInfo
		/// <summary></summary>	
		[Description("")]
        public string StepName { get; set; } // StepName
		/// <summary>申报年度</summary>	
		[Description("申报年度")]
        public string DeclareYear { get; set; } // DeclareYear
		/// <summary>填写时间</summary>	
		[Description("填写时间")]
        public DateTime? DeclareDate { get; set; } // DeclareDate
		/// <summary>提交部门</summary>	
		[Description("提交部门")]
        public string CommitDepartment { get; set; } // CommitDepartment
		/// <summary>提交部门名称</summary>	
		[Description("提交部门名称")]
        public string CommitDepartmentName { get; set; } // CommitDepartmentName
		/// <summary>部门技术负责人</summary>	
		[Description("部门技术负责人")]
        public string TechnicalDirector { get; set; } // TechnicalDirector
		/// <summary>预计数量</summary>	
		[Description("预计数量")]
        public string Count { get; set; } // Count
		/// <summary>备注</summary>	
		[Description("备注")]
        public string Remark { get; set; } // Remark
		/// <summary>专利申报计划</summary>	
		[Description("专利申报计划")]
        public string PatentPlan { get; set; } // PatentPlan
		/// <summary>部门领导意见</summary>	
		[Description("部门领导意见")]
        public string DepartmentalLeader { get; set; } // DepartmentalLeader
		/// <summary>技术部领导意见</summary>	
		[Description("技术部领导意见")]
        public string TechnologyDepartmentLeader { get; set; } // TechnologyDepartmentLeader
		/// <summary>部门技术负责人名称</summary>	
		[Description("部门技术负责人名称")]
        public string TechnicalDirectorName { get; set; } // TechnicalDirectorName
		/// <summary>VersionNumber</summary>	
		[Description("VersionNumber")]
        public string VersionNumber { get; set; } // VersionNumber
		/// <summary>RelateID</summary>	
		[Description("RelateID")]
        public string RelateID { get; set; } // RelateID

        // Reverse navigation
		[JsonIgnore]
        public virtual ICollection<T_Patent_Plan_PatentPlan> T_Patent_Plan_PatentPlan { get { onT_Patent_Plan_PatentPlanGetting(); return _T_Patent_Plan_PatentPlan;} }
		private ICollection<T_Patent_Plan_PatentPlan> _T_Patent_Plan_PatentPlan;
		partial void onT_Patent_Plan_PatentPlanGetting();


        public T_Patent_Plan()
        {
            _T_Patent_Plan_PatentPlan = new List<T_Patent_Plan_PatentPlan>();
        }
    }

	/// <summary>专利申报计划</summary>	
	[Description("专利申报计划")]
    public partial class T_Patent_Plan_PatentPlan : Formula.BaseModel
    {
		/// <summary></summary>	
		[Description("")]
        public string ID { get; set; } // ID (Primary key)
		/// <summary></summary>	
		[Description("")]
        public string T_Patent_PlanID { get; set; } // T_Patent_PlanID
		/// <summary></summary>	
		[Description("")]
        public double? SortIndex { get; set; } // SortIndex
		/// <summary></summary>	
		[Description("")]
        public string IsReleased { get; set; } // IsReleased
		/// <summary>专利名称</summary>	
		[Description("专利名称")]
        public string PatentName { get; set; } // PatentName
		/// <summary>专利类型</summary>	
		[Description("专利类型")]
        public string PatentType { get; set; } // PatentType
		/// <summary>发明人</summary>	
		[Description("发明人")]
        public string Inventor { get; set; } // Inventor
		/// <summary>发明人名称</summary>	
		[Description("发明人名称")]
        public string InventorName { get; set; } // InventorName
		/// <summary>拟申报时间</summary>	
		[Description("拟申报时间")]
        public DateTime? DeclareDate { get; set; } // DeclareDate
		/// <summary>申报地点</summary>	
		[Description("申报地点")]
        public string DeclareLocation { get; set; } // DeclareLocation
		/// <summary>备注</summary>	
		[Description("备注")]
        public string DeclareRemark { get; set; } // DeclareRemark

        // Foreign keys
		[JsonIgnore]
        public virtual T_Patent_Plan T_Patent_Plan { get; set; } //  T_Patent_PlanID - FK_T_Patent_Plan_PatentPlan_T_Patent_Plan
    }

	/// <summary>课题立项申请表单</summary>	
	[Description("课题立项申请表单")]
    public partial class T_ProjectApproval : Formula.BaseModel
    {
		/// <summary></summary>	
		[Description("")]
        public string ID { get; set; } // ID (Primary key)
		/// <summary></summary>	
		[Description("")]
        public DateTime? CreateDate { get; set; } // CreateDate
		/// <summary></summary>	
		[Description("")]
        public DateTime? ModifyDate { get; set; } // ModifyDate
		/// <summary></summary>	
		[Description("")]
        public string CreateUserID { get; set; } // CreateUserID
		/// <summary></summary>	
		[Description("")]
        public string CreateUser { get; set; } // CreateUser
		/// <summary></summary>	
		[Description("")]
        public string ModifyUserID { get; set; } // ModifyUserID
		/// <summary></summary>	
		[Description("")]
        public string ModifyUser { get; set; } // ModifyUser
		/// <summary></summary>	
		[Description("")]
        public string OrgID { get; set; } // OrgID
		/// <summary></summary>	
		[Description("")]
        public string CompanyID { get; set; } // CompanyID
		/// <summary></summary>	
		[Description("")]
        public string FlowPhase { get; set; } // FlowPhase
		/// <summary></summary>	
		[Description("")]
        public string FlowInfo { get; set; } // FlowInfo
		/// <summary></summary>	
		[Description("")]
        public string StepName { get; set; } // StepName
		/// <summary>申报年度</summary>	
		[Description("申报年度")]
        public string ApprovalYear { get; set; } // ApprovalYear
		/// <summary>申报日期</summary>	
		[Description("申报日期")]
        public DateTime? ApprovalDate { get; set; } // ApprovalDate
		/// <summary>申报人</summary>	
		[Description("申报人")]
        public string ApprovalPerson { get; set; } // ApprovalPerson
		/// <summary>负责部门</summary>	
		[Description("负责部门")]
        public string Department { get; set; } // Department
		/// <summary>课题名称</summary>	
		[Description("课题名称")]
        public string ProjectName { get; set; } // ProjectName
		/// <summary>课题编号</summary>	
		[Description("课题编号")]
        public string ProjectNumber { get; set; } // ProjectNumber
		/// <summary>课题分类</summary>	
		[Description("课题分类")]
        public string ProjectCategory { get; set; } // ProjectCategory
		/// <summary>课题水平</summary>	
		[Description("课题水平")]
        public string ProjectLevel { get; set; } // ProjectLevel
		/// <summary>课题总负责人</summary>	
		[Description("课题总负责人")]
        public string ProjectLeader { get; set; } // ProjectLeader
		/// <summary>课题现状</summary>	
		[Description("课题现状")]
        public string ProjectStatus { get; set; } // ProjectStatus
		/// <summary>目前需要</summary>	
		[Description("目前需要")]
        public string PresentRequire { get; set; } // PresentRequire
		/// <summary>课题等级</summary>	
		[Description("课题等级")]
        public string ProjectGrade { get; set; } // ProjectGrade
		/// <summary>课题分值</summary>	
		[Description("课题分值")]
        public string ProjectScore { get; set; } // ProjectScore
		/// <summary>确认等级</summary>	
		[Description("确认等级")]
        public string ConfirmGrade { get; set; } // ConfirmGrade
		/// <summary>确认分值</summary>	
		[Description("确认分值")]
        public string ConfirmScore { get; set; } // ConfirmScore
		/// <summary>应用目标</summary>	
		[Description("应用目标")]
        public string Target { get; set; } // Target
		/// <summary>申请经费</summary>	
		[Description("申请经费")]
        public string ApplyCost { get; set; } // ApplyCost
		/// <summary>开始时间</summary>	
		[Description("开始时间")]
        public DateTime? StartTime { get; set; } // StartTime
		/// <summary>预计完工时间</summary>	
		[Description("预计完工时间")]
        public DateTime? PredictFinshTime { get; set; } // PredictFinshTime
		/// <summary>课题内容</summary>	
		[Description("课题内容")]
        public string ProjectContent { get; set; } // ProjectContent
		/// <summary>需要解决的技术关键和难点</summary>	
		[Description("需要解决的技术关键和难点")]
        public string ProjectProblem { get; set; } // ProjectProblem
		/// <summary>成果形式</summary>	
		[Description("成果形式")]
        public string ProjectResult { get; set; } // ProjectResult
		/// <summary>外部课题</summary>	
		[Description("外部课题")]
        public string ExternalProject { get; set; } // ExternalProject
		/// <summary>内部基础类课题</summary>	
		[Description("内部基础类课题")]
        public string InsideBasalProject { get; set; } // InsideBasalProject
		/// <summary>内部提升类课题</summary>	
		[Description("内部提升类课题")]
        public string InsidePromoteProject { get; set; } // InsidePromoteProject
		/// <summary>阶段进度计划</summary>	
		[Description("阶段进度计划")]
        public string StagePlan { get; set; } // StagePlan
		/// <summary>申报资料</summary>	
		[Description("申报资料")]
        public string ApplyMaterial { get; set; } // ApplyMaterial
		/// <summary>参加部门</summary>	
		[Description("参加部门")]
        public string JoinDepartment { get; set; } // JoinDepartment
		/// <summary>部门分工、业务协作内容</summary>	
		[Description("部门分工、业务协作内容")]
        public string DepartmentResponsibily { get; set; } // DepartmentResponsibily
		/// <summary>技术委员会专家</summary>	
		[Description("技术委员会专家")]
        public string TechnicalCommitteeExpert { get; set; } // TechnicalCommitteeExpert
		/// <summary>技术部意见</summary>	
		[Description("技术部意见")]
        public string EngineeringDeparment { get; set; } // EngineeringDeparment
		/// <summary>领导意见</summary>	
		[Description("领导意见")]
        public string LeaderOpinion { get; set; } // LeaderOpinion
    }

	/// <summary>防护用品台账</summary>	
	[Description("防护用品台账")]
    public partial class T_ProtectionArticle_Ledger : Formula.BaseModel
    {
		/// <summary></summary>	
		[Description("")]
        public string ID { get; set; } // ID (Primary key)
		/// <summary></summary>	
		[Description("")]
        public DateTime? CreateDate { get; set; } // CreateDate
		/// <summary></summary>	
		[Description("")]
        public DateTime? ModifyDate { get; set; } // ModifyDate
		/// <summary></summary>	
		[Description("")]
        public string CreateUserID { get; set; } // CreateUserID
		/// <summary></summary>	
		[Description("")]
        public string CreateUser { get; set; } // CreateUser
		/// <summary></summary>	
		[Description("")]
        public string ModifyUserID { get; set; } // ModifyUserID
		/// <summary></summary>	
		[Description("")]
        public string ModifyUser { get; set; } // ModifyUser
		/// <summary></summary>	
		[Description("")]
        public string OrgID { get; set; } // OrgID
		/// <summary></summary>	
		[Description("")]
        public string CompanyID { get; set; } // CompanyID
		/// <summary></summary>	
		[Description("")]
        public string FlowPhase { get; set; } // FlowPhase
		/// <summary></summary>	
		[Description("")]
        public string FlowInfo { get; set; } // FlowInfo
		/// <summary></summary>	
		[Description("")]
        public string StepName { get; set; } // StepName
		/// <summary>登记人</summary>	
		[Description("登记人")]
        public string Registrant { get; set; } // Registrant
		/// <summary>登记人名称</summary>	
		[Description("登记人名称")]
        public string RegistrantName { get; set; } // RegistrantName
		/// <summary>登记日期</summary>	
		[Description("登记日期")]
        public DateTime? RegisterDate { get; set; } // RegisterDate
		/// <summary>安全帽单价</summary>	
		[Description("安全帽单价")]
        public string SafetyHatPrice { get; set; } // SafetyHatPrice
		/// <summary>防护鞋单价</summary>	
		[Description("防护鞋单价")]
        public string SafetyShoesPrice { get; set; } // SafetyShoesPrice
		/// <summary>安全帽数量</summary>	
		[Description("安全帽数量")]
        public string SafetyHatQuantity { get; set; } // SafetyHatQuantity
		/// <summary>防护鞋数量</summary>	
		[Description("防护鞋数量")]
        public string SafetyShoesQuantity { get; set; } // SafetyShoesQuantity
		/// <summary>35</summary>	
		[Description("35")]
        public string Size35Quantity { get; set; } // Size35Quantity
		/// <summary>36</summary>	
		[Description("36")]
        public string Size36Quantity { get; set; } // Size36Quantity
		/// <summary>37</summary>	
		[Description("37")]
        public string Size37Quantity { get; set; } // Size37Quantity
		/// <summary>38</summary>	
		[Description("38")]
        public string Size38Quantity { get; set; } // Size38Quantity
		/// <summary>39</summary>	
		[Description("39")]
        public string Size39Quantity { get; set; } // Size39Quantity
		/// <summary>40</summary>	
		[Description("40")]
        public string Size40Quantity { get; set; } // Size40Quantity
		/// <summary>41</summary>	
		[Description("41")]
        public string Size41Quantity { get; set; } // Size41Quantity
		/// <summary>42</summary>	
		[Description("42")]
        public string Size42Quantity { get; set; } // Size42Quantity
		/// <summary>43</summary>	
		[Description("43")]
        public string Size43Quantity { get; set; } // Size43Quantity
		/// <summary>44</summary>	
		[Description("44")]
        public string Size44Quantity { get; set; } // Size44Quantity
		/// <summary>45</summary>	
		[Description("45")]
        public string Size45Quantity { get; set; } // Size45Quantity
		/// <summary>46</summary>	
		[Description("46")]
        public string Size46Quantity { get; set; } // Size46Quantity
    }

	/// <summary>防护用品申领</summary>	
	[Description("防护用品申领")]
    public partial class T_ProtectionArticle_Receive : Formula.BaseModel
    {
		/// <summary></summary>	
		[Description("")]
        public string ID { get; set; } // ID (Primary key)
		/// <summary></summary>	
		[Description("")]
        public DateTime? CreateDate { get; set; } // CreateDate
		/// <summary></summary>	
		[Description("")]
        public DateTime? ModifyDate { get; set; } // ModifyDate
		/// <summary></summary>	
		[Description("")]
        public string CreateUserID { get; set; } // CreateUserID
		/// <summary></summary>	
		[Description("")]
        public string CreateUser { get; set; } // CreateUser
		/// <summary></summary>	
		[Description("")]
        public string ModifyUserID { get; set; } // ModifyUserID
		/// <summary></summary>	
		[Description("")]
        public string ModifyUser { get; set; } // ModifyUser
		/// <summary></summary>	
		[Description("")]
        public string OrgID { get; set; } // OrgID
		/// <summary></summary>	
		[Description("")]
        public string CompanyID { get; set; } // CompanyID
		/// <summary></summary>	
		[Description("")]
        public string FlowPhase { get; set; } // FlowPhase
		/// <summary></summary>	
		[Description("")]
        public string FlowInfo { get; set; } // FlowInfo
		/// <summary></summary>	
		[Description("")]
        public string StepName { get; set; } // StepName
		/// <summary>申领人</summary>	
		[Description("申领人")]
        public string Registrant { get; set; } // Registrant
		/// <summary>申领人名称</summary>	
		[Description("申领人名称")]
        public string RegistrantName { get; set; } // RegistrantName
		/// <summary>申领人部门</summary>	
		[Description("申领人部门")]
        public string RegistrantDept { get; set; } // RegistrantDept
		/// <summary>申领人部门名称</summary>	
		[Description("申领人部门名称")]
        public string RegistrantDeptName { get; set; } // RegistrantDeptName
		/// <summary>申领日期</summary>	
		[Description("申领日期")]
        public DateTime? RegisterDate { get; set; } // RegisterDate
		/// <summary>使用地点</summary>	
		[Description("使用地点")]
        public string Location { get; set; } // Location
		/// <summary>项目名称</summary>	
		[Description("项目名称")]
        public string Project { get; set; } // Project
		/// <summary>项目名称名称</summary>	
		[Description("项目名称名称")]
        public string ProjectName { get; set; } // ProjectName
		/// <summary>顾客名称</summary>	
		[Description("顾客名称")]
        public string Customer { get; set; } // Customer
		/// <summary>顾客名称名称</summary>	
		[Description("顾客名称名称")]
        public string CustomerName { get; set; } // CustomerName
		/// <summary>安全帽申领数量</summary>	
		[Description("安全帽申领数量")]
        public string SafetyhatReceiveQuantity { get; set; } // SafetyhatReceiveQuantity
		/// <summary>防护鞋申领梳理</summary>	
		[Description("防护鞋申领梳理")]
        public string SafetyShoesReceive { get; set; } // SafetyShoesReceive
		/// <summary>安全帽单价</summary>	
		[Description("安全帽单价")]
        public string SafetyHatPrice { get; set; } // SafetyHatPrice
		/// <summary>防护鞋单价</summary>	
		[Description("防护鞋单价")]
        public string SafetyShoesPrice { get; set; } // SafetyShoesPrice
		/// <summary>安全帽总价</summary>	
		[Description("安全帽总价")]
        public string SafetyHatTotalPrice { get; set; } // SafetyHatTotalPrice
		/// <summary>防护鞋总价</summary>	
		[Description("防护鞋总价")]
        public string SafetyShoesTotalPrice { get; set; } // SafetyShoesTotalPrice
		/// <summary>本次申领总价</summary>	
		[Description("本次申领总价")]
        public string TotalPrice { get; set; } // TotalPrice
		/// <summary>备注</summary>	
		[Description("备注")]
        public string Remark { get; set; } // Remark
		/// <summary>附件</summary>	
		[Description("附件")]
        public string Attachments { get; set; } // Attachments
		/// <summary>防护鞋申领详情</summary>	
		[Description("防护鞋申领详情")]
        public string SafetyShoesDetail { get; set; } // SafetyShoesDetail
		/// <summary>部门领导意见</summary>	
		[Description("部门领导意见")]
        public string DeptLeader { get; set; } // DeptLeader
		/// <summary>承包部意见</summary>	
		[Description("承包部意见")]
        public string ContractingDept { get; set; } // ContractingDept
		/// <summary>防护鞋申领数量</summary>	
		[Description("防护鞋申领数量")]
        public string SafetyShoesReceiveQuantity { get; set; } // SafetyShoesReceiveQuantity

        // Reverse navigation
		[JsonIgnore]
        public virtual ICollection<T_ProtectionArticle_Receive_SafetyShoesDetail> T_ProtectionArticle_Receive_SafetyShoesDetail { get { onT_ProtectionArticle_Receive_SafetyShoesDetailGetting(); return _T_ProtectionArticle_Receive_SafetyShoesDetail;} }
		private ICollection<T_ProtectionArticle_Receive_SafetyShoesDetail> _T_ProtectionArticle_Receive_SafetyShoesDetail;
		partial void onT_ProtectionArticle_Receive_SafetyShoesDetailGetting();


        public T_ProtectionArticle_Receive()
        {
            _T_ProtectionArticle_Receive_SafetyShoesDetail = new List<T_ProtectionArticle_Receive_SafetyShoesDetail>();
        }
    }

	/// <summary>防护鞋申领详情</summary>	
	[Description("防护鞋申领详情")]
    public partial class T_ProtectionArticle_Receive_SafetyShoesDetail : Formula.BaseModel
    {
		/// <summary></summary>	
		[Description("")]
        public string ID { get; set; } // ID (Primary key)
		/// <summary></summary>	
		[Description("")]
        public string T_ProtectionArticle_ReceiveID { get; set; } // T_ProtectionArticle_ReceiveID
		/// <summary></summary>	
		[Description("")]
        public double? SortIndex { get; set; } // SortIndex
		/// <summary></summary>	
		[Description("")]
        public string IsReleased { get; set; } // IsReleased
		/// <summary>35</summary>	
		[Description("35")]
        public string Size35 { get; set; } // Size35
		/// <summary>36</summary>	
		[Description("36")]
        public string Size36 { get; set; } // Size36
		/// <summary>37</summary>	
		[Description("37")]
        public string Size37 { get; set; } // Size37
		/// <summary>38</summary>	
		[Description("38")]
        public string Size38 { get; set; } // Size38
		/// <summary>39</summary>	
		[Description("39")]
        public string Size39 { get; set; } // Size39
		/// <summary>40</summary>	
		[Description("40")]
        public string Size40 { get; set; } // Size40
		/// <summary>41</summary>	
		[Description("41")]
        public string Size41 { get; set; } // Size41
		/// <summary>42</summary>	
		[Description("42")]
        public string Size42 { get; set; } // Size42
		/// <summary>43</summary>	
		[Description("43")]
        public string Size43 { get; set; } // Size43
		/// <summary>44</summary>	
		[Description("44")]
        public string Size44 { get; set; } // Size44
		/// <summary>45</summary>	
		[Description("45")]
        public string Size45 { get; set; } // Size45
		/// <summary>46</summary>	
		[Description("46")]
        public string Size46 { get; set; } // Size46

        // Foreign keys
		[JsonIgnore]
        public virtual T_ProtectionArticle_Receive T_ProtectionArticle_Receive { get; set; } //  T_ProtectionArticle_ReceiveID - FK_T_ProtectionArticle_Receive_SafetyShoesDetail_T_ProtectionArticle_Receive
    }

	/// <summary>防护用品入库</summary>	
	[Description("防护用品入库")]
    public partial class T_ProtectionArticle_Register : Formula.BaseModel
    {
		/// <summary></summary>	
		[Description("")]
        public string ID { get; set; } // ID (Primary key)
		/// <summary></summary>	
		[Description("")]
        public DateTime? CreateDate { get; set; } // CreateDate
		/// <summary></summary>	
		[Description("")]
        public DateTime? ModifyDate { get; set; } // ModifyDate
		/// <summary></summary>	
		[Description("")]
        public string CreateUserID { get; set; } // CreateUserID
		/// <summary></summary>	
		[Description("")]
        public string CreateUser { get; set; } // CreateUser
		/// <summary></summary>	
		[Description("")]
        public string ModifyUserID { get; set; } // ModifyUserID
		/// <summary></summary>	
		[Description("")]
        public string ModifyUser { get; set; } // ModifyUser
		/// <summary></summary>	
		[Description("")]
        public string OrgID { get; set; } // OrgID
		/// <summary></summary>	
		[Description("")]
        public string CompanyID { get; set; } // CompanyID
		/// <summary></summary>	
		[Description("")]
        public string FlowPhase { get; set; } // FlowPhase
		/// <summary></summary>	
		[Description("")]
        public string FlowInfo { get; set; } // FlowInfo
		/// <summary></summary>	
		[Description("")]
        public string StepName { get; set; } // StepName
		/// <summary>登记人</summary>	
		[Description("登记人")]
        public string Registrant { get; set; } // Registrant
		/// <summary>登记人名称</summary>	
		[Description("登记人名称")]
        public string RegistrantName { get; set; } // RegistrantName
		/// <summary>登记人部门</summary>	
		[Description("登记人部门")]
        public string RegistantDept { get; set; } // RegistantDept
		/// <summary>登记日期</summary>	
		[Description("登记日期")]
        public DateTime? RegisterDate { get; set; } // RegisterDate
		/// <summary>采购日期</summary>	
		[Description("采购日期")]
        public DateTime? PurchaseDate { get; set; } // PurchaseDate
		/// <summary>备注</summary>	
		[Description("备注")]
        public string Remark { get; set; } // Remark
		/// <summary>附件</summary>	
		[Description("附件")]
        public string Attachments { get; set; } // Attachments
		/// <summary>安全帽数量（顶）</summary>	
		[Description("安全帽数量（顶）")]
        public string SafetyHatQuantity { get; set; } // SafetyHatQuantity
		/// <summary>防护鞋数量</summary>	
		[Description("防护鞋数量")]
        public string SafetyShoeQuantity { get; set; } // SafetyShoeQuantity
		/// <summary>防护鞋明细</summary>	
		[Description("防护鞋明细")]
        public string SafetyShoeDetail { get; set; } // SafetyShoeDetail
		/// <summary>审核意见</summary>	
		[Description("审核意见")]
        public string Audit { get; set; } // Audit
		/// <summary>登记人部门名称</summary>	
		[Description("登记人部门名称")]
        public string RegistantDeptName { get; set; } // RegistantDeptName
		/// <summary>防护鞋数量</summary>	
		[Description("防护鞋数量")]
        public string SafetyShoesQuantity { get; set; } // SafetyShoesQuantity

        // Reverse navigation
		[JsonIgnore]
        public virtual ICollection<T_ProtectionArticle_Register_SafetyShoeDetail> T_ProtectionArticle_Register_SafetyShoeDetail { get { onT_ProtectionArticle_Register_SafetyShoeDetailGetting(); return _T_ProtectionArticle_Register_SafetyShoeDetail;} }
		private ICollection<T_ProtectionArticle_Register_SafetyShoeDetail> _T_ProtectionArticle_Register_SafetyShoeDetail;
		partial void onT_ProtectionArticle_Register_SafetyShoeDetailGetting();


        public T_ProtectionArticle_Register()
        {
            _T_ProtectionArticle_Register_SafetyShoeDetail = new List<T_ProtectionArticle_Register_SafetyShoeDetail>();
        }
    }

	/// <summary>防护鞋明细</summary>	
	[Description("防护鞋明细")]
    public partial class T_ProtectionArticle_Register_SafetyShoeDetail : Formula.BaseModel
    {
		/// <summary></summary>	
		[Description("")]
        public string ID { get; set; } // ID (Primary key)
		/// <summary></summary>	
		[Description("")]
        public string T_ProtectionArticle_RegisterID { get; set; } // T_ProtectionArticle_RegisterID
		/// <summary></summary>	
		[Description("")]
        public double? SortIndex { get; set; } // SortIndex
		/// <summary></summary>	
		[Description("")]
        public string IsReleased { get; set; } // IsReleased
		/// <summary>35</summary>	
		[Description("35")]
        public string Size35 { get; set; } // Size35
		/// <summary>36</summary>	
		[Description("36")]
        public string Size36 { get; set; } // Size36
		/// <summary>37</summary>	
		[Description("37")]
        public string Size37 { get; set; } // Size37
		/// <summary>38</summary>	
		[Description("38")]
        public string Size38 { get; set; } // Size38
		/// <summary>39</summary>	
		[Description("39")]
        public string Size39 { get; set; } // Size39
		/// <summary>40</summary>	
		[Description("40")]
        public string Size40 { get; set; } // Size40
		/// <summary>41</summary>	
		[Description("41")]
        public string Size41 { get; set; } // Size41
		/// <summary>42</summary>	
		[Description("42")]
        public string Size42 { get; set; } // Size42
		/// <summary>43</summary>	
		[Description("43")]
        public string Size43 { get; set; } // Size43
		/// <summary>44</summary>	
		[Description("44")]
        public string Size44 { get; set; } // Size44
		/// <summary>45</summary>	
		[Description("45")]
        public string Size45 { get; set; } // Size45
		/// <summary>46</summary>	
		[Description("46")]
        public string Size46 { get; set; } // Size46
		/// <summary>合计</summary>	
		[Description("合计")]
        public string TotalQuantity { get; set; } // TotalQuantity

        // Foreign keys
		[JsonIgnore]
        public virtual T_ProtectionArticle_Register T_ProtectionArticle_Register { get; set; } //  T_ProtectionArticle_RegisterID - FK_T_ProtectionArticle_Register_SafetyShoeDetail_T_ProtectionArticle_Register
    }

	/// <summary>项目验收</summary>	
	[Description("项目验收")]
    public partial class T_PurchaseProject_Acceptance : Formula.BaseModel
    {
		/// <summary></summary>	
		[Description("")]
        public string ID { get; set; } // ID (Primary key)
		/// <summary></summary>	
		[Description("")]
        public DateTime? CreateDate { get; set; } // CreateDate
		/// <summary></summary>	
		[Description("")]
        public DateTime? ModifyDate { get; set; } // ModifyDate
		/// <summary></summary>	
		[Description("")]
        public string CreateUserID { get; set; } // CreateUserID
		/// <summary></summary>	
		[Description("")]
        public string CreateUser { get; set; } // CreateUser
		/// <summary></summary>	
		[Description("")]
        public string ModifyUserID { get; set; } // ModifyUserID
		/// <summary></summary>	
		[Description("")]
        public string ModifyUser { get; set; } // ModifyUser
		/// <summary></summary>	
		[Description("")]
        public string OrgID { get; set; } // OrgID
		/// <summary></summary>	
		[Description("")]
        public string CompanyID { get; set; } // CompanyID
		/// <summary></summary>	
		[Description("")]
        public string FlowPhase { get; set; } // FlowPhase
		/// <summary></summary>	
		[Description("")]
        public string FlowInfo { get; set; } // FlowInfo
		/// <summary></summary>	
		[Description("")]
        public string StepName { get; set; } // StepName
		/// <summary>申请人</summary>	
		[Description("申请人")]
        public string Applicant { get; set; } // Applicant
		/// <summary>申请人名称</summary>	
		[Description("申请人名称")]
        public string ApplicantName { get; set; } // ApplicantName
		/// <summary>申请时间</summary>	
		[Description("申请时间")]
        public DateTime? ApplyDate { get; set; } // ApplyDate
		/// <summary>验收项目名称</summary>	
		[Description("验收项目名称")]
        public string Project { get; set; } // Project
		/// <summary>验收项目名称名称</summary>	
		[Description("验收项目名称名称")]
        public string ProjectName { get; set; } // ProjectName
		/// <summary>项目类型</summary>	
		[Description("项目类型")]
        public string ProjectType { get; set; } // ProjectType
		/// <summary>项目编号</summary>	
		[Description("项目编号")]
        public string ProjectNumber { get; set; } // ProjectNumber
		/// <summary>项目合同号</summary>	
		[Description("项目合同号")]
        public string ProjectContractNumber { get; set; } // ProjectContractNumber
		/// <summary>业务主管</summary>	
		[Description("业务主管")]
        public string BusinessSupervisorName { get; set; } // BusinessSupervisorName
		/// <summary>信息中心副职</summary>	
		[Description("信息中心副职")]
        public string DeptDeputyName { get; set; } // DeptDeputyName
		/// <summary>计划开始时间</summary>	
		[Description("计划开始时间")]
        public DateTime? StartDate { get; set; } // StartDate
		/// <summary>计划完工时间</summary>	
		[Description("计划完工时间")]
        public DateTime? EndDate { get; set; } // EndDate
		/// <summary>实际开始时间</summary>	
		[Description("实际开始时间")]
        public DateTime? ActualStartDate { get; set; } // ActualStartDate
		/// <summary>实际完工时间</summary>	
		[Description("实际完工时间")]
        public DateTime? ActualEndDate { get; set; } // ActualEndDate
		/// <summary>项目验收人</summary>	
		[Description("项目验收人")]
        public string Acceptor { get; set; } // Acceptor
		/// <summary>项目验收人名称</summary>	
		[Description("项目验收人名称")]
        public string AcceptorName { get; set; } // AcceptorName
		/// <summary>验收时间</summary>	
		[Description("验收时间")]
        public DateTime? AcceptanceDate { get; set; } // AcceptanceDate
		/// <summary>验收类型</summary>	
		[Description("验收类型")]
        public string AcceptanceCategory { get; set; } // AcceptanceCategory
		/// <summary>到货清单</summary>	
		[Description("到货清单")]
        public string ArrivalList { get; set; } // ArrivalList
		/// <summary>验收申请单</summary>	
		[Description("验收申请单")]
        public string AcceptanceForm { get; set; } // AcceptanceForm
		/// <summary>竣工图</summary>	
		[Description("竣工图")]
        public string CompletedPic { get; set; } // CompletedPic
		/// <summary>竣工文档</summary>	
		[Description("竣工文档")]
        public string CompletedDoc { get; set; } // CompletedDoc
		/// <summary>信息中心副职意见</summary>	
		[Description("信息中心副职意见")]
        public string DeptDeputy { get; set; } // DeptDeputy
		/// <summary>信息中心正职意见</summary>	
		[Description("信息中心正职意见")]
        public string Deputies { get; set; } // Deputies
		/// <summary>公司领导意见</summary>	
		[Description("公司领导意见")]
        public string CompanyLeader { get; set; } // CompanyLeader
    }

	/// <summary>项目立项申请</summary>	
	[Description("项目立项申请")]
    public partial class T_PurchaseProject_ApprovalApply : Formula.BaseModel
    {
		/// <summary></summary>	
		[Description("")]
        public string ID { get; set; } // ID (Primary key)
		/// <summary></summary>	
		[Description("")]
        public DateTime? CreateDate { get; set; } // CreateDate
		/// <summary></summary>	
		[Description("")]
        public DateTime? ModifyDate { get; set; } // ModifyDate
		/// <summary></summary>	
		[Description("")]
        public string CreateUserID { get; set; } // CreateUserID
		/// <summary></summary>	
		[Description("")]
        public string CreateUser { get; set; } // CreateUser
		/// <summary></summary>	
		[Description("")]
        public string ModifyUserID { get; set; } // ModifyUserID
		/// <summary></summary>	
		[Description("")]
        public string ModifyUser { get; set; } // ModifyUser
		/// <summary></summary>	
		[Description("")]
        public string OrgID { get; set; } // OrgID
		/// <summary></summary>	
		[Description("")]
        public string CompanyID { get; set; } // CompanyID
		/// <summary></summary>	
		[Description("")]
        public string FlowPhase { get; set; } // FlowPhase
		/// <summary></summary>	
		[Description("")]
        public string FlowInfo { get; set; } // FlowInfo
		/// <summary></summary>	
		[Description("")]
        public string StepName { get; set; } // StepName
		/// <summary>填报人</summary>	
		[Description("填报人")]
        public string Applicant { get; set; } // Applicant
		/// <summary>填报人名称</summary>	
		[Description("填报人名称")]
        public string ApplicantName { get; set; } // ApplicantName
		/// <summary>填报时间</summary>	
		[Description("填报时间")]
        public DateTime? ApplyDate { get; set; } // ApplyDate
		/// <summary>立项年度</summary>	
		[Description("立项年度")]
        public string ApplyYear { get; set; } // ApplyYear
		/// <summary>项目列表</summary>	
		[Description("项目列表")]
        public string ProjectList { get; set; } // ProjectList
		/// <summary>附件</summary>	
		[Description("附件")]
        public string Attachments { get; set; } // Attachments
		/// <summary>信息中心领导意见</summary>	
		[Description("信息中心领导意见")]
        public string InformationLeader { get; set; } // InformationLeader
		/// <summary>公司领导意见</summary>	
		[Description("公司领导意见")]
        public string CompanyLeader { get; set; } // CompanyLeader

        // Reverse navigation
		[JsonIgnore]
        public virtual ICollection<T_PurchaseProject_ApprovalApply_ProjectList> T_PurchaseProject_ApprovalApply_ProjectList { get { onT_PurchaseProject_ApprovalApply_ProjectListGetting(); return _T_PurchaseProject_ApprovalApply_ProjectList;} }
		private ICollection<T_PurchaseProject_ApprovalApply_ProjectList> _T_PurchaseProject_ApprovalApply_ProjectList;
		partial void onT_PurchaseProject_ApprovalApply_ProjectListGetting();


        public T_PurchaseProject_ApprovalApply()
        {
            _T_PurchaseProject_ApprovalApply_ProjectList = new List<T_PurchaseProject_ApprovalApply_ProjectList>();
        }
    }

	/// <summary>项目列表</summary>	
	[Description("项目列表")]
    public partial class T_PurchaseProject_ApprovalApply_ProjectList : Formula.BaseModel
    {
		/// <summary></summary>	
		[Description("")]
        public string ID { get; set; } // ID (Primary key)
		/// <summary></summary>	
		[Description("")]
        public string T_PurchaseProject_ApprovalApplyID { get; set; } // T_PurchaseProject_ApprovalApplyID
		/// <summary></summary>	
		[Description("")]
        public double? SortIndex { get; set; } // SortIndex
		/// <summary></summary>	
		[Description("")]
        public string IsReleased { get; set; } // IsReleased
		/// <summary>项目名称</summary>	
		[Description("项目名称")]
        public string ProjectName { get; set; } // ProjectName
		/// <summary>项目类型</summary>	
		[Description("项目类型")]
        public string ProjectType { get; set; } // ProjectType
		/// <summary>项目编号</summary>	
		[Description("项目编号")]
        public string ProjectNumber { get; set; } // ProjectNumber
		/// <summary>申请原因</summary>	
		[Description("申请原因")]
        public string ApplyReason { get; set; } // ApplyReason
		/// <summary>方案简介</summary>	
		[Description("方案简介")]
        public string ProjectDesc { get; set; } // ProjectDesc
		/// <summary>预算</summary>	
		[Description("预算")]
        public string Budget { get; set; } // Budget
		/// <summary>开始时间</summary>	
		[Description("开始时间")]
        public DateTime? StartDate { get; set; } // StartDate
		/// <summary>结束时间</summary>	
		[Description("结束时间")]
        public DateTime? EndDate { get; set; } // EndDate
		/// <summary>业务主管</summary>	
		[Description("业务主管")]
        public string BusinessSupervisor { get; set; } // BusinessSupervisor
		/// <summary>业务主管名称</summary>	
		[Description("业务主管名称")]
        public string BusinessSupervisorName { get; set; } // BusinessSupervisorName
		/// <summary>部门副职</summary>	
		[Description("部门副职")]
        public string DeptDeputy { get; set; } // DeptDeputy
		/// <summary>部门副职名称</summary>	
		[Description("部门副职名称")]
        public string DeptDeputyName { get; set; } // DeptDeputyName
		/// <summary>部门正职审批</summary>	
		[Description("部门正职审批")]
        public string DeptDuties { get; set; } // DeptDuties
		/// <summary>公司领导审批</summary>	
		[Description("公司领导审批")]
        public string CompanyLeader { get; set; } // CompanyLeader
		/// <summary>项目状态</summary>	
		[Description("项目状态")]
        public string ProjectStatus { get; set; } // ProjectStatus

        // Foreign keys
		[JsonIgnore]
        public virtual T_PurchaseProject_ApprovalApply T_PurchaseProject_ApprovalApply { get; set; } //  T_PurchaseProject_ApprovalApplyID - FK_T_PurchaseProject_ApprovalApply_ProjectList_T_PurchaseProject_ApprovalApply
    }

	/// <summary>项目状态变更</summary>	
	[Description("项目状态变更")]
    public partial class T_PurchaseProject_StateChange : Formula.BaseModel
    {
		/// <summary></summary>	
		[Description("")]
        public string ID { get; set; } // ID (Primary key)
		/// <summary></summary>	
		[Description("")]
        public DateTime? CreateDate { get; set; } // CreateDate
		/// <summary></summary>	
		[Description("")]
        public DateTime? ModifyDate { get; set; } // ModifyDate
		/// <summary></summary>	
		[Description("")]
        public string CreateUserID { get; set; } // CreateUserID
		/// <summary></summary>	
		[Description("")]
        public string CreateUser { get; set; } // CreateUser
		/// <summary></summary>	
		[Description("")]
        public string ModifyUserID { get; set; } // ModifyUserID
		/// <summary></summary>	
		[Description("")]
        public string ModifyUser { get; set; } // ModifyUser
		/// <summary></summary>	
		[Description("")]
        public string OrgID { get; set; } // OrgID
		/// <summary></summary>	
		[Description("")]
        public string CompanyID { get; set; } // CompanyID
		/// <summary></summary>	
		[Description("")]
        public string FlowPhase { get; set; } // FlowPhase
		/// <summary></summary>	
		[Description("")]
        public string FlowInfo { get; set; } // FlowInfo
		/// <summary></summary>	
		[Description("")]
        public string StepName { get; set; } // StepName
		/// <summary>申请人</summary>	
		[Description("申请人")]
        public string Applicant { get; set; } // Applicant
		/// <summary>申请人名称</summary>	
		[Description("申请人名称")]
        public string ApplicantName { get; set; } // ApplicantName
		/// <summary>申请时间</summary>	
		[Description("申请时间")]
        public DateTime? ApplyDate { get; set; } // ApplyDate
		/// <summary>项目名称</summary>	
		[Description("项目名称")]
        public string Project { get; set; } // Project
		/// <summary>项目名称名称</summary>	
		[Description("项目名称名称")]
        public string ProjectName { get; set; } // ProjectName
		/// <summary>项目类型</summary>	
		[Description("项目类型")]
        public string ProjectType { get; set; } // ProjectType
		/// <summary>项目编号</summary>	
		[Description("项目编号")]
        public string ProjectNumber { get; set; } // ProjectNumber
		/// <summary>项目合同号</summary>	
		[Description("项目合同号")]
        public string ProjectContract { get; set; } // ProjectContract
		/// <summary>业务主管</summary>	
		[Description("业务主管")]
        public string BusinessSupervisorName { get; set; } // BusinessSupervisorName
		/// <summary>信息中心副职</summary>	
		[Description("信息中心副职")]
        public string DeptDeputyName { get; set; } // DeptDeputyName
		/// <summary>变更原因</summary>	
		[Description("变更原因")]
        public string ChangeReason { get; set; } // ChangeReason
		/// <summary>项目当前状态</summary>	
		[Description("项目当前状态")]
        public string ProjectStatus { get; set; } // ProjectStatus
		/// <summary>变更后状态</summary>	
		[Description("变更后状态")]
        public string ChangedState { get; set; } // ChangedState
		/// <summary>计划开始时间</summary>	
		[Description("计划开始时间")]
        public DateTime? StartDate { get; set; } // StartDate
		/// <summary>计划完工时间</summary>	
		[Description("计划完工时间")]
        public DateTime? EndDate { get; set; } // EndDate
		/// <summary>延期开始时间</summary>	
		[Description("延期开始时间")]
        public DateTime? DelayStartDate { get; set; } // DelayStartDate
		/// <summary>延期完工时间</summary>	
		[Description("延期完工时间")]
        public DateTime? DelayEndDate { get; set; } // DelayEndDate
		/// <summary>变更原因说明</summary>	
		[Description("变更原因说明")]
        public string ResonDesc { get; set; } // ResonDesc
		/// <summary>合同文本</summary>	
		[Description("合同文本")]
        public string ContractContent { get; set; } // ContractContent
		/// <summary>附件</summary>	
		[Description("附件")]
        public string Attachments { get; set; } // Attachments
		/// <summary>信息中心副职意见</summary>	
		[Description("信息中心副职意见")]
        public string InformationCenterB { get; set; } // InformationCenterB
		/// <summary>信息中心正职意见</summary>	
		[Description("信息中心正职意见")]
        public string InformationCenterA { get; set; } // InformationCenterA
		/// <summary>公司领导意见</summary>	
		[Description("公司领导意见")]
        public string CompanyLeader { get; set; } // CompanyLeader
    }

	/// <summary>任务分解表审批</summary>	
	[Description("任务分解表审批")]
    public partial class T_RiskList_TaskBreakdown : Formula.BaseModel
    {
		/// <summary></summary>	
		[Description("")]
        public string ID { get; set; } // ID (Primary key)
		/// <summary></summary>	
		[Description("")]
        public DateTime? CreateDate { get; set; } // CreateDate
		/// <summary></summary>	
		[Description("")]
        public DateTime? ModifyDate { get; set; } // ModifyDate
		/// <summary></summary>	
		[Description("")]
        public string CreateUserID { get; set; } // CreateUserID
		/// <summary></summary>	
		[Description("")]
        public string CreateUser { get; set; } // CreateUser
		/// <summary></summary>	
		[Description("")]
        public string ModifyUserID { get; set; } // ModifyUserID
		/// <summary></summary>	
		[Description("")]
        public string ModifyUser { get; set; } // ModifyUser
		/// <summary></summary>	
		[Description("")]
        public string OrgID { get; set; } // OrgID
		/// <summary></summary>	
		[Description("")]
        public string CompanyID { get; set; } // CompanyID
		/// <summary></summary>	
		[Description("")]
        public string FlowPhase { get; set; } // FlowPhase
		/// <summary></summary>	
		[Description("")]
        public string FlowInfo { get; set; } // FlowInfo
		/// <summary></summary>	
		[Description("")]
        public string StepName { get; set; } // StepName
		/// <summary>编制人</summary>	
		[Description("编制人")]
        public string CompilingPerson { get; set; } // CompilingPerson
		/// <summary>编制人名称</summary>	
		[Description("编制人名称")]
        public string CompilingPersonName { get; set; } // CompilingPersonName
		/// <summary>编制日期</summary>	
		[Description("编制日期")]
        public DateTime? DateOfEstablishment { get; set; } // DateOfEstablishment
		/// <summary>任务下达年度</summary>	
		[Description("任务下达年度")]
        public string AssignmentYear { get; set; } // AssignmentYear
		/// <summary>任务总数</summary>	
		[Description("任务总数")]
        public decimal? TotalTask { get; set; } // TotalTask
		/// <summary>任务分解表说明</summary>	
		[Description("任务分解表说明")]
        public string TaskBreakdownDescription { get; set; } // TaskBreakdownDescription
		/// <summary>任务分解表文件</summary>	
		[Description("任务分解表文件")]
        public string TaskBreakdownFile { get; set; } // TaskBreakdownFile
		/// <summary>法务审计部领导意见</summary>	
		[Description("法务审计部领导意见")]
        public string OpinionsOfLeadersOfLegalAuditDepartment { get; set; } // OpinionsOfLeadersOfLegalAuditDepartment
		/// <summary>风险管理委员会意见</summary>	
		[Description("风险管理委员会意见")]
        public string OpinionsOfRiskManagementCommittee { get; set; } // OpinionsOfRiskManagementCommittee
		/// <summary>风险管理委员会成员</summary>	
		[Description("风险管理委员会成员")]
        public string RiskManagementCommitteeMember { get; set; } // RiskManagementCommitteeMember
		/// <summary>风险管理委员会成员名称</summary>	
		[Description("风险管理委员会成员名称")]
        public string RiskManagementCommitteeMemberName { get; set; } // RiskManagementCommitteeMemberName
		/// <summary>任务分解单</summary>	
		[Description("任务分解单")]
        public string TaskBreakdownSheet { get; set; } // TaskBreakdownSheet

        // Reverse navigation
		[JsonIgnore]
        public virtual ICollection<T_RiskList_TaskBreakdown_TaskBreakdownSheet> T_RiskList_TaskBreakdown_TaskBreakdownSheet { get { onT_RiskList_TaskBreakdown_TaskBreakdownSheetGetting(); return _T_RiskList_TaskBreakdown_TaskBreakdownSheet;} }
		private ICollection<T_RiskList_TaskBreakdown_TaskBreakdownSheet> _T_RiskList_TaskBreakdown_TaskBreakdownSheet;
		partial void onT_RiskList_TaskBreakdown_TaskBreakdownSheetGetting();


        public T_RiskList_TaskBreakdown()
        {
            _T_RiskList_TaskBreakdown_TaskBreakdownSheet = new List<T_RiskList_TaskBreakdown_TaskBreakdownSheet>();
        }
    }

	/// <summary>任务分解单</summary>	
	[Description("任务分解单")]
    public partial class T_RiskList_TaskBreakdown_TaskBreakdownSheet : Formula.BaseModel
    {
		/// <summary></summary>	
		[Description("")]
        public string ID { get; set; } // ID (Primary key)
		/// <summary></summary>	
		[Description("")]
        public string T_RiskList_TaskBreakdownID { get; set; } // T_RiskList_TaskBreakdownID
		/// <summary></summary>	
		[Description("")]
        public double? SortIndex { get; set; } // SortIndex
		/// <summary></summary>	
		[Description("")]
        public string IsReleased { get; set; } // IsReleased
		/// <summary>风险项</summary>	
		[Description("风险项")]
        public string RiskItem { get; set; } // RiskItem
		/// <summary>风险描述</summary>	
		[Description("风险描述")]
        public string RiskDescription { get; set; } // RiskDescription
		/// <summary>风险管控目标</summary>	
		[Description("风险管控目标")]
        public string RiskControlObjectives { get; set; } // RiskControlObjectives
		/// <summary>任务分解.任务号</summary>	
		[Description("任务分解.任务号")]
        public string TaskNumber { get; set; } // TaskNumber
		/// <summary>任务分解.任务内容</summary>	
		[Description("任务分解.任务内容")]
        public string TaskContent { get; set; } // TaskContent
		/// <summary>任务要求</summary>	
		[Description("任务要求")]
        public string MissionRequirements { get; set; } // MissionRequirements
		/// <summary>任务执行部门</summary>	
		[Description("任务执行部门")]
        public string TaskExecutionDepartment { get; set; } // TaskExecutionDepartment
		/// <summary>任务执行部门名称</summary>	
		[Description("任务执行部门名称")]
        public string TaskExecutionDepartmentName { get; set; } // TaskExecutionDepartmentName
		/// <summary>其他</summary>	
		[Description("其他")]
        public string Other { get; set; } // Other

        // Foreign keys
		[JsonIgnore]
        public virtual T_RiskList_TaskBreakdown T_RiskList_TaskBreakdown { get; set; } //  T_RiskList_TaskBreakdownID - FK_T_RiskList_TaskBreakdown_TaskBreakdownSheet_T_RiskList_TaskBreakdown
    }

	/// <summary>任务完成报告审批表单</summary>	
	[Description("任务完成报告审批表单")]
    public partial class T_RiskList_TaskCompletionReport : Formula.BaseModel
    {
		/// <summary></summary>	
		[Description("")]
        public string ID { get; set; } // ID (Primary key)
		/// <summary></summary>	
		[Description("")]
        public DateTime? CreateDate { get; set; } // CreateDate
		/// <summary></summary>	
		[Description("")]
        public DateTime? ModifyDate { get; set; } // ModifyDate
		/// <summary></summary>	
		[Description("")]
        public string CreateUserID { get; set; } // CreateUserID
		/// <summary></summary>	
		[Description("")]
        public string CreateUser { get; set; } // CreateUser
		/// <summary></summary>	
		[Description("")]
        public string ModifyUserID { get; set; } // ModifyUserID
		/// <summary></summary>	
		[Description("")]
        public string ModifyUser { get; set; } // ModifyUser
		/// <summary></summary>	
		[Description("")]
        public string OrgID { get; set; } // OrgID
		/// <summary></summary>	
		[Description("")]
        public string CompanyID { get; set; } // CompanyID
		/// <summary></summary>	
		[Description("")]
        public string FlowPhase { get; set; } // FlowPhase
		/// <summary></summary>	
		[Description("")]
        public string FlowInfo { get; set; } // FlowInfo
		/// <summary></summary>	
		[Description("")]
        public string StepName { get; set; } // StepName
		/// <summary>任务号</summary>	
		[Description("任务号")]
        public string TaskNumber { get; set; } // TaskNumber
		/// <summary>执行部门</summary>	
		[Description("执行部门")]
        public string ExecutiveBranch { get; set; } // ExecutiveBranch
		/// <summary>执行部门名称</summary>	
		[Description("执行部门名称")]
        public string ExecutiveBranchName { get; set; } // ExecutiveBranchName
		/// <summary>责任人</summary>	
		[Description("责任人")]
        public string PersonLiable { get; set; } // PersonLiable
		/// <summary>责任人名称</summary>	
		[Description("责任人名称")]
        public string PersonLiableName { get; set; } // PersonLiableName
		/// <summary>风险项</summary>	
		[Description("风险项")]
        public string RiskItem { get; set; } // RiskItem
		/// <summary>风险描述</summary>	
		[Description("风险描述")]
        public string RiskDescription { get; set; } // RiskDescription
		/// <summary>任务内容</summary>	
		[Description("任务内容")]
        public string TaskContent { get; set; } // TaskContent
		/// <summary>任务要求</summary>	
		[Description("任务要求")]
        public string MissionRequirements { get; set; } // MissionRequirements
		/// <summary>执行情况</summary>	
		[Description("执行情况")]
        public string ImplementationSituation { get; set; } // ImplementationSituation
		/// <summary>意见建议</summary>	
		[Description("意见建议")]
        public string SuggestionsAndSuggestions { get; set; } // SuggestionsAndSuggestions
		/// <summary>任务责任人签名</summary>	
		[Description("任务责任人签名")]
        public string TaskOwnerSignature { get; set; } // TaskOwnerSignature
		/// <summary>完成情况</summary>	
		[Description("完成情况")]
        public string CompletionStatus { get; set; } // CompletionStatus
		/// <summary>说明或理由</summary>	
		[Description("说明或理由")]
        public string ExplanationOrReason { get; set; } // ExplanationOrReason
		/// <summary>执行部门领导签名</summary>	
		[Description("执行部门领导签名")]
        public string SignatureOfExecutiveDepartmentLeader { get; set; } // SignatureOfExecutiveDepartmentLeader
		/// <summary>任务评价</summary>	
		[Description("任务评价")]
        public string TaskEvaluation { get; set; } // TaskEvaluation
		/// <summary>风险管理办公室签字</summary>	
		[Description("风险管理办公室签字")]
        public string RiskManagementOfficeSignature { get; set; } // RiskManagementOfficeSignature
		/// <summary>风险管理委员会成员</summary>	
		[Description("风险管理委员会成员")]
        public string RiskManagementSign { get; set; } // RiskManagementSign
		/// <summary>风险管理委员会成员名称</summary>	
		[Description("风险管理委员会成员名称")]
        public string RiskManagementSignName { get; set; } // RiskManagementSignName
    }

	/// <summary>差旅费报销</summary>	
	[Description("差旅费报销")]
    public partial class T_RM_ReimbursementForm : Formula.BaseModel
    {
		/// <summary></summary>	
		[Description("")]
        public string ID { get; set; } // ID (Primary key)
		/// <summary></summary>	
		[Description("")]
        public DateTime? CreateDate { get; set; } // CreateDate
		/// <summary></summary>	
		[Description("")]
        public DateTime? ModifyDate { get; set; } // ModifyDate
		/// <summary></summary>	
		[Description("")]
        public string CreateUserID { get; set; } // CreateUserID
		/// <summary>填写人</summary>	
		[Description("填写人")]
        public string CreateUser { get; set; } // CreateUser
		/// <summary></summary>	
		[Description("")]
        public string ModifyUserID { get; set; } // ModifyUserID
		/// <summary></summary>	
		[Description("")]
        public string ModifyUser { get; set; } // ModifyUser
		/// <summary></summary>	
		[Description("")]
        public string OrgID { get; set; } // OrgID
		/// <summary></summary>	
		[Description("")]
        public string CompanyID { get; set; } // CompanyID
		/// <summary></summary>	
		[Description("")]
        public string FlowPhase { get; set; } // FlowPhase
		/// <summary></summary>	
		[Description("")]
        public string FlowInfo { get; set; } // FlowInfo
		/// <summary></summary>	
		[Description("")]
        public string StepName { get; set; } // StepName
		/// <summary>报销单编号</summary>	
		[Description("报销单编号")]
        public string SerialNumber { get; set; } // SerialNumber
		/// <summary>申请部门</summary>	
		[Description("申请部门")]
        public string CreateUserDept { get; set; } // CreateUserDept
		/// <summary>申请部门名称</summary>	
		[Description("申请部门名称")]
        public string CreateUserDeptName { get; set; } // CreateUserDeptName
		/// <summary>填写日期</summary>	
		[Description("填写日期")]
        public DateTime? ReimbursementDate { get; set; } // ReimbursementDate
		/// <summary>报销人</summary>	
		[Description("报销人")]
        public string Advertiser { get; set; } // Advertiser
		/// <summary>报销人名称</summary>	
		[Description("报销人名称")]
        public string AdvertiserName { get; set; } // AdvertiserName
		/// <summary>报销人部门</summary>	
		[Description("报销人部门")]
        public string AdvertiserDept { get; set; } // AdvertiserDept
		/// <summary>报销人部门名称</summary>	
		[Description("报销人部门名称")]
        public string AdvertiserDeptName { get; set; } // AdvertiserDeptName
		/// <summary>报销人电话</summary>	
		[Description("报销人电话")]
        public string CreateUserPhone { get; set; } // CreateUserPhone
		/// <summary>报销金额(大写)</summary>	
		[Description("报销金额(大写)")]
        public string CapsReimbursementAmount { get; set; } // CapsReimbursementAmount
		/// <summary>本次冲销金额</summary>	
		[Description("本次冲销金额")]
        public decimal? ThisReversalAmount { get; set; } // ThisReversalAmount
		/// <summary>退补金额(元)</summary>	
		[Description("退补金额(元)")]
        public decimal? RefundAmount { get; set; } // RefundAmount
		/// <summary>报销地点</summary>	
		[Description("报销地点")]
        public string ReimbursementSite { get; set; } // ReimbursementSite
		/// <summary>户名</summary>	
		[Description("户名")]
        public string AccountName { get; set; } // AccountName
		/// <summary>开户银行</summary>	
		[Description("开户银行")]
        public string OpenBank { get; set; } // OpenBank
		/// <summary>银行卡号</summary>	
		[Description("银行卡号")]
        public string CardNumber { get; set; } // CardNumber
		/// <summary>附件</summary>	
		[Description("附件")]
        public string Enclosure { get; set; } // Enclosure
		/// <summary>费用明细</summary>	
		[Description("费用明细")]
        public string Details { get; set; } // Details
		/// <summary>冲销借款信息</summary>	
		[Description("冲销借款信息")]
        public string LoanInfo { get; set; } // LoanInfo
		/// <summary>项目名称</summary>	
		[Description("项目名称")]
        public string ProjectName { get; set; } // ProjectName
		/// <summary>项目名称名称</summary>	
		[Description("项目名称名称")]
        public string ProjectNameName { get; set; } // ProjectNameName
		/// <summary>顾客名称</summary>	
		[Description("顾客名称")]
        public string CustomerName { get; set; } // CustomerName
		/// <summary>顾客名称名称</summary>	
		[Description("顾客名称名称")]
        public string CustomerNameName { get; set; } // CustomerNameName
		/// <summary>项目号</summary>	
		[Description("项目号")]
        public string ProjectCode { get; set; } // ProjectCode
		/// <summary>合同号</summary>	
		[Description("合同号")]
        public string ContractCode { get; set; } // ContractCode
		/// <summary>申请人签字意见</summary>	
		[Description("申请人签字意见")]
        public string SQRQZYJ { get; set; } // SQRQZYJ
		/// <summary>专业所长签字意见</summary>	
		[Description("专业所长签字意见")]
        public string ZYSCQZYJ { get; set; } // ZYSCQZYJ
		/// <summary>部门正职签字意见</summary>	
		[Description("部门正职签字意见")]
        public string BMZZQZYJ { get; set; } // BMZZQZYJ
		/// <summary>部门主管领导签字意见</summary>	
		[Description("部门主管领导签字意见")]
        public string ZGLDQZYJ { get; set; } // ZGLDQZYJ
		/// <summary>总经理审批签字意见</summary>	
		[Description("总经理审批签字意见")]
        public string ZJLSPQZYJ { get; set; } // ZJLSPQZYJ
		/// <summary>财务部负责人签字意见</summary>	
		[Description("财务部负责人签字意见")]
        public string CWBFZRQZYJ { get; set; } // CWBFZRQZYJ
		/// <summary>财务办理签字意见</summary>	
		[Description("财务办理签字意见")]
        public string CWBLQZYJ { get; set; } // CWBLQZYJ
		/// <summary>表单编号</summary>	
		[Description("表单编号")]
        public string ReimbursementFormCode { get; set; } // ReimbursementFormCode
		/// <summary>是否分院报销单</summary>	
		[Description("是否分院报销单")]
        public string IsBranchReimbursement { get; set; } // IsBranchReimbursement
		/// <summary>流程结束日期</summary>	
		[Description("流程结束日期")]
        public DateTime? FlowEndDate { get; set; } // FlowEndDate
		/// <summary>任务性质</summary>	
		[Description("任务性质")]
        public string TaskNature { get; set; } // TaskNature
		/// <summary>结束日期</summary>	
		[Description("结束日期")]
        public DateTime? ExpenseDateEnd { get; set; } // ExpenseDateEnd
		/// <summary>开始日期</summary>	
		[Description("开始日期")]
        public DateTime? ExpenseDateStart { get; set; } // ExpenseDateStart
		/// <summary>合计天数</summary>	
		[Description("合计天数")]
        public int? SubtotalDays { get; set; } // SubtotalDays
		/// <summary>交通费明细</summary>	
		[Description("交通费明细")]
        public string GNFYJTF { get; set; } // GNFYJTF
		/// <summary>住宿费标准</summary>	
		[Description("住宿费标准")]
        public decimal? GNZSBZY { get; set; } // GNZSBZY
		/// <summary>有票住宿天数</summary>	
		[Description("有票住宿天数")]
        public int? GNYPZSTS { get; set; } // GNYPZSTS
		/// <summary>每日住宿费</summary>	
		[Description("每日住宿费")]
        public decimal? GNMRZFS { get; set; } // GNMRZFS
		/// <summary>确认住宿费</summary>	
		[Description("确认住宿费")]
        public decimal? GNZSFHJY { get; set; } // GNZSFHJY
		/// <summary>实际住宿费</summary>	
		[Description("实际住宿费")]
        public decimal? GNYPZSFYY { get; set; } // GNYPZSFYY
		/// <summary>无票住宿天数</summary>	
		[Description("无票住宿天数")]
        public int? GNWPZSTS { get; set; } // GNWPZSTS
		/// <summary>住宿奖励</summary>	
		[Description("住宿奖励")]
        public decimal? GNYPZSJYJLY { get; set; } // GNYPZSJYJLY
		/// <summary>额外住补标准</summary>	
		[Description("额外住补标准")]
        public decimal? GNWPZSJLBZY { get; set; } // GNWPZSJLBZY
		/// <summary>额外住补天数</summary>	
		[Description("额外住补天数")]
        public int? EWZBTS { get; set; } // EWZBTS
		/// <summary>额外住补贴</summary>	
		[Description("额外住补贴")]
        public decimal? GNWPZSJYJLY { get; set; } // GNWPZSJYJLY
		/// <summary>市内交通费标准</summary>	
		[Description("市内交通费标准")]
        public decimal? SNJTBZY { get; set; } // SNJTBZY
		/// <summary>实际交通费</summary>	
		[Description("实际交通费")]
        public decimal? SJSNJTFJEY { get; set; } // SJSNJTFJEY
		/// <summary>确认交通费</summary>	
		[Description("确认交通费")]
        public decimal? SNJTFJEY { get; set; } // SNJTFJEY
		/// <summary>实际电话费</summary>	
		[Description("实际电话费")]
        public decimal? ActualPhoneFee { get; set; } // ActualPhoneFee
		/// <summary>确认电话费</summary>	
		[Description("确认电话费")]
        public decimal? ConfirmPhoneFee { get; set; } // ConfirmPhoneFee
		/// <summary>岗位补贴标准</summary>	
		[Description("岗位补贴标准")]
        public decimal? PostSubsidyStandard { get; set; } // PostSubsidyStandard
		/// <summary>岗位补贴</summary>	
		[Description("岗位补贴")]
        public decimal? TotalPostSubsidyAmount { get; set; } // TotalPostSubsidyAmount
		/// <summary>伙食补贴标准</summary>	
		[Description("伙食补贴标准")]
        public decimal? HSBTBZY { get; set; } // HSBTBZY
		/// <summary>伙食补贴</summary>	
		[Description("伙食补贴")]
        public decimal? HSBTY { get; set; } // HSBTY
		/// <summary>其他补贴</summary>	
		[Description("其他补贴")]
        public decimal? QTBTY { get; set; } // QTBTY
		/// <summary>其他费用</summary>	
		[Description("其他费用")]
        public string OtherFee { get; set; } // OtherFee
		/// <summary>费用类别</summary>	
		[Description("费用类别")]
        public string ExpenseScourse { get; set; } // ExpenseScourse
		/// <summary>支付原因</summary>	
		[Description("支付原因")]
        public string PayReason { get; set; } // PayReason
		/// <summary>备注</summary>	
		[Description("备注")]
        public string Remark { get; set; } // Remark
		/// <summary>项目主管领导</summary>	
		[Description("项目主管领导")]
        public string ProjectLeader { get; set; } // ProjectLeader
		/// <summary>项目主管领导名称</summary>	
		[Description("项目主管领导名称")]
        public string ProjectLeaderName { get; set; } // ProjectLeaderName
		/// <summary>人力资源部办理签字意见</summary>	
		[Description("人力资源部办理签字意见")]
        public string RLZYBBLQZYJ { get; set; } // RLZYBBLQZYJ
		/// <summary>人力资源部正职审批意见</summary>	
		[Description("人力资源部正职审批意见")]
        public string RLZYBBCQZYJ { get; set; } // RLZYBBCQZYJ
		/// <summary>费用发生地</summary>	
		[Description("费用发生地")]
        public string ExpenseSite { get; set; } // ExpenseSite
		/// <summary>项目类型</summary>	
		[Description("项目类型")]
        public string ProjectType { get; set; } // ProjectType
		/// <summary>人员级次</summary>	
		[Description("人员级次")]
        public string Employeelevel { get; set; } // Employeelevel
		/// <summary>岗位</summary>	
		[Description("岗位")]
        public string PersonPost { get; set; } // PersonPost
		/// <summary>报销金额(元)</summary>	
		[Description("报销金额(元)")]
        public decimal? ReimbursementAmount { get; set; } // ReimbursementAmount
		/// <summary>报销人已报销差旅费日期</summary>	
		[Description("报销人已报销差旅费日期")]
        public string BXRYBXCLFRQ { get; set; } // BXRYBXCLFRQ
		/// <summary>报销有效期起</summary>	
		[Description("报销有效期起")]
        public DateTime? ReimbursementEffectiveDateStart { get; set; } // ReimbursementEffectiveDateStart
		/// <summary>报销有效期止</summary>	
		[Description("报销有效期止")]
        public DateTime? ReimbursementEffectiveDateEnd { get; set; } // ReimbursementEffectiveDateEnd

        // Reverse navigation
		[JsonIgnore]
        public virtual ICollection<T_RM_ReimbursementForm_BXRYBXCLFRQ> T_RM_ReimbursementForm_BXRYBXCLFRQ { get { onT_RM_ReimbursementForm_BXRYBXCLFRQGetting(); return _T_RM_ReimbursementForm_BXRYBXCLFRQ;} }
		private ICollection<T_RM_ReimbursementForm_BXRYBXCLFRQ> _T_RM_ReimbursementForm_BXRYBXCLFRQ;
		partial void onT_RM_ReimbursementForm_BXRYBXCLFRQGetting();

		[JsonIgnore]
        public virtual ICollection<T_RM_ReimbursementForm_Details> T_RM_ReimbursementForm_Details { get { onT_RM_ReimbursementForm_DetailsGetting(); return _T_RM_ReimbursementForm_Details;} }
		private ICollection<T_RM_ReimbursementForm_Details> _T_RM_ReimbursementForm_Details;
		partial void onT_RM_ReimbursementForm_DetailsGetting();

		[JsonIgnore]
        public virtual ICollection<T_RM_ReimbursementForm_GNFYJTF> T_RM_ReimbursementForm_GNFYJTF { get { onT_RM_ReimbursementForm_GNFYJTFGetting(); return _T_RM_ReimbursementForm_GNFYJTF;} }
		private ICollection<T_RM_ReimbursementForm_GNFYJTF> _T_RM_ReimbursementForm_GNFYJTF;
		partial void onT_RM_ReimbursementForm_GNFYJTFGetting();

		[JsonIgnore]
        public virtual ICollection<T_RM_ReimbursementForm_LoanInfo> T_RM_ReimbursementForm_LoanInfo { get { onT_RM_ReimbursementForm_LoanInfoGetting(); return _T_RM_ReimbursementForm_LoanInfo;} }
		private ICollection<T_RM_ReimbursementForm_LoanInfo> _T_RM_ReimbursementForm_LoanInfo;
		partial void onT_RM_ReimbursementForm_LoanInfoGetting();

		[JsonIgnore]
        public virtual ICollection<T_RM_ReimbursementForm_OtherFee> T_RM_ReimbursementForm_OtherFee { get { onT_RM_ReimbursementForm_OtherFeeGetting(); return _T_RM_ReimbursementForm_OtherFee;} }
		private ICollection<T_RM_ReimbursementForm_OtherFee> _T_RM_ReimbursementForm_OtherFee;
		partial void onT_RM_ReimbursementForm_OtherFeeGetting();


        public T_RM_ReimbursementForm()
        {
            _T_RM_ReimbursementForm_BXRYBXCLFRQ = new List<T_RM_ReimbursementForm_BXRYBXCLFRQ>();
            _T_RM_ReimbursementForm_Details = new List<T_RM_ReimbursementForm_Details>();
            _T_RM_ReimbursementForm_GNFYJTF = new List<T_RM_ReimbursementForm_GNFYJTF>();
            _T_RM_ReimbursementForm_LoanInfo = new List<T_RM_ReimbursementForm_LoanInfo>();
            _T_RM_ReimbursementForm_OtherFee = new List<T_RM_ReimbursementForm_OtherFee>();
        }
    }

	/// <summary>报销人已报销差旅费日期</summary>	
	[Description("报销人已报销差旅费日期")]
    public partial class T_RM_ReimbursementForm_BXRYBXCLFRQ : Formula.BaseModel
    {
		/// <summary></summary>	
		[Description("")]
        public string ID { get; set; } // ID (Primary key)
		/// <summary></summary>	
		[Description("")]
        public string T_RM_ReimbursementFormID { get; set; } // T_RM_ReimbursementFormID
		/// <summary></summary>	
		[Description("")]
        public double? SortIndex { get; set; } // SortIndex
		/// <summary></summary>	
		[Description("")]
        public string IsReleased { get; set; } // IsReleased
		/// <summary>报销人ID</summary>	
		[Description("报销人ID")]
        public string Advertiser { get; set; } // Advertiser
		/// <summary>报销人</summary>	
		[Description("报销人")]
        public string AdvertiserName { get; set; } // AdvertiserName
		/// <summary>出发日期</summary>	
		[Description("出发日期")]
        public DateTime? StartingDate { get; set; } // StartingDate
		/// <summary>到达日期</summary>	
		[Description("到达日期")]
        public DateTime? ArrivedDate { get; set; } // ArrivedDate
		/// <summary>报销单编号</summary>	
		[Description("报销单编号")]
        public string ReimbursementFormCode { get; set; } // ReimbursementFormCode

        // Foreign keys
		[JsonIgnore]
        public virtual T_RM_ReimbursementForm T_RM_ReimbursementForm { get; set; } //  T_RM_ReimbursementFormID - FK_T_RM_ReimbursementForm_BXRYBXCLFRQ_T_RM_ReimbursementForm
    }

	/// <summary>费用明细</summary>	
	[Description("费用明细")]
    public partial class T_RM_ReimbursementForm_Details : Formula.BaseModel
    {
		/// <summary></summary>	
		[Description("")]
        public string ID { get; set; } // ID (Primary key)
		/// <summary></summary>	
		[Description("")]
        public string T_RM_ReimbursementFormID { get; set; } // T_RM_ReimbursementFormID
		/// <summary></summary>	
		[Description("")]
        public double? SortIndex { get; set; } // SortIndex
		/// <summary></summary>	
		[Description("")]
        public string IsReleased { get; set; } // IsReleased
		/// <summary>费用类别</summary>	
		[Description("费用类别")]
        public string TwoExpenseScourse { get; set; } // TwoExpenseScourse
		/// <summary>费用日期</summary>	
		[Description("费用日期")]
        public DateTime? ExpenseDate { get; set; } // ExpenseDate
		/// <summary>费用金额</summary>	
		[Description("费用金额")]
        public decimal? CostAmount { get; set; } // CostAmount
		/// <summary>费用发生地点</summary>	
		[Description("费用发生地点")]
        public string ExpenseSite { get; set; } // ExpenseSite
		/// <summary>事由</summary>	
		[Description("事由")]
        public string Reason { get; set; } // Reason

        // Foreign keys
		[JsonIgnore]
        public virtual T_RM_ReimbursementForm T_RM_ReimbursementForm { get; set; } //  T_RM_ReimbursementFormID - FK_T_RM_ReimbursementForm_Details_T_RM_ReimbursementForm
    }

	/// <summary>交通费明细</summary>	
	[Description("交通费明细")]
    public partial class T_RM_ReimbursementForm_GNFYJTF : Formula.BaseModel
    {
		/// <summary></summary>	
		[Description("")]
        public string ID { get; set; } // ID (Primary key)
		/// <summary></summary>	
		[Description("")]
        public string T_RM_ReimbursementFormID { get; set; } // T_RM_ReimbursementFormID
		/// <summary></summary>	
		[Description("")]
        public double? SortIndex { get; set; } // SortIndex
		/// <summary></summary>	
		[Description("")]
        public string IsReleased { get; set; } // IsReleased
		/// <summary>开始时间</summary>	
		[Description("开始时间")]
        public DateTime? StartingDate { get; set; } // StartingDate
		/// <summary>结束时间</summary>	
		[Description("结束时间")]
        public DateTime? ArrivedDate { get; set; } // ArrivedDate
		/// <summary>交通工具</summary>	
		[Description("交通工具")]
        public string Transportation { get; set; } // Transportation
		/// <summary>出发地点</summary>	
		[Description("出发地点")]
        public string StartingPlace { get; set; } // StartingPlace
		/// <summary>到达地点</summary>	
		[Description("到达地点")]
        public string ArrivedPlace { get; set; } // ArrivedPlace
		/// <summary>交通费(元)</summary>	
		[Description("交通费(元)")]
        public decimal? TransportationFee { get; set; } // TransportationFee
		/// <summary>确认交通费(元)</summary>	
		[Description("确认交通费(元)")]
        public decimal? ConfirmTransportationFee { get; set; } // ConfirmTransportationFee
		/// <summary>节约奖励(元)</summary>	
		[Description("节约奖励(元)")]
        public decimal? SavingSubsidy { get; set; } // SavingSubsidy

        // Foreign keys
		[JsonIgnore]
        public virtual T_RM_ReimbursementForm T_RM_ReimbursementForm { get; set; } //  T_RM_ReimbursementFormID - FK_T_RM_ReimbursementForm_GNFYJTF_T_RM_ReimbursementForm
    }

	/// <summary>冲销借款信息</summary>	
	[Description("冲销借款信息")]
    public partial class T_RM_ReimbursementForm_LoanInfo : Formula.BaseModel
    {
		/// <summary></summary>	
		[Description("")]
        public string ID { get; set; } // ID (Primary key)
		/// <summary></summary>	
		[Description("")]
        public string T_RM_ReimbursementFormID { get; set; } // T_RM_ReimbursementFormID
		/// <summary></summary>	
		[Description("")]
        public double? SortIndex { get; set; } // SortIndex
		/// <summary></summary>	
		[Description("")]
        public string IsReleased { get; set; } // IsReleased
		/// <summary>借款申请单ID</summary>	
		[Description("借款申请单ID")]
        public string LoanApplyID { get; set; } // LoanApplyID
		/// <summary>借款流水号</summary>	
		[Description("借款流水号")]
        public string BorrowFormNumber { get; set; } // BorrowFormNumber
		/// <summary>借款日期</summary>	
		[Description("借款日期")]
        public DateTime? BorrowDate { get; set; } // BorrowDate
		/// <summary>借款金额(元)</summary>	
		[Description("借款金额(元)")]
        public decimal? ActualLoanAmount { get; set; } // ActualLoanAmount
		/// <summary>已还款金额(元)</summary>	
		[Description("已还款金额(元)")]
        public decimal? AmountRepaid { get; set; } // AmountRepaid
		/// <summary>剩余未还款金额(元)</summary>	
		[Description("剩余未还款金额(元)")]
        public decimal? NoRepayAmount { get; set; } // NoRepayAmount
		/// <summary>本次冲销金额(元)</summary>	
		[Description("本次冲销金额(元)")]
        public decimal? ThisReversalAmount { get; set; } // ThisReversalAmount
		/// <summary>借款事由</summary>	
		[Description("借款事由")]
        public string LoanReason { get; set; } // LoanReason

        // Foreign keys
		[JsonIgnore]
        public virtual T_RM_ReimbursementForm T_RM_ReimbursementForm { get; set; } //  T_RM_ReimbursementFormID - FK_T_RM_ReimbursementForm_LoanInfo_T_RM_ReimbursementForm
    }

	/// <summary>其他费用</summary>	
	[Description("其他费用")]
    public partial class T_RM_ReimbursementForm_OtherFee : Formula.BaseModel
    {
		/// <summary></summary>	
		[Description("")]
        public string ID { get; set; } // ID (Primary key)
		/// <summary></summary>	
		[Description("")]
        public string T_RM_ReimbursementFormID { get; set; } // T_RM_ReimbursementFormID
		/// <summary></summary>	
		[Description("")]
        public double? SortIndex { get; set; } // SortIndex
		/// <summary></summary>	
		[Description("")]
        public string IsReleased { get; set; } // IsReleased
		/// <summary>其他费用</summary>	
		[Description("其他费用")]
        public string CostCategory { get; set; } // CostCategory
		/// <summary>费用金额</summary>	
		[Description("费用金额")]
        public decimal? CostAmount { get; set; } // CostAmount
		/// <summary>说明</summary>	
		[Description("说明")]
        public string Remark { get; set; } // Remark

        // Foreign keys
		[JsonIgnore]
        public virtual T_RM_ReimbursementForm T_RM_ReimbursementForm { get; set; } //  T_RM_ReimbursementFormID - FK_T_RM_ReimbursementForm_OtherFee_T_RM_ReimbursementForm
    }

	/// <summary>现场标识字典维护</summary>	
	[Description("现场标识字典维护")]
    public partial class T_SceneMark_Dictionaries : Formula.BaseModel
    {
		/// <summary></summary>	
		[Description("")]
        public string ID { get; set; } // ID (Primary key)
		/// <summary></summary>	
		[Description("")]
        public DateTime? CreateDate { get; set; } // CreateDate
		/// <summary></summary>	
		[Description("")]
        public DateTime? ModifyDate { get; set; } // ModifyDate
		/// <summary></summary>	
		[Description("")]
        public string CreateUserID { get; set; } // CreateUserID
		/// <summary></summary>	
		[Description("")]
        public string CreateUser { get; set; } // CreateUser
		/// <summary></summary>	
		[Description("")]
        public string ModifyUserID { get; set; } // ModifyUserID
		/// <summary></summary>	
		[Description("")]
        public string ModifyUser { get; set; } // ModifyUser
		/// <summary></summary>	
		[Description("")]
        public string OrgID { get; set; } // OrgID
		/// <summary></summary>	
		[Description("")]
        public string CompanyID { get; set; } // CompanyID
		/// <summary></summary>	
		[Description("")]
        public string FlowPhase { get; set; } // FlowPhase
		/// <summary></summary>	
		[Description("")]
        public string FlowInfo { get; set; } // FlowInfo
		/// <summary></summary>	
		[Description("")]
        public string StepName { get; set; } // StepName
		/// <summary>名称</summary>	
		[Description("名称")]
        public string Name { get; set; } // Name
		/// <summary>规格</summary>	
		[Description("规格")]
        public string Specifications { get; set; } // Specifications
		/// <summary>级别</summary>	
		[Description("级别")]
        public string Level { get; set; } // Level
		/// <summary>单价</summary>	
		[Description("单价")]
        public string UnitPrice { get; set; } // UnitPrice
		/// <summary>使用位置</summary>	
		[Description("使用位置")]
        public string Usefulness { get; set; } // Usefulness
		/// <summary>说明</summary>	
		[Description("说明")]
        public string Description { get; set; } // Description
		/// <summary>附件</summary>	
		[Description("附件")]
        public string Attachments { get; set; } // Attachments
		/// <summary>示例图</summary>	
		[Description("示例图")]
        public byte[] PicDemo { get; set; } // PicDemo
		/// <summary>库存数量</summary>	
		[Description("库存数量")]
        public string StockQuantity { get; set; } // StockQuantity
    }

	/// <summary>标识入库管理</summary>	
	[Description("标识入库管理")]
    public partial class T_SceneMark_Entry : Formula.BaseModel
    {
		/// <summary></summary>	
		[Description("")]
        public string ID { get; set; } // ID (Primary key)
		/// <summary></summary>	
		[Description("")]
        public DateTime? CreateDate { get; set; } // CreateDate
		/// <summary></summary>	
		[Description("")]
        public DateTime? ModifyDate { get; set; } // ModifyDate
		/// <summary></summary>	
		[Description("")]
        public string CreateUserID { get; set; } // CreateUserID
		/// <summary></summary>	
		[Description("")]
        public string CreateUser { get; set; } // CreateUser
		/// <summary></summary>	
		[Description("")]
        public string ModifyUserID { get; set; } // ModifyUserID
		/// <summary></summary>	
		[Description("")]
        public string ModifyUser { get; set; } // ModifyUser
		/// <summary></summary>	
		[Description("")]
        public string OrgID { get; set; } // OrgID
		/// <summary></summary>	
		[Description("")]
        public string CompanyID { get; set; } // CompanyID
		/// <summary></summary>	
		[Description("")]
        public string FlowPhase { get; set; } // FlowPhase
		/// <summary></summary>	
		[Description("")]
        public string FlowInfo { get; set; } // FlowInfo
		/// <summary></summary>	
		[Description("")]
        public string StepName { get; set; } // StepName
		/// <summary>登记人</summary>	
		[Description("登记人")]
        public string Registrant { get; set; } // Registrant
		/// <summary>登记人名称</summary>	
		[Description("登记人名称")]
        public string RegistrantName { get; set; } // RegistrantName
		/// <summary>登记人部门</summary>	
		[Description("登记人部门")]
        public string RegistrantDept { get; set; } // RegistrantDept
		/// <summary>登记人部门名称</summary>	
		[Description("登记人部门名称")]
        public string RegistrantDeptName { get; set; } // RegistrantDeptName
		/// <summary>登记日期</summary>	
		[Description("登记日期")]
        public DateTime? RegisterDate { get; set; } // RegisterDate
		/// <summary>采购日期</summary>	
		[Description("采购日期")]
        public DateTime? PurchaseDate { get; set; } // PurchaseDate
		/// <summary>本次入库总数</summary>	
		[Description("本次入库总数")]
        public string EntryQuantity { get; set; } // EntryQuantity
		/// <summary>备注</summary>	
		[Description("备注")]
        public string Remark { get; set; } // Remark
		/// <summary>附件</summary>	
		[Description("附件")]
        public string Attachments { get; set; } // Attachments
		/// <summary>标识入库明细</summary>	
		[Description("标识入库明细")]
        public string EntryDetail { get; set; } // EntryDetail
		/// <summary>审核意见</summary>	
		[Description("审核意见")]
        public string Audit { get; set; } // Audit
		/// <summary>本次入库总数</summary>	
		[Description("本次入库总数")]
        public string EntryTotalQuantity { get; set; } // EntryTotalQuantity

        // Reverse navigation
		[JsonIgnore]
        public virtual ICollection<T_SceneMark_Entry_EntryDetail> T_SceneMark_Entry_EntryDetail { get { onT_SceneMark_Entry_EntryDetailGetting(); return _T_SceneMark_Entry_EntryDetail;} }
		private ICollection<T_SceneMark_Entry_EntryDetail> _T_SceneMark_Entry_EntryDetail;
		partial void onT_SceneMark_Entry_EntryDetailGetting();


        public T_SceneMark_Entry()
        {
            _T_SceneMark_Entry_EntryDetail = new List<T_SceneMark_Entry_EntryDetail>();
        }
    }

	/// <summary>标识入库明细</summary>	
	[Description("标识入库明细")]
    public partial class T_SceneMark_Entry_EntryDetail : Formula.BaseModel
    {
		/// <summary></summary>	
		[Description("")]
        public string ID { get; set; } // ID (Primary key)
		/// <summary></summary>	
		[Description("")]
        public string T_SceneMark_EntryID { get; set; } // T_SceneMark_EntryID
		/// <summary></summary>	
		[Description("")]
        public double? SortIndex { get; set; } // SortIndex
		/// <summary></summary>	
		[Description("")]
        public string IsReleased { get; set; } // IsReleased
		/// <summary>名称</summary>	
		[Description("名称")]
        public string Name { get; set; } // Name
		/// <summary>规格</summary>	
		[Description("规格")]
        public string Specifications { get; set; } // Specifications
		/// <summary>级别</summary>	
		[Description("级别")]
        public string Level { get; set; } // Level
		/// <summary>单价</summary>	
		[Description("单价")]
        public string UnitPrice { get; set; } // UnitPrice
		/// <summary>库存数量</summary>	
		[Description("库存数量")]
        public string StockQuantity { get; set; } // StockQuantity
		/// <summary>本次入库数量</summary>	
		[Description("本次入库数量")]
        public string EntryQuantity { get; set; } // EntryQuantity
		/// <summary>字典ID</summary>	
		[Description("字典ID")]
        public string DictID { get; set; } // DictID

        // Foreign keys
		[JsonIgnore]
        public virtual T_SceneMark_Entry T_SceneMark_Entry { get; set; } //  T_SceneMark_EntryID - FK_T_SceneMark_Entry_EntryDetail_T_SceneMark_Entry
    }

	/// <summary>标识申领管理</summary>	
	[Description("标识申领管理")]
    public partial class T_SceneMark_Receive : Formula.BaseModel
    {
		/// <summary></summary>	
		[Description("")]
        public string ID { get; set; } // ID (Primary key)
		/// <summary></summary>	
		[Description("")]
        public DateTime? CreateDate { get; set; } // CreateDate
		/// <summary></summary>	
		[Description("")]
        public DateTime? ModifyDate { get; set; } // ModifyDate
		/// <summary></summary>	
		[Description("")]
        public string CreateUserID { get; set; } // CreateUserID
		/// <summary></summary>	
		[Description("")]
        public string CreateUser { get; set; } // CreateUser
		/// <summary></summary>	
		[Description("")]
        public string ModifyUserID { get; set; } // ModifyUserID
		/// <summary></summary>	
		[Description("")]
        public string ModifyUser { get; set; } // ModifyUser
		/// <summary></summary>	
		[Description("")]
        public string OrgID { get; set; } // OrgID
		/// <summary></summary>	
		[Description("")]
        public string CompanyID { get; set; } // CompanyID
		/// <summary></summary>	
		[Description("")]
        public string FlowPhase { get; set; } // FlowPhase
		/// <summary></summary>	
		[Description("")]
        public string FlowInfo { get; set; } // FlowInfo
		/// <summary></summary>	
		[Description("")]
        public string StepName { get; set; } // StepName
		/// <summary>申领人</summary>	
		[Description("申领人")]
        public string Claimant { get; set; } // Claimant
		/// <summary>申领人名称</summary>	
		[Description("申领人名称")]
        public string ClaimantName { get; set; } // ClaimantName
		/// <summary>申领人部门</summary>	
		[Description("申领人部门")]
        public string ClaimantDept { get; set; } // ClaimantDept
		/// <summary>申领人部门名称</summary>	
		[Description("申领人部门名称")]
        public string ClaimantDeptName { get; set; } // ClaimantDeptName
		/// <summary>申领日期</summary>	
		[Description("申领日期")]
        public DateTime? ClaimantDate { get; set; } // ClaimantDate
		/// <summary>使用地点</summary>	
		[Description("使用地点")]
        public string Location { get; set; } // Location
		/// <summary>项目名称</summary>	
		[Description("项目名称")]
        public string ProjectName { get; set; } // ProjectName
		/// <summary>项目名称名称</summary>	
		[Description("项目名称名称")]
        public string ProjectNameName { get; set; } // ProjectNameName
		/// <summary>顾客名称</summary>	
		[Description("顾客名称")]
        public string Customer { get; set; } // Customer
		/// <summary>顾客名称名称</summary>	
		[Description("顾客名称名称")]
        public string CustomerName { get; set; } // CustomerName
		/// <summary>合计数量</summary>	
		[Description("合计数量")]
        public string TotalCount { get; set; } // TotalCount
		/// <summary>合计金额</summary>	
		[Description("合计金额")]
        public string TotalAmount { get; set; } // TotalAmount
		/// <summary>备注</summary>	
		[Description("备注")]
        public string Remark { get; set; } // Remark
		/// <summary>附件</summary>	
		[Description("附件")]
        public string Attachments { get; set; } // Attachments
		/// <summary>现场标识申领</summary>	
		[Description("现场标识申领")]
        public string ReceiveDetail { get; set; } // ReceiveDetail
		/// <summary>部门领导意见</summary>	
		[Description("部门领导意见")]
        public string DeptLeader { get; set; } // DeptLeader
		/// <summary>承包部意见</summary>	
		[Description("承包部意见")]
        public string ContractingDept { get; set; } // ContractingDept

        // Reverse navigation
		[JsonIgnore]
        public virtual ICollection<T_SceneMark_Receive_ReceiveDetail> T_SceneMark_Receive_ReceiveDetail { get { onT_SceneMark_Receive_ReceiveDetailGetting(); return _T_SceneMark_Receive_ReceiveDetail;} }
		private ICollection<T_SceneMark_Receive_ReceiveDetail> _T_SceneMark_Receive_ReceiveDetail;
		partial void onT_SceneMark_Receive_ReceiveDetailGetting();


        public T_SceneMark_Receive()
        {
            _T_SceneMark_Receive_ReceiveDetail = new List<T_SceneMark_Receive_ReceiveDetail>();
        }
    }

	/// <summary>现场标识申领</summary>	
	[Description("现场标识申领")]
    public partial class T_SceneMark_Receive_ReceiveDetail : Formula.BaseModel
    {
		/// <summary></summary>	
		[Description("")]
        public string ID { get; set; } // ID (Primary key)
		/// <summary></summary>	
		[Description("")]
        public string T_SceneMark_ReceiveID { get; set; } // T_SceneMark_ReceiveID
		/// <summary></summary>	
		[Description("")]
        public double? SortIndex { get; set; } // SortIndex
		/// <summary></summary>	
		[Description("")]
        public string IsReleased { get; set; } // IsReleased
		/// <summary>字典ID</summary>	
		[Description("字典ID")]
        public string DictID { get; set; } // DictID
		/// <summary>名称</summary>	
		[Description("名称")]
        public string Name { get; set; } // Name
		/// <summary>规格</summary>	
		[Description("规格")]
        public string Specifications { get; set; } // Specifications
		/// <summary>级别</summary>	
		[Description("级别")]
        public string Level { get; set; } // Level
		/// <summary>单价</summary>	
		[Description("单价")]
        public string UnitPrice { get; set; } // UnitPrice
		/// <summary>库存数量</summary>	
		[Description("库存数量")]
        public string StockQuantity { get; set; } // StockQuantity
		/// <summary>申领数量</summary>	
		[Description("申领数量")]
        public string ReceiveQuantity { get; set; } // ReceiveQuantity
		/// <summary>合计金额</summary>	
		[Description("合计金额")]
        public string TotalAmount { get; set; } // TotalAmount

        // Foreign keys
		[JsonIgnore]
        public virtual T_SceneMark_Receive T_SceneMark_Receive { get; set; } //  T_SceneMark_ReceiveID - FK_T_SceneMark_Receive_ReceiveDetail_T_SceneMark_Receive
    }

	/// <summary>sds</summary>	
	[Description("sds")]
    public partial class T_sds : Formula.BaseModel
    {
		/// <summary></summary>	
		[Description("")]
        public string ID { get; set; } // ID (Primary key)
		/// <summary></summary>	
		[Description("")]
        public DateTime? CreateDate { get; set; } // CreateDate
		/// <summary></summary>	
		[Description("")]
        public DateTime? ModifyDate { get; set; } // ModifyDate
		/// <summary></summary>	
		[Description("")]
        public string CreateUserID { get; set; } // CreateUserID
		/// <summary></summary>	
		[Description("")]
        public string CreateUser { get; set; } // CreateUser
		/// <summary></summary>	
		[Description("")]
        public string ModifyUserID { get; set; } // ModifyUserID
		/// <summary></summary>	
		[Description("")]
        public string ModifyUser { get; set; } // ModifyUser
		/// <summary></summary>	
		[Description("")]
        public string OrgID { get; set; } // OrgID
		/// <summary></summary>	
		[Description("")]
        public string CompanyID { get; set; } // CompanyID
		/// <summary></summary>	
		[Description("")]
        public string FlowPhase { get; set; } // FlowPhase
		/// <summary></summary>	
		[Description("")]
        public string FlowInfo { get; set; } // FlowInfo
		/// <summary></summary>	
		[Description("")]
        public string StepName { get; set; } // StepName
		/// <summary>申请人</summary>	
		[Description("申请人")]
        public string SQR { get; set; } // SQR
		/// <summary>申请人名称</summary>	
		[Description("申请人名称")]
        public string SQRName { get; set; } // SQRName
		/// <summary>申请部门</summary>	
		[Description("申请部门")]
        public string SQBM { get; set; } // SQBM
		/// <summary>申请部门名称</summary>	
		[Description("申请部门名称")]
        public string SQBMName { get; set; } // SQBMName
		/// <summary>资料</summary>	
		[Description("资料")]
        public string ZL { get; set; } // ZL
		/// <summary>相关文件</summary>	
		[Description("相关文件")]
        public string XGWJ { get; set; } // XGWJ
		/// <summary>用印事项</summary>	
		[Description("用印事项")]
        public string YYSX { get; set; } // YYSX

        // Reverse navigation
		[JsonIgnore]
        public virtual ICollection<T_sds_YYSX> T_sds_YYSX { get { onT_sds_YYSXGetting(); return _T_sds_YYSX;} }
		private ICollection<T_sds_YYSX> _T_sds_YYSX;
		partial void onT_sds_YYSXGetting();


        public T_sds()
        {
            _T_sds_YYSX = new List<T_sds_YYSX>();
        }
    }

	/// <summary>用印事项</summary>	
	[Description("用印事项")]
    public partial class T_sds_YYSX : Formula.BaseModel
    {
		/// <summary></summary>	
		[Description("")]
        public string ID { get; set; } // ID (Primary key)
		/// <summary></summary>	
		[Description("")]
        public string T_sdsID { get; set; } // T_sdsID
		/// <summary></summary>	
		[Description("")]
        public double? SortIndex { get; set; } // SortIndex
		/// <summary></summary>	
		[Description("")]
        public string IsReleased { get; set; } // IsReleased
		/// <summary>用印人</summary>	
		[Description("用印人")]
        public string YYR { get; set; } // YYR
		/// <summary>用印人名称</summary>	
		[Description("用印人名称")]
        public string YYRName { get; set; } // YYRName
		/// <summary>用印部门</summary>	
		[Description("用印部门")]
        public string YYBM { get; set; } // YYBM
		/// <summary>用印部门名称</summary>	
		[Description("用印部门名称")]
        public string YYBMName { get; set; } // YYBMName
		/// <summary>附件</summary>	
		[Description("附件")]
        public string FJ { get; set; } // FJ
		/// <summary>附件名称</summary>	
		[Description("附件名称")]
        public string FJName { get; set; } // FJName

        // Foreign keys
		[JsonIgnore]
        public virtual T_sds T_sds { get; set; } //  T_sdsID - FK_T_sds_YYSX_T_sds
    }

	/// <summary>用印申请单</summary>	
	[Description("用印申请单")]
    public partial class T_Seal_Apply : Formula.BaseModel
    {
		/// <summary>ID</summary>	
		[Description("ID")]
        public string ID { get; set; } // ID (Primary key)
		/// <summary></summary>	
		[Description("")]
        public DateTime? CreateDate { get; set; } // CreateDate
		/// <summary></summary>	
		[Description("")]
        public DateTime? ModifyDate { get; set; } // ModifyDate
		/// <summary></summary>	
		[Description("")]
        public string CreateUserID { get; set; } // CreateUserID
		/// <summary></summary>	
		[Description("")]
        public string CreateUser { get; set; } // CreateUser
		/// <summary></summary>	
		[Description("")]
        public string ModifyUserID { get; set; } // ModifyUserID
		/// <summary></summary>	
		[Description("")]
        public string ModifyUser { get; set; } // ModifyUser
		/// <summary></summary>	
		[Description("")]
        public string OrgID { get; set; } // OrgID
		/// <summary></summary>	
		[Description("")]
        public string PrjID { get; set; } // PrjID
		/// <summary></summary>	
		[Description("")]
        public string FlowPhase { get; set; } // FlowPhase
		/// <summary></summary>	
		[Description("")]
        public string StepName { get; set; } // StepName
		/// <summary>部门</summary>	
		[Description("部门")]
        public string DeptID { get; set; } // DeptID
		/// <summary>部门名称</summary>	
		[Description("部门名称")]
        public string DeptIDName { get; set; } // DeptIDName
		/// <summary>申请人</summary>	
		[Description("申请人")]
        public string ApplyUserID { get; set; } // ApplyUserID
		/// <summary>申请人名称</summary>	
		[Description("申请人名称")]
        public string ApplyUserIDName { get; set; } // ApplyUserIDName
		/// <summary>申请事由</summary>	
		[Description("申请事由")]
        public string ApplyReason { get; set; } // ApplyReason
		/// <summary>用印种类</summary>	
		[Description("用印种类")]
        public string SealType { get; set; } // SealType
		/// <summary>印章全称</summary>	
		[Description("印章全称")]
        public string SealInfoID { get; set; } // SealInfoID
		/// <summary>印章全称</summary>	
		[Description("印章全称")]
        public string SealInfoIDName { get; set; } // SealInfoIDName
		/// <summary>用印份数</summary>	
		[Description("用印份数")]
        public int? SealNumber { get; set; } // SealNumber
		/// <summary>用印日期</summary>	
		[Description("用印日期")]
        public DateTime? ApplyDate { get; set; } // ApplyDate
		/// <summary>部门领导意见</summary>	
		[Description("部门领导意见")]
        public string DeptLeaderComment { get; set; } // DeptLeaderComment
		/// <summary>分管领导意见</summary>	
		[Description("分管领导意见")]
        public string ApplyDeptDepartLeaderComment { get; set; } // ApplyDeptDepartLeaderComment
		/// <summary>附件测试</summary>	
		[Description("附件测试")]
        public string FJCS { get; set; } // FJCS
		/// <summary>印章明细</summary>	
		[Description("印章明细")]
        public string Detail { get; set; } // Detail
		/// <summary>单附件</summary>	
		[Description("单附件")]
        public string DFJ { get; set; } // DFJ
		/// <summary>表单编号</summary>	
		[Description("表单编号")]
        public string SerialNumber { get; set; } // SerialNumber
		/// <summary>空白凭证</summary>	
		[Description("空白凭证")]
        public string KBPZ { get; set; } // KBPZ
		/// <summary>字表</summary>	
		[Description("字表")]
        public string XXNR { get; set; } // XXNR
		/// <summary>智能部门负责人</summary>	
		[Description("智能部门负责人")]
        public string ZNBMFZR { get; set; } // ZNBMFZR
		/// <summary>相关人员意见</summary>	
		[Description("相关人员意见")]
        public string XGRYYJ { get; set; } // XGRYYJ
		/// <summary>提出时间</summary>	
		[Description("提出时间")]
        public DateTime? TCSJ { get; set; } // TCSJ
		/// <summary>资料</summary>	
		[Description("资料")]
        public string ZL { get; set; } // ZL
		/// <summary>部门负责人</summary>	
		[Description("部门负责人")]
        public string BMFZR { get; set; } // BMFZR
		/// <summary>部门负责人名称</summary>	
		[Description("部门负责人名称")]
        public string BMFZRName { get; set; } // BMFZRName
		/// <summary>用印份数</summary>	
		[Description("用印份数")]
        public decimal? YYFS { get; set; } // YYFS
		/// <summary>单选枚举</summary>	
		[Description("单选枚举")]
        public string DXMJ { get; set; } // DXMJ
		/// <summary>测试</summary>	
		[Description("测试")]
        public string test { get; set; } // test
		/// <summary>测试附件</summary>	
		[Description("测试附件")]
        public string Attachment2 { get; set; } // Attachment2

        // Reverse navigation
		[JsonIgnore]
        public virtual ICollection<T_Seal_Apply_Detail> T_Seal_Apply_Detail { get { onT_Seal_Apply_DetailGetting(); return _T_Seal_Apply_Detail;} }
		private ICollection<T_Seal_Apply_Detail> _T_Seal_Apply_Detail;
		partial void onT_Seal_Apply_DetailGetting();


        public T_Seal_Apply()
        {
            _T_Seal_Apply_Detail = new List<T_Seal_Apply_Detail>();
        }
    }

	/// <summary>印章明细</summary>	
	[Description("印章明细")]
    public partial class T_Seal_Apply_Detail : Formula.BaseModel
    {
		/// <summary></summary>	
		[Description("")]
        public string ID { get; set; } // ID (Primary key)
		/// <summary></summary>	
		[Description("")]
        public string T_Seal_ApplyID { get; set; } // T_Seal_ApplyID
		/// <summary></summary>	
		[Description("")]
        public double? SortIndex { get; set; } // SortIndex
		/// <summary></summary>	
		[Description("")]
        public string IsReleased { get; set; } // IsReleased
		/// <summary>印章编号</summary>	
		[Description("印章编号")]
        public string SealCode { get; set; } // SealCode
		/// <summary>印章名称</summary>	
		[Description("印章名称")]
        public string SealName { get; set; } // SealName
		/// <summary>印章类别</summary>	
		[Description("印章类别")]
        public string SealType { get; set; } // SealType
		/// <summary>印章保管部门</summary>	
		[Description("印章保管部门")]
        public string DeptIDName { get; set; } // DeptIDName
		/// <summary>印章保管人</summary>	
		[Description("印章保管人")]
        public string KeeperIDName { get; set; } // KeeperIDName
		/// <summary>印章ID</summary>	
		[Description("印章ID")]
        public string SealID { get; set; } // SealID
		/// <summary>用印份数</summary>	
		[Description("用印份数")]
        public int? SealNumber { get; set; } // SealNumber
		/// <summary>印章保管人</summary>	
		[Description("印章保管人")]
        public string KeeperID { get; set; } // KeeperID
		/// <summary>用印日期</summary>	
		[Description("用印日期")]
        public DateTime? SealDate { get; set; } // SealDate
		/// <summary>附件</summary>	
		[Description("附件")]
        public string SealFJ { get; set; } // SealFJ
		/// <summary>附件名称</summary>	
		[Description("附件名称")]
        public string SealFJName { get; set; } // SealFJName

        // Foreign keys
		[JsonIgnore]
        public virtual T_Seal_Apply T_Seal_Apply { get; set; } //  T_Seal_ApplyID - FK_T_Seal_Apply_Detail_T_Seal_Apply
    }

	/// <summary>印章借用申请单</summary>	
	[Description("印章借用申请单")]
    public partial class T_Seal_Borrow : Formula.BaseModel
    {
		/// <summary>ID</summary>	
		[Description("ID")]
        public string ID { get; set; } // ID (Primary key)
		/// <summary></summary>	
		[Description("")]
        public DateTime? CreateDate { get; set; } // CreateDate
		/// <summary></summary>	
		[Description("")]
        public DateTime? ModifyDate { get; set; } // ModifyDate
		/// <summary></summary>	
		[Description("")]
        public string CreateUserID { get; set; } // CreateUserID
		/// <summary></summary>	
		[Description("")]
        public string CreateUser { get; set; } // CreateUser
		/// <summary></summary>	
		[Description("")]
        public string ModifyUserID { get; set; } // ModifyUserID
		/// <summary></summary>	
		[Description("")]
        public string ModifyUser { get; set; } // ModifyUser
		/// <summary></summary>	
		[Description("")]
        public string OrgID { get; set; } // OrgID
		/// <summary></summary>	
		[Description("")]
        public string PrjID { get; set; } // PrjID
		/// <summary></summary>	
		[Description("")]
        public string FlowPhase { get; set; } // FlowPhase
		/// <summary></summary>	
		[Description("")]
        public string StepName { get; set; } // StepName
		/// <summary>部门</summary>	
		[Description("部门")]
        public string DeptID { get; set; } // DeptID
		/// <summary>部门名称</summary>	
		[Description("部门名称")]
        public string DeptIDName { get; set; } // DeptIDName
		/// <summary>申请人</summary>	
		[Description("申请人")]
        public string ApplyUserID { get; set; } // ApplyUserID
		/// <summary>申请人名称</summary>	
		[Description("申请人名称")]
        public string ApplyUserIDName { get; set; } // ApplyUserIDName
		/// <summary>借用范畴</summary>	
		[Description("借用范畴")]
        public string BorrowRange { get; set; } // BorrowRange
		/// <summary>申请事由</summary>	
		[Description("申请事由")]
        public string ApplyReason { get; set; } // ApplyReason
		/// <summary>借用时间(起)</summary>	
		[Description("借用时间(起)")]
        public DateTime? BorrowStartDate { get; set; } // BorrowStartDate
		/// <summary>借用时间(止)</summary>	
		[Description("借用时间(止)")]
        public DateTime? BorrowEndDate { get; set; } // BorrowEndDate
		/// <summary>文件名称</summary>	
		[Description("文件名称")]
        public string FileName { get; set; } // FileName
		/// <summary>用印份数</summary>	
		[Description("用印份数")]
        public int? UseSealPaperNumber { get; set; } // UseSealPaperNumber
		/// <summary>申请日期</summary>	
		[Description("申请日期")]
        public DateTime? ApplyDate { get; set; } // ApplyDate
		/// <summary>部门负责人意见</summary>	
		[Description("部门负责人意见")]
        public string DeptLeaderComment { get; set; } // DeptLeaderComment
		/// <summary>总经理工作部意见</summary>	
		[Description("总经理工作部意见")]
        public string GeneralManagerWorkDeptComment { get; set; } // GeneralManagerWorkDeptComment
		/// <summary>分管领导意见</summary>	
		[Description("分管领导意见")]
        public string DepartLeaderComment { get; set; } // DepartLeaderComment
		/// <summary>总经理意见</summary>	
		[Description("总经理意见")]
        public string GeneralManagerComment { get; set; } // GeneralManagerComment
		/// <summary>借用印章</summary>	
		[Description("借用印章")]
        public string Seal { get; set; } // Seal
		/// <summary>借用印章名称</summary>	
		[Description("借用印章名称")]
        public string SealName { get; set; } // SealName
		/// <summary>印章类别</summary>	
		[Description("印章类别")]
        public string SealType { get; set; } // SealType
		/// <summary>借用状态</summary>	
		[Description("借用状态")]
        public string BorrowState { get; set; } // BorrowState
		/// <summary>归还时间</summary>	
		[Description("归还时间")]
        public DateTime? ReturnDate { get; set; } // ReturnDate
		/// <summary>印章明细</summary>	
		[Description("印章明细")]
        public string Detail { get; set; } // Detail
		/// <summary>印章全称</summary>	
		[Description("印章全称")]
        public string SealFullName { get; set; } // SealFullName
		/// <summary>印章全称名称</summary>	
		[Description("印章全称名称")]
        public string SealFullNameName { get; set; } // SealFullNameName
		/// <summary>生管部承包部意见</summary>	
		[Description("生管部承包部意见")]
        public string ProductContractDeptSign { get; set; } // ProductContractDeptSign
		/// <summary>主管领导意见</summary>	
		[Description("主管领导意见")]
        public string ManagerLeader { get; set; } // ManagerLeader
		/// <summary>综合部领导意见</summary>	
		[Description("综合部领导意见")]
        public string ComprehensiveDept { get; set; } // ComprehensiveDept

        // Reverse navigation
		[JsonIgnore]
        public virtual ICollection<T_Seal_Borrow_Detail> T_Seal_Borrow_Detail { get { onT_Seal_Borrow_DetailGetting(); return _T_Seal_Borrow_Detail;} }
		private ICollection<T_Seal_Borrow_Detail> _T_Seal_Borrow_Detail;
		partial void onT_Seal_Borrow_DetailGetting();


        public T_Seal_Borrow()
        {
            _T_Seal_Borrow_Detail = new List<T_Seal_Borrow_Detail>();
        }
    }

	/// <summary>印章明细</summary>	
	[Description("印章明细")]
    public partial class T_Seal_Borrow_Detail : Formula.BaseModel
    {
		/// <summary></summary>	
		[Description("")]
        public string ID { get; set; } // ID (Primary key)
		/// <summary></summary>	
		[Description("")]
        public string T_Seal_BorrowID { get; set; } // T_Seal_BorrowID
		/// <summary></summary>	
		[Description("")]
        public double? SortIndex { get; set; } // SortIndex
		/// <summary></summary>	
		[Description("")]
        public string IsReleased { get; set; } // IsReleased
		/// <summary>印章编号</summary>	
		[Description("印章编号")]
        public string SealCode { get; set; } // SealCode
		/// <summary>印章名称</summary>	
		[Description("印章名称")]
        public string SealName { get; set; } // SealName
		/// <summary>印章类别</summary>	
		[Description("印章类别")]
        public string SealType { get; set; } // SealType
		/// <summary>用印份数</summary>	
		[Description("用印份数")]
        public int? SealNumber { get; set; } // SealNumber
		/// <summary>印章保管部门</summary>	
		[Description("印章保管部门")]
        public string DeptIDName { get; set; } // DeptIDName
		/// <summary>印章保管人</summary>	
		[Description("印章保管人")]
        public string KeeperIDName { get; set; } // KeeperIDName
		/// <summary>印章ID</summary>	
		[Description("印章ID")]
        public string SealID { get; set; } // SealID

        // Foreign keys
		[JsonIgnore]
        public virtual T_Seal_Borrow T_Seal_Borrow { get; set; } //  T_Seal_BorrowID - FK_T_Seal_Borrow_Detail_T_Seal_Borrow
    }

	/// <summary>印章刻制（更换）申请单</summary>	
	[Description("印章刻制（更换）申请单")]
    public partial class T_Seal_Change : Formula.BaseModel
    {
		/// <summary>ID</summary>	
		[Description("ID")]
        public string ID { get; set; } // ID (Primary key)
		/// <summary></summary>	
		[Description("")]
        public DateTime? CreateDate { get; set; } // CreateDate
		/// <summary></summary>	
		[Description("")]
        public DateTime? ModifyDate { get; set; } // ModifyDate
		/// <summary></summary>	
		[Description("")]
        public string CreateUserID { get; set; } // CreateUserID
		/// <summary></summary>	
		[Description("")]
        public string CreateUser { get; set; } // CreateUser
		/// <summary></summary>	
		[Description("")]
        public string ModifyUserID { get; set; } // ModifyUserID
		/// <summary></summary>	
		[Description("")]
        public string ModifyUser { get; set; } // ModifyUser
		/// <summary></summary>	
		[Description("")]
        public string OrgID { get; set; } // OrgID
		/// <summary></summary>	
		[Description("")]
        public string PrjID { get; set; } // PrjID
		/// <summary></summary>	
		[Description("")]
        public string FlowPhase { get; set; } // FlowPhase
		/// <summary></summary>	
		[Description("")]
        public string StepName { get; set; } // StepName
		/// <summary>部门</summary>	
		[Description("部门")]
        public string DeptID { get; set; } // DeptID
		/// <summary>部门</summary>	
		[Description("部门")]
        public string DeptIDName { get; set; } // DeptIDName
		/// <summary>申请人</summary>	
		[Description("申请人")]
        public string ApplyUserID { get; set; } // ApplyUserID
		/// <summary>申请人</summary>	
		[Description("申请人")]
        public string ApplyUserIDName { get; set; } // ApplyUserIDName
		/// <summary>申请事由</summary>	
		[Description("申请事由")]
        public string ApplyReason { get; set; } // ApplyReason
		/// <summary>印章全称</summary>	
		[Description("印章全称")]
        public string SealID { get; set; } // SealID
		/// <summary>印章全称</summary>	
		[Description("印章全称")]
        public string SealIDName { get; set; } // SealIDName
		/// <summary>印章样式</summary>	
		[Description("印章样式")]
        public string SealStyle { get; set; } // SealStyle
		/// <summary>刻印数量(枚)</summary>	
		[Description("刻印数量(枚)")]
        public int? SealNumber { get; set; } // SealNumber
		/// <summary>申请日期</summary>	
		[Description("申请日期")]
        public DateTime? ApplyDate { get; set; } // ApplyDate
		/// <summary>单价</summary>	
		[Description("单价")]
        public decimal? SealCost { get; set; } // SealCost
		/// <summary>总费用</summary>	
		[Description("总费用")]
        public decimal? TotalCost { get; set; } // TotalCost
		/// <summary>完成时间</summary>	
		[Description("完成时间")]
        public DateTime? CompleteDate { get; set; } // CompleteDate
		/// <summary>完成人</summary>	
		[Description("完成人")]
        public string CompletePersonID { get; set; } // CompletePersonID
		/// <summary>完成人名称</summary>	
		[Description("完成人名称")]
        public string CompletePersonIDName { get; set; } // CompletePersonIDName
		/// <summary>部门负责人意见</summary>	
		[Description("部门负责人意见")]
        public string DeptLeaderComment { get; set; } // DeptLeaderComment
		/// <summary>批准人审批意见</summary>	
		[Description("批准人审批意见")]
        public string ApprovalPersonComment { get; set; } // ApprovalPersonComment
		/// <summary>印章种类</summary>	
		[Description("印章种类")]
        public string SealKind { get; set; } // SealKind
		/// <summary>顾客名称</summary>	
		[Description("顾客名称")]
        public string Customer { get; set; } // Customer
		/// <summary>项目名称</summary>	
		[Description("项目名称")]
        public string Project { get; set; } // Project
		/// <summary>项目名称名称</summary>	
		[Description("项目名称名称")]
        public string ProjectName { get; set; } // ProjectName
		/// <summary>项目号</summary>	
		[Description("项目号")]
        public string ProjectNo { get; set; } // ProjectNo
		/// <summary>合同号</summary>	
		[Description("合同号")]
        public string ContractNo { get; set; } // ContractNo
		/// <summary>使用地点</summary>	
		[Description("使用地点")]
        public string UsePos { get; set; } // UsePos
		/// <summary>印章用途</summary>	
		[Description("印章用途")]
        public string SealUse { get; set; } // SealUse
		/// <summary>使用范围</summary>	
		[Description("使用范围")]
        public string UseRange { get; set; } // UseRange
		/// <summary>生管部承包部意见</summary>	
		[Description("生管部承包部意见")]
        public string ProContractorSign { get; set; } // ProContractorSign
		/// <summary>公司领导意见</summary>	
		[Description("公司领导意见")]
        public string CompanyLeaderSign { get; set; } // CompanyLeaderSign
		/// <summary>印章名称</summary>	
		[Description("印章名称")]
        public string Seal { get; set; } // Seal
		/// <summary>顾客名称名称</summary>	
		[Description("顾客名称名称")]
        public string CustomerName { get; set; } // CustomerName
		/// <summary>印章废止状态</summary>	
		[Description("印章废止状态")]
        public string SealStatus { get; set; } // SealStatus
    }

	/// <summary>印章废止申请单</summary>	
	[Description("印章废止申请单")]
    public partial class T_Seal_Repeal : Formula.BaseModel
    {
		/// <summary>ID</summary>	
		[Description("ID")]
        public string ID { get; set; } // ID (Primary key)
		/// <summary></summary>	
		[Description("")]
        public DateTime? CreateDate { get; set; } // CreateDate
		/// <summary></summary>	
		[Description("")]
        public DateTime? ModifyDate { get; set; } // ModifyDate
		/// <summary></summary>	
		[Description("")]
        public string CreateUserID { get; set; } // CreateUserID
		/// <summary></summary>	
		[Description("")]
        public string CreateUser { get; set; } // CreateUser
		/// <summary></summary>	
		[Description("")]
        public string ModifyUserID { get; set; } // ModifyUserID
		/// <summary></summary>	
		[Description("")]
        public string ModifyUser { get; set; } // ModifyUser
		/// <summary></summary>	
		[Description("")]
        public string OrgID { get; set; } // OrgID
		/// <summary></summary>	
		[Description("")]
        public string PrjID { get; set; } // PrjID
		/// <summary></summary>	
		[Description("")]
        public string FlowPhase { get; set; } // FlowPhase
		/// <summary></summary>	
		[Description("")]
        public string StepName { get; set; } // StepName
		/// <summary>部门</summary>	
		[Description("部门")]
        public string DeptID { get; set; } // DeptID
		/// <summary>部门</summary>	
		[Description("部门")]
        public string DeptIDName { get; set; } // DeptIDName
		/// <summary>申请人</summary>	
		[Description("申请人")]
        public string ApplyUserID { get; set; } // ApplyUserID
		/// <summary>申请人</summary>	
		[Description("申请人")]
        public string ApplyUserIDName { get; set; } // ApplyUserIDName
		/// <summary>废止印章全称</summary>	
		[Description("废止印章全称")]
        public string SealInfoID { get; set; } // SealInfoID
		/// <summary>废止印章全称</summary>	
		[Description("废止印章全称")]
        public string SealInfoIDName { get; set; } // SealInfoIDName
		/// <summary>印章编号</summary>	
		[Description("印章编号")]
        public string SealCode { get; set; } // SealCode
		/// <summary>废止原因</summary>	
		[Description("废止原因")]
        public string RepealReason { get; set; } // RepealReason
		/// <summary>废止日期</summary>	
		[Description("废止日期")]
        public DateTime? RepealDate { get; set; } // RepealDate
		/// <summary>部门负责人意见</summary>	
		[Description("部门负责人意见")]
        public string DeptLeaderComment { get; set; } // DeptLeaderComment
		/// <summary>总经理工作部意见</summary>	
		[Description("总经理工作部意见")]
        public string GeneralManagerWorkDeptComment { get; set; } // GeneralManagerWorkDeptComment
		/// <summary>申请部门分管领导意见</summary>	
		[Description("申请部门分管领导意见")]
        public string ApplyDeptDepartLeaderComment { get; set; } // ApplyDeptDepartLeaderComment
		/// <summary>总经理意见</summary>	
		[Description("总经理意见")]
        public string GeneralManagerComment { get; set; } // GeneralManagerComment
		/// <summary>董事长意见</summary>	
		[Description("董事长意见")]
        public string ChairmanComment { get; set; } // ChairmanComment
    }

	/// <summary>印章基本信息</summary>	
	[Description("印章基本信息")]
    public partial class T_Seal_SealInfo : Formula.BaseModel
    {
		/// <summary>ID</summary>	
		[Description("ID")]
        public string ID { get; set; } // ID (Primary key)
		/// <summary></summary>	
		[Description("")]
        public DateTime? CreateDate { get; set; } // CreateDate
		/// <summary></summary>	
		[Description("")]
        public DateTime? ModifyDate { get; set; } // ModifyDate
		/// <summary></summary>	
		[Description("")]
        public string CreateUserID { get; set; } // CreateUserID
		/// <summary></summary>	
		[Description("")]
        public string CreateUser { get; set; } // CreateUser
		/// <summary></summary>	
		[Description("")]
        public string ModifyUserID { get; set; } // ModifyUserID
		/// <summary></summary>	
		[Description("")]
        public string ModifyUser { get; set; } // ModifyUser
		/// <summary></summary>	
		[Description("")]
        public string OrgID { get; set; } // OrgID
		/// <summary></summary>	
		[Description("")]
        public string PrjID { get; set; } // PrjID
		/// <summary></summary>	
		[Description("")]
        public string FlowPhase { get; set; } // FlowPhase
		/// <summary></summary>	
		[Description("")]
        public string StepName { get; set; } // StepName
		/// <summary>印章编号</summary>	
		[Description("印章编号")]
        public string SealCode { get; set; } // SealCode
		/// <summary>印章名称</summary>	
		[Description("印章名称")]
        public string SealName { get; set; } // SealName
		/// <summary>印章类别</summary>	
		[Description("印章类别")]
        public string SealType { get; set; } // SealType
		/// <summary>开始使用时间</summary>	
		[Description("开始使用时间")]
        public DateTime? StartTime { get; set; } // StartTime
		/// <summary>印章保管部门</summary>	
		[Description("印章保管部门")]
        public string DeptID { get; set; } // DeptID
		/// <summary>印章保管部门名称</summary>	
		[Description("印章保管部门名称")]
        public string DeptIDName { get; set; } // DeptIDName
		/// <summary>印章保管人</summary>	
		[Description("印章保管人")]
        public string KeeperID { get; set; } // KeeperID
		/// <summary>印章保管人名称</summary>	
		[Description("印章保管人名称")]
        public string KeeperIDName { get; set; } // KeeperIDName
		/// <summary>印章用途</summary>	
		[Description("印章用途")]
        public string Application { get; set; } // Application
		/// <summary>备注</summary>	
		[Description("备注")]
        public string Remark { get; set; } // Remark
		/// <summary>图片</summary>	
		[Description("图片")]
        public string Attachment { get; set; } // Attachment
		/// <summary>印章状态</summary>	
		[Description("印章状态")]
        public string State { get; set; } // State
		/// <summary>借用人</summary>	
		[Description("借用人")]
        public string Borrower { get; set; } // Borrower
		/// <summary>借用人名称</summary>	
		[Description("借用人名称")]
        public string BorrowerName { get; set; } // BorrowerName
		/// <summary>借用时间</summary>	
		[Description("借用时间")]
        public DateTime? BorrowDate { get; set; } // BorrowDate
		/// <summary>测试附件</summary>	
		[Description("测试附件")]
        public string Attachment2 { get; set; } // Attachment2
    }

	/// <summary>印章移交登记表</summary>	
	[Description("印章移交登记表")]
    public partial class T_Seal_Transfer : Formula.BaseModel
    {
		/// <summary>ID</summary>	
		[Description("ID")]
        public string ID { get; set; } // ID (Primary key)
		/// <summary></summary>	
		[Description("")]
        public DateTime? CreateDate { get; set; } // CreateDate
		/// <summary></summary>	
		[Description("")]
        public DateTime? ModifyDate { get; set; } // ModifyDate
		/// <summary></summary>	
		[Description("")]
        public string CreateUserID { get; set; } // CreateUserID
		/// <summary></summary>	
		[Description("")]
        public string CreateUser { get; set; } // CreateUser
		/// <summary></summary>	
		[Description("")]
        public string ModifyUserID { get; set; } // ModifyUserID
		/// <summary></summary>	
		[Description("")]
        public string ModifyUser { get; set; } // ModifyUser
		/// <summary></summary>	
		[Description("")]
        public string OrgID { get; set; } // OrgID
		/// <summary></summary>	
		[Description("")]
        public string PrjID { get; set; } // PrjID
		/// <summary></summary>	
		[Description("")]
        public string FlowPhase { get; set; } // FlowPhase
		/// <summary></summary>	
		[Description("")]
        public string StepName { get; set; } // StepName
		/// <summary>印章名称</summary>	
		[Description("印章名称")]
        public string SealInfoID { get; set; } // SealInfoID
		/// <summary>印章名称</summary>	
		[Description("印章名称")]
        public string SealInfoIDName { get; set; } // SealInfoIDName
		/// <summary>编号</summary>	
		[Description("编号")]
        public string SealCode { get; set; } // SealCode
		/// <summary>移交原因</summary>	
		[Description("移交原因")]
        public string TransferReason { get; set; } // TransferReason
		/// <summary>印模</summary>	
		[Description("印模")]
        public string SealModel { get; set; } // SealModel
		/// <summary>接收人</summary>	
		[Description("接收人")]
        public string ReceivePersonID { get; set; } // ReceivePersonID
		/// <summary>接收人</summary>	
		[Description("接收人")]
        public string ReceivePersonIDName { get; set; } // ReceivePersonIDName
		/// <summary>移交人</summary>	
		[Description("移交人")]
        public string TransferPersonID { get; set; } // TransferPersonID
		/// <summary>移交人</summary>	
		[Description("移交人")]
        public string TransferPersonIDName { get; set; } // TransferPersonIDName
    }

	/// <summary>软件安装验收</summary>	
	[Description("软件安装验收")]
    public partial class T_SoftwareArticle_InstallationAcceptance : Formula.BaseModel
    {
		/// <summary></summary>	
		[Description("")]
        public string ID { get; set; } // ID (Primary key)
		/// <summary></summary>	
		[Description("")]
        public DateTime? CreateDate { get; set; } // CreateDate
		/// <summary></summary>	
		[Description("")]
        public DateTime? ModifyDate { get; set; } // ModifyDate
		/// <summary></summary>	
		[Description("")]
        public string CreateUserID { get; set; } // CreateUserID
		/// <summary></summary>	
		[Description("")]
        public string CreateUser { get; set; } // CreateUser
		/// <summary></summary>	
		[Description("")]
        public string ModifyUserID { get; set; } // ModifyUserID
		/// <summary></summary>	
		[Description("")]
        public string ModifyUser { get; set; } // ModifyUser
		/// <summary></summary>	
		[Description("")]
        public string OrgID { get; set; } // OrgID
		/// <summary></summary>	
		[Description("")]
        public string CompanyID { get; set; } // CompanyID
		/// <summary></summary>	
		[Description("")]
        public string FlowPhase { get; set; } // FlowPhase
		/// <summary></summary>	
		[Description("")]
        public string FlowInfo { get; set; } // FlowInfo
		/// <summary></summary>	
		[Description("")]
        public string StepName { get; set; } // StepName
		/// <summary>申请人</summary>	
		[Description("申请人")]
        public string Registrant { get; set; } // Registrant
		/// <summary>申请人名称</summary>	
		[Description("申请人名称")]
        public string RegistrantName { get; set; } // RegistrantName
		/// <summary>申请时间</summary>	
		[Description("申请时间")]
        public DateTime? RegistrantDate { get; set; } // RegistrantDate
		/// <summary>验收软件名称</summary>	
		[Description("验收软件名称")]
        public string AcceptanceSoft { get; set; } // AcceptanceSoft
		/// <summary>验收软件名称名称</summary>	
		[Description("验收软件名称名称")]
        public string AcceptanceSoftName { get; set; } // AcceptanceSoftName
		/// <summary>软件开发商</summary>	
		[Description("软件开发商")]
        public string SoftwareDevelopers { get; set; } // SoftwareDevelopers
		/// <summary>软件供应商</summary>	
		[Description("软件供应商")]
        public string SoftwareSupplier { get; set; } // SoftwareSupplier
		/// <summary>安装完成时间</summary>	
		[Description("安装完成时间")]
        public DateTime? InstallFinishDate { get; set; } // InstallFinishDate
		/// <summary>软件安装人员姓名</summary>	
		[Description("软件安装人员姓名")]
        public string InstallPerson { get; set; } // InstallPerson
		/// <summary>安装人员联系方式</summary>	
		[Description("安装人员联系方式")]
        public string ContactWay { get; set; } // ContactWay
		/// <summary>维保服务</summary>	
		[Description("维保服务")]
        public string MaintenanceServer { get; set; } // MaintenanceServer
		/// <summary>验收人</summary>	
		[Description("验收人")]
        public string Acceptor { get; set; } // Acceptor
		/// <summary>验收人名称</summary>	
		[Description("验收人名称")]
        public string AcceptorName { get; set; } // AcceptorName
		/// <summary>验收时间</summary>	
		[Description("验收时间")]
        public DateTime? AcceptanceDate { get; set; } // AcceptanceDate
		/// <summary>备注</summary>	
		[Description("备注")]
        public string Remark { get; set; } // Remark
		/// <summary>软件验收清单</summary>	
		[Description("软件验收清单")]
        public string Attachments { get; set; } // Attachments
		/// <summary>部门领导意见</summary>	
		[Description("部门领导意见")]
        public string DeptLeader { get; set; } // DeptLeader
		/// <summary>软件主管意见</summary>	
		[Description("软件主管意见")]
        public string SoftwareSupervisor { get; set; } // SoftwareSupervisor
		/// <summary>信息中心领导意见</summary>	
		[Description("信息中心领导意见")]
        public string InformationCenter { get; set; } // InformationCenter
    }

	/// <summary>软件采购审批</summary>	
	[Description("软件采购审批")]
    public partial class T_SoftwareArticle_ProcurementApproval : Formula.BaseModel
    {
		/// <summary></summary>	
		[Description("")]
        public string ID { get; set; } // ID (Primary key)
		/// <summary></summary>	
		[Description("")]
        public DateTime? CreateDate { get; set; } // CreateDate
		/// <summary></summary>	
		[Description("")]
        public DateTime? ModifyDate { get; set; } // ModifyDate
		/// <summary></summary>	
		[Description("")]
        public string CreateUserID { get; set; } // CreateUserID
		/// <summary></summary>	
		[Description("")]
        public string CreateUser { get; set; } // CreateUser
		/// <summary></summary>	
		[Description("")]
        public string ModifyUserID { get; set; } // ModifyUserID
		/// <summary></summary>	
		[Description("")]
        public string ModifyUser { get; set; } // ModifyUser
		/// <summary></summary>	
		[Description("")]
        public string OrgID { get; set; } // OrgID
		/// <summary></summary>	
		[Description("")]
        public string CompanyID { get; set; } // CompanyID
		/// <summary></summary>	
		[Description("")]
        public string FlowPhase { get; set; } // FlowPhase
		/// <summary></summary>	
		[Description("")]
        public string FlowInfo { get; set; } // FlowInfo
		/// <summary></summary>	
		[Description("")]
        public string StepName { get; set; } // StepName
		/// <summary>申请人</summary>	
		[Description("申请人")]
        public string Registrant { get; set; } // Registrant
		/// <summary>申请人名称</summary>	
		[Description("申请人名称")]
        public string RegistrantName { get; set; } // RegistrantName
		/// <summary>申请人部门</summary>	
		[Description("申请人部门")]
        public string RegistrantDept { get; set; } // RegistrantDept
		/// <summary>申请人部门名称</summary>	
		[Description("申请人部门名称")]
        public string RegistrantDeptName { get; set; } // RegistrantDeptName
		/// <summary>申请日期</summary>	
		[Description("申请日期")]
        public DateTime? RegistrantDate { get; set; } // RegistrantDate
		/// <summary>合同号</summary>	
		[Description("合同号")]
        public string ContractNumber { get; set; } // ContractNumber
		/// <summary>合同名称</summary>	
		[Description("合同名称")]
        public string ContractName { get; set; } // ContractName
		/// <summary>合同类型</summary>	
		[Description("合同类型")]
        public string ContractCategory { get; set; } // ContractCategory
		/// <summary>印章类型</summary>	
		[Description("印章类型")]
        public string SealType { get; set; } // SealType
		/// <summary>合同开始日期</summary>	
		[Description("合同开始日期")]
        public DateTime? StartDate { get; set; } // StartDate
		/// <summary>合同结束日期</summary>	
		[Description("合同结束日期")]
        public string EndDate { get; set; } // EndDate
		/// <summary>是否已立项</summary>	
		[Description("是否已立项")]
        public string IsCheck { get; set; } // IsCheck
		/// <summary>项目编号</summary>	
		[Description("项目编号")]
        public string ProjectNumber { get; set; } // ProjectNumber
		/// <summary>项目名称</summary>	
		[Description("项目名称")]
        public string Project { get; set; } // Project
		/// <summary>项目名称名称</summary>	
		[Description("项目名称名称")]
        public string ProjectName { get; set; } // ProjectName
		/// <summary>软件名称</summary>	
		[Description("软件名称")]
        public string SoftwareName { get; set; } // SoftwareName
		/// <summary>软件开发商</summary>	
		[Description("软件开发商")]
        public string SoftwareDevelopers { get; set; } // SoftwareDevelopers
		/// <summary>供应商</summary>	
		[Description("供应商")]
        public string Supplier { get; set; } // Supplier
		/// <summary>供应商名称</summary>	
		[Description("供应商名称")]
        public string SupplierName { get; set; } // SupplierName
		/// <summary>采购理由</summary>	
		[Description("采购理由")]
        public string PurchaseReason { get; set; } // PurchaseReason
		/// <summary>软件版本号</summary>	
		[Description("软件版本号")]
        public string Version { get; set; } // Version
		/// <summary>采购点数</summary>	
		[Description("采购点数")]
        public string PurchasePoint { get; set; } // PurchasePoint
		/// <summary>软件采购费用</summary>	
		[Description("软件采购费用")]
        public string PurchasePrice { get; set; } // PurchasePrice
		/// <summary>运维费用</summary>	
		[Description("运维费用")]
        public string OperationPrice { get; set; } // OperationPrice
		/// <summary>实施费用</summary>	
		[Description("实施费用")]
        public string ImplementationPrice { get; set; } // ImplementationPrice
		/// <summary>合计费用</summary>	
		[Description("合计费用")]
        public string TotalPrice { get; set; } // TotalPrice
		/// <summary>备注</summary>	
		[Description("备注")]
        public string Remark { get; set; } // Remark
		/// <summary>附件</summary>	
		[Description("附件")]
        public string Attachments { get; set; } // Attachments
		/// <summary>软件使用部门</summary>	
		[Description("软件使用部门")]
        public string UseDetail { get; set; } // UseDetail
		/// <summary>供方比选</summary>	
		[Description("供方比选")]
        public string SupplierDetail { get; set; } // SupplierDetail
		/// <summary>付款计划</summary>	
		[Description("付款计划")]
        public string PaymentDetail { get; set; } // PaymentDetail
		/// <summary>部门领导意见</summary>	
		[Description("部门领导意见")]
        public string DeptLeader { get; set; } // DeptLeader
		/// <summary>信息中心意见</summary>	
		[Description("信息中心意见")]
        public string InformationCenter { get; set; } // InformationCenter
		/// <summary>公司领导意见</summary>	
		[Description("公司领导意见")]
        public string CompanyLeader { get; set; } // CompanyLeader
		/// <summary>采购数量</summary>	
		[Description("采购数量")]
        public string PurchaseQuantity { get; set; } // PurchaseQuantity

        // Reverse navigation
		[JsonIgnore]
        public virtual ICollection<T_SoftwareArticle_ProcurementApproval_PaymentDetail> T_SoftwareArticle_ProcurementApproval_PaymentDetail { get { onT_SoftwareArticle_ProcurementApproval_PaymentDetailGetting(); return _T_SoftwareArticle_ProcurementApproval_PaymentDetail;} }
		private ICollection<T_SoftwareArticle_ProcurementApproval_PaymentDetail> _T_SoftwareArticle_ProcurementApproval_PaymentDetail;
		partial void onT_SoftwareArticle_ProcurementApproval_PaymentDetailGetting();

		[JsonIgnore]
        public virtual ICollection<T_SoftwareArticle_ProcurementApproval_SupplierDetail> T_SoftwareArticle_ProcurementApproval_SupplierDetail { get { onT_SoftwareArticle_ProcurementApproval_SupplierDetailGetting(); return _T_SoftwareArticle_ProcurementApproval_SupplierDetail;} }
		private ICollection<T_SoftwareArticle_ProcurementApproval_SupplierDetail> _T_SoftwareArticle_ProcurementApproval_SupplierDetail;
		partial void onT_SoftwareArticle_ProcurementApproval_SupplierDetailGetting();

		[JsonIgnore]
        public virtual ICollection<T_SoftwareArticle_ProcurementApproval_UseDetail> T_SoftwareArticle_ProcurementApproval_UseDetail { get { onT_SoftwareArticle_ProcurementApproval_UseDetailGetting(); return _T_SoftwareArticle_ProcurementApproval_UseDetail;} }
		private ICollection<T_SoftwareArticle_ProcurementApproval_UseDetail> _T_SoftwareArticle_ProcurementApproval_UseDetail;
		partial void onT_SoftwareArticle_ProcurementApproval_UseDetailGetting();


        public T_SoftwareArticle_ProcurementApproval()
        {
            _T_SoftwareArticle_ProcurementApproval_PaymentDetail = new List<T_SoftwareArticle_ProcurementApproval_PaymentDetail>();
            _T_SoftwareArticle_ProcurementApproval_SupplierDetail = new List<T_SoftwareArticle_ProcurementApproval_SupplierDetail>();
            _T_SoftwareArticle_ProcurementApproval_UseDetail = new List<T_SoftwareArticle_ProcurementApproval_UseDetail>();
        }
    }

	/// <summary>付款计划</summary>	
	[Description("付款计划")]
    public partial class T_SoftwareArticle_ProcurementApproval_PaymentDetail : Formula.BaseModel
    {
		/// <summary></summary>	
		[Description("")]
        public string ID { get; set; } // ID (Primary key)
		/// <summary></summary>	
		[Description("")]
        public string T_SoftwareArticle_ProcurementApprovalID { get; set; } // T_SoftwareArticle_ProcurementApprovalID
		/// <summary></summary>	
		[Description("")]
        public double? SortIndex { get; set; } // SortIndex
		/// <summary></summary>	
		[Description("")]
        public string IsReleased { get; set; } // IsReleased
		/// <summary>计划日期</summary>	
		[Description("计划日期")]
        public DateTime? PaymentDate { get; set; } // PaymentDate
		/// <summary>付款金额</summary>	
		[Description("付款金额")]
        public string PaymentPrice { get; set; } // PaymentPrice
		/// <summary>付款条件</summary>	
		[Description("付款条件")]
        public string PaymentCondition { get; set; } // PaymentCondition
		/// <summary>付款比例</summary>	
		[Description("付款比例")]
        public string PaymentProportion { get; set; } // PaymentProportion

        // Foreign keys
		[JsonIgnore]
        public virtual T_SoftwareArticle_ProcurementApproval T_SoftwareArticle_ProcurementApproval { get; set; } //  T_SoftwareArticle_ProcurementApprovalID - FK_T_SoftwareArticle_ProcurementApproval_PaymentDetail_T_SoftwareArticle_ProcurementApproval
    }

	/// <summary>供方比选</summary>	
	[Description("供方比选")]
    public partial class T_SoftwareArticle_ProcurementApproval_SupplierDetail : Formula.BaseModel
    {
		/// <summary></summary>	
		[Description("")]
        public string ID { get; set; } // ID (Primary key)
		/// <summary></summary>	
		[Description("")]
        public string T_SoftwareArticle_ProcurementApprovalID { get; set; } // T_SoftwareArticle_ProcurementApprovalID
		/// <summary></summary>	
		[Description("")]
        public double? SortIndex { get; set; } // SortIndex
		/// <summary></summary>	
		[Description("")]
        public string IsReleased { get; set; } // IsReleased
		/// <summary>推荐</summary>	
		[Description("推荐")]
        public string Recommend { get; set; } // Recommend
		/// <summary>供应商</summary>	
		[Description("供应商")]
        public string Supplier { get; set; } // Supplier
		/// <summary>供应商名称</summary>	
		[Description("供应商名称")]
        public string SupplierName { get; set; } // SupplierName
		/// <summary>功能模块</summary>	
		[Description("功能模块")]
        public string Module { get; set; } // Module
		/// <summary>报价</summary>	
		[Description("报价")]
        public string UnitPrice { get; set; } // UnitPrice
		/// <summary>优惠价</summary>	
		[Description("优惠价")]
        public string DiscountPrice { get; set; } // DiscountPrice
		/// <summary>采购价</summary>	
		[Description("采购价")]
        public string PurchasePrice { get; set; } // PurchasePrice
		/// <summary>技术能力</summary>	
		[Description("技术能力")]
        public string Ability { get; set; } // Ability
		/// <summary>服务水平</summary>	
		[Description("服务水平")]
        public string ServiceLevel { get; set; } // ServiceLevel
		/// <summary>测试过程</summary>	
		[Description("测试过程")]
        public string TestProcess { get; set; } // TestProcess

        // Foreign keys
		[JsonIgnore]
        public virtual T_SoftwareArticle_ProcurementApproval T_SoftwareArticle_ProcurementApproval { get; set; } //  T_SoftwareArticle_ProcurementApprovalID - FK_T_SoftwareArticle_ProcurementApproval_SupplierDetail_T_SoftwareArticle_ProcurementApproval
    }

	/// <summary>软件使用部门</summary>	
	[Description("软件使用部门")]
    public partial class T_SoftwareArticle_ProcurementApproval_UseDetail : Formula.BaseModel
    {
		/// <summary></summary>	
		[Description("")]
        public string ID { get; set; } // ID (Primary key)
		/// <summary></summary>	
		[Description("")]
        public string T_SoftwareArticle_ProcurementApprovalID { get; set; } // T_SoftwareArticle_ProcurementApprovalID
		/// <summary></summary>	
		[Description("")]
        public double? SortIndex { get; set; } // SortIndex
		/// <summary></summary>	
		[Description("")]
        public string IsReleased { get; set; } // IsReleased
		/// <summary>部门名称</summary>	
		[Description("部门名称")]
        public string Dept { get; set; } // Dept
		/// <summary>部门名称名称</summary>	
		[Description("部门名称名称")]
        public string DeptName { get; set; } // DeptName
		/// <summary>使用数量</summary>	
		[Description("使用数量")]
        public string Quantity { get; set; } // Quantity
		/// <summary>分摊金额</summary>	
		[Description("分摊金额")]
        public string Price { get; set; } // Price
		/// <summary>备注</summary>	
		[Description("备注")]
        public string Remark { get; set; } // Remark

        // Foreign keys
		[JsonIgnore]
        public virtual T_SoftwareArticle_ProcurementApproval T_SoftwareArticle_ProcurementApproval { get; set; } //  T_SoftwareArticle_ProcurementApprovalID - FK_T_SoftwareArticle_ProcurementApproval_UseDetail_T_SoftwareArticle_ProcurementApproval
    }

	/// <summary>软件采购需求</summary>	
	[Description("软件采购需求")]
    public partial class T_SoftwareArticle_ProcurementDemand : Formula.BaseModel
    {
		/// <summary></summary>	
		[Description("")]
        public string ID { get; set; } // ID (Primary key)
		/// <summary></summary>	
		[Description("")]
        public DateTime? CreateDate { get; set; } // CreateDate
		/// <summary></summary>	
		[Description("")]
        public DateTime? ModifyDate { get; set; } // ModifyDate
		/// <summary></summary>	
		[Description("")]
        public string CreateUserID { get; set; } // CreateUserID
		/// <summary></summary>	
		[Description("")]
        public string CreateUser { get; set; } // CreateUser
		/// <summary></summary>	
		[Description("")]
        public string ModifyUserID { get; set; } // ModifyUserID
		/// <summary></summary>	
		[Description("")]
        public string ModifyUser { get; set; } // ModifyUser
		/// <summary></summary>	
		[Description("")]
        public string OrgID { get; set; } // OrgID
		/// <summary></summary>	
		[Description("")]
        public string CompanyID { get; set; } // CompanyID
		/// <summary></summary>	
		[Description("")]
        public string FlowPhase { get; set; } // FlowPhase
		/// <summary></summary>	
		[Description("")]
        public string FlowInfo { get; set; } // FlowInfo
		/// <summary></summary>	
		[Description("")]
        public string StepName { get; set; } // StepName
		/// <summary>填报人</summary>	
		[Description("填报人")]
        public string Registrant { get; set; } // Registrant
		/// <summary>填报人名称</summary>	
		[Description("填报人名称")]
        public string RegistrantName { get; set; } // RegistrantName
		/// <summary>填报人部门</summary>	
		[Description("填报人部门")]
        public string RegistrantDept { get; set; } // RegistrantDept
		/// <summary>填报人部门名称</summary>	
		[Description("填报人部门名称")]
        public string RegistrantDeptName { get; set; } // RegistrantDeptName
		/// <summary>填报年度</summary>	
		[Description("填报年度")]
        public DateTime? RegistrantYear { get; set; } // RegistrantYear
		/// <summary>填写日期</summary>	
		[Description("填写日期")]
        public DateTime? RegistrantDate { get; set; } // RegistrantDate
		/// <summary>采购原因</summary>	
		[Description("采购原因")]
        public string PurchasingReason { get; set; } // PurchasingReason
		/// <summary>附件</summary>	
		[Description("附件")]
        public string Attachments { get; set; } // Attachments
		/// <summary>采购计划列表</summary>	
		[Description("采购计划列表")]
        public string PurchaseDetail { get; set; } // PurchaseDetail
		/// <summary>综合意见</summary>	
		[Description("综合意见")]
        public string ComprehensiveOpinion { get; set; } // ComprehensiveOpinion
		/// <summary>部门领导意见</summary>	
		[Description("部门领导意见")]
        public string DeptLeader { get; set; } // DeptLeader
		/// <summary>信息中心意见</summary>	
		[Description("信息中心意见")]
        public string InformationCenter { get; set; } // InformationCenter
		/// <summary>公司领导意见</summary>	
		[Description("公司领导意见")]
        public string CompanyLeader { get; set; } // CompanyLeader

        // Reverse navigation
		[JsonIgnore]
        public virtual ICollection<T_SoftwareArticle_ProcurementDemand_PurchaseDetail> T_SoftwareArticle_ProcurementDemand_PurchaseDetail { get { onT_SoftwareArticle_ProcurementDemand_PurchaseDetailGetting(); return _T_SoftwareArticle_ProcurementDemand_PurchaseDetail;} }
		private ICollection<T_SoftwareArticle_ProcurementDemand_PurchaseDetail> _T_SoftwareArticle_ProcurementDemand_PurchaseDetail;
		partial void onT_SoftwareArticle_ProcurementDemand_PurchaseDetailGetting();


        public T_SoftwareArticle_ProcurementDemand()
        {
            _T_SoftwareArticle_ProcurementDemand_PurchaseDetail = new List<T_SoftwareArticle_ProcurementDemand_PurchaseDetail>();
        }
    }

	/// <summary>采购计划列表</summary>	
	[Description("采购计划列表")]
    public partial class T_SoftwareArticle_ProcurementDemand_PurchaseDetail : Formula.BaseModel
    {
		/// <summary></summary>	
		[Description("")]
        public string ID { get; set; } // ID (Primary key)
		/// <summary></summary>	
		[Description("")]
        public string T_SoftwareArticle_ProcurementDemandID { get; set; } // T_SoftwareArticle_ProcurementDemandID
		/// <summary></summary>	
		[Description("")]
        public double? SortIndex { get; set; } // SortIndex
		/// <summary></summary>	
		[Description("")]
        public string IsReleased { get; set; } // IsReleased
		/// <summary>软件名称</summary>	
		[Description("软件名称")]
        public string SoftwareName { get; set; } // SoftwareName
		/// <summary>供应商</summary>	
		[Description("供应商")]
        public string Supplier { get; set; } // Supplier
		/// <summary>供应商名称</summary>	
		[Description("供应商名称")]
        public string SupplierName { get; set; } // SupplierName
		/// <summary>版本号</summary>	
		[Description("版本号")]
        public string Version { get; set; } // Version
		/// <summary>采购数量</summary>	
		[Description("采购数量")]
        public string Quantity { get; set; } // Quantity
		/// <summary>授权方式</summary>	
		[Description("授权方式")]
        public string AuthorizationMode { get; set; } // AuthorizationMode
		/// <summary>预计采购价格</summary>	
		[Description("预计采购价格")]
        public string PurchasePrice { get; set; } // PurchasePrice
		/// <summary>预计采购时间</summary>	
		[Description("预计采购时间")]
        public string PurchaseDate { get; set; } // PurchaseDate
		/// <summary>备注</summary>	
		[Description("备注")]
        public string Remark { get; set; } // Remark

        // Foreign keys
		[JsonIgnore]
        public virtual T_SoftwareArticle_ProcurementDemand T_SoftwareArticle_ProcurementDemand { get; set; } //  T_SoftwareArticle_ProcurementDemandID - FK_T_SoftwareArticle_ProcurementDemand_PurchaseDetail_T_SoftwareArticle_ProcurementDemand
    }

	/// <summary>授权码领用申请</summary>	
	[Description("授权码领用申请")]
    public partial class T_SoftwareArticle_ReceiveApply : Formula.BaseModel
    {
		/// <summary></summary>	
		[Description("")]
        public string ID { get; set; } // ID (Primary key)
		/// <summary></summary>	
		[Description("")]
        public DateTime? CreateDate { get; set; } // CreateDate
		/// <summary></summary>	
		[Description("")]
        public DateTime? ModifyDate { get; set; } // ModifyDate
		/// <summary></summary>	
		[Description("")]
        public string CreateUserID { get; set; } // CreateUserID
		/// <summary></summary>	
		[Description("")]
        public string CreateUser { get; set; } // CreateUser
		/// <summary></summary>	
		[Description("")]
        public string ModifyUserID { get; set; } // ModifyUserID
		/// <summary></summary>	
		[Description("")]
        public string ModifyUser { get; set; } // ModifyUser
		/// <summary></summary>	
		[Description("")]
        public string OrgID { get; set; } // OrgID
		/// <summary></summary>	
		[Description("")]
        public string CompanyID { get; set; } // CompanyID
		/// <summary></summary>	
		[Description("")]
        public string FlowPhase { get; set; } // FlowPhase
		/// <summary></summary>	
		[Description("")]
        public string FlowInfo { get; set; } // FlowInfo
		/// <summary></summary>	
		[Description("")]
        public string StepName { get; set; } // StepName
		/// <summary>申请人</summary>	
		[Description("申请人")]
        public string Registrant { get; set; } // Registrant
		/// <summary>申请人名称</summary>	
		[Description("申请人名称")]
        public string RegistrantName { get; set; } // RegistrantName
		/// <summary>申请人部门</summary>	
		[Description("申请人部门")]
        public string RegistrantDept { get; set; } // RegistrantDept
		/// <summary>申请人部门名称</summary>	
		[Description("申请人部门名称")]
        public string RegistrantDeptName { get; set; } // RegistrantDeptName
		/// <summary>申请日期</summary>	
		[Description("申请日期")]
        public DateTime? RegistrantDate { get; set; } // RegistrantDate
		/// <summary>领用地点</summary>	
		[Description("领用地点")]
        public string Location { get; set; } // Location
		/// <summary>领用理由</summary>	
		[Description("领用理由")]
        public string Reason { get; set; } // Reason
		/// <summary>附件</summary>	
		[Description("附件")]
        public string Attachments { get; set; } // Attachments
		/// <summary>领用列表</summary>	
		[Description("领用列表")]
        public string ReceiveDetail { get; set; } // ReceiveDetail
		/// <summary>部门领导意见</summary>	
		[Description("部门领导意见")]
        public string DeptLeader { get; set; } // DeptLeader
		/// <summary>信息中心意见</summary>	
		[Description("信息中心意见")]
        public string InformationCenter { get; set; } // InformationCenter
		/// <summary>公司领导意见</summary>	
		[Description("公司领导意见")]
        public string CompanyLeader { get; set; } // CompanyLeader

        // Reverse navigation
		[JsonIgnore]
        public virtual ICollection<T_SoftwareArticle_ReceiveApply_ReceiveDetail> T_SoftwareArticle_ReceiveApply_ReceiveDetail { get { onT_SoftwareArticle_ReceiveApply_ReceiveDetailGetting(); return _T_SoftwareArticle_ReceiveApply_ReceiveDetail;} }
		private ICollection<T_SoftwareArticle_ReceiveApply_ReceiveDetail> _T_SoftwareArticle_ReceiveApply_ReceiveDetail;
		partial void onT_SoftwareArticle_ReceiveApply_ReceiveDetailGetting();


        public T_SoftwareArticle_ReceiveApply()
        {
            _T_SoftwareArticle_ReceiveApply_ReceiveDetail = new List<T_SoftwareArticle_ReceiveApply_ReceiveDetail>();
        }
    }

	/// <summary>领用列表</summary>	
	[Description("领用列表")]
    public partial class T_SoftwareArticle_ReceiveApply_ReceiveDetail : Formula.BaseModel
    {
		/// <summary></summary>	
		[Description("")]
        public string ID { get; set; } // ID (Primary key)
		/// <summary></summary>	
		[Description("")]
        public string T_SoftwareArticle_ReceiveApplyID { get; set; } // T_SoftwareArticle_ReceiveApplyID
		/// <summary></summary>	
		[Description("")]
        public double? SortIndex { get; set; } // SortIndex
		/// <summary></summary>	
		[Description("")]
        public string IsReleased { get; set; } // IsReleased
		/// <summary>软件名称</summary>	
		[Description("软件名称")]
        public string SoftwareName { get; set; } // SoftwareName
		/// <summary>软件开发商</summary>	
		[Description("软件开发商")]
        public string SoftwareDevelopers { get; set; } // SoftwareDevelopers
		/// <summary>软件版本号</summary>	
		[Description("软件版本号")]
        public string SoftwareVersion { get; set; } // SoftwareVersion
		/// <summary>领用数量(期限)</summary>	
		[Description("领用数量(期限)")]
        public string ReceiveQuantity { get; set; } // ReceiveQuantity
		/// <summary>授权码</summary>	
		[Description("授权码")]
        public string AuthorizationCode { get; set; } // AuthorizationCode

        // Foreign keys
		[JsonIgnore]
        public virtual T_SoftwareArticle_ReceiveApply T_SoftwareArticle_ReceiveApply { get; set; } //  T_SoftwareArticle_ReceiveApplyID - FK_T_SoftwareArticle_ReceiveApply_ReceiveDetail_T_SoftwareArticle_ReceiveApply
    }

	/// <summary>标准化审查表管理表单</summary>	
	[Description("标准化审查表管理表单")]
    public partial class T_Standardengineer_Standardichecklist : Formula.BaseModel
    {
		/// <summary></summary>	
		[Description("")]
        public string ID { get; set; } // ID (Primary key)
		/// <summary></summary>	
		[Description("")]
        public DateTime? CreateDate { get; set; } // CreateDate
		/// <summary></summary>	
		[Description("")]
        public DateTime? ModifyDate { get; set; } // ModifyDate
		/// <summary></summary>	
		[Description("")]
        public string CreateUserID { get; set; } // CreateUserID
		/// <summary></summary>	
		[Description("")]
        public string CreateUser { get; set; } // CreateUser
		/// <summary></summary>	
		[Description("")]
        public string ModifyUserID { get; set; } // ModifyUserID
		/// <summary></summary>	
		[Description("")]
        public string ModifyUser { get; set; } // ModifyUser
		/// <summary></summary>	
		[Description("")]
        public string OrgID { get; set; } // OrgID
		/// <summary></summary>	
		[Description("")]
        public string CompanyID { get; set; } // CompanyID
		/// <summary></summary>	
		[Description("")]
        public string FlowPhase { get; set; } // FlowPhase
		/// <summary></summary>	
		[Description("")]
        public string FlowInfo { get; set; } // FlowInfo
		/// <summary></summary>	
		[Description("")]
        public string StepName { get; set; } // StepName
		/// <summary>编制人</summary>	
		[Description("编制人")]
        public string Comparer { get; set; } // Comparer
		/// <summary>更新时间</summary>	
		[Description("更新时间")]
        public DateTime? Date { get; set; } // Date
		/// <summary>专业</summary>	
		[Description("专业")]
        public string Professional { get; set; } // Professional
		/// <summary>部门</summary>	
		[Description("部门")]
        public string Dept { get; set; } // Dept
		/// <summary>标准化职务</summary>	
		[Description("标准化职务")]
        public string Standardposition { get; set; } // Standardposition
		/// <summary>版本号</summary>	
		[Description("版本号")]
        public string Versionnumber { get; set; } // Versionnumber
		/// <summary>备注</summary>	
		[Description("备注")]
        public string Remark { get; set; } // Remark
		/// <summary>审查表内容</summary>	
		[Description("审查表内容")]
        public string Content { get; set; } // Content
		/// <summary>编制人名称</summary>	
		[Description("编制人名称")]
        public string ComparerName { get; set; } // ComparerName
		/// <summary>部门名称</summary>	
		[Description("部门名称")]
        public string DeptName { get; set; } // DeptName

        // Reverse navigation
		[JsonIgnore]
        public virtual ICollection<T_Standardengineer_Standardichecklist_Content> T_Standardengineer_Standardichecklist_Content { get { onT_Standardengineer_Standardichecklist_ContentGetting(); return _T_Standardengineer_Standardichecklist_Content;} }
		private ICollection<T_Standardengineer_Standardichecklist_Content> _T_Standardengineer_Standardichecklist_Content;
		partial void onT_Standardengineer_Standardichecklist_ContentGetting();


        public T_Standardengineer_Standardichecklist()
        {
            _T_Standardengineer_Standardichecklist_Content = new List<T_Standardengineer_Standardichecklist_Content>();
        }
    }

	/// <summary>审查表内容</summary>	
	[Description("审查表内容")]
    public partial class T_Standardengineer_Standardichecklist_Content : Formula.BaseModel
    {
		/// <summary></summary>	
		[Description("")]
        public string ID { get; set; } // ID (Primary key)
		/// <summary></summary>	
		[Description("")]
        public string T_Standardengineer_StandardichecklistID { get; set; } // T_Standardengineer_StandardichecklistID
		/// <summary></summary>	
		[Description("")]
        public double? SortIndex { get; set; } // SortIndex
		/// <summary></summary>	
		[Description("")]
        public string IsReleased { get; set; } // IsReleased
		/// <summary>技术标准条文要求</summary>	
		[Description("技术标准条文要求")]
        public string Require { get; set; } // Require
		/// <summary>技术标准名称</summary>	
		[Description("技术标准名称")]
        public string Standardname { get; set; } // Standardname
		/// <summary>备注</summary>	
		[Description("备注")]
        public string Remark { get; set; } // Remark
		/// <summary>序号</summary>	
		[Description("序号")]
        public string Number { get; set; } // Number

        // Foreign keys
		[JsonIgnore]
        public virtual T_Standardengineer_Standardichecklist T_Standardengineer_Standardichecklist { get; set; } //  T_Standardengineer_StandardichecklistID - FK_T_Standardengineer_Standardichecklist_Content_T_Standardengineer_Standardichecklist
    }

	/// <summary>标准化人员管理表单</summary>	
	[Description("标准化人员管理表单")]
    public partial class T_Standardengineer_Standardpeoplemanage : Formula.BaseModel
    {
		/// <summary></summary>	
		[Description("")]
        public string ID { get; set; } // ID (Primary key)
		/// <summary></summary>	
		[Description("")]
        public DateTime? CreateDate { get; set; } // CreateDate
		/// <summary></summary>	
		[Description("")]
        public DateTime? ModifyDate { get; set; } // ModifyDate
		/// <summary></summary>	
		[Description("")]
        public string CreateUserID { get; set; } // CreateUserID
		/// <summary></summary>	
		[Description("")]
        public string CreateUser { get; set; } // CreateUser
		/// <summary></summary>	
		[Description("")]
        public string ModifyUserID { get; set; } // ModifyUserID
		/// <summary></summary>	
		[Description("")]
        public string ModifyUser { get; set; } // ModifyUser
		/// <summary></summary>	
		[Description("")]
        public string OrgID { get; set; } // OrgID
		/// <summary></summary>	
		[Description("")]
        public string CompanyID { get; set; } // CompanyID
		/// <summary></summary>	
		[Description("")]
        public string FlowPhase { get; set; } // FlowPhase
		/// <summary></summary>	
		[Description("")]
        public string FlowInfo { get; set; } // FlowInfo
		/// <summary></summary>	
		[Description("")]
        public string StepName { get; set; } // StepName
		/// <summary>填写人</summary>	
		[Description("填写人")]
        public string Fillname { get; set; } // Fillname
		/// <summary>填写日期</summary>	
		[Description("填写日期")]
        public DateTime? Filldate { get; set; } // Filldate
		/// <summary>标准化人员姓名</summary>	
		[Description("标准化人员姓名")]
        public string Standardpeoplename { get; set; } // Standardpeoplename
		/// <summary>标准化人员姓名名称</summary>	
		[Description("标准化人员姓名名称")]
        public string StandardpeoplenameName { get; set; } // StandardpeoplenameName
		/// <summary>所属部门</summary>	
		[Description("所属部门")]
        public string Dept { get; set; } // Dept
		/// <summary>所属部门名称</summary>	
		[Description("所属部门名称")]
        public string DeptName { get; set; } // DeptName
		/// <summary>专业</summary>	
		[Description("专业")]
        public string Professional { get; set; } // Professional
		/// <summary>标准化职务</summary>	
		[Description("标准化职务")]
        public string Standardposition { get; set; } // Standardposition
		/// <summary>备注</summary>	
		[Description("备注")]
        public string Remark { get; set; } // Remark
		/// <summary>填写人名称</summary>	
		[Description("填写人名称")]
        public string FillnameName { get; set; } // FillnameName
    }

	/// <summary>专业技术委员会考核审批表单</summary>	
	[Description("专业技术委员会考核审批表单")]
    public partial class T_Technicalcommittee_Examandapprovalform : Formula.BaseModel
    {
		/// <summary></summary>	
		[Description("")]
        public string ID { get; set; } // ID (Primary key)
		/// <summary></summary>	
		[Description("")]
        public DateTime? CreateDate { get; set; } // CreateDate
		/// <summary></summary>	
		[Description("")]
        public DateTime? ModifyDate { get; set; } // ModifyDate
		/// <summary></summary>	
		[Description("")]
        public string CreateUserID { get; set; } // CreateUserID
		/// <summary></summary>	
		[Description("")]
        public string CreateUser { get; set; } // CreateUser
		/// <summary></summary>	
		[Description("")]
        public string ModifyUserID { get; set; } // ModifyUserID
		/// <summary></summary>	
		[Description("")]
        public string ModifyUser { get; set; } // ModifyUser
		/// <summary></summary>	
		[Description("")]
        public string OrgID { get; set; } // OrgID
		/// <summary></summary>	
		[Description("")]
        public string CompanyID { get; set; } // CompanyID
		/// <summary></summary>	
		[Description("")]
        public string FlowPhase { get; set; } // FlowPhase
		/// <summary></summary>	
		[Description("")]
        public string FlowInfo { get; set; } // FlowInfo
		/// <summary></summary>	
		[Description("")]
        public string StepName { get; set; } // StepName
		/// <summary>考核年度</summary>	
		[Description("考核年度")]
        public string Assessyear { get; set; } // Assessyear
		/// <summary>考核日期</summary>	
		[Description("考核日期")]
        public DateTime? Assessdate { get; set; } // Assessdate
		/// <summary>考核主办部门</summary>	
		[Description("考核主办部门")]
        public string Assessdept { get; set; } // Assessdept
		/// <summary>被考核对象</summary>	
		[Description("被考核对象")]
        public string Assessobject { get; set; } // Assessobject
		/// <summary>被考核对象名称</summary>	
		[Description("被考核对象名称")]
        public string AssessobjectName { get; set; } // AssessobjectName
		/// <summary>备注</summary>	
		[Description("备注")]
        public string Remark { get; set; } // Remark
		/// <summary>考核附件</summary>	
		[Description("考核附件")]
        public string Assessattach { get; set; } // Assessattach
		/// <summary>技术部意见</summary>	
		[Description("技术部意见")]
        public string Technicalsign { get; set; } // Technicalsign
		/// <summary>公司领导意见</summary>	
		[Description("公司领导意见")]
        public string Leadersign { get; set; } // Leadersign
    }

	/// <summary>专业技术委员会考核审批表单</summary>	
	[Description("专业技术委员会考核审批表单")]
    public partial class T_Technicalcommittee_Examinationandapprovalform : Formula.BaseModel
    {
		/// <summary></summary>	
		[Description("")]
        public string ID { get; set; } // ID (Primary key)
		/// <summary></summary>	
		[Description("")]
        public DateTime? CreateDate { get; set; } // CreateDate
		/// <summary></summary>	
		[Description("")]
        public DateTime? ModifyDate { get; set; } // ModifyDate
		/// <summary></summary>	
		[Description("")]
        public string CreateUserID { get; set; } // CreateUserID
		/// <summary></summary>	
		[Description("")]
        public string CreateUser { get; set; } // CreateUser
		/// <summary></summary>	
		[Description("")]
        public string ModifyUserID { get; set; } // ModifyUserID
		/// <summary></summary>	
		[Description("")]
        public string ModifyUser { get; set; } // ModifyUser
		/// <summary></summary>	
		[Description("")]
        public string OrgID { get; set; } // OrgID
		/// <summary></summary>	
		[Description("")]
        public string CompanyID { get; set; } // CompanyID
		/// <summary></summary>	
		[Description("")]
        public string FlowPhase { get; set; } // FlowPhase
		/// <summary></summary>	
		[Description("")]
        public string FlowInfo { get; set; } // FlowInfo
		/// <summary></summary>	
		[Description("")]
        public string StepName { get; set; } // StepName
		/// <summary>考核年度</summary>	
		[Description("考核年度")]
        public string Assessyear { get; set; } // Assessyear
		/// <summary>考核日期</summary>	
		[Description("考核日期")]
        public DateTime? Assessdate { get; set; } // Assessdate
		/// <summary>考核主办部门</summary>	
		[Description("考核主办部门")]
        public string Assessdept { get; set; } // Assessdept
		/// <summary>被考核对象</summary>	
		[Description("被考核对象")]
        public string Assessobject { get; set; } // Assessobject
		/// <summary>被考核对象名称</summary>	
		[Description("被考核对象名称")]
        public string AssessobjectName { get; set; } // AssessobjectName
		/// <summary>备注</summary>	
		[Description("备注")]
        public string Remark { get; set; } // Remark
		/// <summary>考核附件</summary>	
		[Description("考核附件")]
        public string Assessattach { get; set; } // Assessattach
		/// <summary>技术部意见</summary>	
		[Description("技术部意见")]
        public string Technicalsign { get; set; } // Technicalsign
		/// <summary>公司领导意见</summary>	
		[Description("公司领导意见")]
        public string Leadersign { get; set; } // Leadersign
    }

	/// <summary>专业技术委员会人员管理表单</summary>	
	[Description("专业技术委员会人员管理表单")]
    public partial class T_Technicalcommittee_Technicalperson : Formula.BaseModel
    {
		/// <summary></summary>	
		[Description("")]
        public string ID { get; set; } // ID (Primary key)
		/// <summary></summary>	
		[Description("")]
        public DateTime? CreateDate { get; set; } // CreateDate
		/// <summary></summary>	
		[Description("")]
        public DateTime? ModifyDate { get; set; } // ModifyDate
		/// <summary></summary>	
		[Description("")]
        public string CreateUserID { get; set; } // CreateUserID
		/// <summary></summary>	
		[Description("")]
        public string CreateUser { get; set; } // CreateUser
		/// <summary></summary>	
		[Description("")]
        public string ModifyUserID { get; set; } // ModifyUserID
		/// <summary></summary>	
		[Description("")]
        public string ModifyUser { get; set; } // ModifyUser
		/// <summary></summary>	
		[Description("")]
        public string OrgID { get; set; } // OrgID
		/// <summary></summary>	
		[Description("")]
        public string CompanyID { get; set; } // CompanyID
		/// <summary></summary>	
		[Description("")]
        public string FlowPhase { get; set; } // FlowPhase
		/// <summary></summary>	
		[Description("")]
        public string FlowInfo { get; set; } // FlowInfo
		/// <summary></summary>	
		[Description("")]
        public string StepName { get; set; } // StepName
		/// <summary>填写人</summary>	
		[Description("填写人")]
        public string Fillname { get; set; } // Fillname
		/// <summary>填写日期</summary>	
		[Description("填写日期")]
        public DateTime? Filldate { get; set; } // Filldate
		/// <summary>人员姓名</summary>	
		[Description("人员姓名")]
        public string Name { get; set; } // Name
		/// <summary>人员姓名名称</summary>	
		[Description("人员姓名名称")]
        public string NameName { get; set; } // NameName
		/// <summary>所属部门</summary>	
		[Description("所属部门")]
        public string Dept { get; set; } // Dept
		/// <summary>专业</summary>	
		[Description("专业")]
        public string Professional { get; set; } // Professional
		/// <summary>委员会职务</summary>	
		[Description("委员会职务")]
        public string Position { get; set; } // Position
		/// <summary>备注</summary>	
		[Description("备注")]
        public string Remark { get; set; } // Remark
		/// <summary>填写人名称</summary>	
		[Description("填写人名称")]
        public string FillnameName { get; set; } // FillnameName
    }

	/// <summary>培训记录管理</summary>	
	[Description("培训记录管理")]
    public partial class T_Technicalcommittee_trainingrecord : Formula.BaseModel
    {
		/// <summary></summary>	
		[Description("")]
        public string ID { get; set; } // ID (Primary key)
		/// <summary></summary>	
		[Description("")]
        public DateTime? CreateDate { get; set; } // CreateDate
		/// <summary></summary>	
		[Description("")]
        public DateTime? ModifyDate { get; set; } // ModifyDate
		/// <summary></summary>	
		[Description("")]
        public string CreateUserID { get; set; } // CreateUserID
		/// <summary></summary>	
		[Description("")]
        public string CreateUser { get; set; } // CreateUser
		/// <summary></summary>	
		[Description("")]
        public string ModifyUserID { get; set; } // ModifyUserID
		/// <summary></summary>	
		[Description("")]
        public string ModifyUser { get; set; } // ModifyUser
		/// <summary></summary>	
		[Description("")]
        public string OrgID { get; set; } // OrgID
		/// <summary></summary>	
		[Description("")]
        public string CompanyID { get; set; } // CompanyID
		/// <summary></summary>	
		[Description("")]
        public string FlowPhase { get; set; } // FlowPhase
		/// <summary></summary>	
		[Description("")]
        public string FlowInfo { get; set; } // FlowInfo
		/// <summary></summary>	
		[Description("")]
        public string StepName { get; set; } // StepName
		/// <summary>培训年度</summary>	
		[Description("培训年度")]
        public string Trainyear { get; set; } // Trainyear
		/// <summary>填报日期</summary>	
		[Description("填报日期")]
        public DateTime? Filldate { get; set; } // Filldate
		/// <summary>培训开始时间</summary>	
		[Description("培训开始时间")]
        public DateTime? Starttime { get; set; } // Starttime
		/// <summary>培训结束时间</summary>	
		[Description("培训结束时间")]
        public DateTime? Endtime { get; set; } // Endtime
		/// <summary>培训主办单位</summary>	
		[Description("培训主办单位")]
        public string Trainsponsor { get; set; } // Trainsponsor
		/// <summary>培训地点</summary>	
		[Description("培训地点")]
        public string Trainsite { get; set; } // Trainsite
		/// <summary>培训参加对象</summary>	
		[Description("培训参加对象")]
        public string Trainparticipants { get; set; } // Trainparticipants
		/// <summary>备注</summary>	
		[Description("备注")]
        public string Remark { get; set; } // Remark
		/// <summary>培训记录附件</summary>	
		[Description("培训记录附件")]
        public string Attachment { get; set; } // Attachment
		/// <summary>技术部意见</summary>	
		[Description("技术部意见")]
        public string Technicalsign { get; set; } // Technicalsign
		/// <summary>公司领导意见</summary>	
		[Description("公司领导意见")]
        public string Leadersign { get; set; } // Leadersign

        // Reverse navigation
		[JsonIgnore]
        public virtual ICollection<T_Technicalcommittee_trainingrecord_Trainparticipants> T_Technicalcommittee_trainingrecord_Trainparticipants { get { onT_Technicalcommittee_trainingrecord_TrainparticipantsGetting(); return _T_Technicalcommittee_trainingrecord_Trainparticipants;} }
		private ICollection<T_Technicalcommittee_trainingrecord_Trainparticipants> _T_Technicalcommittee_trainingrecord_Trainparticipants;
		partial void onT_Technicalcommittee_trainingrecord_TrainparticipantsGetting();


        public T_Technicalcommittee_trainingrecord()
        {
            _T_Technicalcommittee_trainingrecord_Trainparticipants = new List<T_Technicalcommittee_trainingrecord_Trainparticipants>();
        }
    }

	/// <summary>培训参加对象</summary>	
	[Description("培训参加对象")]
    public partial class T_Technicalcommittee_trainingrecord_Trainparticipants : Formula.BaseModel
    {
		/// <summary></summary>	
		[Description("")]
        public string ID { get; set; } // ID (Primary key)
		/// <summary></summary>	
		[Description("")]
        public string T_Technicalcommittee_trainingrecordID { get; set; } // T_Technicalcommittee_trainingrecordID
		/// <summary></summary>	
		[Description("")]
        public double? SortIndex { get; set; } // SortIndex
		/// <summary></summary>	
		[Description("")]
        public string IsReleased { get; set; } // IsReleased
		/// <summary>人员姓名</summary>	
		[Description("人员姓名")]
        public string Name { get; set; } // Name
		/// <summary>人员姓名名称</summary>	
		[Description("人员姓名名称")]
        public string NameName { get; set; } // NameName
		/// <summary>部门</summary>	
		[Description("部门")]
        public string Dept { get; set; } // Dept
		/// <summary>专业</summary>	
		[Description("专业")]
        public string Professional { get; set; } // Professional
		/// <summary>备注</summary>	
		[Description("备注")]
        public string Remark { get; set; } // Remark
		/// <summary>部门名称</summary>	
		[Description("部门名称")]
        public string DeptName { get; set; } // DeptName

        // Foreign keys
		[JsonIgnore]
        public virtual T_Technicalcommittee_trainingrecord T_Technicalcommittee_trainingrecord { get; set; } //  T_Technicalcommittee_trainingrecordID - FK_T_Technicalcommittee_trainingrecord_Trainparticipants_T_Technicalcommittee_trainingrecord
    }

	/// <summary>青年技术委员会考核审批表</summary>	
	[Description("青年技术委员会考核审批表")]
    public partial class T_Technicalcommittee_Youthexamform : Formula.BaseModel
    {
		/// <summary></summary>	
		[Description("")]
        public string ID { get; set; } // ID (Primary key)
		/// <summary></summary>	
		[Description("")]
        public DateTime? CreateDate { get; set; } // CreateDate
		/// <summary></summary>	
		[Description("")]
        public DateTime? ModifyDate { get; set; } // ModifyDate
		/// <summary></summary>	
		[Description("")]
        public string CreateUserID { get; set; } // CreateUserID
		/// <summary></summary>	
		[Description("")]
        public string CreateUser { get; set; } // CreateUser
		/// <summary></summary>	
		[Description("")]
        public string ModifyUserID { get; set; } // ModifyUserID
		/// <summary></summary>	
		[Description("")]
        public string ModifyUser { get; set; } // ModifyUser
		/// <summary></summary>	
		[Description("")]
        public string OrgID { get; set; } // OrgID
		/// <summary></summary>	
		[Description("")]
        public string CompanyID { get; set; } // CompanyID
		/// <summary></summary>	
		[Description("")]
        public string FlowPhase { get; set; } // FlowPhase
		/// <summary></summary>	
		[Description("")]
        public string FlowInfo { get; set; } // FlowInfo
		/// <summary></summary>	
		[Description("")]
        public string StepName { get; set; } // StepName
		/// <summary>考核年度</summary>	
		[Description("考核年度")]
        public string Assessyear { get; set; } // Assessyear
		/// <summary>考核日期</summary>	
		[Description("考核日期")]
        public DateTime? Assessdate { get; set; } // Assessdate
		/// <summary>考核主办部门</summary>	
		[Description("考核主办部门")]
        public string Assessdept { get; set; } // Assessdept
		/// <summary>被考核对象</summary>	
		[Description("被考核对象")]
        public string Assessobject { get; set; } // Assessobject
		/// <summary>被考核对象名称</summary>	
		[Description("被考核对象名称")]
        public string AssessobjectName { get; set; } // AssessobjectName
		/// <summary>备注</summary>	
		[Description("备注")]
        public string Remark { get; set; } // Remark
		/// <summary>考核附件</summary>	
		[Description("考核附件")]
        public string Assessattach { get; set; } // Assessattach
		/// <summary>技术部意见</summary>	
		[Description("技术部意见")]
        public string Technicalsign { get; set; } // Technicalsign
		/// <summary>公司领导意见</summary>	
		[Description("公司领导意见")]
        public string Leadersign { get; set; } // Leadersign
    }

	/// <summary>专家评审附件模板</summary>	
	[Description("专家评审附件模板")]
    public partial class T_Technology_Attachment : Formula.BaseModel
    {
		/// <summary></summary>	
		[Description("")]
        public string ID { get; set; } // ID (Primary key)
		/// <summary></summary>	
		[Description("")]
        public DateTime? CreateDate { get; set; } // CreateDate
		/// <summary></summary>	
		[Description("")]
        public DateTime? ModifyDate { get; set; } // ModifyDate
		/// <summary></summary>	
		[Description("")]
        public string CreateUserID { get; set; } // CreateUserID
		/// <summary></summary>	
		[Description("")]
        public string CreateUser { get; set; } // CreateUser
		/// <summary></summary>	
		[Description("")]
        public string ModifyUserID { get; set; } // ModifyUserID
		/// <summary></summary>	
		[Description("")]
        public string ModifyUser { get; set; } // ModifyUser
		/// <summary></summary>	
		[Description("")]
        public string OrgID { get; set; } // OrgID
		/// <summary></summary>	
		[Description("")]
        public string CompanyID { get; set; } // CompanyID
		/// <summary></summary>	
		[Description("")]
        public string FlowPhase { get; set; } // FlowPhase
		/// <summary></summary>	
		[Description("")]
        public string FlowInfo { get; set; } // FlowInfo
		/// <summary></summary>	
		[Description("")]
        public string StepName { get; set; } // StepName
		/// <summary>模板文件</summary>	
		[Description("模板文件")]
        public string Attachments { get; set; } // Attachments
    }

	/// <summary>合同审批</summary>	
	[Description("合同审批")]
    public partial class T_Technology_ContractApproval : Formula.BaseModel
    {
		/// <summary></summary>	
		[Description("")]
        public string ID { get; set; } // ID (Primary key)
		/// <summary></summary>	
		[Description("")]
        public DateTime? CreateDate { get; set; } // CreateDate
		/// <summary></summary>	
		[Description("")]
        public DateTime? ModifyDate { get; set; } // ModifyDate
		/// <summary></summary>	
		[Description("")]
        public string CreateUserID { get; set; } // CreateUserID
		/// <summary></summary>	
		[Description("")]
        public string CreateUser { get; set; } // CreateUser
		/// <summary></summary>	
		[Description("")]
        public string ModifyUserID { get; set; } // ModifyUserID
		/// <summary></summary>	
		[Description("")]
        public string ModifyUser { get; set; } // ModifyUser
		/// <summary></summary>	
		[Description("")]
        public string OrgID { get; set; } // OrgID
		/// <summary></summary>	
		[Description("")]
        public string CompanyID { get; set; } // CompanyID
		/// <summary></summary>	
		[Description("")]
        public string FlowPhase { get; set; } // FlowPhase
		/// <summary></summary>	
		[Description("")]
        public string FlowInfo { get; set; } // FlowInfo
		/// <summary></summary>	
		[Description("")]
        public string StepName { get; set; } // StepName
		/// <summary>课题名称</summary>	
		[Description("课题名称")]
        public string Projectname { get; set; } // Projectname
		/// <summary>课题编号</summary>	
		[Description("课题编号")]
        public string Projectnumber { get; set; } // Projectnumber
		/// <summary>课题总负责人</summary>	
		[Description("课题总负责人")]
        public string Projectleader { get; set; } // Projectleader
		/// <summary>课题总负责人名称</summary>	
		[Description("课题总负责人名称")]
        public string ProjectleaderName { get; set; } // ProjectleaderName
		/// <summary>课题等级</summary>	
		[Description("课题等级")]
        public string Subjectlevel { get; set; } // Subjectlevel
		/// <summary>课题核准经费</summary>	
		[Description("课题核准经费")]
        public string ProjectCost { get; set; } // ProjectCost
		/// <summary>填写人</summary>	
		[Description("填写人")]
        public string Declarant { get; set; } // Declarant
		/// <summary>填写人名称</summary>	
		[Description("填写人名称")]
        public string DeclarantName { get; set; } // DeclarantName
		/// <summary>填写日期</summary>	
		[Description("填写日期")]
        public DateTime? Declaredate { get; set; } // Declaredate
		/// <summary>合同名称</summary>	
		[Description("合同名称")]
        public string ContractName { get; set; } // ContractName
		/// <summary>合同号</summary>	
		[Description("合同号")]
        public string ContractNumber { get; set; } // ContractNumber
		/// <summary>合同金额</summary>	
		[Description("合同金额")]
        public string ContractCost { get; set; } // ContractCost
		/// <summary>合同签订日期</summary>	
		[Description("合同签订日期")]
        public DateTime? ContractSignDate { get; set; } // ContractSignDate
		/// <summary>合同单位</summary>	
		[Description("合同单位")]
        public string ContractUnit { get; set; } // ContractUnit
		/// <summary>合同内容</summary>	
		[Description("合同内容")]
        public string ContractContent { get; set; } // ContractContent
		/// <summary>合同文本附件</summary>	
		[Description("合同文本附件")]
        public string ContractAttachment { get; set; } // ContractAttachment
		/// <summary>备注</summary>	
		[Description("备注")]
        public string Remark { get; set; } // Remark
		/// <summary>付款计划</summary>	
		[Description("付款计划")]
        public string PaymentPlan { get; set; } // PaymentPlan
		/// <summary>技术部意见</summary>	
		[Description("技术部意见")]
        public string Technicalsign { get; set; } // Technicalsign
		/// <summary>法务部意见</summary>	
		[Description("法务部意见")]
        public string Lawyersign { get; set; } // Lawyersign
		/// <summary>公司领导意见</summary>	
		[Description("公司领导意见")]
        public string Leadersign { get; set; } // Leadersign
		/// <summary>课题核准经费</summary>	
		[Description("课题核准经费")]
        public string ProjectFunds { get; set; } // ProjectFunds
		/// <summary>课题ID</summary>	
		[Description("课题ID")]
        public string ProjectID { get; set; } // ProjectID

        // Reverse navigation
		[JsonIgnore]
        public virtual ICollection<T_Technology_ContractApproval_PaymentPlan> T_Technology_ContractApproval_PaymentPlan { get { onT_Technology_ContractApproval_PaymentPlanGetting(); return _T_Technology_ContractApproval_PaymentPlan;} }
		private ICollection<T_Technology_ContractApproval_PaymentPlan> _T_Technology_ContractApproval_PaymentPlan;
		partial void onT_Technology_ContractApproval_PaymentPlanGetting();


        public T_Technology_ContractApproval()
        {
            _T_Technology_ContractApproval_PaymentPlan = new List<T_Technology_ContractApproval_PaymentPlan>();
        }
    }

	/// <summary>付款计划</summary>	
	[Description("付款计划")]
    public partial class T_Technology_ContractApproval_PaymentPlan : Formula.BaseModel
    {
		/// <summary></summary>	
		[Description("")]
        public string ID { get; set; } // ID (Primary key)
		/// <summary></summary>	
		[Description("")]
        public string T_Technology_ContractApprovalID { get; set; } // T_Technology_ContractApprovalID
		/// <summary></summary>	
		[Description("")]
        public double? SortIndex { get; set; } // SortIndex
		/// <summary></summary>	
		[Description("")]
        public string IsReleased { get; set; } // IsReleased
		/// <summary>付款条件</summary>	
		[Description("付款条件")]
        public string PaymentCondition { get; set; } // PaymentCondition
		/// <summary>付款时间</summary>	
		[Description("付款时间")]
        public DateTime? PaymentDate { get; set; } // PaymentDate
		/// <summary>付款金额</summary>	
		[Description("付款金额")]
        public string PaymentAmount { get; set; } // PaymentAmount

        // Foreign keys
		[JsonIgnore]
        public virtual T_Technology_ContractApproval T_Technology_ContractApproval { get; set; } //  T_Technology_ContractApprovalID - FK_T_Technology_ContractApproval_PaymentPlan_T_Technology_ContractApproval
    }

	/// <summary>费用计划审批</summary>	
	[Description("费用计划审批")]
    public partial class T_Technology_CostPlan : Formula.BaseModel
    {
		/// <summary></summary>	
		[Description("")]
        public string ID { get; set; } // ID (Primary key)
		/// <summary></summary>	
		[Description("")]
        public DateTime? CreateDate { get; set; } // CreateDate
		/// <summary></summary>	
		[Description("")]
        public DateTime? ModifyDate { get; set; } // ModifyDate
		/// <summary></summary>	
		[Description("")]
        public string CreateUserID { get; set; } // CreateUserID
		/// <summary></summary>	
		[Description("")]
        public string CreateUser { get; set; } // CreateUser
		/// <summary></summary>	
		[Description("")]
        public string ModifyUserID { get; set; } // ModifyUserID
		/// <summary></summary>	
		[Description("")]
        public string ModifyUser { get; set; } // ModifyUser
		/// <summary></summary>	
		[Description("")]
        public string OrgID { get; set; } // OrgID
		/// <summary></summary>	
		[Description("")]
        public string CompanyID { get; set; } // CompanyID
		/// <summary></summary>	
		[Description("")]
        public string FlowPhase { get; set; } // FlowPhase
		/// <summary></summary>	
		[Description("")]
        public string FlowInfo { get; set; } // FlowInfo
		/// <summary></summary>	
		[Description("")]
        public string StepName { get; set; } // StepName
		/// <summary>课题名称</summary>	
		[Description("课题名称")]
        public string Projectname { get; set; } // Projectname
		/// <summary>课题编号</summary>	
		[Description("课题编号")]
        public string Projectnumber { get; set; } // Projectnumber
		/// <summary>课题总负责人</summary>	
		[Description("课题总负责人")]
        public string Projectleader { get; set; } // Projectleader
		/// <summary>课题总负责人名称</summary>	
		[Description("课题总负责人名称")]
        public string ProjectleaderName { get; set; } // ProjectleaderName
		/// <summary>课题核准金额</summary>	
		[Description("课题核准金额")]
        public string ProjectFunds { get; set; } // ProjectFunds
		/// <summary>申报经费</summary>	
		[Description("申报经费")]
        public string TotalCost { get; set; } // TotalCost
		/// <summary>填写人</summary>	
		[Description("填写人")]
        public string Declarant { get; set; } // Declarant
		/// <summary>填写人名称</summary>	
		[Description("填写人名称")]
        public string DeclarantName { get; set; } // DeclarantName
		/// <summary>填写日期</summary>	
		[Description("填写日期")]
        public DateTime? Declaredate { get; set; } // Declaredate
		/// <summary>费用计划模板</summary>	
		[Description("费用计划模板")]
        public string CostPlan { get; set; } // CostPlan
		/// <summary>课题费用计划</summary>	
		[Description("课题费用计划")]
        public string ProjectCostPlan { get; set; } // ProjectCostPlan
		/// <summary>技术委员会</summary>	
		[Description("技术委员会")]
        public string TechnologyGroup { get; set; } // TechnologyGroup
		/// <summary>专家总体意见</summary>	
		[Description("专家总体意见")]
        public string Expertsign { get; set; } // Expertsign
		/// <summary>技术部意见</summary>	
		[Description("技术部意见")]
        public string Technicalsign { get; set; } // Technicalsign
		/// <summary>法务部意见</summary>	
		[Description("法务部意见")]
        public string Lawyersign { get; set; } // Lawyersign
		/// <summary>公司领导意见</summary>	
		[Description("公司领导意见")]
        public string Leadersign { get; set; } // Leadersign
		/// <summary>课题ID</summary>	
		[Description("课题ID")]
        public string ProjectID { get; set; } // ProjectID
		/// <summary>技术委员会</summary>	
		[Description("技术委员会")]
        public string Technicalexpert { get; set; } // Technicalexpert
		/// <summary>技术委员会专家ID</summary>	
		[Description("技术委员会专家ID")]
        public string TechnicalCommitteeIDS { get; set; } // TechnicalCommitteeIDS

        // Reverse navigation
		[JsonIgnore]
        public virtual ICollection<T_Technology_CostPlan_Technicalexpert> T_Technology_CostPlan_Technicalexpert { get { onT_Technology_CostPlan_TechnicalexpertGetting(); return _T_Technology_CostPlan_Technicalexpert;} }
		private ICollection<T_Technology_CostPlan_Technicalexpert> _T_Technology_CostPlan_Technicalexpert;
		partial void onT_Technology_CostPlan_TechnicalexpertGetting();

		[JsonIgnore]
        public virtual ICollection<T_Technology_CostPlan_TechnologyGroup> T_Technology_CostPlan_TechnologyGroup { get { onT_Technology_CostPlan_TechnologyGroupGetting(); return _T_Technology_CostPlan_TechnologyGroup;} }
		private ICollection<T_Technology_CostPlan_TechnologyGroup> _T_Technology_CostPlan_TechnologyGroup;
		partial void onT_Technology_CostPlan_TechnologyGroupGetting();


        public T_Technology_CostPlan()
        {
            _T_Technology_CostPlan_Technicalexpert = new List<T_Technology_CostPlan_Technicalexpert>();
            _T_Technology_CostPlan_TechnologyGroup = new List<T_Technology_CostPlan_TechnologyGroup>();
        }
    }

	/// <summary>技术委员会</summary>	
	[Description("技术委员会")]
    public partial class T_Technology_CostPlan_Technicalexpert : Formula.BaseModel
    {
		/// <summary></summary>	
		[Description("")]
        public string ID { get; set; } // ID (Primary key)
		/// <summary></summary>	
		[Description("")]
        public string T_Technology_CostPlanID { get; set; } // T_Technology_CostPlanID
		/// <summary></summary>	
		[Description("")]
        public double? SortIndex { get; set; } // SortIndex
		/// <summary></summary>	
		[Description("")]
        public string IsReleased { get; set; } // IsReleased
		/// <summary>技术委员会</summary>	
		[Description("技术委员会")]
        public string TechnicalCommittee { get; set; } // TechnicalCommittee
		/// <summary>技术委员会主任</summary>	
		[Description("技术委员会主任")]
        public string TechnicalCommitteeDirector { get; set; } // TechnicalCommitteeDirector
		/// <summary>技术委员会名称</summary>	
		[Description("技术委员会名称")]
        public string TechnicalCommitteeName { get; set; } // TechnicalCommitteeName
		/// <summary>技术委员会主任名称</summary>	
		[Description("技术委员会主任名称")]
        public string TechnicalCommitteeDirectorName { get; set; } // TechnicalCommitteeDirectorName

        // Foreign keys
		[JsonIgnore]
        public virtual T_Technology_CostPlan T_Technology_CostPlan { get; set; } //  T_Technology_CostPlanID - FK_T_Technology_CostPlan_Technicalexpert_T_Technology_CostPlan
    }

	/// <summary>技术委员会</summary>	
	[Description("技术委员会")]
    public partial class T_Technology_CostPlan_TechnologyGroup : Formula.BaseModel
    {
		/// <summary></summary>	
		[Description("")]
        public string ID { get; set; } // ID (Primary key)
		/// <summary></summary>	
		[Description("")]
        public string T_Technology_CostPlanID { get; set; } // T_Technology_CostPlanID
		/// <summary></summary>	
		[Description("")]
        public double? SortIndex { get; set; } // SortIndex
		/// <summary></summary>	
		[Description("")]
        public string IsReleased { get; set; } // IsReleased
		/// <summary>技术委员会</summary>	
		[Description("技术委员会")]
        public string Technicalcommittee { get; set; } // Technicalcommittee
		/// <summary>技术委员会主任</summary>	
		[Description("技术委员会主任")]
        public string Technicalcommitteedirector { get; set; } // Technicalcommitteedirector

        // Foreign keys
		[JsonIgnore]
        public virtual T_Technology_CostPlan T_Technology_CostPlan { get; set; } //  T_Technology_CostPlanID - FK_T_Technology_CostPlan_TechnologyGroup_T_Technology_CostPlan
    }

	/// <summary>费用计划审批模板</summary>	
	[Description("费用计划审批模板")]
    public partial class T_Technology_CostPlanAttachment : Formula.BaseModel
    {
		/// <summary></summary>	
		[Description("")]
        public string ID { get; set; } // ID (Primary key)
		/// <summary></summary>	
		[Description("")]
        public DateTime? CreateDate { get; set; } // CreateDate
		/// <summary></summary>	
		[Description("")]
        public DateTime? ModifyDate { get; set; } // ModifyDate
		/// <summary></summary>	
		[Description("")]
        public string CreateUserID { get; set; } // CreateUserID
		/// <summary></summary>	
		[Description("")]
        public string CreateUser { get; set; } // CreateUser
		/// <summary></summary>	
		[Description("")]
        public string ModifyUserID { get; set; } // ModifyUserID
		/// <summary></summary>	
		[Description("")]
        public string ModifyUser { get; set; } // ModifyUser
		/// <summary></summary>	
		[Description("")]
        public string OrgID { get; set; } // OrgID
		/// <summary></summary>	
		[Description("")]
        public string CompanyID { get; set; } // CompanyID
		/// <summary></summary>	
		[Description("")]
        public string FlowPhase { get; set; } // FlowPhase
		/// <summary></summary>	
		[Description("")]
        public string FlowInfo { get; set; } // FlowInfo
		/// <summary></summary>	
		[Description("")]
        public string StepName { get; set; } // StepName
		/// <summary>模板文件</summary>	
		[Description("模板文件")]
        public string CostPlanAttachment { get; set; } // CostPlanAttachment
    }

	/// <summary>专家评审</summary>	
	[Description("专家评审")]
    public partial class T_Technology_ExpertReview : Formula.BaseModel
    {
		/// <summary></summary>	
		[Description("")]
        public string ID { get; set; } // ID (Primary key)
		/// <summary></summary>	
		[Description("")]
        public DateTime? CreateDate { get; set; } // CreateDate
		/// <summary></summary>	
		[Description("")]
        public DateTime? ModifyDate { get; set; } // ModifyDate
		/// <summary></summary>	
		[Description("")]
        public string CreateUserID { get; set; } // CreateUserID
		/// <summary></summary>	
		[Description("")]
        public string CreateUser { get; set; } // CreateUser
		/// <summary></summary>	
		[Description("")]
        public string ModifyUserID { get; set; } // ModifyUserID
		/// <summary></summary>	
		[Description("")]
        public string ModifyUser { get; set; } // ModifyUser
		/// <summary></summary>	
		[Description("")]
        public string OrgID { get; set; } // OrgID
		/// <summary></summary>	
		[Description("")]
        public string CompanyID { get; set; } // CompanyID
		/// <summary></summary>	
		[Description("")]
        public string FlowPhase { get; set; } // FlowPhase
		/// <summary></summary>	
		[Description("")]
        public string FlowInfo { get; set; } // FlowInfo
		/// <summary></summary>	
		[Description("")]
        public string StepName { get; set; } // StepName
		/// <summary>课题名称</summary>	
		[Description("课题名称")]
        public string Projectname { get; set; } // Projectname
		/// <summary>申报年度</summary>	
		[Description("申报年度")]
        public string Declareyear { get; set; } // Declareyear
		/// <summary>负责部门</summary>	
		[Description("负责部门")]
        public string Responsibledept { get; set; } // Responsibledept
		/// <summary>负责部门名称</summary>	
		[Description("负责部门名称")]
        public string ResponsibledeptName { get; set; } // ResponsibledeptName
		/// <summary>课题编号</summary>	
		[Description("课题编号")]
        public string Projectnumber { get; set; } // Projectnumber
		/// <summary>课题分类</summary>	
		[Description("课题分类")]
        public string Projectclass { get; set; } // Projectclass
		/// <summary>课题总负责人</summary>	
		[Description("课题总负责人")]
        public string Projectleader { get; set; } // Projectleader
		/// <summary>课题总负责人名称</summary>	
		[Description("课题总负责人名称")]
        public string ProjectleaderName { get; set; } // ProjectleaderName
		/// <summary>确认分值</summary>	
		[Description("确认分值")]
        public string Confirmscore { get; set; } // Confirmscore
		/// <summary>开始时间</summary>	
		[Description("开始时间")]
        public DateTime? Starttime { get; set; } // Starttime
		/// <summary>预计完工时间</summary>	
		[Description("预计完工时间")]
        public DateTime? Estimatedtime { get; set; } // Estimatedtime
		/// <summary>课题核准经费</summary>	
		[Description("课题核准经费")]
        public string ProjectFunds { get; set; } // ProjectFunds
		/// <summary>填写人</summary>	
		[Description("填写人")]
        public string Declarant { get; set; } // Declarant
		/// <summary>填写人名称</summary>	
		[Description("填写人名称")]
        public string DeclarantName { get; set; } // DeclarantName
		/// <summary>填写日期</summary>	
		[Description("填写日期")]
        public DateTime? Declaredate { get; set; } // Declaredate
		/// <summary>评委专家名单</summary>	
		[Description("评委专家名单")]
        public string ExpertPanel { get; set; } // ExpertPanel
		/// <summary>专家总体意见</summary>	
		[Description("专家总体意见")]
        public string ExpertView { get; set; } // ExpertView
		/// <summary>附件1</summary>	
		[Description("附件1")]
        public string Attachment1 { get; set; } // Attachment1
		/// <summary>附件2</summary>	
		[Description("附件2")]
        public string Attachment2 { get; set; } // Attachment2
		/// <summary>附件3</summary>	
		[Description("附件3")]
        public string Attachment3 { get; set; } // Attachment3
		/// <summary>其他附件</summary>	
		[Description("其他附件")]
        public string OtherAttachment { get; set; } // OtherAttachment
		/// <summary>附件模板下载</summary>	
		[Description("附件模板下载")]
        public string DownLoadAttachment { get; set; } // DownLoadAttachment
		/// <summary>技术部意见</summary>	
		[Description("技术部意见")]
        public string Technicalsign { get; set; } // Technicalsign
		/// <summary>法务部意见</summary>	
		[Description("法务部意见")]
        public string Lawyersign { get; set; } // Lawyersign
		/// <summary>公司领导意见</summary>	
		[Description("公司领导意见")]
        public string Leadersign { get; set; } // Leadersign
		/// <summary>课题ID</summary>	
		[Description("课题ID")]
        public string ProjectID { get; set; } // ProjectID
    }

	/// <summary>付款申请</summary>	
	[Description("付款申请")]
    public partial class T_Technology_PaymentApply : Formula.BaseModel
    {
		/// <summary></summary>	
		[Description("")]
        public string ID { get; set; } // ID (Primary key)
		/// <summary></summary>	
		[Description("")]
        public DateTime? CreateDate { get; set; } // CreateDate
		/// <summary></summary>	
		[Description("")]
        public DateTime? ModifyDate { get; set; } // ModifyDate
		/// <summary></summary>	
		[Description("")]
        public string CreateUserID { get; set; } // CreateUserID
		/// <summary></summary>	
		[Description("")]
        public string CreateUser { get; set; } // CreateUser
		/// <summary></summary>	
		[Description("")]
        public string ModifyUserID { get; set; } // ModifyUserID
		/// <summary></summary>	
		[Description("")]
        public string ModifyUser { get; set; } // ModifyUser
		/// <summary></summary>	
		[Description("")]
        public string OrgID { get; set; } // OrgID
		/// <summary></summary>	
		[Description("")]
        public string CompanyID { get; set; } // CompanyID
		/// <summary></summary>	
		[Description("")]
        public string FlowPhase { get; set; } // FlowPhase
		/// <summary></summary>	
		[Description("")]
        public string FlowInfo { get; set; } // FlowInfo
		/// <summary></summary>	
		[Description("")]
        public string StepName { get; set; } // StepName
		/// <summary>课题名称</summary>	
		[Description("课题名称")]
        public string Projectname { get; set; } // Projectname
		/// <summary>课题编号</summary>	
		[Description("课题编号")]
        public string Projectnumber { get; set; } // Projectnumber
		/// <summary>课题总负责人</summary>	
		[Description("课题总负责人")]
        public string Projectleader { get; set; } // Projectleader
		/// <summary>课题总负责人名称</summary>	
		[Description("课题总负责人名称")]
        public string ProjectleaderName { get; set; } // ProjectleaderName
		/// <summary>课题等级</summary>	
		[Description("课题等级")]
        public string Subjectlevel { get; set; } // Subjectlevel
		/// <summary>课题核准经费</summary>	
		[Description("课题核准经费")]
        public string ProjectFunds { get; set; } // ProjectFunds
		/// <summary>填写人</summary>	
		[Description("填写人")]
        public string Declarant { get; set; } // Declarant
		/// <summary>填写人名称</summary>	
		[Description("填写人名称")]
        public string DeclarantName { get; set; } // DeclarantName
		/// <summary>填写日期</summary>	
		[Description("填写日期")]
        public DateTime? Declaredate { get; set; } // Declaredate
		/// <summary>合同金额</summary>	
		[Description("合同金额")]
        public string ContractCost { get; set; } // ContractCost
		/// <summary>合同号</summary>	
		[Description("合同号")]
        public string ContractNumber { get; set; } // ContractNumber
		/// <summary>合同内容</summary>	
		[Description("合同内容")]
        public string ContractContent { get; set; } // ContractContent
		/// <summary>付款计划</summary>	
		[Description("付款计划")]
        public string PaymentPlan { get; set; } // PaymentPlan
		/// <summary>支付方式</summary>	
		[Description("支付方式")]
        public string PaymentWay { get; set; } // PaymentWay
		/// <summary>支付地点</summary>	
		[Description("支付地点")]
        public string PaymentLocation { get; set; } // PaymentLocation
		/// <summary>记账方式</summary>	
		[Description("记账方式")]
        public string TallyMethods { get; set; } // TallyMethods
		/// <summary>支付金额</summary>	
		[Description("支付金额")]
        public string PaymentAmount { get; set; } // PaymentAmount
		/// <summary>记账金额</summary>	
		[Description("记账金额")]
        public string TallyAmount { get; set; } // TallyAmount
		/// <summary>付款依据</summary>	
		[Description("付款依据")]
        public string PaymentCerdential { get; set; } // PaymentCerdential
		/// <summary>当前付款次数</summary>	
		[Description("当前付款次数")]
        public string PaymentCount { get; set; } // PaymentCount
		/// <summary>已付款金额</summary>	
		[Description("已付款金额")]
        public string PaymentPaid { get; set; } // PaymentPaid
		/// <summary>剩余金额</summary>	
		[Description("剩余金额")]
        public string SurplusAmount { get; set; } // SurplusAmount
		/// <summary>收款单位名称</summary>	
		[Description("收款单位名称")]
        public string PaymentUnit { get; set; } // PaymentUnit
		/// <summary>收款单位开户行</summary>	
		[Description("收款单位开户行")]
        public string PaymentUnitBank { get; set; } // PaymentUnitBank
		/// <summary>收款单位账号</summary>	
		[Description("收款单位账号")]
        public string PaymentUnitAccount { get; set; } // PaymentUnitAccount
		/// <summary>普通发票</summary>	
		[Description("普通发票")]
        public string GeneralInvoice { get; set; } // GeneralInvoice
		/// <summary>增值税发票</summary>	
		[Description("增值税发票")]
        public string VATInvoice { get; set; } // VATInvoice
		/// <summary>现场发票</summary>	
		[Description("现场发票")]
        public string OnSiteInvoice { get; set; } // OnSiteInvoice
		/// <summary>收据</summary>	
		[Description("收据")]
        public string Receipt { get; set; } // Receipt
		/// <summary>备注</summary>	
		[Description("备注")]
        public string Remark { get; set; } // Remark
		/// <summary>技术部意见</summary>	
		[Description("技术部意见")]
        public string Technicalsign { get; set; } // Technicalsign
		/// <summary>法务部意见</summary>	
		[Description("法务部意见")]
        public string Lawyersign { get; set; } // Lawyersign
		/// <summary>公司主管领导意见</summary>	
		[Description("公司主管领导意见")]
        public string Leadersign { get; set; } // Leadersign
		/// <summary>总经理意见</summary>	
		[Description("总经理意见")]
        public string Managersign { get; set; } // Managersign
		/// <summary>财务部意见</summary>	
		[Description("财务部意见")]
        public string Financesign { get; set; } // Financesign
		/// <summary>合同名称</summary>	
		[Description("合同名称")]
        public string ContractName { get; set; } // ContractName
		/// <summary>课题ID</summary>	
		[Description("课题ID")]
        public string ProjectID { get; set; } // ProjectID

        // Reverse navigation
		[JsonIgnore]
        public virtual ICollection<T_Technology_PaymentApply_PaymentPlan> T_Technology_PaymentApply_PaymentPlan { get { onT_Technology_PaymentApply_PaymentPlanGetting(); return _T_Technology_PaymentApply_PaymentPlan;} }
		private ICollection<T_Technology_PaymentApply_PaymentPlan> _T_Technology_PaymentApply_PaymentPlan;
		partial void onT_Technology_PaymentApply_PaymentPlanGetting();


        public T_Technology_PaymentApply()
        {
            _T_Technology_PaymentApply_PaymentPlan = new List<T_Technology_PaymentApply_PaymentPlan>();
        }
    }

	/// <summary>付款计划</summary>	
	[Description("付款计划")]
    public partial class T_Technology_PaymentApply_PaymentPlan : Formula.BaseModel
    {
		/// <summary></summary>	
		[Description("")]
        public string ID { get; set; } // ID (Primary key)
		/// <summary></summary>	
		[Description("")]
        public string T_Technology_PaymentApplyID { get; set; } // T_Technology_PaymentApplyID
		/// <summary></summary>	
		[Description("")]
        public double? SortIndex { get; set; } // SortIndex
		/// <summary></summary>	
		[Description("")]
        public string IsReleased { get; set; } // IsReleased
		/// <summary>付款条件</summary>	
		[Description("付款条件")]
        public string PaymentCondition { get; set; } // PaymentCondition
		/// <summary>付款时间</summary>	
		[Description("付款时间")]
        public DateTime? PaymentDate { get; set; } // PaymentDate
		/// <summary>付款金额</summary>	
		[Description("付款金额")]
        public string PaymentAmount { get; set; } // PaymentAmount

        // Foreign keys
		[JsonIgnore]
        public virtual T_Technology_PaymentApply T_Technology_PaymentApply { get; set; } //  T_Technology_PaymentApplyID - FK_T_Technology_PaymentApply_PaymentPlan_T_Technology_PaymentApply
    }

	/// <summary>人员安排审批表单</summary>	
	[Description("人员安排审批表单")]
    public partial class T_Technology_PersonnelPlacement : Formula.BaseModel
    {
		/// <summary></summary>	
		[Description("")]
        public string ID { get; set; } // ID (Primary key)
		/// <summary></summary>	
		[Description("")]
        public DateTime? CreateDate { get; set; } // CreateDate
		/// <summary></summary>	
		[Description("")]
        public DateTime? ModifyDate { get; set; } // ModifyDate
		/// <summary></summary>	
		[Description("")]
        public string CreateUserID { get; set; } // CreateUserID
		/// <summary></summary>	
		[Description("")]
        public string CreateUser { get; set; } // CreateUser
		/// <summary></summary>	
		[Description("")]
        public string ModifyUserID { get; set; } // ModifyUserID
		/// <summary></summary>	
		[Description("")]
        public string ModifyUser { get; set; } // ModifyUser
		/// <summary></summary>	
		[Description("")]
        public string OrgID { get; set; } // OrgID
		/// <summary></summary>	
		[Description("")]
        public string CompanyID { get; set; } // CompanyID
		/// <summary></summary>	
		[Description("")]
        public string FlowPhase { get; set; } // FlowPhase
		/// <summary></summary>	
		[Description("")]
        public string FlowInfo { get; set; } // FlowInfo
		/// <summary></summary>	
		[Description("")]
        public string StepName { get; set; } // StepName
		/// <summary>课题名称</summary>	
		[Description("课题名称")]
        public string Projectname { get; set; } // Projectname
		/// <summary>申报年度</summary>	
		[Description("申报年度")]
        public string Declareyear { get; set; } // Declareyear
		/// <summary>负责部门</summary>	
		[Description("负责部门")]
        public string Responsibledept { get; set; } // Responsibledept
		/// <summary>负责部门名称</summary>	
		[Description("负责部门名称")]
        public string ResponsibledeptName { get; set; } // ResponsibledeptName
		/// <summary>课题编号</summary>	
		[Description("课题编号")]
        public string Projectnumber { get; set; } // Projectnumber
		/// <summary>课题分类</summary>	
		[Description("课题分类")]
        public string Projectclass { get; set; } // Projectclass
		/// <summary>课题水平</summary>	
		[Description("课题水平")]
        public string Projectlevel { get; set; } // Projectlevel
		/// <summary>课题总负责人</summary>	
		[Description("课题总负责人")]
        public string Projectleader { get; set; } // Projectleader
		/// <summary>课题总负责人名称</summary>	
		[Description("课题总负责人名称")]
        public string ProjectleaderName { get; set; } // ProjectleaderName
		/// <summary>课题现状</summary>	
		[Description("课题现状")]
        public string Subjectstatus { get; set; } // Subjectstatus
		/// <summary>目前需要</summary>	
		[Description("目前需要")]
        public string Nowneed { get; set; } // Nowneed
		/// <summary>课题等级</summary>	
		[Description("课题等级")]
        public string Subjectlevel { get; set; } // Subjectlevel
		/// <summary>课题分值</summary>	
		[Description("课题分值")]
        public string Subjectscore { get; set; } // Subjectscore
		/// <summary>确认等级</summary>	
		[Description("确认等级")]
        public string Confirmlevel { get; set; } // Confirmlevel
		/// <summary>确认分值</summary>	
		[Description("确认分值")]
        public string Confirmscore { get; set; } // Confirmscore
		/// <summary>应用目标</summary>	
		[Description("应用目标")]
        public string Target { get; set; } // Target
		/// <summary>申请经费(元)</summary>	
		[Description("申请经费(元)")]
        public string Applyfee { get; set; } // Applyfee
		/// <summary>开始时间</summary>	
		[Description("开始时间")]
        public DateTime? Starttime { get; set; } // Starttime
		/// <summary>预计完工时间</summary>	
		[Description("预计完工时间")]
        public DateTime? Estimatedtime { get; set; } // Estimatedtime
		/// <summary>人员安排日期</summary>	
		[Description("人员安排日期")]
        public DateTime? PersonnelPlacementTime { get; set; } // PersonnelPlacementTime
		/// <summary>人员安排人</summary>	
		[Description("人员安排人")]
        public string PersonnelPlacementPerson { get; set; } // PersonnelPlacementPerson
		/// <summary>已安排人数</summary>	
		[Description("已安排人数")]
        public int? PlacementCount { get; set; } // PlacementCount
		/// <summary>人员安排详情</summary>	
		[Description("人员安排详情")]
        public string PlacementDetail { get; set; } // PlacementDetail
		/// <summary>技术部意见</summary>	
		[Description("技术部意见")]
        public string Technicalsign { get; set; } // Technicalsign
		/// <summary>公司领导意见</summary>	
		[Description("公司领导意见")]
        public string Leadersign { get; set; } // Leadersign
		/// <summary>课题ID</summary>	
		[Description("课题ID")]
        public string ProjectID { get; set; } // ProjectID
		/// <summary>人员安排人名称</summary>	
		[Description("人员安排人名称")]
        public string PersonnelPlacementPersonName { get; set; } // PersonnelPlacementPersonName

        // Reverse navigation
		[JsonIgnore]
        public virtual ICollection<T_Technology_PersonnelPlacement_PlacementDetail> T_Technology_PersonnelPlacement_PlacementDetail { get { onT_Technology_PersonnelPlacement_PlacementDetailGetting(); return _T_Technology_PersonnelPlacement_PlacementDetail;} }
		private ICollection<T_Technology_PersonnelPlacement_PlacementDetail> _T_Technology_PersonnelPlacement_PlacementDetail;
		partial void onT_Technology_PersonnelPlacement_PlacementDetailGetting();


        public T_Technology_PersonnelPlacement()
        {
            _T_Technology_PersonnelPlacement_PlacementDetail = new List<T_Technology_PersonnelPlacement_PlacementDetail>();
        }
    }

	/// <summary>人员安排详情</summary>	
	[Description("人员安排详情")]
    public partial class T_Technology_PersonnelPlacement_PlacementDetail : Formula.BaseModel
    {
		/// <summary></summary>	
		[Description("")]
        public string ID { get; set; } // ID (Primary key)
		/// <summary></summary>	
		[Description("")]
        public string T_Technology_PersonnelPlacementID { get; set; } // T_Technology_PersonnelPlacementID
		/// <summary></summary>	
		[Description("")]
        public double? SortIndex { get; set; } // SortIndex
		/// <summary></summary>	
		[Description("")]
        public string IsReleased { get; set; } // IsReleased
		/// <summary>人员姓名名称</summary>	
		[Description("人员姓名名称")]
        public string PersonName { get; set; } // PersonName
		/// <summary>专业</summary>	
		[Description("专业")]
        public string Profession { get; set; } // Profession
		/// <summary>所属部门</summary>	
		[Description("所属部门")]
        public string Department { get; set; } // Department
		/// <summary>备注</summary>	
		[Description("备注")]
        public string Remark { get; set; } // Remark
		/// <summary>人员姓名</summary>	
		[Description("人员姓名")]
        public string Person { get; set; } // Person

        // Foreign keys
		[JsonIgnore]
        public virtual T_Technology_PersonnelPlacement T_Technology_PersonnelPlacement { get; set; } //  T_Technology_PersonnelPlacementID - FK_T_Technology_PersonnelPlacement_PlacementDetail_T_Technology_PersonnelPlacement
    }

	/// <summary>课题立项申请表单</summary>	
	[Description("课题立项申请表单")]
    public partial class T_Technology_Projectapplicationform : Formula.BaseModel
    {
		/// <summary></summary>	
		[Description("")]
        public string ID { get; set; } // ID (Primary key)
		/// <summary></summary>	
		[Description("")]
        public DateTime? CreateDate { get; set; } // CreateDate
		/// <summary></summary>	
		[Description("")]
        public DateTime? ModifyDate { get; set; } // ModifyDate
		/// <summary></summary>	
		[Description("")]
        public string CreateUserID { get; set; } // CreateUserID
		/// <summary></summary>	
		[Description("")]
        public string CreateUser { get; set; } // CreateUser
		/// <summary></summary>	
		[Description("")]
        public string ModifyUserID { get; set; } // ModifyUserID
		/// <summary></summary>	
		[Description("")]
        public string ModifyUser { get; set; } // ModifyUser
		/// <summary></summary>	
		[Description("")]
        public string OrgID { get; set; } // OrgID
		/// <summary></summary>	
		[Description("")]
        public string CompanyID { get; set; } // CompanyID
		/// <summary></summary>	
		[Description("")]
        public string FlowPhase { get; set; } // FlowPhase
		/// <summary></summary>	
		[Description("")]
        public string FlowInfo { get; set; } // FlowInfo
		/// <summary></summary>	
		[Description("")]
        public string StepName { get; set; } // StepName
		/// <summary>申报年度</summary>	
		[Description("申报年度")]
        public string Declareyear { get; set; } // Declareyear
		/// <summary>申报日期</summary>	
		[Description("申报日期")]
        public DateTime? Declaredate { get; set; } // Declaredate
		/// <summary>申报人</summary>	
		[Description("申报人")]
        public string Declarant { get; set; } // Declarant
		/// <summary>申报人名称</summary>	
		[Description("申报人名称")]
        public string DeclarantName { get; set; } // DeclarantName
		/// <summary>负责部门</summary>	
		[Description("负责部门")]
        public string Responsibledept { get; set; } // Responsibledept
		/// <summary>负责部门名称</summary>	
		[Description("负责部门名称")]
        public string ResponsibledeptName { get; set; } // ResponsibledeptName
		/// <summary>课题名称</summary>	
		[Description("课题名称")]
        public string Projectname { get; set; } // Projectname
		/// <summary>课题编号</summary>	
		[Description("课题编号")]
        public string Projectnumber { get; set; } // Projectnumber
		/// <summary>课题分类</summary>	
		[Description("课题分类")]
        public string Projectclass { get; set; } // Projectclass
		/// <summary>课题水平</summary>	
		[Description("课题水平")]
        public string Projectlevel { get; set; } // Projectlevel
		/// <summary>课题总负责人</summary>	
		[Description("课题总负责人")]
        public string Projectleader { get; set; } // Projectleader
		/// <summary>课题总负责人名称</summary>	
		[Description("课题总负责人名称")]
        public string ProjectleaderName { get; set; } // ProjectleaderName
		/// <summary>课题现状</summary>	
		[Description("课题现状")]
        public string Subjectstatus { get; set; } // Subjectstatus
		/// <summary>目前需要</summary>	
		[Description("目前需要")]
        public string Nowneed { get; set; } // Nowneed
		/// <summary>课题等级</summary>	
		[Description("课题等级")]
        public string Subjectlevel { get; set; } // Subjectlevel
		/// <summary>课题分值</summary>	
		[Description("课题分值")]
        public decimal? Subjectscore { get; set; } // Subjectscore
		/// <summary>确认等级</summary>	
		[Description("确认等级")]
        public string Confirmlevel { get; set; } // Confirmlevel
		/// <summary>确认分值</summary>	
		[Description("确认分值")]
        public decimal? Confirmscore { get; set; } // Confirmscore
		/// <summary>应用目标</summary>	
		[Description("应用目标")]
        public string Target { get; set; } // Target
		/// <summary>申请经费(元)</summary>	
		[Description("申请经费(元)")]
        public decimal? Applyfee { get; set; } // Applyfee
		/// <summary>开始时间</summary>	
		[Description("开始时间")]
        public DateTime? Starttime { get; set; } // Starttime
		/// <summary>预计完工时间</summary>	
		[Description("预计完工时间")]
        public DateTime? Estimatedtime { get; set; } // Estimatedtime
		/// <summary>课题内容</summary>	
		[Description("课题内容")]
        public string Subjectcontent { get; set; } // Subjectcontent
		/// <summary>需要解决的技术关键和难点</summary>	
		[Description("需要解决的技术关键和难点")]
        public string Difficulty { get; set; } // Difficulty
		/// <summary>成果形式</summary>	
		[Description("成果形式")]
        public string Resultsform { get; set; } // Resultsform
		/// <summary>外部课题</summary>	
		[Description("外部课题")]
        public string Externalsubject { get; set; } // Externalsubject
		/// <summary>内部基础类课题</summary>	
		[Description("内部基础类课题")]
        public string Foundationtopics { get; set; } // Foundationtopics
		/// <summary>内部提升类课题</summary>	
		[Description("内部提升类课题")]
        public string Promotetopics { get; set; } // Promotetopics
		/// <summary>阶段进度计划</summary>	
		[Description("阶段进度计划")]
        public string Stageschedule { get; set; } // Stageschedule
		/// <summary>申报资料</summary>	
		[Description("申报资料")]
        public string Filing { get; set; } // Filing
		/// <summary>参加部门</summary>	
		[Description("参加部门")]
        public string Participatedept { get; set; } // Participatedept
		/// <summary>参加部门名称</summary>	
		[Description("参加部门名称")]
        public string ParticipatedeptName { get; set; } // ParticipatedeptName
		/// <summary>部门分工、业务协作内容</summary>	
		[Description("部门分工、业务协作内容")]
        public string cooperationcontent { get; set; } // cooperationcontent
		/// <summary>技术委员会专家子表</summary>	
		[Description("技术委员会专家子表")]
        public string Technicalexpert { get; set; } // Technicalexpert
		/// <summary>技术委员会专家</summary>	
		[Description("技术委员会专家")]
        public string Technicalcommitteeexpert { get; set; } // Technicalcommitteeexpert
		/// <summary>技术部意见</summary>	
		[Description("技术部意见")]
        public string Technicalsign { get; set; } // Technicalsign
		/// <summary>公司领导意见</summary>	
		[Description("公司领导意见")]
        public string Leadersign { get; set; } // Leadersign
		/// <summary>技术委员会专家userid</summary>	
		[Description("技术委员会专家userid")]
        public string TechnicalCommitteeIDS { get; set; } // TechnicalCommitteeIDS

        // Reverse navigation
		[JsonIgnore]
        public virtual ICollection<T_Technology_Projectapplicationform_Technicalexpert> T_Technology_Projectapplicationform_Technicalexpert { get { onT_Technology_Projectapplicationform_TechnicalexpertGetting(); return _T_Technology_Projectapplicationform_Technicalexpert;} }
		private ICollection<T_Technology_Projectapplicationform_Technicalexpert> _T_Technology_Projectapplicationform_Technicalexpert;
		partial void onT_Technology_Projectapplicationform_TechnicalexpertGetting();


        public T_Technology_Projectapplicationform()
        {
            _T_Technology_Projectapplicationform_Technicalexpert = new List<T_Technology_Projectapplicationform_Technicalexpert>();
        }
    }

	/// <summary>技术委员会专家子表</summary>	
	[Description("技术委员会专家子表")]
    public partial class T_Technology_Projectapplicationform_Technicalexpert : Formula.BaseModel
    {
		/// <summary></summary>	
		[Description("")]
        public string ID { get; set; } // ID (Primary key)
		/// <summary></summary>	
		[Description("")]
        public string T_Technology_ProjectapplicationformID { get; set; } // T_Technology_ProjectapplicationformID
		/// <summary></summary>	
		[Description("")]
        public double? SortIndex { get; set; } // SortIndex
		/// <summary></summary>	
		[Description("")]
        public string IsReleased { get; set; } // IsReleased
		/// <summary>技术委员会</summary>	
		[Description("技术委员会")]
        public string TechnicalCommittee { get; set; } // TechnicalCommittee
		/// <summary>技术委员会名称</summary>	
		[Description("技术委员会名称")]
        public string TechnicalCommitteeName { get; set; } // TechnicalCommitteeName
		/// <summary>技术委员会主任</summary>	
		[Description("技术委员会主任")]
        public string TechnicalCommitteeDirector { get; set; } // TechnicalCommitteeDirector
		/// <summary>技术委员会主任名称</summary>	
		[Description("技术委员会主任名称")]
        public string TechnicalCommitteeDirectorName { get; set; } // TechnicalCommitteeDirectorName
		/// <summary>备注</summary>	
		[Description("备注")]
        public string Remark { get; set; } // Remark

        // Foreign keys
		[JsonIgnore]
        public virtual T_Technology_Projectapplicationform T_Technology_Projectapplicationform { get; set; } //  T_Technology_ProjectapplicationformID - FK_T_Technology_Projectapplicationform_Technicalexpert_T_Technology_Projectapplicationform
    }

	/// <summary>延期申请</summary>	
	[Description("延期申请")]
    public partial class T_Technology_ProjectDelayApply : Formula.BaseModel
    {
		/// <summary></summary>	
		[Description("")]
        public string ID { get; set; } // ID (Primary key)
		/// <summary></summary>	
		[Description("")]
        public DateTime? CreateDate { get; set; } // CreateDate
		/// <summary></summary>	
		[Description("")]
        public DateTime? ModifyDate { get; set; } // ModifyDate
		/// <summary></summary>	
		[Description("")]
        public string CreateUserID { get; set; } // CreateUserID
		/// <summary></summary>	
		[Description("")]
        public string CreateUser { get; set; } // CreateUser
		/// <summary></summary>	
		[Description("")]
        public string ModifyUserID { get; set; } // ModifyUserID
		/// <summary></summary>	
		[Description("")]
        public string ModifyUser { get; set; } // ModifyUser
		/// <summary></summary>	
		[Description("")]
        public string OrgID { get; set; } // OrgID
		/// <summary></summary>	
		[Description("")]
        public string CompanyID { get; set; } // CompanyID
		/// <summary></summary>	
		[Description("")]
        public string FlowPhase { get; set; } // FlowPhase
		/// <summary></summary>	
		[Description("")]
        public string FlowInfo { get; set; } // FlowInfo
		/// <summary></summary>	
		[Description("")]
        public string StepName { get; set; } // StepName
		/// <summary>课题名称</summary>	
		[Description("课题名称")]
        public string Projectname { get; set; } // Projectname
		/// <summary>申报年度</summary>	
		[Description("申报年度")]
        public string Declareyear { get; set; } // Declareyear
		/// <summary>负责部门</summary>	
		[Description("负责部门")]
        public string Responsibledept { get; set; } // Responsibledept
		/// <summary>负责部门名称</summary>	
		[Description("负责部门名称")]
        public string ResponsibledeptName { get; set; } // ResponsibledeptName
		/// <summary>课题编号</summary>	
		[Description("课题编号")]
        public string Projectnumber { get; set; } // Projectnumber
		/// <summary>课题分类</summary>	
		[Description("课题分类")]
        public string Projectclass { get; set; } // Projectclass
		/// <summary>课题总负责人</summary>	
		[Description("课题总负责人")]
        public string Projectleader { get; set; } // Projectleader
		/// <summary>课题总负责人名称</summary>	
		[Description("课题总负责人名称")]
        public string ProjectleaderName { get; set; } // ProjectleaderName
		/// <summary>确认分值</summary>	
		[Description("确认分值")]
        public string Confirmscore { get; set; } // Confirmscore
		/// <summary>开始时间</summary>	
		[Description("开始时间")]
        public DateTime? Starttime { get; set; } // Starttime
		/// <summary>预计完工时间</summary>	
		[Description("预计完工时间")]
        public DateTime? Estimatedtime { get; set; } // Estimatedtime
		/// <summary>申请选项</summary>	
		[Description("申请选项")]
        public string Apply { get; set; } // Apply
		/// <summary>申请日期</summary>	
		[Description("申请日期")]
        public DateTime? Declaredate { get; set; } // Declaredate
		/// <summary>实际开工日期</summary>	
		[Description("实际开工日期")]
        public DateTime? ActualStartDate { get; set; } // ActualStartDate
		/// <summary>延期完成日期</summary>	
		[Description("延期完成日期")]
        public DateTime? DelayFinishDate { get; set; } // DelayFinishDate
		/// <summary>原因说明</summary>	
		[Description("原因说明")]
        public string Reason { get; set; } // Reason
		/// <summary>填写人</summary>	
		[Description("填写人")]
        public string FillPerson { get; set; } // FillPerson
		/// <summary>填写人名称</summary>	
		[Description("填写人名称")]
        public string FillPersonName { get; set; } // FillPersonName
		/// <summary>填写日期</summary>	
		[Description("填写日期")]
        public DateTime? FillingDate { get; set; } // FillingDate
		/// <summary>技术部意见</summary>	
		[Description("技术部意见")]
        public string Technicalsign { get; set; } // Technicalsign
		/// <summary>公司领导意见</summary>	
		[Description("公司领导意见")]
        public string Leadersign { get; set; } // Leadersign
		/// <summary>课题ID</summary>	
		[Description("课题ID")]
        public string ProjectID { get; set; } // ProjectID
    }

	/// <summary>课题进度</summary>	
	[Description("课题进度")]
    public partial class T_Technology_ProjectProgress : Formula.BaseModel
    {
		/// <summary></summary>	
		[Description("")]
        public string ID { get; set; } // ID (Primary key)
		/// <summary></summary>	
		[Description("")]
        public DateTime? CreateDate { get; set; } // CreateDate
		/// <summary></summary>	
		[Description("")]
        public DateTime? ModifyDate { get; set; } // ModifyDate
		/// <summary></summary>	
		[Description("")]
        public string CreateUserID { get; set; } // CreateUserID
		/// <summary></summary>	
		[Description("")]
        public string CreateUser { get; set; } // CreateUser
		/// <summary></summary>	
		[Description("")]
        public string ModifyUserID { get; set; } // ModifyUserID
		/// <summary></summary>	
		[Description("")]
        public string ModifyUser { get; set; } // ModifyUser
		/// <summary></summary>	
		[Description("")]
        public string OrgID { get; set; } // OrgID
		/// <summary></summary>	
		[Description("")]
        public string CompanyID { get; set; } // CompanyID
		/// <summary></summary>	
		[Description("")]
        public string FlowPhase { get; set; } // FlowPhase
		/// <summary></summary>	
		[Description("")]
        public string FlowInfo { get; set; } // FlowInfo
		/// <summary></summary>	
		[Description("")]
        public string StepName { get; set; } // StepName
		/// <summary>课题名称</summary>	
		[Description("课题名称")]
        public string Projectname { get; set; } // Projectname
		/// <summary>申报年度</summary>	
		[Description("申报年度")]
        public string Declareyear { get; set; } // Declareyear
		/// <summary>负责部门</summary>	
		[Description("负责部门")]
        public string Responsibledept { get; set; } // Responsibledept
		/// <summary>负责部门名称</summary>	
		[Description("负责部门名称")]
        public string ResponsibledeptName { get; set; } // ResponsibledeptName
		/// <summary>课题编号</summary>	
		[Description("课题编号")]
        public string Projectnumber { get; set; } // Projectnumber
		/// <summary>课题总负责人</summary>	
		[Description("课题总负责人")]
        public string Projectleader { get; set; } // Projectleader
		/// <summary>课题总负责人名称</summary>	
		[Description("课题总负责人名称")]
        public string ProjectleaderName { get; set; } // ProjectleaderName
		/// <summary>确认等级</summary>	
		[Description("确认等级")]
        public string Confirmlevel { get; set; } // Confirmlevel
		/// <summary>确认分值</summary>	
		[Description("确认分值")]
        public string Confirmscore { get; set; } // Confirmscore
		/// <summary>开始时间</summary>	
		[Description("开始时间")]
        public DateTime? Starttime { get; set; } // Starttime
		/// <summary>预计完工时间</summary>	
		[Description("预计完工时间")]
        public DateTime? Estimatedtime { get; set; } // Estimatedtime
		/// <summary>填写人</summary>	
		[Description("填写人")]
        public string SignPerson { get; set; } // SignPerson
		/// <summary>填写日期</summary>	
		[Description("填写日期")]
        public DateTime? SignTime { get; set; } // SignTime
		/// <summary>进度表版本号</summary>	
		[Description("进度表版本号")]
        public int? Version { get; set; } // Version
		/// <summary>详细计划</summary>	
		[Description("详细计划")]
        public string PlanDetail { get; set; } // PlanDetail
		/// <summary>技术部意见</summary>	
		[Description("技术部意见")]
        public string Technicalsign { get; set; } // Technicalsign
		/// <summary>公司领导意见</summary>	
		[Description("公司领导意见")]
        public string Leadersign { get; set; } // Leadersign
		/// <summary>课题ID</summary>	
		[Description("课题ID")]
        public string ProjectID { get; set; } // ProjectID
		/// <summary>VersionNumber</summary>	
		[Description("VersionNumber")]
        public string VersionNumber { get; set; } // VersionNumber
		/// <summary>RelateID</summary>	
		[Description("RelateID")]
        public string RelateID { get; set; } // RelateID

        // Reverse navigation
		[JsonIgnore]
        public virtual ICollection<T_Technology_ProjectProgress_PlanDetail> T_Technology_ProjectProgress_PlanDetail { get { onT_Technology_ProjectProgress_PlanDetailGetting(); return _T_Technology_ProjectProgress_PlanDetail;} }
		private ICollection<T_Technology_ProjectProgress_PlanDetail> _T_Technology_ProjectProgress_PlanDetail;
		partial void onT_Technology_ProjectProgress_PlanDetailGetting();


        public T_Technology_ProjectProgress()
        {
            _T_Technology_ProjectProgress_PlanDetail = new List<T_Technology_ProjectProgress_PlanDetail>();
        }
    }

	/// <summary>详细计划</summary>	
	[Description("详细计划")]
    public partial class T_Technology_ProjectProgress_PlanDetail : Formula.BaseModel
    {
		/// <summary></summary>	
		[Description("")]
        public string ID { get; set; } // ID (Primary key)
		/// <summary></summary>	
		[Description("")]
        public string T_Technology_ProjectProgressID { get; set; } // T_Technology_ProjectProgressID
		/// <summary></summary>	
		[Description("")]
        public double? SortIndex { get; set; } // SortIndex
		/// <summary></summary>	
		[Description("")]
        public string IsReleased { get; set; } // IsReleased
		/// <summary>计划进度日期</summary>	
		[Description("计划进度日期")]
        public DateTime? PlanTime { get; set; } // PlanTime
		/// <summary>承担专业</summary>	
		[Description("承担专业")]
        public string Major { get; set; } // Major
		/// <summary>工作内容</summary>	
		[Description("工作内容")]
        public string WorkContent { get; set; } // WorkContent
		/// <summary>类别</summary>	
		[Description("类别")]
        public string Category { get; set; } // Category
		/// <summary>备注</summary>	
		[Description("备注")]
        public string Remark { get; set; } // Remark

        // Foreign keys
		[JsonIgnore]
        public virtual T_Technology_ProjectProgress T_Technology_ProjectProgress { get; set; } //  T_Technology_ProjectProgressID - FK_T_Technology_ProjectProgress_PlanDetail_T_Technology_ProjectProgress
    }

	/// <summary>成果提交</summary>	
	[Description("成果提交")]
    public partial class T_Technology_ResultCommit : Formula.BaseModel
    {
		/// <summary></summary>	
		[Description("")]
        public string ID { get; set; } // ID (Primary key)
		/// <summary></summary>	
		[Description("")]
        public DateTime? CreateDate { get; set; } // CreateDate
		/// <summary></summary>	
		[Description("")]
        public DateTime? ModifyDate { get; set; } // ModifyDate
		/// <summary></summary>	
		[Description("")]
        public string CreateUserID { get; set; } // CreateUserID
		/// <summary></summary>	
		[Description("")]
        public string CreateUser { get; set; } // CreateUser
		/// <summary></summary>	
		[Description("")]
        public string ModifyUserID { get; set; } // ModifyUserID
		/// <summary></summary>	
		[Description("")]
        public string ModifyUser { get; set; } // ModifyUser
		/// <summary></summary>	
		[Description("")]
        public string OrgID { get; set; } // OrgID
		/// <summary></summary>	
		[Description("")]
        public string CompanyID { get; set; } // CompanyID
		/// <summary></summary>	
		[Description("")]
        public string FlowPhase { get; set; } // FlowPhase
		/// <summary></summary>	
		[Description("")]
        public string FlowInfo { get; set; } // FlowInfo
		/// <summary></summary>	
		[Description("")]
        public string StepName { get; set; } // StepName
		/// <summary>课题名称</summary>	
		[Description("课题名称")]
        public string Projectname { get; set; } // Projectname
		/// <summary>课题编号</summary>	
		[Description("课题编号")]
        public string Projectnumber { get; set; } // Projectnumber
		/// <summary>课题总负责人</summary>	
		[Description("课题总负责人")]
        public string Projectleader { get; set; } // Projectleader
		/// <summary>课题总负责人名称</summary>	
		[Description("课题总负责人名称")]
        public string ProjectleaderName { get; set; } // ProjectleaderName
		/// <summary>课题等级</summary>	
		[Description("课题等级")]
        public string Subjectlevel { get; set; } // Subjectlevel
		/// <summary>课题水平</summary>	
		[Description("课题水平")]
        public string Projectlevel { get; set; } // Projectlevel
		/// <summary>课题核准经费</summary>	
		[Description("课题核准经费")]
        public string ProjectFunds { get; set; } // ProjectFunds
		/// <summary>实际支出经费</summary>	
		[Description("实际支出经费")]
        public string ActualExpenditure { get; set; } // ActualExpenditure
		/// <summary>开始时间</summary>	
		[Description("开始时间")]
        public DateTime? StartTime { get; set; } // StartTime
		/// <summary>实际完工时间</summary>	
		[Description("实际完工时间")]
        public DateTime? ActualFinishedTime { get; set; } // ActualFinishedTime
		/// <summary>填写人</summary>	
		[Description("填写人")]
        public string Declarant { get; set; } // Declarant
		/// <summary>填写日期</summary>	
		[Description("填写日期")]
        public DateTime? DeclareTime { get; set; } // DeclareTime
		/// <summary>课件成果上传</summary>	
		[Description("课件成果上传")]
        public string ResultAttachment { get; set; } // ResultAttachment
		/// <summary>参与部门领导</summary>	
		[Description("参与部门领导")]
        public string DepartmentLeader { get; set; } // DepartmentLeader
		/// <summary>技术部意见</summary>	
		[Description("技术部意见")]
        public string Technicalsign { get; set; } // Technicalsign
		/// <summary>公司主管领导意见</summary>	
		[Description("公司主管领导意见")]
        public string Leadersign { get; set; } // Leadersign
		/// <summary>课题ID</summary>	
		[Description("课题ID")]
        public string ProjectID { get; set; } // ProjectID
		/// <summary>填写人名称</summary>	
		[Description("填写人名称")]
        public string DeclarantName { get; set; } // DeclarantName
    }

	/// <summary>中国税收居民身份证明申请表</summary>	
	[Description("中国税收居民身份证明申请表")]
    public partial class T_TM_ApplicationFormOfChinaIDCard : Formula.BaseModel
    {
		/// <summary></summary>	
		[Description("")]
        public string ID { get; set; } // ID (Primary key)
		/// <summary>填写日期</summary>	
		[Description("填写日期")]
        public DateTime? CreateDate { get; set; } // CreateDate
		/// <summary></summary>	
		[Description("")]
        public DateTime? ModifyDate { get; set; } // ModifyDate
		/// <summary></summary>	
		[Description("")]
        public string CreateUserID { get; set; } // CreateUserID
		/// <summary>填写人</summary>	
		[Description("填写人")]
        public string CreateUser { get; set; } // CreateUser
		/// <summary></summary>	
		[Description("")]
        public string ModifyUserID { get; set; } // ModifyUserID
		/// <summary></summary>	
		[Description("")]
        public string ModifyUser { get; set; } // ModifyUser
		/// <summary></summary>	
		[Description("")]
        public string OrgID { get; set; } // OrgID
		/// <summary></summary>	
		[Description("")]
        public string CompanyID { get; set; } // CompanyID
		/// <summary></summary>	
		[Description("")]
        public string FlowPhase { get; set; } // FlowPhase
		/// <summary></summary>	
		[Description("")]
        public string FlowInfo { get; set; } // FlowInfo
		/// <summary></summary>	
		[Description("")]
        public string StepName { get; set; } // StepName
		/// <summary>纳税人名称</summary>	
		[Description("纳税人名称")]
        public string NSRMC { get; set; } // NSRMC
		/// <summary>纳税人名称名称</summary>	
		[Description("纳税人名称名称")]
        public string NSRMCName { get; set; } // NSRMCName
		/// <summary>英文名称</summary>	
		[Description("英文名称")]
        public string YWMC { get; set; } // YWMC
		/// <summary>纳税人识别号</summary>	
		[Description("纳税人识别号")]
        public string NSRSBH { get; set; } // NSRSBH
		/// <summary>注册登记地</summary>	
		[Description("注册登记地")]
        public string ZCDJD { get; set; } // ZCDJD
		/// <summary>通讯地址</summary>	
		[Description("通讯地址")]
        public string TXDZ { get; set; } // TXDZ
		/// <summary>实际管理机构所在地</summary>	
		[Description("实际管理机构所在地")]
        public string SJGLJGSZD { get; set; } // SJGLJGSZD
		/// <summary>联系电话</summary>	
		[Description("联系电话")]
        public string LXDH { get; set; } // LXDH
		/// <summary>主管税务机关名称</summary>	
		[Description("主管税务机关名称")]
        public string ZGSWJGMC { get; set; } // ZGSWJGMC
		/// <summary>申请年度</summary>	
		[Description("申请年度")]
        public string ApplyYear { get; set; } // ApplyYear
		/// <summary>缔约对方国家</summary>	
		[Description("缔约对方国家")]
        public string DYDFGJ { get; set; } // DYDFGJ
		/// <summary>对方纳税人名称中文</summary>	
		[Description("对方纳税人名称中文")]
        public string DFNSRMCZW { get; set; } // DFNSRMCZW
		/// <summary>对方纳税人名称英文</summary>	
		[Description("对方纳税人名称英文")]
        public string DFNSRMCYW { get; set; } // DFNSRMCYW
		/// <summary>对方纳税人识别号</summary>	
		[Description("对方纳税人识别号")]
        public string DFNSRSBH { get; set; } // DFNSRSBH
		/// <summary>拟享受协定名称</summary>	
		[Description("拟享受协定名称")]
        public string NXSXDMC { get; set; } // NXSXDMC
		/// <summary>拟享受协定条款</summary>	
		[Description("拟享受协定条款")]
        public string NXSXDTK { get; set; } // NXSXDTK
		/// <summary>拟享受协定收入金额</summary>	
		[Description("拟享受协定收入金额")]
        public string NXSXDSRJE { get; set; } // NXSXDSRJE
		/// <summary>预计减免税金额</summary>	
		[Description("预计减免税金额")]
        public string YJJMSJE { get; set; } // YJJMSJE
		/// <summary>拟享受协定名称Two</summary>	
		[Description("拟享受协定名称Two")]
        public string NXSXDMCTwo { get; set; } // NXSXDMCTwo
		/// <summary>拟享受协定条款Two</summary>	
		[Description("拟享受协定条款Two")]
        public string NXSXDTKTwo { get; set; } // NXSXDTKTwo
		/// <summary>拟享受协定收入金额Two</summary>	
		[Description("拟享受协定收入金额Two")]
        public string NXSXDSRJETwo { get; set; } // NXSXDSRJETwo
		/// <summary>预计减免税金额Two</summary>	
		[Description("预计减免税金额Two")]
        public string YJJMSJETwo { get; set; } // YJJMSJETwo
		/// <summary>相关附件</summary>	
		[Description("相关附件")]
        public string XGFJ { get; set; } // XGFJ
		/// <summary>申请人签字</summary>	
		[Description("申请人签字")]
        public string SQRQZ { get; set; } // SQRQZ
		/// <summary>部门正职签字</summary>	
		[Description("部门正职签字")]
        public string BMZZQZ { get; set; } // BMZZQZ
		/// <summary>财务税务会计备案签字</summary>	
		[Description("财务税务会计备案签字")]
        public string CWSWHJBAQZ { get; set; } // CWSWHJBAQZ
		/// <summary>申请人接收签字</summary>	
		[Description("申请人接收签字")]
        public string SQRJSQZ { get; set; } // SQRJSQZ
		/// <summary>流程结束日期</summary>	
		[Description("流程结束日期")]
        public DateTime? FlowEndDate { get; set; } // FlowEndDate
    }

	/// <summary>出口退税资料收集</summary>	
	[Description("出口退税资料收集")]
    public partial class T_TM_CKTSZLSJ : Formula.BaseModel
    {
		/// <summary></summary>	
		[Description("")]
        public string ID { get; set; } // ID (Primary key)
		/// <summary>填写日期</summary>	
		[Description("填写日期")]
        public DateTime? CreateDate { get; set; } // CreateDate
		/// <summary></summary>	
		[Description("")]
        public DateTime? ModifyDate { get; set; } // ModifyDate
		/// <summary></summary>	
		[Description("")]
        public string CreateUserID { get; set; } // CreateUserID
		/// <summary>填写人</summary>	
		[Description("填写人")]
        public string CreateUser { get; set; } // CreateUser
		/// <summary></summary>	
		[Description("")]
        public string ModifyUserID { get; set; } // ModifyUserID
		/// <summary></summary>	
		[Description("")]
        public string ModifyUser { get; set; } // ModifyUser
		/// <summary></summary>	
		[Description("")]
        public string OrgID { get; set; } // OrgID
		/// <summary></summary>	
		[Description("")]
        public string CompanyID { get; set; } // CompanyID
		/// <summary></summary>	
		[Description("")]
        public string FlowPhase { get; set; } // FlowPhase
		/// <summary></summary>	
		[Description("")]
        public string FlowInfo { get; set; } // FlowInfo
		/// <summary></summary>	
		[Description("")]
        public string StepName { get; set; } // StepName
		/// <summary>填写人部门</summary>	
		[Description("填写人部门")]
        public string CreateUserDept { get; set; } // CreateUserDept
		/// <summary>填写人部门名称</summary>	
		[Description("填写人部门名称")]
        public string CreateUserDeptName { get; set; } // CreateUserDeptName
		/// <summary>填写人电话</summary>	
		[Description("填写人电话")]
        public string CreateUserPhone { get; set; } // CreateUserPhone
		/// <summary>相关附件</summary>	
		[Description("相关附件")]
        public string RelevantAttachments { get; set; } // RelevantAttachments
		/// <summary>备注</summary>	
		[Description("备注")]
        public string Remark { get; set; } // Remark
		/// <summary>申请人签字</summary>	
		[Description("申请人签字")]
        public string SQRQZ { get; set; } // SQRQZ
		/// <summary>部门副职签字</summary>	
		[Description("部门副职签字")]
        public string BMFZQZ { get; set; } // BMFZQZ
		/// <summary>财务税务会计接收签字</summary>	
		[Description("财务税务会计接收签字")]
        public string CWSWHJJSQZ { get; set; } // CWSWHJJSQZ
		/// <summary>流程结束日期</summary>	
		[Description("流程结束日期")]
        public DateTime? FlowEndDate { get; set; } // FlowEndDate
    }

	/// <summary>跨区域涉税事项报告申请</summary>	
	[Description("跨区域涉税事项报告申请")]
    public partial class T_TM_CrossRegionTaxReporting : Formula.BaseModel
    {
		/// <summary></summary>	
		[Description("")]
        public string ID { get; set; } // ID (Primary key)
		/// <summary></summary>	
		[Description("")]
        public DateTime? CreateDate { get; set; } // CreateDate
		/// <summary></summary>	
		[Description("")]
        public DateTime? ModifyDate { get; set; } // ModifyDate
		/// <summary></summary>	
		[Description("")]
        public string CreateUserID { get; set; } // CreateUserID
		/// <summary></summary>	
		[Description("")]
        public string CreateUser { get; set; } // CreateUser
		/// <summary></summary>	
		[Description("")]
        public string ModifyUserID { get; set; } // ModifyUserID
		/// <summary></summary>	
		[Description("")]
        public string ModifyUser { get; set; } // ModifyUser
		/// <summary></summary>	
		[Description("")]
        public string OrgID { get; set; } // OrgID
		/// <summary></summary>	
		[Description("")]
        public string CompanyID { get; set; } // CompanyID
		/// <summary></summary>	
		[Description("")]
        public string FlowPhase { get; set; } // FlowPhase
		/// <summary></summary>	
		[Description("")]
        public string FlowInfo { get; set; } // FlowInfo
		/// <summary></summary>	
		[Description("")]
        public string StepName { get; set; } // StepName
		/// <summary>纳税人名称</summary>	
		[Description("纳税人名称")]
        public string NSRMC { get; set; } // NSRMC
		/// <summary>纳税人名称名称</summary>	
		[Description("纳税人名称名称")]
        public string NSRMCName { get; set; } // NSRMCName
		/// <summary>纳税人识别号</summary>	
		[Description("纳税人识别号")]
        public string NSRSBH { get; set; } // NSRSBH
		/// <summary>跨区域涉税事项联系人</summary>	
		[Description("跨区域涉税事项联系人")]
        public string KQYSSSXLXR { get; set; } // KQYSSSXLXR
		/// <summary>跨区域涉税事项联系人名称</summary>	
		[Description("跨区域涉税事项联系人名称")]
        public string KQYSSSXLXRName { get; set; } // KQYSSSXLXRName
		/// <summary>跨区域涉税事项联系人座机</summary>	
		[Description("跨区域涉税事项联系人座机")]
        public string KQYSSSXLXRZJ { get; set; } // KQYSSSXLXRZJ
		/// <summary>跨区域涉税事项联系人手机号</summary>	
		[Description("跨区域涉税事项联系人手机号")]
        public string KQYSSSXLXRSJH { get; set; } // KQYSSSXLXRSJH
		/// <summary>经办人</summary>	
		[Description("经办人")]
        public string JBR { get; set; } // JBR
		/// <summary>经办人名称</summary>	
		[Description("经办人名称")]
        public string JBRName { get; set; } // JBRName
		/// <summary>经办人座机</summary>	
		[Description("经办人座机")]
        public string JBRZJ { get; set; } // JBRZJ
		/// <summary>经办人手机</summary>	
		[Description("经办人手机")]
        public string JBRSJ { get; set; } // JBRSJ
		/// <summary>跨区域经营地址</summary>	
		[Description("跨区域经营地址")]
        public string KQYJYDZ { get; set; } // KQYJYDZ
		/// <summary>经营方式</summary>	
		[Description("经营方式")]
        public string JYFS { get; set; } // JYFS
		/// <summary>合同名称</summary>	
		[Description("合同名称")]
        public string HTMC { get; set; } // HTMC
		/// <summary>合同名称名称</summary>	
		[Description("合同名称名称")]
        public string HTMCName { get; set; } // HTMCName
		/// <summary>合同号</summary>	
		[Description("合同号")]
        public string HTH { get; set; } // HTH
		/// <summary>合同金额</summary>	
		[Description("合同金额")]
        public string HTJE { get; set; } // HTJE
		/// <summary>合同有效期起</summary>	
		[Description("合同有效期起")]
        public DateTime? HTYXQQ { get; set; } // HTYXQQ
		/// <summary>合同有效期止</summary>	
		[Description("合同有效期止")]
        public DateTime? HTYXQZ { get; set; } // HTYXQZ
		/// <summary>合同相对方名称</summary>	
		[Description("合同相对方名称")]
        public string HTXDFMC { get; set; } // HTXDFMC
		/// <summary>合同相对方纳税人识别号</summary>	
		[Description("合同相对方纳税人识别号")]
        public string HTXDFNSRSBH { get; set; } // HTXDFNSRSBH
		/// <summary>合同相关附件</summary>	
		[Description("合同相关附件")]
        public string HTXGFJ { get; set; } // HTXGFJ
		/// <summary>领取人</summary>	
		[Description("领取人")]
        public string LQR { get; set; } // LQR
		/// <summary>领取人名称</summary>	
		[Description("领取人名称")]
        public string LQRName { get; set; } // LQRName
		/// <summary>跨区域涉税事项报验管理编码</summary>	
		[Description("跨区域涉税事项报验管理编码")]
        public string KQYSSSXBYGLBM { get; set; } // KQYSSSXBYGLBM
		/// <summary>跨区域涉税事项报告表上传</summary>	
		[Description("跨区域涉税事项报告表上传")]
        public string KQYSSSXBGBSC { get; set; } // KQYSSSXBGBSC
		/// <summary>注销反馈表</summary>	
		[Description("注销反馈表")]
        public string ZXFKB { get; set; } // ZXFKB
		/// <summary>申请人签字</summary>	
		[Description("申请人签字")]
        public string SQRQZ { get; set; } // SQRQZ
		/// <summary>财务税务会计备案签字</summary>	
		[Description("财务税务会计备案签字")]
        public string CWSWHJBAQZ { get; set; } // CWSWHJBAQZ
		/// <summary>领取人签字</summary>	
		[Description("领取人签字")]
        public string LQRQZ { get; set; } // LQRQZ
		/// <summary>财务税务会计注销签字</summary>	
		[Description("财务税务会计注销签字")]
        public string CWSWHJZXQZ { get; set; } // CWSWHJZXQZ
		/// <summary>流程结束日期</summary>	
		[Description("流程结束日期")]
        public DateTime? FlowEndDate { get; set; } // FlowEndDate
    }

	/// <summary>对外支付税务备案申请表</summary>	
	[Description("对外支付税务备案申请表")]
    public partial class T_TM_ExternalPaymentApply : Formula.BaseModel
    {
		/// <summary></summary>	
		[Description("")]
        public string ID { get; set; } // ID (Primary key)
		/// <summary></summary>	
		[Description("")]
        public DateTime? CreateDate { get; set; } // CreateDate
		/// <summary></summary>	
		[Description("")]
        public DateTime? ModifyDate { get; set; } // ModifyDate
		/// <summary></summary>	
		[Description("")]
        public string CreateUserID { get; set; } // CreateUserID
		/// <summary></summary>	
		[Description("")]
        public string CreateUser { get; set; } // CreateUser
		/// <summary></summary>	
		[Description("")]
        public string ModifyUserID { get; set; } // ModifyUserID
		/// <summary></summary>	
		[Description("")]
        public string ModifyUser { get; set; } // ModifyUser
		/// <summary></summary>	
		[Description("")]
        public string OrgID { get; set; } // OrgID
		/// <summary></summary>	
		[Description("")]
        public string CompanyID { get; set; } // CompanyID
		/// <summary></summary>	
		[Description("")]
        public string FlowPhase { get; set; } // FlowPhase
		/// <summary></summary>	
		[Description("")]
        public string FlowInfo { get; set; } // FlowInfo
		/// <summary></summary>	
		[Description("")]
        public string StepName { get; set; } // StepName
		/// <summary>备案合同ID</summary>	
		[Description("备案合同ID")]
        public string ContractID { get; set; } // ContractID
		/// <summary>备案合同号</summary>	
		[Description("备案合同号")]
        public string RecordContract { get; set; } // RecordContract
		/// <summary>备案合同号名称</summary>	
		[Description("备案合同号名称")]
        public string RecordContractName { get; set; } // RecordContractName
		/// <summary>合同名称</summary>	
		[Description("合同名称")]
        public string ContractName { get; set; } // ContractName
		/// <summary>合同期限起</summary>	
		[Description("合同期限起")]
        public DateTime? ContracttStartDate { get; set; } // ContracttStartDate
		/// <summary>合同期限止</summary>	
		[Description("合同期限止")]
        public DateTime? ContracttEndDate { get; set; } // ContracttEndDate
		/// <summary>合同币种</summary>	
		[Description("合同币种")]
        public string Curreny { get; set; } // Curreny
		/// <summary>合同总金额</summary>	
		[Description("合同总金额")]
        public decimal? ContractAmount { get; set; } // ContractAmount
		/// <summary>已付款金额</summary>	
		[Description("已付款金额")]
        public decimal? AlreadyPaymentAmount { get; set; } // AlreadyPaymentAmount
		/// <summary>本次付汇金额</summary>	
		[Description("本次付汇金额")]
        public decimal? ThisTimePaymentAmount { get; set; } // ThisTimePaymentAmount
		/// <summary>付汇日期</summary>	
		[Description("付汇日期")]
        public DateTime? PaymentDate { get; set; } // PaymentDate
		/// <summary>机构名称</summary>	
		[Description("机构名称")]
        public string TaxpayerName { get; set; } // TaxpayerName
		/// <summary>纳税人识别号</summary>	
		[Description("纳税人识别号")]
        public string TaxpayerIdentificationNumber { get; set; } // TaxpayerIdentificationNumber
		/// <summary>地址或住所</summary>	
		[Description("地址或住所")]
        public string TaxpayerAddress { get; set; } // TaxpayerAddress
		/// <summary>付汇银行</summary>	
		[Description("付汇银行")]
        public string TaxpayerOpenBank { get; set; } // TaxpayerOpenBank
		/// <summary>付汇账号</summary>	
		[Description("付汇账号")]
        public string TaxpayerBankAccount { get; set; } // TaxpayerBankAccount
		/// <summary>联系人</summary>	
		[Description("联系人")]
        public string ContactPerson { get; set; } // ContactPerson
		/// <summary>联系人电话</summary>	
		[Description("联系人电话")]
        public string ContactPersonPhone { get; set; } // ContactPersonPhone
		/// <summary>收款人名称</summary>	
		[Description("收款人名称")]
        public string PayeeName { get; set; } // PayeeName
		/// <summary>所在国家或地区</summary>	
		[Description("所在国家或地区")]
        public string PayeeCountry { get; set; } // PayeeCountry
		/// <summary>地点</summary>	
		[Description("地点")]
        public string PayeeLocation { get; set; } // PayeeLocation
		/// <summary>境外机构是否关联</summary>	
		[Description("境外机构是否关联")]
        public string JWJGSFGL { get; set; } // JWJGSFGL
		/// <summary>收汇银行</summary>	
		[Description("收汇银行")]
        public string ContractorOpenBank { get; set; } // ContractorOpenBank
		/// <summary>收汇账号</summary>	
		[Description("收汇账号")]
        public string ContractorBankAccount { get; set; } // ContractorBankAccount
		/// <summary>申请人签字意见</summary>	
		[Description("申请人签字意见")]
        public string SQRQZYJ { get; set; } // SQRQZYJ
		/// <summary>部门正职签字意见</summary>	
		[Description("部门正职签字意见")]
        public string BMZZQZYJ { get; set; } // BMZZQZYJ
		/// <summary>承包管理部涉外主管签字意见</summary>	
		[Description("承包管理部涉外主管签字意见")]
        public string CBGLBSWZGQZYJ { get; set; } // CBGLBSWZGQZYJ
		/// <summary>财务部税务会计</summary>	
		[Description("财务部税务会计")]
        public string CWBSWHJ { get; set; } // CWBSWHJ
		/// <summary>流程结束日期</summary>	
		[Description("流程结束日期")]
        public DateTime? FlowEndDate { get; set; } // FlowEndDate
		/// <summary>付汇银行名称</summary>	
		[Description("付汇银行名称")]
        public string TaxpayerOpenBankName { get; set; } // TaxpayerOpenBankName
    }

	/// <summary>涉外涉税合同备案表</summary>	
	[Description("涉外涉税合同备案表")]
    public partial class T_TM_ForeignRelatedTaxContract : Formula.BaseModel
    {
		/// <summary></summary>	
		[Description("")]
        public string ID { get; set; } // ID (Primary key)
		/// <summary>申请日期</summary>	
		[Description("申请日期")]
        public DateTime? CreateDate { get; set; } // CreateDate
		/// <summary></summary>	
		[Description("")]
        public DateTime? ModifyDate { get; set; } // ModifyDate
		/// <summary></summary>	
		[Description("")]
        public string CreateUserID { get; set; } // CreateUserID
		/// <summary>申请人</summary>	
		[Description("申请人")]
        public string CreateUser { get; set; } // CreateUser
		/// <summary></summary>	
		[Description("")]
        public string ModifyUserID { get; set; } // ModifyUserID
		/// <summary></summary>	
		[Description("")]
        public string ModifyUser { get; set; } // ModifyUser
		/// <summary></summary>	
		[Description("")]
        public string OrgID { get; set; } // OrgID
		/// <summary></summary>	
		[Description("")]
        public string CompanyID { get; set; } // CompanyID
		/// <summary></summary>	
		[Description("")]
        public string FlowPhase { get; set; } // FlowPhase
		/// <summary></summary>	
		[Description("")]
        public string FlowInfo { get; set; } // FlowInfo
		/// <summary></summary>	
		[Description("")]
        public string StepName { get; set; } // StepName
		/// <summary>申请人部门</summary>	
		[Description("申请人部门")]
        public string CreateUserDept { get; set; } // CreateUserDept
		/// <summary>申请人部门名称</summary>	
		[Description("申请人部门名称")]
        public string CreateUserDeptName { get; set; } // CreateUserDeptName
		/// <summary>报告日期</summary>	
		[Description("报告日期")]
        public DateTime? ReportDate { get; set; } // ReportDate
		/// <summary>纳税人名称</summary>	
		[Description("纳税人名称")]
        public string TaxpayerName { get; set; } // TaxpayerName
		/// <summary>纳税人名称名称</summary>	
		[Description("纳税人名称名称")]
        public string TaxpayerNameName { get; set; } // TaxpayerNameName
		/// <summary>纳税人识别号</summary>	
		[Description("纳税人识别号")]
        public string TaxpayerIdentificationNumber { get; set; } // TaxpayerIdentificationNumber
		/// <summary>联系人</summary>	
		[Description("联系人")]
        public string ContactPerson { get; set; } // ContactPerson
		/// <summary>联系人电话</summary>	
		[Description("联系人电话")]
        public string ContactPersonPhone { get; set; } // ContactPersonPhone
		/// <summary>承包商名称</summary>	
		[Description("承包商名称")]
        public string ContractorName { get; set; } // ContractorName
		/// <summary>承包商地址</summary>	
		[Description("承包商地址")]
        public string ContractorAddress { get; set; } // ContractorAddress
		/// <summary>承包商开户银行名称</summary>	
		[Description("承包商开户银行名称")]
        public string ContractorOpenBank { get; set; } // ContractorOpenBank
		/// <summary>承包商账号</summary>	
		[Description("承包商账号")]
        public string ContractorBankAccount { get; set; } // ContractorBankAccount
		/// <summary>承包商联系人</summary>	
		[Description("承包商联系人")]
        public string ContractorContactPerson { get; set; } // ContractorContactPerson
		/// <summary>承包商联系人电话</summary>	
		[Description("承包商联系人电话")]
        public string ContractorContactPersonPhone { get; set; } // ContractorContactPersonPhone
		/// <summary>代理人名称</summary>	
		[Description("代理人名称")]
        public string AgentName { get; set; } // AgentName
		/// <summary>代理人联系人</summary>	
		[Description("代理人联系人")]
        public string AgentContact { get; set; } // AgentContact
		/// <summary>代理人联系人电话</summary>	
		[Description("代理人联系人电话")]
        public string AgentContactPhone { get; set; } // AgentContactPhone
		/// <summary>代理人联系传真</summary>	
		[Description("代理人联系传真")]
        public string AgentContactFax { get; set; } // AgentContactFax
		/// <summary>项目名称</summary>	
		[Description("项目名称")]
        public string ProjectName { get; set; } // ProjectName
		/// <summary>项目类型</summary>	
		[Description("项目类型")]
        public string ProjectType { get; set; } // ProjectType
		/// <summary>其他项目类型</summary>	
		[Description("其他项目类型")]
        public string OtherProjectType { get; set; } // OtherProjectType
		/// <summary>合同名称</summary>	
		[Description("合同名称")]
        public string ContractName { get; set; } // ContractName
		/// <summary>备案合同号</summary>	
		[Description("备案合同号")]
        public string RecordContractCode { get; set; } // RecordContractCode
		/// <summary>作业或劳务地点</summary>	
		[Description("作业或劳务地点")]
        public string WorkLocation { get; set; } // WorkLocation
		/// <summary>在华作业或劳务人数</summary>	
		[Description("在华作业或劳务人数")]
        public string ZHZYHLWRS { get; set; } // ZHZYHLWRS
		/// <summary>合同期限起</summary>	
		[Description("合同期限起")]
        public DateTime? ContracttStartDate { get; set; } // ContracttStartDate
		/// <summary>合同期限止</summary>	
		[Description("合同期限止")]
        public DateTime? ContracttEndDate { get; set; } // ContracttEndDate
		/// <summary>签订合同日期</summary>	
		[Description("签订合同日期")]
        public DateTime? ContractSignDate { get; set; } // ContractSignDate
		/// <summary>币种</summary>	
		[Description("币种")]
        public string Currency { get; set; } // Currency
		/// <summary>合同额</summary>	
		[Description("合同额")]
        public decimal? ContractAmount { get; set; } // ContractAmount
		/// <summary>付款次数</summary>	
		[Description("付款次数")]
        public int? PaymentNumber { get; set; } // PaymentNumber
		/// <summary>收款人名称</summary>	
		[Description("收款人名称")]
        public string PayeeName { get; set; } // PayeeName
		/// <summary>所在国家或地区</summary>	
		[Description("所在国家或地区")]
        public string PayeeCountry { get; set; } // PayeeCountry
		/// <summary>地点</summary>	
		[Description("地点")]
        public string PayeeLocation { get; set; } // PayeeLocation
		/// <summary>境外机构是否关联</summary>	
		[Description("境外机构是否关联")]
        public string JWJGSFGL { get; set; } // JWJGSFGL
		/// <summary>收汇银行</summary>	
		[Description("收汇银行")]
        public string Bank { get; set; } // Bank
		/// <summary>收汇账号</summary>	
		[Description("收汇账号")]
        public string BankAccount { get; set; } // BankAccount
		/// <summary>申请人签字意见</summary>	
		[Description("申请人签字意见")]
        public string Applysign { get; set; } // Applysign
		/// <summary>部门正职签字意见</summary>	
		[Description("部门正职签字意见")]
        public string Deptheadsign { get; set; } // Deptheadsign
		/// <summary>承包管理部涉外主管签字意见</summary>	
		[Description("承包管理部涉外主管签字意见")]
        public string CBGLBSWZGQZYJ { get; set; } // CBGLBSWZGQZYJ
		/// <summary>财务部税务会计</summary>	
		[Description("财务部税务会计")]
        public string CWBSWHJ { get; set; } // CWBSWHJ
		/// <summary>流程结束日期</summary>	
		[Description("流程结束日期")]
        public DateTime? FlowEndDate { get; set; } // FlowEndDate
    }

	/// <summary>纳税人信息维护表</summary>	
	[Description("纳税人信息维护表")]
    public partial class T_TM_TaxpayerInfo : Formula.BaseModel
    {
		/// <summary></summary>	
		[Description("")]
        public string ID { get; set; } // ID (Primary key)
		/// <summary>填写日期</summary>	
		[Description("填写日期")]
        public DateTime? CreateDate { get; set; } // CreateDate
		/// <summary>修改日期</summary>	
		[Description("修改日期")]
        public DateTime? ModifyDate { get; set; } // ModifyDate
		/// <summary></summary>	
		[Description("")]
        public string CreateUserID { get; set; } // CreateUserID
		/// <summary>填写人</summary>	
		[Description("填写人")]
        public string CreateUser { get; set; } // CreateUser
		/// <summary></summary>	
		[Description("")]
        public string ModifyUserID { get; set; } // ModifyUserID
		/// <summary>修改人</summary>	
		[Description("修改人")]
        public string ModifyUser { get; set; } // ModifyUser
		/// <summary></summary>	
		[Description("")]
        public string OrgID { get; set; } // OrgID
		/// <summary></summary>	
		[Description("")]
        public string CompanyID { get; set; } // CompanyID
		/// <summary></summary>	
		[Description("")]
        public string FlowPhase { get; set; } // FlowPhase
		/// <summary></summary>	
		[Description("")]
        public string FlowInfo { get; set; } // FlowInfo
		/// <summary></summary>	
		[Description("")]
        public string StepName { get; set; } // StepName
		/// <summary>纳税人名称</summary>	
		[Description("纳税人名称")]
        public string Name { get; set; } // Name
		/// <summary>统一社会信用代码</summary>	
		[Description("统一社会信用代码")]
        public string UnifiedSocialCreditCode { get; set; } // UnifiedSocialCreditCode
		/// <summary>英文名称</summary>	
		[Description("英文名称")]
        public string EName { get; set; } // EName
		/// <summary>联系电话</summary>	
		[Description("联系电话")]
        public string ContractPhone { get; set; } // ContractPhone
		/// <summary>主管税务机关</summary>	
		[Description("主管税务机关")]
        public string CompetentTaxAuthority { get; set; } // CompetentTaxAuthority
		/// <summary>注册登记地</summary>	
		[Description("注册登记地")]
        public string RegisteredPlace { get; set; } // RegisteredPlace
		/// <summary>实际管理机构所在地</summary>	
		[Description("实际管理机构所在地")]
        public string SJGLJGSZD { get; set; } // SJGLJGSZD
		/// <summary>地址或住所</summary>	
		[Description("地址或住所")]
        public string AddressOrResidence { get; set; } // AddressOrResidence
		/// <summary>跨区域涉税事项联系人</summary>	
		[Description("跨区域涉税事项联系人")]
        public string KQYSSSXLXR { get; set; } // KQYSSSXLXR
		/// <summary>跨区域涉税事项联系人座机</summary>	
		[Description("跨区域涉税事项联系人座机")]
        public string KQYSSSXLXRZJ { get; set; } // KQYSSSXLXRZJ
		/// <summary>跨区域涉税事项联系人手机号</summary>	
		[Description("跨区域涉税事项联系人手机号")]
        public string KQYSSSXLXRSJH { get; set; } // KQYSSSXLXRSJH
		/// <summary>涉外涉税合同备案联系人</summary>	
		[Description("涉外涉税合同备案联系人")]
        public string SWSSHTBALXR { get; set; } // SWSSHTBALXR
		/// <summary>涉外涉税合同备案联系人座机</summary>	
		[Description("涉外涉税合同备案联系人座机")]
        public string SWSSHTBALXRZJ { get; set; } // SWSSHTBALXRZJ
		/// <summary>涉外涉税合同备案联系人手机号</summary>	
		[Description("涉外涉税合同备案联系人手机号")]
        public string SWSSHTBALXRSJH { get; set; } // SWSSHTBALXRSJH
    }

	/// <summary>个人出差备案</summary>	
	[Description("个人出差备案")]
    public partial class T_TravelRecord_Person : Formula.BaseModel
    {
		/// <summary></summary>	
		[Description("")]
        public string ID { get; set; } // ID (Primary key)
		/// <summary></summary>	
		[Description("")]
        public DateTime? CreateDate { get; set; } // CreateDate
		/// <summary></summary>	
		[Description("")]
        public DateTime? ModifyDate { get; set; } // ModifyDate
		/// <summary></summary>	
		[Description("")]
        public string CreateUserID { get; set; } // CreateUserID
		/// <summary></summary>	
		[Description("")]
        public string CreateUser { get; set; } // CreateUser
		/// <summary></summary>	
		[Description("")]
        public string ModifyUserID { get; set; } // ModifyUserID
		/// <summary></summary>	
		[Description("")]
        public string ModifyUser { get; set; } // ModifyUser
		/// <summary></summary>	
		[Description("")]
        public string OrgID { get; set; } // OrgID
		/// <summary></summary>	
		[Description("")]
        public string CompanyID { get; set; } // CompanyID
		/// <summary></summary>	
		[Description("")]
        public string FlowPhase { get; set; } // FlowPhase
		/// <summary></summary>	
		[Description("")]
        public string FlowInfo { get; set; } // FlowInfo
		/// <summary></summary>	
		[Description("")]
        public string StepName { get; set; } // StepName
		/// <summary>出差人</summary>	
		[Description("出差人")]
        public string Evection { get; set; } // Evection
		/// <summary>出差人名称</summary>	
		[Description("出差人名称")]
        public string EvectionName { get; set; } // EvectionName
		/// <summary>出差人部门</summary>	
		[Description("出差人部门")]
        public string EvectionDept { get; set; } // EvectionDept
		/// <summary>出差人部门名称</summary>	
		[Description("出差人部门名称")]
        public string EvectionDeptName { get; set; } // EvectionDeptName
		/// <summary>申请日期</summary>	
		[Description("申请日期")]
        public DateTime? ApplyDate { get; set; } // ApplyDate
		/// <summary>出差流水号</summary>	
		[Description("出差流水号")]
        public string SerialNumber { get; set; } // SerialNumber
		/// <summary>人员专业</summary>	
		[Description("人员专业")]
        public string Major { get; set; } // Major
		/// <summary>任务性质</summary>	
		[Description("任务性质")]
        public string TaskNature { get; set; } // TaskNature
		/// <summary>出发地</summary>	
		[Description("出发地")]
        public string StartPoint { get; set; } // StartPoint
		/// <summary>是否差中差</summary>	
		[Description("是否差中差")]
        public string IsEvectionInEvection { get; set; } // IsEvectionInEvection
		/// <summary>主出差单流水编号</summary>	
		[Description("主出差单流水编号")]
        public string MainBusinessTripListNumber { get; set; } // MainBusinessTripListNumber
		/// <summary>出差详情</summary>	
		[Description("出差详情")]
        public string EvectionDetail { get; set; } // EvectionDetail
		/// <summary>开始时间</summary>	
		[Description("开始时间")]
        public DateTime? StartDate { get; set; } // StartDate
		/// <summary>预计结束时间</summary>	
		[Description("预计结束时间")]
        public DateTime? ExpectEndDate { get; set; } // ExpectEndDate
		/// <summary>通知人</summary>	
		[Description("通知人")]
        public string NoticeUser { get; set; } // NoticeUser
		/// <summary>出差天数</summary>	
		[Description("出差天数")]
        public string EvectionDays { get; set; } // EvectionDays
		/// <summary>出国类型</summary>	
		[Description("出国类型")]
        public string GoAbroadType { get; set; } // GoAbroadType
		/// <summary>出差事由</summary>	
		[Description("出差事由")]
        public string GoAbroadReason { get; set; } // GoAbroadReason
		/// <summary>附件</summary>	
		[Description("附件")]
        public string Attach { get; set; } // Attach
		/// <summary>顾客名称</summary>	
		[Description("顾客名称")]
        public string Customer { get; set; } // Customer
		/// <summary>顾客名称名称</summary>	
		[Description("顾客名称名称")]
        public string CustomerName { get; set; } // CustomerName
		/// <summary>项目名称</summary>	
		[Description("项目名称")]
        public string Project { get; set; } // Project
		/// <summary>项目名称名称</summary>	
		[Description("项目名称名称")]
        public string ProjectName { get; set; } // ProjectName
		/// <summary>合同号</summary>	
		[Description("合同号")]
        public string ContactNo { get; set; } // ContactNo
		/// <summary>项目号</summary>	
		[Description("项目号")]
        public string ProjectNo { get; set; } // ProjectNo
		/// <summary>项目类型</summary>	
		[Description("项目类型")]
        public string ProjectType { get; set; } // ProjectType
		/// <summary>部门负责人审批</summary>	
		[Description("部门负责人审批")]
        public string DeptLeaderSign { get; set; } // DeptLeaderSign
		/// <summary>会议培训审批</summary>	
		[Description("会议培训审批")]
        public string ConferenceTrainingSign { get; set; } // ConferenceTrainingSign
		/// <summary>审批人审批</summary>	
		[Description("审批人审批")]
        public string ApproverSign { get; set; } // ApproverSign
		/// <summary>技术管理部审批</summary>	
		[Description("技术管理部审批")]
        public string TechnicalManagementDepartmentSign { get; set; } // TechnicalManagementDepartmentSign
		/// <summary>总工程师审批</summary>	
		[Description("总工程师审批")]
        public string ChiefEngineer { get; set; } // ChiefEngineer
		/// <summary>通知人名称</summary>	
		[Description("通知人名称")]
        public string NoticeUserName { get; set; } // NoticeUserName
		/// <summary>是否六类审批</summary>	
		[Description("是否六类审批")]
        public string IsSixSign { get; set; } // IsSixSign
		/// <summary>主出差单流水编号名称</summary>	
		[Description("主出差单流水编号名称")]
        public string MainBusinessTripListNumberName { get; set; } // MainBusinessTripListNumberName

        // Reverse navigation
		[JsonIgnore]
        public virtual ICollection<T_TravelRecord_Person_EvectionDetail> T_TravelRecord_Person_EvectionDetail { get { onT_TravelRecord_Person_EvectionDetailGetting(); return _T_TravelRecord_Person_EvectionDetail;} }
		private ICollection<T_TravelRecord_Person_EvectionDetail> _T_TravelRecord_Person_EvectionDetail;
		partial void onT_TravelRecord_Person_EvectionDetailGetting();


        public T_TravelRecord_Person()
        {
            _T_TravelRecord_Person_EvectionDetail = new List<T_TravelRecord_Person_EvectionDetail>();
        }
    }

	/// <summary>出差详情</summary>	
	[Description("出差详情")]
    public partial class T_TravelRecord_Person_EvectionDetail : Formula.BaseModel
    {
		/// <summary></summary>	
		[Description("")]
        public string ID { get; set; } // ID (Primary key)
		/// <summary></summary>	
		[Description("")]
        public string T_TravelRecord_PersonID { get; set; } // T_TravelRecord_PersonID
		/// <summary></summary>	
		[Description("")]
        public double? SortIndex { get; set; } // SortIndex
		/// <summary></summary>	
		[Description("")]
        public string IsReleased { get; set; } // IsReleased
		/// <summary>国家</summary>	
		[Description("国家")]
        public string Country { get; set; } // Country
		/// <summary>省份</summary>	
		[Description("省份")]
        public string Province { get; set; } // Province
		/// <summary>城市</summary>	
		[Description("城市")]
        public string City { get; set; } // City
		/// <summary>备注</summary>	
		[Description("备注")]
        public string Remark { get; set; } // Remark

        // Foreign keys
		[JsonIgnore]
        public virtual T_TravelRecord_Person T_TravelRecord_Person { get; set; } //  T_TravelRecord_PersonID - FK_T_TravelRecord_Person_EvectionDetail_T_TravelRecord_Person
    }

	/// <summary>结案报告填报</summary>	
	[Description("结案报告填报")]
    public partial class T_TwoLevelReporting_CompletionReport : Formula.BaseModel
    {
		/// <summary></summary>	
		[Description("")]
        public string ID { get; set; } // ID (Primary key)
		/// <summary></summary>	
		[Description("")]
        public DateTime? CreateDate { get; set; } // CreateDate
		/// <summary></summary>	
		[Description("")]
        public DateTime? ModifyDate { get; set; } // ModifyDate
		/// <summary></summary>	
		[Description("")]
        public string CreateUserID { get; set; } // CreateUserID
		/// <summary></summary>	
		[Description("")]
        public string CreateUser { get; set; } // CreateUser
		/// <summary></summary>	
		[Description("")]
        public string ModifyUserID { get; set; } // ModifyUserID
		/// <summary></summary>	
		[Description("")]
        public string ModifyUser { get; set; } // ModifyUser
		/// <summary></summary>	
		[Description("")]
        public string OrgID { get; set; } // OrgID
		/// <summary></summary>	
		[Description("")]
        public string CompanyID { get; set; } // CompanyID
		/// <summary></summary>	
		[Description("")]
        public string FlowPhase { get; set; } // FlowPhase
		/// <summary></summary>	
		[Description("")]
        public string FlowInfo { get; set; } // FlowInfo
		/// <summary></summary>	
		[Description("")]
        public string StepName { get; set; } // StepName
		/// <summary>填报人</summary>	
		[Description("填报人")]
        public string Applicant { get; set; } // Applicant
		/// <summary>填报人名称</summary>	
		[Description("填报人名称")]
        public string ApplicantName { get; set; } // ApplicantName
		/// <summary>填报日期</summary>	
		[Description("填报日期")]
        public DateTime? DateOfSubmission { get; set; } // DateOfSubmission
		/// <summary>填报人单位</summary>	
		[Description("填报人单位")]
        public string FilledBy { get; set; } // FilledBy
		/// <summary>填报人单位名称</summary>	
		[Description("填报人单位名称")]
        public string FilledByName { get; set; } // FilledByName
		/// <summary>案件类型</summary>	
		[Description("案件类型")]
        public string CaseType { get; set; } // CaseType
		/// <summary>案名</summary>	
		[Description("案名")]
        public string CaseName { get; set; } // CaseName
		/// <summary>案号</summary>	
		[Description("案号")]
        public string CaseNumber { get; set; } // CaseNumber
		/// <summary>审理日期</summary>	
		[Description("审理日期")]
        public DateTime? TrialDate { get; set; } // TrialDate
		/// <summary>原告或原申请人</summary>	
		[Description("原告或原申请人")]
        public string PlaintiffOrOriginalApplicant { get; set; } // PlaintiffOrOriginalApplicant
		/// <summary>被告或被申请人</summary>	
		[Description("被告或被申请人")]
        public string DefendantOrRespondent { get; set; } // DefendantOrRespondent
		/// <summary>有无独立请求权</summary>	
		[Description("有无独立请求权")]
        public string IsThereAnIndependentClaim { get; set; } // IsThereAnIndependentClaim
		/// <summary>审判程序</summary>	
		[Description("审判程序")]
        public string TrialProcedure { get; set; } // TrialProcedure
		/// <summary>审判庭仲裁庭组成人员</summary>	
		[Description("审判庭仲裁庭组成人员")]
        public string MembersOfTheArbitralTribunal { get; set; } // MembersOfTheArbitralTribunal
		/// <summary>移交单位</summary>	
		[Description("移交单位")]
        public string TransferingUnit { get; set; } // TransferingUnit
		/// <summary>移交单位名称</summary>	
		[Description("移交单位名称")]
        public string TransferingUnitName { get; set; } // TransferingUnitName
		/// <summary>案件标的额</summary>	
		[Description("案件标的额")]
        public decimal? AmountOfTheSubjectMatterOfTheCase { get; set; } // AmountOfTheSubjectMatterOfTheCase
		/// <summary>案情简介</summary>	
		[Description("案情简介")]
        public string BriefIntroductionOfTheCase { get; set; } // BriefIntroductionOfTheCase
		/// <summary>结案方式</summary>	
		[Description("结案方式")]
        public string ClosingMethod { get; set; } // ClosingMethod
		/// <summary>调解内容</summary>	
		[Description("调解内容")]
        public string MediationContent { get; set; } // MediationContent
		/// <summary>裁判内容</summary>	
		[Description("裁判内容")]
        public string RefereeContent { get; set; } // RefereeContent
		/// <summary>执行情况</summary>	
		[Description("执行情况")]
        public string ImplementationSituation { get; set; } // ImplementationSituation
		/// <summary>其他需说明或注意问题</summary>	
		[Description("其他需说明或注意问题")]
        public string OtherProblemsToBeExplainedOrNoted { get; set; } // OtherProblemsToBeExplainedOrNoted
		/// <summary>主题词</summary>	
		[Description("主题词")]
        public string Subject { get; set; } // Subject
    }

	/// <summary>法治活动上报</summary>	
	[Description("法治活动上报")]
    public partial class T_TwoLevelReporting_LawActivity : Formula.BaseModel
    {
		/// <summary></summary>	
		[Description("")]
        public string ID { get; set; } // ID (Primary key)
		/// <summary></summary>	
		[Description("")]
        public DateTime? CreateDate { get; set; } // CreateDate
		/// <summary></summary>	
		[Description("")]
        public DateTime? ModifyDate { get; set; } // ModifyDate
		/// <summary></summary>	
		[Description("")]
        public string CreateUserID { get; set; } // CreateUserID
		/// <summary></summary>	
		[Description("")]
        public string CreateUser { get; set; } // CreateUser
		/// <summary></summary>	
		[Description("")]
        public string ModifyUserID { get; set; } // ModifyUserID
		/// <summary></summary>	
		[Description("")]
        public string ModifyUser { get; set; } // ModifyUser
		/// <summary></summary>	
		[Description("")]
        public string OrgID { get; set; } // OrgID
		/// <summary></summary>	
		[Description("")]
        public string CompanyID { get; set; } // CompanyID
		/// <summary></summary>	
		[Description("")]
        public string FlowPhase { get; set; } // FlowPhase
		/// <summary></summary>	
		[Description("")]
        public string FlowInfo { get; set; } // FlowInfo
		/// <summary></summary>	
		[Description("")]
        public string StepName { get; set; } // StepName
		/// <summary>二级单位名称</summary>	
		[Description("二级单位名称")]
        public string SecondaryUnitName { get; set; } // SecondaryUnitName
		/// <summary>二级单位名称名称</summary>	
		[Description("二级单位名称名称")]
        public string SecondaryUnitNameName { get; set; } // SecondaryUnitNameName
		/// <summary>上报日期</summary>	
		[Description("上报日期")]
        public DateTime? ReportingDate { get; set; } // ReportingDate
		/// <summary>活动主题</summary>	
		[Description("活动主题")]
        public string ActivityTheme { get; set; } // ActivityTheme
		/// <summary>活动形式</summary>	
		[Description("活动形式")]
        public string ActivityForm { get; set; } // ActivityForm
		/// <summary>活动时间</summary>	
		[Description("活动时间")]
        public DateTime? ActivityTime { get; set; } // ActivityTime
		/// <summary>参与和影响人数</summary>	
		[Description("参与和影响人数")]
        public decimal? ParticipantsAndInfluencersNumber { get; set; } // ParticipantsAndInfluencersNumber
		/// <summary>活动情况</summary>	
		[Description("活动情况")]
        public string ActivitySituation { get; set; } // ActivitySituation
		/// <summary>活动成效</summary>	
		[Description("活动成效")]
        public string ActivityEffectiveness { get; set; } // ActivityEffectiveness
		/// <summary>不足或需改进之处</summary>	
		[Description("不足或需改进之处")]
        public string DeficienciesOrImprovements { get; set; } // DeficienciesOrImprovements
		/// <summary>备注</summary>	
		[Description("备注")]
        public string Remarks { get; set; } // Remarks
		/// <summary>联系人</summary>	
		[Description("联系人")]
        public string Contacts { get; set; } // Contacts
		/// <summary>联系电话</summary>	
		[Description("联系电话")]
        public string ContactNumber { get; set; } // ContactNumber
		/// <summary>活动组织人</summary>	
		[Description("活动组织人")]
        public string EventOrganizer { get; set; } // EventOrganizer
		/// <summary>二级单位负责人</summary>	
		[Description("二级单位负责人")]
        public string SecondaryUnitPersonInCharge { get; set; } // SecondaryUnitPersonInCharge
		/// <summary>公司法务部</summary>	
		[Description("公司法务部")]
        public string CorporateLegalDepartment { get; set; } // CorporateLegalDepartment
		/// <summary>二级单位主管领导</summary>	
		[Description("二级单位主管领导")]
        public string SecondaryUnitLeaderInCharge { get; set; } // SecondaryUnitLeaderInCharge
    }

	/// <summary>非诉争议登记</summary>	
	[Description("非诉争议登记")]
    public partial class T_TwoLevelReporting_NonLitigationDisputeRegist : Formula.BaseModel
    {
		/// <summary></summary>	
		[Description("")]
        public string ID { get; set; } // ID (Primary key)
		/// <summary></summary>	
		[Description("")]
        public DateTime? CreateDate { get; set; } // CreateDate
		/// <summary></summary>	
		[Description("")]
        public DateTime? ModifyDate { get; set; } // ModifyDate
		/// <summary></summary>	
		[Description("")]
        public string CreateUserID { get; set; } // CreateUserID
		/// <summary></summary>	
		[Description("")]
        public string CreateUser { get; set; } // CreateUser
		/// <summary></summary>	
		[Description("")]
        public string ModifyUserID { get; set; } // ModifyUserID
		/// <summary></summary>	
		[Description("")]
        public string ModifyUser { get; set; } // ModifyUser
		/// <summary></summary>	
		[Description("")]
        public string OrgID { get; set; } // OrgID
		/// <summary></summary>	
		[Description("")]
        public string CompanyID { get; set; } // CompanyID
		/// <summary></summary>	
		[Description("")]
        public string FlowPhase { get; set; } // FlowPhase
		/// <summary></summary>	
		[Description("")]
        public string FlowInfo { get; set; } // FlowInfo
		/// <summary></summary>	
		[Description("")]
        public string StepName { get; set; } // StepName
		/// <summary>来文单位</summary>	
		[Description("来文单位")]
        public string CommunicationUnit { get; set; } // CommunicationUnit
		/// <summary>来文日期</summary>	
		[Description("来文日期")]
        public DateTime? DateOfCommunication { get; set; } // DateOfCommunication
		/// <summary>文件编号</summary>	
		[Description("文件编号")]
        public string DocumentNumber { get; set; } // DocumentNumber
		/// <summary>重要程度</summary>	
		[Description("重要程度")]
        public string ImportanceDegree { get; set; } // ImportanceDegree
		/// <summary>来文类别</summary>	
		[Description("来文类别")]
        public string CategoriesOfCommunication { get; set; } // CategoriesOfCommunication
		/// <summary>来文名称</summary>	
		[Description("来文名称")]
        public string NameOfCommunication { get; set; } // NameOfCommunication
		/// <summary>主题词</summary>	
		[Description("主题词")]
        public string SubjectHeadings { get; set; } // SubjectHeadings
		/// <summary>来文附件</summary>	
		[Description("来文附件")]
        public string AppendixToTheCommunication { get; set; } // AppendixToTheCommunication
		/// <summary>争议事由说明</summary>	
		[Description("争议事由说明")]
        public string DisputeDescription { get; set; } // DisputeDescription
		/// <summary>所涉项目名称</summary>	
		[Description("所涉项目名称")]
        public string NameOfProjectInvolved { get; set; } // NameOfProjectInvolved
		/// <summary>办理时限要求</summary>	
		[Description("办理时限要求")]
        public string TimeLimitRequirements { get; set; } // TimeLimitRequirements
		/// <summary>项目负责人</summary>	
		[Description("项目负责人")]
        public string ProjectLeader { get; set; } // ProjectLeader
		/// <summary>责任部门</summary>	
		[Description("责任部门")]
        public string ResponsibleDepartment { get; set; } // ResponsibleDepartment
		/// <summary>部门负责人</summary>	
		[Description("部门负责人")]
        public string DepartmentHead { get; set; } // DepartmentHead
		/// <summary>办理责任人</summary>	
		[Description("办理责任人")]
        public string ResponsiblePerson { get; set; } // ResponsiblePerson
		/// <summary>办理方式</summary>	
		[Description("办理方式")]
        public string HandlingMode { get; set; } // HandlingMode
		/// <summary>办理结果</summary>	
		[Description("办理结果")]
        public string HandlingResult { get; set; } // HandlingResult
		/// <summary>办理结果附件</summary>	
		[Description("办理结果附件")]
        public string AttachmentOfHandlingResults { get; set; } // AttachmentOfHandlingResults
    }

	/// <summary>用印申请</summary>	
	[Description("用印申请")]
    public partial class T_UseSealApply : Formula.BaseModel
    {
		/// <summary></summary>	
		[Description("")]
        public string ID { get; set; } // ID (Primary key)
		/// <summary></summary>	
		[Description("")]
        public DateTime? CreateDate { get; set; } // CreateDate
		/// <summary></summary>	
		[Description("")]
        public DateTime? ModifyDate { get; set; } // ModifyDate
		/// <summary></summary>	
		[Description("")]
        public string CreateUserID { get; set; } // CreateUserID
		/// <summary></summary>	
		[Description("")]
        public string CreateUser { get; set; } // CreateUser
		/// <summary></summary>	
		[Description("")]
        public string ModifyUserID { get; set; } // ModifyUserID
		/// <summary></summary>	
		[Description("")]
        public string ModifyUser { get; set; } // ModifyUser
		/// <summary></summary>	
		[Description("")]
        public string OrgID { get; set; } // OrgID
		/// <summary></summary>	
		[Description("")]
        public string CompanyID { get; set; } // CompanyID
		/// <summary></summary>	
		[Description("")]
        public string FlowPhase { get; set; } // FlowPhase
		/// <summary></summary>	
		[Description("")]
        public string FlowInfo { get; set; } // FlowInfo
		/// <summary></summary>	
		[Description("")]
        public string StepName { get; set; } // StepName
		/// <summary>文件名称</summary>	
		[Description("文件名称")]
        public string FileName { get; set; } // FileName
		/// <summary>申请人</summary>	
		[Description("申请人")]
        public string ApplyUser { get; set; } // ApplyUser
		/// <summary>申请人名称</summary>	
		[Description("申请人名称")]
        public string ApplyUserName { get; set; } // ApplyUserName
		/// <summary>申请日期</summary>	
		[Description("申请日期")]
        public DateTime? ApplyDate { get; set; } // ApplyDate
		/// <summary>申请人部门</summary>	
		[Description("申请人部门")]
        public string ApplyDept { get; set; } // ApplyDept
		/// <summary>申请人部门名称</summary>	
		[Description("申请人部门名称")]
        public string ApplyDeptName { get; set; } // ApplyDeptName
		/// <summary>顾客名称</summary>	
		[Description("顾客名称")]
        public string Customer { get; set; } // Customer
		/// <summary>顾客名称名称</summary>	
		[Description("顾客名称名称")]
        public string CustomerName { get; set; } // CustomerName
		/// <summary>项目名称</summary>	
		[Description("项目名称")]
        public string Project { get; set; } // Project
		/// <summary>项目名称名称</summary>	
		[Description("项目名称名称")]
        public string ProjectName { get; set; } // ProjectName
		/// <summary>项目号</summary>	
		[Description("项目号")]
        public string ProjectNo { get; set; } // ProjectNo
		/// <summary>合同号</summary>	
		[Description("合同号")]
        public string ContractNo { get; set; } // ContractNo
		/// <summary>印章名称</summary>	
		[Description("印章名称")]
        public string Seal { get; set; } // Seal
		/// <summary>印章名称名称</summary>	
		[Description("印章名称名称")]
        public string SealName { get; set; } // SealName
		/// <summary>地点</summary>	
		[Description("地点")]
        public string Pos { get; set; } // Pos
		/// <summary>说明</summary>	
		[Description("说明")]
        public string Describe { get; set; } // Describe
		/// <summary>用印文件</summary>	
		[Description("用印文件")]
        public string PrintedFile { get; set; } // PrintedFile
		/// <summary>部门领导</summary>	
		[Description("部门领导")]
        public string DeptLeader { get; set; } // DeptLeader
		/// <summary>生管部承包部领导</summary>	
		[Description("生管部承包部领导")]
        public string ProductContractDeptLeader { get; set; } // ProductContractDeptLeader
		/// <summary>综合部领导</summary>	
		[Description("综合部领导")]
        public string ComprehensiveDeptLeader { get; set; } // ComprehensiveDeptLeader
    }

	/// <summary>报奖项目培育</summary>	
	[Description("报奖项目培育")]
    public partial class T_Win_AwardItem : Formula.BaseModel
    {
		/// <summary></summary>	
		[Description("")]
        public string ID { get; set; } // ID (Primary key)
		/// <summary></summary>	
		[Description("")]
        public DateTime? CreateDate { get; set; } // CreateDate
		/// <summary></summary>	
		[Description("")]
        public DateTime? ModifyDate { get; set; } // ModifyDate
		/// <summary></summary>	
		[Description("")]
        public string CreateUserID { get; set; } // CreateUserID
		/// <summary></summary>	
		[Description("")]
        public string CreateUser { get; set; } // CreateUser
		/// <summary></summary>	
		[Description("")]
        public string ModifyUserID { get; set; } // ModifyUserID
		/// <summary></summary>	
		[Description("")]
        public string ModifyUser { get; set; } // ModifyUser
		/// <summary></summary>	
		[Description("")]
        public string OrgID { get; set; } // OrgID
		/// <summary></summary>	
		[Description("")]
        public string CompanyID { get; set; } // CompanyID
		/// <summary></summary>	
		[Description("")]
        public string FlowPhase { get; set; } // FlowPhase
		/// <summary></summary>	
		[Description("")]
        public string FlowInfo { get; set; } // FlowInfo
		/// <summary></summary>	
		[Description("")]
        public string StepName { get; set; } // StepName
		/// <summary>申报年度</summary>	
		[Description("申报年度")]
        public string DeclareYear { get; set; } // DeclareYear
		/// <summary>申报人</summary>	
		[Description("申报人")]
        public string Declarant { get; set; } // Declarant
		/// <summary>项目申报部门</summary>	
		[Description("项目申报部门")]
        public string ItemDeclareDepartment { get; set; } // ItemDeclareDepartment
		/// <summary>申报类别</summary>	
		[Description("申报类别")]
        public string DeclareCategory { get; set; } // DeclareCategory
		/// <summary>拟申报等级</summary>	
		[Description("拟申报等级")]
        public string DeclareLevel { get; set; } // DeclareLevel
		/// <summary>项目编号</summary>	
		[Description("项目编号")]
        public string ProjectNumber { get; set; } // ProjectNumber
		/// <summary>项目名称</summary>	
		[Description("项目名称")]
        public string ProjectName { get; set; } // ProjectName
		/// <summary>项目开始时间</summary>	
		[Description("项目开始时间")]
        public DateTime? ProjectStartDate { get; set; } // ProjectStartDate
		/// <summary>项目结束时间</summary>	
		[Description("项目结束时间")]
        public DateTime? ProjectEndDate { get; set; } // ProjectEndDate
		/// <summary>项目整体是否验收</summary>	
		[Description("项目整体是否验收")]
        public string IsCheck { get; set; } // IsCheck
		/// <summary>项目整体验收时间</summary>	
		[Description("项目整体验收时间")]
        public DateTime? ProjectCheckDate { get; set; } // ProjectCheckDate
		/// <summary>授权发明专利</summary>	
		[Description("授权发明专利")]
        public decimal? InventionPatent { get; set; } // InventionPatent
		/// <summary>授权的其他知识产权</summary>	
		[Description("授权的其他知识产权")]
        public decimal? OtherInventionPatent { get; set; } // OtherInventionPatent
		/// <summary>中国机械工业集团科学技术奖</summary>	
		[Description("中国机械工业集团科学技术奖")]
        public string SCMIG { get; set; } // SCMIG
		/// <summary>机械工业科学技术奖</summary>	
		[Description("机械工业科学技术奖")]
        public string STMI { get; set; } // STMI
		/// <summary>天津市科学技术进步奖</summary>	
		[Description("天津市科学技术进步奖")]
        public string TSTPA { get; set; } // TSTPA
		/// <summary>机械工业优秀工程设计奖</summary>	
		[Description("机械工业优秀工程设计奖")]
        public string EDAMI { get; set; } // EDAMI
		/// <summary>机械工业优秀总承包项目管理奖</summary>	
		[Description("机械工业优秀总承包项目管理奖")]
        public string ECMI { get; set; } // ECMI
		/// <summary>机械工业优秀咨询成果奖</summary>	
		[Description("机械工业优秀咨询成果奖")]
        public string EAMI { get; set; } // EAMI
		/// <summary>天津市海河杯优秀工程设计奖</summary>	
		[Description("天津市海河杯优秀工程设计奖")]
        public string THEDMI { get; set; } // THEDMI
		/// <summary>报奖资料</summary>	
		[Description("报奖资料")]
        public string Attachment { get; set; } // Attachment
		/// <summary>申报部门领导</summary>	
		[Description("申报部门领导")]
        public string DeclareDepartLeader { get; set; } // DeclareDepartLeader
		/// <summary>技术部主管意见</summary>	
		[Description("技术部主管意见")]
        public string TechnologyDepartLeader { get; set; } // TechnologyDepartLeader
		/// <summary>技术部部长意见</summary>	
		[Description("技术部部长意见")]
        public string TechnologyDepartMinister { get; set; } // TechnologyDepartMinister
		/// <summary>总工程师意见</summary>	
		[Description("总工程师意见")]
        public string ChiefEngineer { get; set; } // ChiefEngineer
		/// <summary>申报人名称</summary>	
		[Description("申报人名称")]
        public string DeclarantName { get; set; } // DeclarantName
		/// <summary>项目申报部门名称</summary>	
		[Description("项目申报部门名称")]
        public string ItemDeclareDepartmentName { get; set; } // ItemDeclareDepartmentName
		/// <summary>项目名称名称</summary>	
		[Description("项目名称名称")]
        public string ProjectNameName { get; set; } // ProjectNameName
    }

	/// <summary>获奖管理</summary>	
	[Description("获奖管理")]
    public partial class T_Win_AwardManager : Formula.BaseModel
    {
		/// <summary></summary>	
		[Description("")]
        public string ID { get; set; } // ID (Primary key)
		/// <summary></summary>	
		[Description("")]
        public DateTime? CreateDate { get; set; } // CreateDate
		/// <summary></summary>	
		[Description("")]
        public DateTime? ModifyDate { get; set; } // ModifyDate
		/// <summary></summary>	
		[Description("")]
        public string CreateUserID { get; set; } // CreateUserID
		/// <summary></summary>	
		[Description("")]
        public string CreateUser { get; set; } // CreateUser
		/// <summary></summary>	
		[Description("")]
        public string ModifyUserID { get; set; } // ModifyUserID
		/// <summary></summary>	
		[Description("")]
        public string ModifyUser { get; set; } // ModifyUser
		/// <summary></summary>	
		[Description("")]
        public string OrgID { get; set; } // OrgID
		/// <summary></summary>	
		[Description("")]
        public string CompanyID { get; set; } // CompanyID
		/// <summary></summary>	
		[Description("")]
        public string FlowPhase { get; set; } // FlowPhase
		/// <summary></summary>	
		[Description("")]
        public string FlowInfo { get; set; } // FlowInfo
		/// <summary></summary>	
		[Description("")]
        public string StepName { get; set; } // StepName
		/// <summary>申报年度</summary>	
		[Description("申报年度")]
        public string DeclareYear { get; set; } // DeclareYear
		/// <summary>填写日期</summary>	
		[Description("填写日期")]
        public DateTime? DeclareDate { get; set; } // DeclareDate
		/// <summary>项目名称</summary>	
		[Description("项目名称")]
        public string ProjectName { get; set; } // ProjectName
		/// <summary>申报人</summary>	
		[Description("申报人")]
        public string Declarant { get; set; } // Declarant
		/// <summary>项目申报部门</summary>	
		[Description("项目申报部门")]
        public string DeclareDepartment { get; set; } // DeclareDepartment
		/// <summary>申报类别</summary>	
		[Description("申报类别")]
        public string DeclareCategory { get; set; } // DeclareCategory
		/// <summary>申报等级</summary>	
		[Description("申报等级")]
        public string DeclareLevel { get; set; } // DeclareLevel
		/// <summary>参加部门</summary>	
		[Description("参加部门")]
        public string JoinDepartment { get; set; } // JoinDepartment
		/// <summary>项目编号（技术部编号）</summary>	
		[Description("项目编号（技术部编号）")]
        public string ProjectNumber { get; set; } // ProjectNumber
		/// <summary>项目开始时间</summary>	
		[Description("项目开始时间")]
        public string ProjectStartDate { get; set; } // ProjectStartDate
		/// <summary>项目结束时间</summary>	
		[Description("项目结束时间")]
        public string ProjectEndDate { get; set; } // ProjectEndDate
		/// <summary>评分专家数量</summary>	
		[Description("评分专家数量")]
        public string ExpertCount { get; set; } // ExpertCount
		/// <summary>平均得分</summary>	
		[Description("平均得分")]
        public string AverageScore { get; set; } // AverageScore
		/// <summary>最高得分</summary>	
		[Description("最高得分")]
        public string HeightScore { get; set; } // HeightScore
		/// <summary>最低得分</summary>	
		[Description("最低得分")]
        public string LowScore { get; set; } // LowScore
		/// <summary>审定获奖类别</summary>	
		[Description("审定获奖类别")]
        public string AwardCategory { get; set; } // AwardCategory
		/// <summary>审定获奖登记</summary>	
		[Description("审定获奖登记")]
        public string AwardRecord { get; set; } // AwardRecord
		/// <summary>参与人员</summary>	
		[Description("参与人员")]
        public string JoinPerson { get; set; } // JoinPerson

        // Reverse navigation
		[JsonIgnore]
        public virtual ICollection<T_Win_AwardManager_JoinPerson> T_Win_AwardManager_JoinPerson { get { onT_Win_AwardManager_JoinPersonGetting(); return _T_Win_AwardManager_JoinPerson;} }
		private ICollection<T_Win_AwardManager_JoinPerson> _T_Win_AwardManager_JoinPerson;
		partial void onT_Win_AwardManager_JoinPersonGetting();


        public T_Win_AwardManager()
        {
            _T_Win_AwardManager_JoinPerson = new List<T_Win_AwardManager_JoinPerson>();
        }
    }

	/// <summary>参与人员</summary>	
	[Description("参与人员")]
    public partial class T_Win_AwardManager_JoinPerson : Formula.BaseModel
    {
		/// <summary></summary>	
		[Description("")]
        public string ID { get; set; } // ID (Primary key)
		/// <summary></summary>	
		[Description("")]
        public string T_Win_AwardManagerID { get; set; } // T_Win_AwardManagerID
		/// <summary></summary>	
		[Description("")]
        public double? SortIndex { get; set; } // SortIndex
		/// <summary></summary>	
		[Description("")]
        public string IsReleased { get; set; } // IsReleased
		/// <summary>姓名</summary>	
		[Description("姓名")]
        public string Name { get; set; } // Name
		/// <summary>部门</summary>	
		[Description("部门")]
        public string Department { get; set; } // Department
		/// <summary>项目角色</summary>	
		[Description("项目角色")]
        public string Role { get; set; } // Role
		/// <summary>备注</summary>	
		[Description("备注")]
        public string Remark { get; set; } // Remark

        // Foreign keys
		[JsonIgnore]
        public virtual T_Win_AwardManager T_Win_AwardManager { get; set; } //  T_Win_AwardManagerID - FK_T_Win_AwardManager_JoinPerson_T_Win_AwardManager
    }

	/// <summary>当前年度评委专家选择</summary>	
	[Description("当前年度评委专家选择")]
    public partial class T_Win_CurrentYearExpert : Formula.BaseModel
    {
		/// <summary></summary>	
		[Description("")]
        public string ID { get; set; } // ID (Primary key)
		/// <summary></summary>	
		[Description("")]
        public DateTime? CreateDate { get; set; } // CreateDate
		/// <summary></summary>	
		[Description("")]
        public DateTime? ModifyDate { get; set; } // ModifyDate
		/// <summary></summary>	
		[Description("")]
        public string CreateUserID { get; set; } // CreateUserID
		/// <summary></summary>	
		[Description("")]
        public string CreateUser { get; set; } // CreateUser
		/// <summary></summary>	
		[Description("")]
        public string ModifyUserID { get; set; } // ModifyUserID
		/// <summary></summary>	
		[Description("")]
        public string ModifyUser { get; set; } // ModifyUser
		/// <summary></summary>	
		[Description("")]
        public string OrgID { get; set; } // OrgID
		/// <summary></summary>	
		[Description("")]
        public string CompanyID { get; set; } // CompanyID
		/// <summary></summary>	
		[Description("")]
        public string FlowPhase { get; set; } // FlowPhase
		/// <summary></summary>	
		[Description("")]
        public string FlowInfo { get; set; } // FlowInfo
		/// <summary></summary>	
		[Description("")]
        public string StepName { get; set; } // StepName
		/// <summary>填写人</summary>	
		[Description("填写人")]
        public string Declarent { get; set; } // Declarent
		/// <summary>填写人名称</summary>	
		[Description("填写人名称")]
        public string DeclarentName { get; set; } // DeclarentName
		/// <summary>填写人部门</summary>	
		[Description("填写人部门")]
        public string DeclarentDepartment { get; set; } // DeclarentDepartment
		/// <summary>填写人部门名称</summary>	
		[Description("填写人部门名称")]
        public string DeclarentDepartmentName { get; set; } // DeclarentDepartmentName
		/// <summary>评奖年度</summary>	
		[Description("评奖年度")]
        public string CurrentYear { get; set; } // CurrentYear
		/// <summary>评审会时间</summary>	
		[Description("评审会时间")]
        public DateTime? AppraisalMeeting { get; set; } // AppraisalMeeting
		/// <summary>当前年度专家选择</summary>	
		[Description("当前年度专家选择")]
        public string CurrentYearExpert { get; set; } // CurrentYearExpert
		/// <summary>当前年度专家选择名称</summary>	
		[Description("当前年度专家选择名称")]
        public string CurrentYearExpertName { get; set; } // CurrentYearExpertName
		/// <summary>附件</summary>	
		[Description("附件")]
        public string Attachment { get; set; } // Attachment
		/// <summary>备注</summary>	
		[Description("备注")]
        public string Remark { get; set; } // Remark
		/// <summary>技术部主管意见</summary>	
		[Description("技术部主管意见")]
        public string TechnologyDepartmentOpinion { get; set; } // TechnologyDepartmentOpinion
		/// <summary>总工程师意见</summary>	
		[Description("总工程师意见")]
        public string ChiefEngineerOpinion { get; set; } // ChiefEngineerOpinion
    }

	/// <summary>申报管理</summary>	
	[Description("申报管理")]
    public partial class T_Win_Declare : Formula.BaseModel
    {
		/// <summary></summary>	
		[Description("")]
        public string ID { get; set; } // ID (Primary key)
		/// <summary></summary>	
		[Description("")]
        public DateTime? CreateDate { get; set; } // CreateDate
		/// <summary></summary>	
		[Description("")]
        public DateTime? ModifyDate { get; set; } // ModifyDate
		/// <summary></summary>	
		[Description("")]
        public string CreateUserID { get; set; } // CreateUserID
		/// <summary></summary>	
		[Description("")]
        public string CreateUser { get; set; } // CreateUser
		/// <summary></summary>	
		[Description("")]
        public string ModifyUserID { get; set; } // ModifyUserID
		/// <summary></summary>	
		[Description("")]
        public string ModifyUser { get; set; } // ModifyUser
		/// <summary></summary>	
		[Description("")]
        public string OrgID { get; set; } // OrgID
		/// <summary></summary>	
		[Description("")]
        public string CompanyID { get; set; } // CompanyID
		/// <summary></summary>	
		[Description("")]
        public string FlowPhase { get; set; } // FlowPhase
		/// <summary></summary>	
		[Description("")]
        public string FlowInfo { get; set; } // FlowInfo
		/// <summary></summary>	
		[Description("")]
        public string StepName { get; set; } // StepName
		/// <summary>申报年度</summary>	
		[Description("申报年度")]
        public string DeclareYear { get; set; } // DeclareYear
		/// <summary>申报日期</summary>	
		[Description("申报日期")]
        public DateTime? DeclareDate { get; set; } // DeclareDate
		/// <summary>申报人</summary>	
		[Description("申报人")]
        public string Declarant { get; set; } // Declarant
		/// <summary>申报人名称</summary>	
		[Description("申报人名称")]
        public string DeclarantName { get; set; } // DeclarantName
		/// <summary>项目申报部门</summary>	
		[Description("项目申报部门")]
        public string DeclareDepartment { get; set; } // DeclareDepartment
		/// <summary>项目申报部门名称</summary>	
		[Description("项目申报部门名称")]
        public string DeclareDepartmentName { get; set; } // DeclareDepartmentName
		/// <summary>申报类别</summary>	
		[Description("申报类别")]
        public string DeclareCategory { get; set; } // DeclareCategory
		/// <summary>申报等级</summary>	
		[Description("申报等级")]
        public string DeclareLevel { get; set; } // DeclareLevel
		/// <summary>参加部门</summary>	
		[Description("参加部门")]
        public string JoinDepartment { get; set; } // JoinDepartment
		/// <summary>参加部门名称</summary>	
		[Description("参加部门名称")]
        public string JoinDepartmentName { get; set; } // JoinDepartmentName
		/// <summary>项目编号(技术部编号)</summary>	
		[Description("项目编号(技术部编号)")]
        public string ProjectNumber { get; set; } // ProjectNumber
		/// <summary>项目名称</summary>	
		[Description("项目名称")]
        public string ProjectName { get; set; } // ProjectName
		/// <summary>项目开始时间</summary>	
		[Description("项目开始时间")]
        public DateTime? ProjectStartDate { get; set; } // ProjectStartDate
		/// <summary>项目结束时间</summary>	
		[Description("项目结束时间")]
        public DateTime? ProjectEndDate { get; set; } // ProjectEndDate
		/// <summary>项目整体是否验收</summary>	
		[Description("项目整体是否验收")]
        public string IsCheck { get; set; } // IsCheck
		/// <summary>项目整体验收时间</summary>	
		[Description("项目整体验收时间")]
        public DateTime? CheckDate { get; set; } // CheckDate
		/// <summary>授权发明专利</summary>	
		[Description("授权发明专利")]
        public decimal? AuthorizedPatent { get; set; } // AuthorizedPatent
		/// <summary>授权的其他知识产权</summary>	
		[Description("授权的其他知识产权")]
        public decimal? AuthorizedOtherIP { get; set; } // AuthorizedOtherIP
		/// <summary>中国机械工业集团科学进步奖</summary>	
		[Description("中国机械工业集团科学进步奖")]
        public string SPACMI { get; set; } // SPACMI
		/// <summary>机械工业科学技术奖</summary>	
		[Description("机械工业科学技术奖")]
        public string STAMI { get; set; } // STAMI
		/// <summary>天津市科学技术奖</summary>	
		[Description("天津市科学技术奖")]
        public string TSTA { get; set; } // TSTA
		/// <summary>机械工业优秀工程设计奖</summary>	
		[Description("机械工业优秀工程设计奖")]
        public string EDAMI { get; set; } // EDAMI
		/// <summary>机械工业优秀总承包项目管理奖</summary>	
		[Description("机械工业优秀总承包项目管理奖")]
        public string EGCPMAMI { get; set; } // EGCPMAMI
		/// <summary>机械工业优秀咨询成果奖</summary>	
		[Description("机械工业优秀咨询成果奖")]
        public string ECAMI { get; set; } // ECAMI
		/// <summary>天津市海河杯优秀工程设计奖</summary>	
		[Description("天津市海河杯优秀工程设计奖")]
        public string THCEEDA { get; set; } // THCEEDA
		/// <summary>报奖资料</summary>	
		[Description("报奖资料")]
        public string AwardAttachment { get; set; } // AwardAttachment
		/// <summary>申报部门领导</summary>	
		[Description("申报部门领导")]
        public string DeclareDepartmentLeader { get; set; } // DeclareDepartmentLeader
		/// <summary>技术部主管意见</summary>	
		[Description("技术部主管意见")]
        public string TechnologyDepartmentOpinion { get; set; } // TechnologyDepartmentOpinion
		/// <summary>技术部部长意见</summary>	
		[Description("技术部部长意见")]
        public string TechnologyMinisterOpinion { get; set; } // TechnologyMinisterOpinion
		/// <summary>总工程师意见</summary>	
		[Description("总工程师意见")]
        public string ChiefEngineerOpinion { get; set; } // ChiefEngineerOpinion
    }

	/// <summary>申报管理</summary>	
	[Description("申报管理")]
    public partial class T_Win_DeclareManager : Formula.BaseModel
    {
		/// <summary></summary>	
		[Description("")]
        public string ID { get; set; } // ID (Primary key)
		/// <summary></summary>	
		[Description("")]
        public DateTime? CreateDate { get; set; } // CreateDate
		/// <summary></summary>	
		[Description("")]
        public DateTime? ModifyDate { get; set; } // ModifyDate
		/// <summary></summary>	
		[Description("")]
        public string CreateUserID { get; set; } // CreateUserID
		/// <summary></summary>	
		[Description("")]
        public string CreateUser { get; set; } // CreateUser
		/// <summary></summary>	
		[Description("")]
        public string ModifyUserID { get; set; } // ModifyUserID
		/// <summary></summary>	
		[Description("")]
        public string ModifyUser { get; set; } // ModifyUser
		/// <summary></summary>	
		[Description("")]
        public string OrgID { get; set; } // OrgID
		/// <summary></summary>	
		[Description("")]
        public string CompanyID { get; set; } // CompanyID
		/// <summary></summary>	
		[Description("")]
        public string FlowPhase { get; set; } // FlowPhase
		/// <summary></summary>	
		[Description("")]
        public string FlowInfo { get; set; } // FlowInfo
		/// <summary></summary>	
		[Description("")]
        public string StepName { get; set; } // StepName
		/// <summary>申报年度</summary>	
		[Description("申报年度")]
        public string DeclareYear { get; set; } // DeclareYear
		/// <summary>申报日期</summary>	
		[Description("申报日期")]
        public DateTime? DeclareDate { get; set; } // DeclareDate
		/// <summary>申报人</summary>	
		[Description("申报人")]
        public string Declarant { get; set; } // Declarant
		/// <summary>申报人名称</summary>	
		[Description("申报人名称")]
        public string DeclarantName { get; set; } // DeclarantName
		/// <summary>项目申报部门</summary>	
		[Description("项目申报部门")]
        public string DeclareDepartment { get; set; } // DeclareDepartment
		/// <summary>项目申报部门名称</summary>	
		[Description("项目申报部门名称")]
        public string DeclareDepartmentName { get; set; } // DeclareDepartmentName
		/// <summary>申报类别</summary>	
		[Description("申报类别")]
        public string DeclareCategory { get; set; } // DeclareCategory
		/// <summary>申报等级</summary>	
		[Description("申报等级")]
        public string DeclareLevel { get; set; } // DeclareLevel
		/// <summary>参加部门</summary>	
		[Description("参加部门")]
        public string JoinDepartment { get; set; } // JoinDepartment
		/// <summary>参加部门名称</summary>	
		[Description("参加部门名称")]
        public string JoinDepartmentName { get; set; } // JoinDepartmentName
		/// <summary>项目编号(技术部编号)</summary>	
		[Description("项目编号(技术部编号)")]
        public string ProjectNumber { get; set; } // ProjectNumber
		/// <summary>项目名称</summary>	
		[Description("项目名称")]
        public string ProjectName { get; set; } // ProjectName
		/// <summary>项目开始时间</summary>	
		[Description("项目开始时间")]
        public DateTime? ProjectStartDate { get; set; } // ProjectStartDate
		/// <summary>项目结束时间</summary>	
		[Description("项目结束时间")]
        public DateTime? ProjectEndDate { get; set; } // ProjectEndDate
		/// <summary>项目整体是否验收</summary>	
		[Description("项目整体是否验收")]
        public string IsCheck { get; set; } // IsCheck
		/// <summary>项目整体验收时间</summary>	
		[Description("项目整体验收时间")]
        public DateTime? CheckDate { get; set; } // CheckDate
		/// <summary>授权发明专利</summary>	
		[Description("授权发明专利")]
        public decimal? AuthorizedPatent { get; set; } // AuthorizedPatent
		/// <summary>授权的其他知识产权</summary>	
		[Description("授权的其他知识产权")]
        public decimal? AuthorizedOtherIP { get; set; } // AuthorizedOtherIP
		/// <summary>中国机械工业集团科学进步奖</summary>	
		[Description("中国机械工业集团科学进步奖")]
        public string SPACMI { get; set; } // SPACMI
		/// <summary>机械工业科学技术奖</summary>	
		[Description("机械工业科学技术奖")]
        public string STAMI { get; set; } // STAMI
		/// <summary>天津市科学技术奖</summary>	
		[Description("天津市科学技术奖")]
        public string TSTA { get; set; } // TSTA
		/// <summary>机械工业优秀工程设计奖</summary>	
		[Description("机械工业优秀工程设计奖")]
        public string EDAMI { get; set; } // EDAMI
		/// <summary>机械工业优秀总承包项目管理奖</summary>	
		[Description("机械工业优秀总承包项目管理奖")]
        public string EGCPMAMI { get; set; } // EGCPMAMI
		/// <summary>机械工业优秀咨询成果奖</summary>	
		[Description("机械工业优秀咨询成果奖")]
        public string ECAMI { get; set; } // ECAMI
		/// <summary>天津市海河杯优秀工程设计奖</summary>	
		[Description("天津市海河杯优秀工程设计奖")]
        public string THCEEDA { get; set; } // THCEEDA
		/// <summary>报奖资料</summary>	
		[Description("报奖资料")]
        public string AwardAttachment { get; set; } // AwardAttachment
		/// <summary>申报部门领导</summary>	
		[Description("申报部门领导")]
        public string DeclareDepartmentLeader { get; set; } // DeclareDepartmentLeader
		/// <summary>技术部主管意见</summary>	
		[Description("技术部主管意见")]
        public string TechnologyDepartmentOpinion { get; set; } // TechnologyDepartmentOpinion
		/// <summary>技术部部长意见</summary>	
		[Description("技术部部长意见")]
        public string TechnologyMinisterOpinion { get; set; } // TechnologyMinisterOpinion
		/// <summary>总工程师意见</summary>	
		[Description("总工程师意见")]
        public string ChiefEngineerOpinion { get; set; } // ChiefEngineerOpinion
		/// <summary>项目名称名称</summary>	
		[Description("项目名称名称")]
        public string ProjectNameName { get; set; } // ProjectNameName
		/// <summary>参与人员</summary>	
		[Description("参与人员")]
        public string JoinPersons { get; set; } // JoinPersons

        // Reverse navigation
		[JsonIgnore]
        public virtual ICollection<T_Win_DeclareManager_JoinPersons> T_Win_DeclareManager_JoinPersons { get { onT_Win_DeclareManager_JoinPersonsGetting(); return _T_Win_DeclareManager_JoinPersons;} }
		private ICollection<T_Win_DeclareManager_JoinPersons> _T_Win_DeclareManager_JoinPersons;
		partial void onT_Win_DeclareManager_JoinPersonsGetting();


        public T_Win_DeclareManager()
        {
            _T_Win_DeclareManager_JoinPersons = new List<T_Win_DeclareManager_JoinPersons>();
        }
    }

	/// <summary>参与人员</summary>	
	[Description("参与人员")]
    public partial class T_Win_DeclareManager_JoinPersons : Formula.BaseModel
    {
		/// <summary></summary>	
		[Description("")]
        public string ID { get; set; } // ID (Primary key)
		/// <summary></summary>	
		[Description("")]
        public string T_Win_DeclareManagerID { get; set; } // T_Win_DeclareManagerID
		/// <summary></summary>	
		[Description("")]
        public double? SortIndex { get; set; } // SortIndex
		/// <summary></summary>	
		[Description("")]
        public string IsReleased { get; set; } // IsReleased
		/// <summary>姓名</summary>	
		[Description("姓名")]
        public string Person { get; set; } // Person
		/// <summary>姓名名称</summary>	
		[Description("姓名名称")]
        public string PersonName { get; set; } // PersonName
		/// <summary>部门</summary>	
		[Description("部门")]
        public string Dept { get; set; } // Dept
		/// <summary>部门名称</summary>	
		[Description("部门名称")]
        public string DeptName { get; set; } // DeptName
		/// <summary>项目角色</summary>	
		[Description("项目角色")]
        public string ProjectRole { get; set; } // ProjectRole
		/// <summary>备注</summary>	
		[Description("备注")]
        public string Remark { get; set; } // Remark

        // Foreign keys
		[JsonIgnore]
        public virtual T_Win_DeclareManager T_Win_DeclareManager { get; set; } //  T_Win_DeclareManagerID - FK_T_Win_DeclareManager_JoinPersons_T_Win_DeclareManager
    }

	/// <summary>专家评分</summary>	
	[Description("专家评分")]
    public partial class T_Win_ExpertGrade : Formula.BaseModel
    {
		/// <summary></summary>	
		[Description("")]
        public string ID { get; set; } // ID (Primary key)
		/// <summary></summary>	
		[Description("")]
        public DateTime? CreateDate { get; set; } // CreateDate
		/// <summary></summary>	
		[Description("")]
        public DateTime? ModifyDate { get; set; } // ModifyDate
		/// <summary></summary>	
		[Description("")]
        public string CreateUserID { get; set; } // CreateUserID
		/// <summary></summary>	
		[Description("")]
        public string CreateUser { get; set; } // CreateUser
		/// <summary></summary>	
		[Description("")]
        public string ModifyUserID { get; set; } // ModifyUserID
		/// <summary></summary>	
		[Description("")]
        public string ModifyUser { get; set; } // ModifyUser
		/// <summary></summary>	
		[Description("")]
        public string OrgID { get; set; } // OrgID
		/// <summary></summary>	
		[Description("")]
        public string CompanyID { get; set; } // CompanyID
		/// <summary></summary>	
		[Description("")]
        public string FlowPhase { get; set; } // FlowPhase
		/// <summary></summary>	
		[Description("")]
        public string FlowInfo { get; set; } // FlowInfo
		/// <summary></summary>	
		[Description("")]
        public string StepName { get; set; } // StepName
		/// <summary>专家姓名</summary>	
		[Description("专家姓名")]
        public string ExpertName { get; set; } // ExpertName
		/// <summary>专家姓名名称</summary>	
		[Description("专家姓名名称")]
        public string ExpertNameName { get; set; } // ExpertNameName
		/// <summary>专家部门</summary>	
		[Description("专家部门")]
        public string ExpertDept { get; set; } // ExpertDept
		/// <summary>专家部门名称</summary>	
		[Description("专家部门名称")]
        public string ExpertDeptName { get; set; } // ExpertDeptName
		/// <summary>评定年度</summary>	
		[Description("评定年度")]
        public string EvaluateYear { get; set; } // EvaluateYear
		/// <summary>报奖项目总数</summary>	
		[Description("报奖项目总数")]
        public string ProjectCount { get; set; } // ProjectCount
		/// <summary>评审会日期</summary>	
		[Description("评审会日期")]
        public DateTime? EvaluationMeetingDate { get; set; } // EvaluationMeetingDate
		/// <summary>评分说明</summary>	
		[Description("评分说明")]
        public string GradeDesc { get; set; } // GradeDesc
		/// <summary>报奖项目</summary>	
		[Description("报奖项目")]
        public string AwardItems { get; set; } // AwardItems

        // Reverse navigation
		[JsonIgnore]
        public virtual ICollection<T_Win_ExpertGrade_AwardItems> T_Win_ExpertGrade_AwardItems { get { onT_Win_ExpertGrade_AwardItemsGetting(); return _T_Win_ExpertGrade_AwardItems;} }
		private ICollection<T_Win_ExpertGrade_AwardItems> _T_Win_ExpertGrade_AwardItems;
		partial void onT_Win_ExpertGrade_AwardItemsGetting();


        public T_Win_ExpertGrade()
        {
            _T_Win_ExpertGrade_AwardItems = new List<T_Win_ExpertGrade_AwardItems>();
        }
    }

	/// <summary>报奖项目</summary>	
	[Description("报奖项目")]
    public partial class T_Win_ExpertGrade_AwardItems : Formula.BaseModel
    {
		/// <summary></summary>	
		[Description("")]
        public string ID { get; set; } // ID (Primary key)
		/// <summary></summary>	
		[Description("")]
        public string T_Win_ExpertGradeID { get; set; } // T_Win_ExpertGradeID
		/// <summary></summary>	
		[Description("")]
        public double? SortIndex { get; set; } // SortIndex
		/// <summary></summary>	
		[Description("")]
        public string IsReleased { get; set; } // IsReleased
		/// <summary>序号</summary>	
		[Description("序号")]
        public string Number { get; set; } // Number
		/// <summary>申报类别</summary>	
		[Description("申报类别")]
        public string Category { get; set; } // Category
		/// <summary>项目名称</summary>	
		[Description("项目名称")]
        public string ProjectName { get; set; } // ProjectName
		/// <summary>项目名称名称</summary>	
		[Description("项目名称名称")]
        public string ProjectNameName { get; set; } // ProjectNameName
		/// <summary>申报部门</summary>	
		[Description("申报部门")]
        public string Dept { get; set; } // Dept
		/// <summary>申报部门名称</summary>	
		[Description("申报部门名称")]
        public string DeptName { get; set; } // DeptName
		/// <summary>得分</summary>	
		[Description("得分")]
        public string Grade { get; set; } // Grade
		/// <summary>项目ID</summary>	
		[Description("项目ID")]
        public string ProjectID { get; set; } // ProjectID

        // Foreign keys
		[JsonIgnore]
        public virtual T_Win_ExpertGrade T_Win_ExpertGrade { get; set; } //  T_Win_ExpertGradeID - FK_T_Win_ExpertGrade_AwardItems_T_Win_ExpertGrade
    }

	/// <summary>评委专家库管理</summary>	
	[Description("评委专家库管理")]
    public partial class T_Win_ExpertManager : Formula.BaseModel
    {
		/// <summary></summary>	
		[Description("")]
        public string ID { get; set; } // ID (Primary key)
		/// <summary></summary>	
		[Description("")]
        public DateTime? CreateDate { get; set; } // CreateDate
		/// <summary></summary>	
		[Description("")]
        public DateTime? ModifyDate { get; set; } // ModifyDate
		/// <summary></summary>	
		[Description("")]
        public string CreateUserID { get; set; } // CreateUserID
		/// <summary></summary>	
		[Description("")]
        public string CreateUser { get; set; } // CreateUser
		/// <summary></summary>	
		[Description("")]
        public string ModifyUserID { get; set; } // ModifyUserID
		/// <summary></summary>	
		[Description("")]
        public string ModifyUser { get; set; } // ModifyUser
		/// <summary></summary>	
		[Description("")]
        public string OrgID { get; set; } // OrgID
		/// <summary></summary>	
		[Description("")]
        public string CompanyID { get; set; } // CompanyID
		/// <summary></summary>	
		[Description("")]
        public string FlowPhase { get; set; } // FlowPhase
		/// <summary></summary>	
		[Description("")]
        public string FlowInfo { get; set; } // FlowInfo
		/// <summary></summary>	
		[Description("")]
        public string StepName { get; set; } // StepName
		/// <summary>评委姓名</summary>	
		[Description("评委姓名")]
        public string ExpertName { get; set; } // ExpertName
		/// <summary>评委所在部门</summary>	
		[Description("评委所在部门")]
        public string ExpertDepartment { get; set; } // ExpertDepartment
		/// <summary>年龄</summary>	
		[Description("年龄")]
        public string ExpertAge { get; set; } // ExpertAge
		/// <summary>从事专业</summary>	
		[Description("从事专业")]
        public string SpecializedField { get; set; } // SpecializedField
		/// <summary>职称</summary>	
		[Description("职称")]
        public string Professional { get; set; } // Professional
		/// <summary>学历</summary>	
		[Description("学历")]
        public string Education { get; set; } // Education
		/// <summary>评奖类别</summary>	
		[Description("评奖类别")]
        public string AwardsCategory { get; set; } // AwardsCategory
		/// <summary>备注</summary>	
		[Description("备注")]
        public string Remark { get; set; } // Remark
		/// <summary>评委姓名</summary>	
		[Description("评委姓名")]
        public string Experter { get; set; } // Experter
		/// <summary>评委姓名名称</summary>	
		[Description("评委姓名名称")]
        public string ExperterName { get; set; } // ExperterName
		/// <summary>评委所在部门名称</summary>	
		[Description("评委所在部门名称")]
        public string ExpertDepartmentName { get; set; } // ExpertDepartmentName
    }

	/// <summary>行业以上奖项申报表单</summary>	
	[Description("行业以上奖项申报表单")]
    public partial class T_Win_IndustryAwardDeclare : Formula.BaseModel
    {
		/// <summary></summary>	
		[Description("")]
        public string ID { get; set; } // ID (Primary key)
		/// <summary></summary>	
		[Description("")]
        public DateTime? CreateDate { get; set; } // CreateDate
		/// <summary></summary>	
		[Description("")]
        public DateTime? ModifyDate { get; set; } // ModifyDate
		/// <summary></summary>	
		[Description("")]
        public string CreateUserID { get; set; } // CreateUserID
		/// <summary></summary>	
		[Description("")]
        public string CreateUser { get; set; } // CreateUser
		/// <summary></summary>	
		[Description("")]
        public string ModifyUserID { get; set; } // ModifyUserID
		/// <summary></summary>	
		[Description("")]
        public string ModifyUser { get; set; } // ModifyUser
		/// <summary></summary>	
		[Description("")]
        public string OrgID { get; set; } // OrgID
		/// <summary></summary>	
		[Description("")]
        public string CompanyID { get; set; } // CompanyID
		/// <summary></summary>	
		[Description("")]
        public string FlowPhase { get; set; } // FlowPhase
		/// <summary></summary>	
		[Description("")]
        public string FlowInfo { get; set; } // FlowInfo
		/// <summary></summary>	
		[Description("")]
        public string StepName { get; set; } // StepName
		/// <summary>申报项目</summary>	
		[Description("申报项目")]
        public string DeclareProject { get; set; } // DeclareProject
		/// <summary>申报项目名称</summary>	
		[Description("申报项目名称")]
        public string DeclareProjectName { get; set; } // DeclareProjectName
		/// <summary>申报奖项</summary>	
		[Description("申报奖项")]
        public string DeclareAward { get; set; } // DeclareAward
		/// <summary>申报奖项名称</summary>	
		[Description("申报奖项名称")]
        public string DeclareAwardName { get; set; } // DeclareAwardName
		/// <summary>申报人</summary>	
		[Description("申报人")]
        public string Declarant { get; set; } // Declarant
		/// <summary>申报人名称</summary>	
		[Description("申报人名称")]
        public string DeclarantName { get; set; } // DeclarantName
		/// <summary>项目申报部门</summary>	
		[Description("项目申报部门")]
        public string DeclareDepartment { get; set; } // DeclareDepartment
		/// <summary>项目申报部门名称</summary>	
		[Description("项目申报部门名称")]
        public string DeclareDepartmentName { get; set; } // DeclareDepartmentName
		/// <summary>申报年度</summary>	
		[Description("申报年度")]
        public string DeclareYear { get; set; } // DeclareYear
		/// <summary>申报日期</summary>	
		[Description("申报日期")]
        public DateTime? DeclareDate { get; set; } // DeclareDate
		/// <summary>项目编号</summary>	
		[Description("项目编号")]
        public string ProjectNumber { get; set; } // ProjectNumber
		/// <summary>参加部门</summary>	
		[Description("参加部门")]
        public string JoinDepartment { get; set; } // JoinDepartment
		/// <summary>参加部门名称</summary>	
		[Description("参加部门名称")]
        public string JoinDepartmentName { get; set; } // JoinDepartmentName
		/// <summary>项目开始时间</summary>	
		[Description("项目开始时间")]
        public DateTime? ProjectStartDate { get; set; } // ProjectStartDate
		/// <summary>项目结束时间</summary>	
		[Description("项目结束时间")]
        public DateTime? ProjectEndDate { get; set; } // ProjectEndDate
		/// <summary>项目整体是否验收</summary>	
		[Description("项目整体是否验收")]
        public string ProjectIsCheck { get; set; } // ProjectIsCheck
		/// <summary>项目整体验收时间</summary>	
		[Description("项目整体验收时间")]
        public DateTime? ProjectCheckDate { get; set; } // ProjectCheckDate
		/// <summary>授权发明专利（项）</summary>	
		[Description("授权发明专利（项）")]
        public string InventionPatent { get; set; } // InventionPatent
		/// <summary>授权的其他知识产权（项）</summary>	
		[Description("授权的其他知识产权（项）")]
        public string OtherInventionPatent { get; set; } // OtherInventionPatent
		/// <summary>报奖竣工时间要求</summary>	
		[Description("报奖竣工时间要求")]
        public string ACTR { get; set; } // ACTR
		/// <summary>报奖所需各类证明材料要求</summary>	
		[Description("报奖所需各类证明材料要求")]
        public string AKCRA { get; set; } // AKCRA
		/// <summary>报奖资料</summary>	
		[Description("报奖资料")]
        public string DeclareAttachment { get; set; } // DeclareAttachment
		/// <summary>参与人员</summary>	
		[Description("参与人员")]
        public string JoinPerson { get; set; } // JoinPerson
		/// <summary>申报部门领导</summary>	
		[Description("申报部门领导")]
        public string DepartmentLeader { get; set; } // DepartmentLeader
		/// <summary>技术部主管意见</summary>	
		[Description("技术部主管意见")]
        public string TechnologyDepartmentleader { get; set; } // TechnologyDepartmentleader
		/// <summary>技术部部长意见</summary>	
		[Description("技术部部长意见")]
        public string TechnologyDepartmentMinister { get; set; } // TechnologyDepartmentMinister
		/// <summary>总工程师意见</summary>	
		[Description("总工程师意见")]
        public string ChiefEngineer { get; set; } // ChiefEngineer

        // Reverse navigation
		[JsonIgnore]
        public virtual ICollection<T_Win_IndustryAwardDeclare_JoinPerson> T_Win_IndustryAwardDeclare_JoinPerson { get { onT_Win_IndustryAwardDeclare_JoinPersonGetting(); return _T_Win_IndustryAwardDeclare_JoinPerson;} }
		private ICollection<T_Win_IndustryAwardDeclare_JoinPerson> _T_Win_IndustryAwardDeclare_JoinPerson;
		partial void onT_Win_IndustryAwardDeclare_JoinPersonGetting();


        public T_Win_IndustryAwardDeclare()
        {
            _T_Win_IndustryAwardDeclare_JoinPerson = new List<T_Win_IndustryAwardDeclare_JoinPerson>();
        }
    }

	/// <summary>参与人员</summary>	
	[Description("参与人员")]
    public partial class T_Win_IndustryAwardDeclare_JoinPerson : Formula.BaseModel
    {
		/// <summary></summary>	
		[Description("")]
        public string ID { get; set; } // ID (Primary key)
		/// <summary></summary>	
		[Description("")]
        public string T_Win_IndustryAwardDeclareID { get; set; } // T_Win_IndustryAwardDeclareID
		/// <summary></summary>	
		[Description("")]
        public double? SortIndex { get; set; } // SortIndex
		/// <summary></summary>	
		[Description("")]
        public string IsReleased { get; set; } // IsReleased
		/// <summary>姓名</summary>	
		[Description("姓名")]
        public string Name { get; set; } // Name
		/// <summary>部门</summary>	
		[Description("部门")]
        public string Department { get; set; } // Department
		/// <summary>项目角色</summary>	
		[Description("项目角色")]
        public string ProjectRole { get; set; } // ProjectRole
		/// <summary>备注</summary>	
		[Description("备注")]
        public string Remark { get; set; } // Remark
		/// <summary>姓名名称</summary>	
		[Description("姓名名称")]
        public string NameName { get; set; } // NameName
		/// <summary>部门名称</summary>	
		[Description("部门名称")]
        public string DepartmentName { get; set; } // DepartmentName

        // Foreign keys
		[JsonIgnore]
        public virtual T_Win_IndustryAwardDeclare T_Win_IndustryAwardDeclare { get; set; } //  T_Win_IndustryAwardDeclareID - FK_T_Win_IndustryAwardDeclare_JoinPerson_T_Win_IndustryAwardDeclare
    }

	/// <summary>行业以上报奖申报要求登记表</summary>	
	[Description("行业以上报奖申报要求登记表")]
    public partial class T_Win_IndustryAwardDemandRecord : Formula.BaseModel
    {
		/// <summary></summary>	
		[Description("")]
        public string ID { get; set; } // ID (Primary key)
		/// <summary></summary>	
		[Description("")]
        public DateTime? CreateDate { get; set; } // CreateDate
		/// <summary></summary>	
		[Description("")]
        public DateTime? ModifyDate { get; set; } // ModifyDate
		/// <summary></summary>	
		[Description("")]
        public string CreateUserID { get; set; } // CreateUserID
		/// <summary></summary>	
		[Description("")]
        public string CreateUser { get; set; } // CreateUser
		/// <summary></summary>	
		[Description("")]
        public string ModifyUserID { get; set; } // ModifyUserID
		/// <summary></summary>	
		[Description("")]
        public string ModifyUser { get; set; } // ModifyUser
		/// <summary></summary>	
		[Description("")]
        public string OrgID { get; set; } // OrgID
		/// <summary></summary>	
		[Description("")]
        public string CompanyID { get; set; } // CompanyID
		/// <summary></summary>	
		[Description("")]
        public string FlowPhase { get; set; } // FlowPhase
		/// <summary></summary>	
		[Description("")]
        public string FlowInfo { get; set; } // FlowInfo
		/// <summary></summary>	
		[Description("")]
        public string StepName { get; set; } // StepName
		/// <summary>报奖名称</summary>	
		[Description("报奖名称")]
        public string AwardName { get; set; } // AwardName
		/// <summary>报奖成果类型</summary>	
		[Description("报奖成果类型")]
        public string AwardResultType { get; set; } // AwardResultType
		/// <summary>主办单位</summary>	
		[Description("主办单位")]
        public string SponsorUnit { get; set; } // SponsorUnit
		/// <summary>申报截止时间</summary>	
		[Description("申报截止时间")]
        public string Deadline { get; set; } // Deadline
		/// <summary>申报网站</summary>	
		[Description("申报网站")]
        public string WebSite { get; set; } // WebSite
		/// <summary>报奖竣工时间要求</summary>	
		[Description("报奖竣工时间要求")]
        public string ACTR { get; set; } // ACTR
		/// <summary>报奖所需各类证明材料</summary>	
		[Description("报奖所需各类证明材料")]
        public string AKCRA { get; set; } // AKCRA
		/// <summary>创建人</summary>	
		[Description("创建人")]
        public string Declarant { get; set; } // Declarant
		/// <summary>创建人名称</summary>	
		[Description("创建人名称")]
        public string DeclarantName { get; set; } // DeclarantName
		/// <summary>创建时间</summary>	
		[Description("创建时间")]
        public DateTime? DeclareDate { get; set; } // DeclareDate
		/// <summary>备注</summary>	
		[Description("备注")]
        public string Remark { get; set; } // Remark
    }

	/// <summary>行业以上获奖管理</summary>	
	[Description("行业以上获奖管理")]
    public partial class T_Win_IndustryAwardManager : Formula.BaseModel
    {
		/// <summary></summary>	
		[Description("")]
        public string ID { get; set; } // ID (Primary key)
		/// <summary></summary>	
		[Description("")]
        public DateTime? CreateDate { get; set; } // CreateDate
		/// <summary></summary>	
		[Description("")]
        public DateTime? ModifyDate { get; set; } // ModifyDate
		/// <summary></summary>	
		[Description("")]
        public string CreateUserID { get; set; } // CreateUserID
		/// <summary></summary>	
		[Description("")]
        public string CreateUser { get; set; } // CreateUser
		/// <summary></summary>	
		[Description("")]
        public string ModifyUserID { get; set; } // ModifyUserID
		/// <summary></summary>	
		[Description("")]
        public string ModifyUser { get; set; } // ModifyUser
		/// <summary></summary>	
		[Description("")]
        public string OrgID { get; set; } // OrgID
		/// <summary></summary>	
		[Description("")]
        public string CompanyID { get; set; } // CompanyID
		/// <summary></summary>	
		[Description("")]
        public string FlowPhase { get; set; } // FlowPhase
		/// <summary></summary>	
		[Description("")]
        public string FlowInfo { get; set; } // FlowInfo
		/// <summary></summary>	
		[Description("")]
        public string StepName { get; set; } // StepName
		/// <summary>获奖项目名称</summary>	
		[Description("获奖项目名称")]
        public string AwardProjectName { get; set; } // AwardProjectName
		/// <summary>奖项名称</summary>	
		[Description("奖项名称")]
        public string AwardName { get; set; } // AwardName
		/// <summary>获奖等级</summary>	
		[Description("获奖等级")]
        public string AwardLevel { get; set; } // AwardLevel
		/// <summary>获奖时间</summary>	
		[Description("获奖时间")]
        public DateTime? AwardDate { get; set; } // AwardDate
		/// <summary>证书编号</summary>	
		[Description("证书编号")]
        public string CertificateNumber { get; set; } // CertificateNumber
		/// <summary>奖项申报人</summary>	
		[Description("奖项申报人")]
        public string AwardDelarant { get; set; } // AwardDelarant
		/// <summary>奖项申报人名称</summary>	
		[Description("奖项申报人名称")]
        public string AwardDelarantName { get; set; } // AwardDelarantName
		/// <summary>奖项申报部门</summary>	
		[Description("奖项申报部门")]
        public string AwardDeclareDepartment { get; set; } // AwardDeclareDepartment
		/// <summary>奖项申报部门名称</summary>	
		[Description("奖项申报部门名称")]
        public string AwardDeclareDepartmentName { get; set; } // AwardDeclareDepartmentName
		/// <summary>参与人员</summary>	
		[Description("参与人员")]
        public string JoinPerson { get; set; } // JoinPerson
		/// <summary>登记人</summary>	
		[Description("登记人")]
        public string Declarant { get; set; } // Declarant
		/// <summary>登记人名称</summary>	
		[Description("登记人名称")]
        public string DeclarantName { get; set; } // DeclarantName
		/// <summary>登记时间</summary>	
		[Description("登记时间")]
        public DateTime? DeclareDate { get; set; } // DeclareDate
		/// <summary>获奖证书</summary>	
		[Description("获奖证书")]
        public string AwardCertificate { get; set; } // AwardCertificate
		/// <summary>申报书及附件</summary>	
		[Description("申报书及附件")]
        public string Attachment { get; set; } // Attachment

        // Reverse navigation
		[JsonIgnore]
        public virtual ICollection<T_Win_IndustryAwardManager_JoinPerson> T_Win_IndustryAwardManager_JoinPerson { get { onT_Win_IndustryAwardManager_JoinPersonGetting(); return _T_Win_IndustryAwardManager_JoinPerson;} }
		private ICollection<T_Win_IndustryAwardManager_JoinPerson> _T_Win_IndustryAwardManager_JoinPerson;
		partial void onT_Win_IndustryAwardManager_JoinPersonGetting();


        public T_Win_IndustryAwardManager()
        {
            _T_Win_IndustryAwardManager_JoinPerson = new List<T_Win_IndustryAwardManager_JoinPerson>();
        }
    }

	/// <summary>参与人员</summary>	
	[Description("参与人员")]
    public partial class T_Win_IndustryAwardManager_JoinPerson : Formula.BaseModel
    {
		/// <summary></summary>	
		[Description("")]
        public string ID { get; set; } // ID (Primary key)
		/// <summary></summary>	
		[Description("")]
        public string T_Win_IndustryAwardManagerID { get; set; } // T_Win_IndustryAwardManagerID
		/// <summary></summary>	
		[Description("")]
        public double? SortIndex { get; set; } // SortIndex
		/// <summary></summary>	
		[Description("")]
        public string IsReleased { get; set; } // IsReleased
		/// <summary>姓名</summary>	
		[Description("姓名")]
        public string Name { get; set; } // Name
		/// <summary>部门</summary>	
		[Description("部门")]
        public string Department { get; set; } // Department
		/// <summary>项目角色</summary>	
		[Description("项目角色")]
        public string Role { get; set; } // Role
		/// <summary>备注</summary>	
		[Description("备注")]
        public string Remark { get; set; } // Remark
		/// <summary>姓名名称</summary>	
		[Description("姓名名称")]
        public string NameName { get; set; } // NameName
		/// <summary>部门名称</summary>	
		[Description("部门名称")]
        public string DepartmentName { get; set; } // DepartmentName

        // Foreign keys
		[JsonIgnore]
        public virtual T_Win_IndustryAwardManager T_Win_IndustryAwardManager { get; set; } //  T_Win_IndustryAwardManagerID - FK_T_Win_IndustryAwardManager_JoinPerson_T_Win_IndustryAwardManager
    }

	/// <summary>得分汇总</summary>	
	[Description("得分汇总")]
    public partial class T_Win_ProjectScore : Formula.BaseModel
    {
		/// <summary></summary>	
		[Description("")]
        public string ID { get; set; } // ID (Primary key)
		/// <summary></summary>	
		[Description("")]
        public DateTime? CreateDate { get; set; } // CreateDate
		/// <summary></summary>	
		[Description("")]
        public DateTime? ModifyDate { get; set; } // ModifyDate
		/// <summary></summary>	
		[Description("")]
        public string CreateUserID { get; set; } // CreateUserID
		/// <summary></summary>	
		[Description("")]
        public string CreateUser { get; set; } // CreateUser
		/// <summary></summary>	
		[Description("")]
        public string ModifyUserID { get; set; } // ModifyUserID
		/// <summary></summary>	
		[Description("")]
        public string ModifyUser { get; set; } // ModifyUser
		/// <summary></summary>	
		[Description("")]
        public string OrgID { get; set; } // OrgID
		/// <summary></summary>	
		[Description("")]
        public string CompanyID { get; set; } // CompanyID
		/// <summary></summary>	
		[Description("")]
        public string FlowPhase { get; set; } // FlowPhase
		/// <summary></summary>	
		[Description("")]
        public string FlowInfo { get; set; } // FlowInfo
		/// <summary></summary>	
		[Description("")]
        public string StepName { get; set; } // StepName
		/// <summary>申报年度</summary>	
		[Description("申报年度")]
        public string DeclareYear { get; set; } // DeclareYear
		/// <summary>申报人</summary>	
		[Description("申报人")]
        public string Declarant { get; set; } // Declarant
		/// <summary>申报人名称</summary>	
		[Description("申报人名称")]
        public string DeclarantName { get; set; } // DeclarantName
		/// <summary>项目申报部门</summary>	
		[Description("项目申报部门")]
        public string DeclareDepartment { get; set; } // DeclareDepartment
		/// <summary>项目申报部门名称</summary>	
		[Description("项目申报部门名称")]
        public string DeclareDepartmentName { get; set; } // DeclareDepartmentName
		/// <summary>项目编号（技术部编号）</summary>	
		[Description("项目编号（技术部编号）")]
        public string ProjectNumber { get; set; } // ProjectNumber
		/// <summary>项目名称</summary>	
		[Description("项目名称")]
        public string ProjectName { get; set; } // ProjectName
		/// <summary>申报类别</summary>	
		[Description("申报类别")]
        public string DeclareCategory { get; set; } // DeclareCategory
		/// <summary>申报等级</summary>	
		[Description("申报等级")]
        public string DeclareLevel { get; set; } // DeclareLevel
		/// <summary>参加部门</summary>	
		[Description("参加部门")]
        public string JoinDepartment { get; set; } // JoinDepartment
		/// <summary>参加部门名称</summary>	
		[Description("参加部门名称")]
        public string JoinDepartmentName { get; set; } // JoinDepartmentName
		/// <summary>项目开始时间</summary>	
		[Description("项目开始时间")]
        public DateTime? ProjectStartDate { get; set; } // ProjectStartDate
		/// <summary>项目结束时间</summary>	
		[Description("项目结束时间")]
        public DateTime? ProjectEndDate { get; set; } // ProjectEndDate
		/// <summary>项目整体是否验收</summary>	
		[Description("项目整体是否验收")]
        public string IsCheck { get; set; } // IsCheck
		/// <summary>项目整体验收时间</summary>	
		[Description("项目整体验收时间")]
        public DateTime? CheckDate { get; set; } // CheckDate
		/// <summary>授权发明专利</summary>	
		[Description("授权发明专利")]
        public decimal? AuthorizedPatent { get; set; } // AuthorizedPatent
		/// <summary>授权的其他知识产权</summary>	
		[Description("授权的其他知识产权")]
        public decimal? AuthorizedOtherIP { get; set; } // AuthorizedOtherIP
		/// <summary>评分专家数量</summary>	
		[Description("评分专家数量")]
        public string ExpertCount { get; set; } // ExpertCount
		/// <summary>平均得分</summary>	
		[Description("平均得分")]
        public string AverageScore { get; set; } // AverageScore
		/// <summary>最高得分</summary>	
		[Description("最高得分")]
        public string HightScore { get; set; } // HightScore
		/// <summary>最低得分</summary>	
		[Description("最低得分")]
        public string LowScore { get; set; } // LowScore
		/// <summary>科学技术奖</summary>	
		[Description("科学技术奖")]
        public string STAward { get; set; } // STAward
		/// <summary>优秀工程设计奖</summary>	
		[Description("优秀工程设计奖")]
        public string EEDAward { get; set; } // EEDAward
		/// <summary>优秀总承包项目管理奖</summary>	
		[Description("优秀总承包项目管理奖")]
        public string EPCPMAward { get; set; } // EPCPMAward
		/// <summary>优秀咨询成果奖</summary>	
		[Description("优秀咨询成果奖")]
        public string OCAAward { get; set; } // OCAAward
		/// <summary>优秀软件（含BIM应用）</summary>	
		[Description("优秀软件（含BIM应用）")]
        public string ExcellentSoftware { get; set; } // ExcellentSoftware
		/// <summary>优秀BIM协同奖</summary>	
		[Description("优秀BIM协同奖")]
        public string EBIMCAward { get; set; } // EBIMCAward
		/// <summary>报奖资料</summary>	
		[Description("报奖资料")]
        public string AwardAttachment { get; set; } // AwardAttachment
		/// <summary>专家评分详情</summary>	
		[Description("专家评分详情")]
        public string ExpertDetail { get; set; } // ExpertDetail
		/// <summary>项目ID</summary>	
		[Description("项目ID")]
        public string ProjectID { get; set; } // ProjectID

        // Reverse navigation
		[JsonIgnore]
        public virtual ICollection<T_Win_ProjectScore_ExpertDetail> T_Win_ProjectScore_ExpertDetail { get { onT_Win_ProjectScore_ExpertDetailGetting(); return _T_Win_ProjectScore_ExpertDetail;} }
		private ICollection<T_Win_ProjectScore_ExpertDetail> _T_Win_ProjectScore_ExpertDetail;
		partial void onT_Win_ProjectScore_ExpertDetailGetting();


        public T_Win_ProjectScore()
        {
            _T_Win_ProjectScore_ExpertDetail = new List<T_Win_ProjectScore_ExpertDetail>();
        }
    }

	/// <summary>专家评分详情</summary>	
	[Description("专家评分详情")]
    public partial class T_Win_ProjectScore_ExpertDetail : Formula.BaseModel
    {
		/// <summary></summary>	
		[Description("")]
        public string ID { get; set; } // ID (Primary key)
		/// <summary></summary>	
		[Description("")]
        public string T_Win_ProjectScoreID { get; set; } // T_Win_ProjectScoreID
		/// <summary></summary>	
		[Description("")]
        public double? SortIndex { get; set; } // SortIndex
		/// <summary></summary>	
		[Description("")]
        public string IsReleased { get; set; } // IsReleased
		/// <summary>专家姓名</summary>	
		[Description("专家姓名")]
        public string ZJXM { get; set; } // ZJXM
		/// <summary>专家所在部门</summary>	
		[Description("专家所在部门")]
        public string ZJSZBM { get; set; } // ZJSZBM
		/// <summary>专家评分</summary>	
		[Description("专家评分")]
        public string ZJPF { get; set; } // ZJPF

        // Foreign keys
		[JsonIgnore]
        public virtual T_Win_ProjectScore T_Win_ProjectScore { get; set; } //  T_Win_ProjectScoreID - FK_T_Win_ProjectScore_ExpertDetail_T_Win_ProjectScore
    }

	/// <summary>公司技术创新奖项评分表单</summary>	
	[Description("公司技术创新奖项评分表单")]
    public partial class T_Win_Technicalinnovation : Formula.BaseModel
    {
		/// <summary></summary>	
		[Description("")]
        public string ID { get; set; } // ID (Primary key)
		/// <summary></summary>	
		[Description("")]
        public DateTime? CreateDate { get; set; } // CreateDate
		/// <summary></summary>	
		[Description("")]
        public DateTime? ModifyDate { get; set; } // ModifyDate
		/// <summary></summary>	
		[Description("")]
        public string CreateUserID { get; set; } // CreateUserID
		/// <summary></summary>	
		[Description("")]
        public string CreateUser { get; set; } // CreateUser
		/// <summary></summary>	
		[Description("")]
        public string ModifyUserID { get; set; } // ModifyUserID
		/// <summary></summary>	
		[Description("")]
        public string ModifyUser { get; set; } // ModifyUser
		/// <summary></summary>	
		[Description("")]
        public string OrgID { get; set; } // OrgID
		/// <summary></summary>	
		[Description("")]
        public string CompanyID { get; set; } // CompanyID
		/// <summary></summary>	
		[Description("")]
        public string FlowPhase { get; set; } // FlowPhase
		/// <summary></summary>	
		[Description("")]
        public string FlowInfo { get; set; } // FlowInfo
		/// <summary></summary>	
		[Description("")]
        public string StepName { get; set; } // StepName
		/// <summary>申报项目</summary>	
		[Description("申报项目")]
        public string Declareproject { get; set; } // Declareproject
		/// <summary>申报人</summary>	
		[Description("申报人")]
        public string Declarant { get; set; } // Declarant
		/// <summary>项目申报部门</summary>	
		[Description("项目申报部门")]
        public string Declaredept { get; set; } // Declaredept
		/// <summary>技术部建议申报类别</summary>	
		[Description("技术部建议申报类别")]
        public string Declarecategory { get; set; } // Declarecategory
		/// <summary>技术部建议申报等级</summary>	
		[Description("技术部建议申报等级")]
        public string Declarelevel { get; set; } // Declarelevel
		/// <summary>参加部门</summary>	
		[Description("参加部门")]
        public string Dept { get; set; } // Dept
		/// <summary>项目编号</summary>	
		[Description("项目编号")]
        public string Projectnumber { get; set; } // Projectnumber
		/// <summary>项目名称</summary>	
		[Description("项目名称")]
        public string Projectname { get; set; } // Projectname
		/// <summary>项目开始时间</summary>	
		[Description("项目开始时间")]
        public string Starttime { get; set; } // Starttime
		/// <summary>项目结束时间</summary>	
		[Description("项目结束时间")]
        public string Endtime { get; set; } // Endtime
		/// <summary>项目整体是否验收</summary>	
		[Description("项目整体是否验收")]
        public string Acceptornot { get; set; } // Acceptornot
		/// <summary>项目整体验收时间</summary>	
		[Description("项目整体验收时间")]
        public string Accepttime { get; set; } // Accepttime
		/// <summary>授权发明专利（项）</summary>	
		[Description("授权发明专利（项）")]
        public string Invention { get; set; } // Invention
		/// <summary>授权的其他知识产权（项）</summary>	
		[Description("授权的其他知识产权（项）")]
        public string Property { get; set; } // Property
		/// <summary>科学技术奖</summary>	
		[Description("科学技术奖")]
        public string Scienceaward { get; set; } // Scienceaward
		/// <summary>优秀工程设计奖</summary>	
		[Description("优秀工程设计奖")]
        public string Designaward { get; set; } // Designaward
		/// <summary>优秀总承包项目管理奖</summary>	
		[Description("优秀总承包项目管理奖")]
        public string Managementaward { get; set; } // Managementaward
		/// <summary>优秀咨询成果奖</summary>	
		[Description("优秀咨询成果奖")]
        public string Resultsaward { get; set; } // Resultsaward
		/// <summary>优秀课题(软件)奖</summary>	
		[Description("优秀课题(软件)奖")]
        public string Softwareaward { get; set; } // Softwareaward
		/// <summary>报奖材料</summary>	
		[Description("报奖材料")]
        public string Winmaterial { get; set; } // Winmaterial
		/// <summary>评委专家评分</summary>	
		[Description("评委专家评分")]
        public string Expertrating { get; set; } // Expertrating
		/// <summary>最高评分</summary>	
		[Description("最高评分")]
        public string Highestscore { get; set; } // Highestscore
		/// <summary>最低评分</summary>	
		[Description("最低评分")]
        public string Lowestscore { get; set; } // Lowestscore
		/// <summary>平均评分</summary>	
		[Description("平均评分")]
        public string Averagescore { get; set; } // Averagescore
		/// <summary>最终评定意见</summary>	
		[Description("最终评定意见")]
        public string Finalassess { get; set; } // Finalassess
		/// <summary>评定获奖类别</summary>	
		[Description("评定获奖类别")]
        public string Awardcategory { get; set; } // Awardcategory
		/// <summary>评定获奖等级</summary>	
		[Description("评定获奖等级")]
        public string Awardrating { get; set; } // Awardrating
		/// <summary>技术部主管意见</summary>	
		[Description("技术部主管意见")]
        public string Supervisorsign { get; set; } // Supervisorsign
		/// <summary>技术部部长意见</summary>	
		[Description("技术部部长意见")]
        public string Directorsign { get; set; } // Directorsign
		/// <summary>总工程师意见</summary>	
		[Description("总工程师意见")]
        public string Engineersign { get; set; } // Engineersign

        // Reverse navigation
		[JsonIgnore]
        public virtual ICollection<T_Win_Technicalinnovation_Expertrating> T_Win_Technicalinnovation_Expertrating { get { onT_Win_Technicalinnovation_ExpertratingGetting(); return _T_Win_Technicalinnovation_Expertrating;} }
		private ICollection<T_Win_Technicalinnovation_Expertrating> _T_Win_Technicalinnovation_Expertrating;
		partial void onT_Win_Technicalinnovation_ExpertratingGetting();


        public T_Win_Technicalinnovation()
        {
            _T_Win_Technicalinnovation_Expertrating = new List<T_Win_Technicalinnovation_Expertrating>();
        }
    }

	/// <summary>评委专家评分</summary>	
	[Description("评委专家评分")]
    public partial class T_Win_Technicalinnovation_Expertrating : Formula.BaseModel
    {
		/// <summary></summary>	
		[Description("")]
        public string ID { get; set; } // ID (Primary key)
		/// <summary></summary>	
		[Description("")]
        public string T_Win_TechnicalinnovationID { get; set; } // T_Win_TechnicalinnovationID
		/// <summary></summary>	
		[Description("")]
        public double? SortIndex { get; set; } // SortIndex
		/// <summary></summary>	
		[Description("")]
        public string IsReleased { get; set; } // IsReleased
		/// <summary>评委姓名</summary>	
		[Description("评委姓名")]
        public string Name { get; set; } // Name
		/// <summary>评委部门</summary>	
		[Description("评委部门")]
        public string Dept { get; set; } // Dept
		/// <summary>项目评分</summary>	
		[Description("项目评分")]
        public string Score { get; set; } // Score
		/// <summary>评分说明</summary>	
		[Description("评分说明")]
        public string State { get; set; } // State

        // Foreign keys
		[JsonIgnore]
        public virtual T_Win_Technicalinnovation T_Win_Technicalinnovation { get; set; } //  T_Win_TechnicalinnovationID - FK_T_Win_Technicalinnovation_Expertrating_T_Win_Technicalinnovation
    }

	/// <summary>工装入库登记</summary>	
	[Description("工装入库登记")]
    public partial class T_WorkClothes_Entry : Formula.BaseModel
    {
		/// <summary></summary>	
		[Description("")]
        public string ID { get; set; } // ID (Primary key)
		/// <summary></summary>	
		[Description("")]
        public DateTime? CreateDate { get; set; } // CreateDate
		/// <summary></summary>	
		[Description("")]
        public DateTime? ModifyDate { get; set; } // ModifyDate
		/// <summary></summary>	
		[Description("")]
        public string CreateUserID { get; set; } // CreateUserID
		/// <summary></summary>	
		[Description("")]
        public string CreateUser { get; set; } // CreateUser
		/// <summary></summary>	
		[Description("")]
        public string ModifyUserID { get; set; } // ModifyUserID
		/// <summary></summary>	
		[Description("")]
        public string ModifyUser { get; set; } // ModifyUser
		/// <summary></summary>	
		[Description("")]
        public string OrgID { get; set; } // OrgID
		/// <summary></summary>	
		[Description("")]
        public string CompanyID { get; set; } // CompanyID
		/// <summary></summary>	
		[Description("")]
        public string FlowPhase { get; set; } // FlowPhase
		/// <summary></summary>	
		[Description("")]
        public string FlowInfo { get; set; } // FlowInfo
		/// <summary></summary>	
		[Description("")]
        public string StepName { get; set; } // StepName
		/// <summary>登记人</summary>	
		[Description("登记人")]
        public string Registrant { get; set; } // Registrant
		/// <summary>登记人名称</summary>	
		[Description("登记人名称")]
        public string RegistrantName { get; set; } // RegistrantName
		/// <summary>登记人部门</summary>	
		[Description("登记人部门")]
        public string RegistrantDept { get; set; } // RegistrantDept
		/// <summary>登记人部门名称</summary>	
		[Description("登记人部门名称")]
        public string RegistrantDeptName { get; set; } // RegistrantDeptName
		/// <summary>登记日期</summary>	
		[Description("登记日期")]
        public DateTime? RegisterDate { get; set; } // RegisterDate
		/// <summary>采购日期</summary>	
		[Description("采购日期")]
        public DateTime? PurchaseDate { get; set; } // PurchaseDate
		/// <summary>天津合计数量</summary>	
		[Description("天津合计数量")]
        public string TJTotalCount { get; set; } // TJTotalCount
		/// <summary>洛阳合计数量</summary>	
		[Description("洛阳合计数量")]
        public string LYTotalCount { get; set; } // LYTotalCount
		/// <summary>备注</summary>	
		[Description("备注")]
        public string Remark { get; set; } // Remark
		/// <summary>附件</summary>	
		[Description("附件")]
        public string Attachments { get; set; } // Attachments
		/// <summary>工装明细列表</summary>	
		[Description("工装明细列表")]
        public string WorkClothesDetail { get; set; } // WorkClothesDetail
		/// <summary>审核意见</summary>	
		[Description("审核意见")]
        public string Audit { get; set; } // Audit

        // Reverse navigation
		[JsonIgnore]
        public virtual ICollection<T_WorkClothes_Entry_WorkClothesDetail> T_WorkClothes_Entry_WorkClothesDetail { get { onT_WorkClothes_Entry_WorkClothesDetailGetting(); return _T_WorkClothes_Entry_WorkClothesDetail;} }
		private ICollection<T_WorkClothes_Entry_WorkClothesDetail> _T_WorkClothes_Entry_WorkClothesDetail;
		partial void onT_WorkClothes_Entry_WorkClothesDetailGetting();


        public T_WorkClothes_Entry()
        {
            _T_WorkClothes_Entry_WorkClothesDetail = new List<T_WorkClothes_Entry_WorkClothesDetail>();
        }
    }

	/// <summary>工装明细列表</summary>	
	[Description("工装明细列表")]
    public partial class T_WorkClothes_Entry_WorkClothesDetail : Formula.BaseModel
    {
		/// <summary></summary>	
		[Description("")]
        public string ID { get; set; } // ID (Primary key)
		/// <summary></summary>	
		[Description("")]
        public string T_WorkClothes_EntryID { get; set; } // T_WorkClothes_EntryID
		/// <summary></summary>	
		[Description("")]
        public double? SortIndex { get; set; } // SortIndex
		/// <summary></summary>	
		[Description("")]
        public string IsReleased { get; set; } // IsReleased
		/// <summary>工装种类</summary>	
		[Description("工装种类")]
        public string Category { get; set; } // Category
		/// <summary>155</summary>	
		[Description("155")]
        public string Size155Quantity { get; set; } // Size155Quantity
		/// <summary>160</summary>	
		[Description("160")]
        public string Size160Quantity { get; set; } // Size160Quantity
		/// <summary>165</summary>	
		[Description("165")]
        public string Size165Quantity { get; set; } // Size165Quantity
		/// <summary>170</summary>	
		[Description("170")]
        public string Size170Quantity { get; set; } // Size170Quantity
		/// <summary>175</summary>	
		[Description("175")]
        public string Size175Quantity { get; set; } // Size175Quantity
		/// <summary>180</summary>	
		[Description("180")]
        public string Size180Quantity { get; set; } // Size180Quantity
		/// <summary>185</summary>	
		[Description("185")]
        public string Size185Quantity { get; set; } // Size185Quantity
		/// <summary>合计</summary>	
		[Description("合计")]
        public string TotalQuantity { get; set; } // TotalQuantity
		/// <summary>存放地点</summary>	
		[Description("存放地点")]
        public string Location { get; set; } // Location

        // Foreign keys
		[JsonIgnore]
        public virtual T_WorkClothes_Entry T_WorkClothes_Entry { get; set; } //  T_WorkClothes_EntryID - FK_T_WorkClothes_Entry_WorkClothesDetail_T_WorkClothes_Entry
    }

	/// <summary>管理工装申领</summary>	
	[Description("管理工装申领")]
    public partial class T_WorkClothes_ManageReceive : Formula.BaseModel
    {
		/// <summary></summary>	
		[Description("")]
        public string ID { get; set; } // ID (Primary key)
		/// <summary></summary>	
		[Description("")]
        public DateTime? CreateDate { get; set; } // CreateDate
		/// <summary></summary>	
		[Description("")]
        public DateTime? ModifyDate { get; set; } // ModifyDate
		/// <summary></summary>	
		[Description("")]
        public string CreateUserID { get; set; } // CreateUserID
		/// <summary></summary>	
		[Description("")]
        public string CreateUser { get; set; } // CreateUser
		/// <summary></summary>	
		[Description("")]
        public string ModifyUserID { get; set; } // ModifyUserID
		/// <summary></summary>	
		[Description("")]
        public string ModifyUser { get; set; } // ModifyUser
		/// <summary></summary>	
		[Description("")]
        public string OrgID { get; set; } // OrgID
		/// <summary></summary>	
		[Description("")]
        public string CompanyID { get; set; } // CompanyID
		/// <summary></summary>	
		[Description("")]
        public string FlowPhase { get; set; } // FlowPhase
		/// <summary></summary>	
		[Description("")]
        public string FlowInfo { get; set; } // FlowInfo
		/// <summary></summary>	
		[Description("")]
        public string StepName { get; set; } // StepName
		/// <summary>申领人</summary>	
		[Description("申领人")]
        public string Registrant { get; set; } // Registrant
		/// <summary>申领人名称</summary>	
		[Description("申领人名称")]
        public string RegistrantName { get; set; } // RegistrantName
		/// <summary>申领人部门</summary>	
		[Description("申领人部门")]
        public string RegisterDept { get; set; } // RegisterDept
		/// <summary>申领人部门名称</summary>	
		[Description("申领人部门名称")]
        public string RegisterDeptName { get; set; } // RegisterDeptName
		/// <summary>申领日期</summary>	
		[Description("申领日期")]
        public DateTime? RegisterDate { get; set; } // RegisterDate
		/// <summary>使用地点</summary>	
		[Description("使用地点")]
        public string Location { get; set; } // Location
		/// <summary>项目名称</summary>	
		[Description("项目名称")]
        public string Project { get; set; } // Project
		/// <summary>项目名称名称</summary>	
		[Description("项目名称名称")]
        public string ProjectName { get; set; } // ProjectName
		/// <summary>顾客名称</summary>	
		[Description("顾客名称")]
        public string Customer { get; set; } // Customer
		/// <summary>顾客名称名称</summary>	
		[Description("顾客名称名称")]
        public string CustomerName { get; set; } // CustomerName
		/// <summary>领取地点</summary>	
		[Description("领取地点")]
        public string ReceiveLocation { get; set; } // ReceiveLocation
		/// <summary>备注</summary>	
		[Description("备注")]
        public string Remark { get; set; } // Remark
		/// <summary>附件</summary>	
		[Description("附件")]
        public string Attachments { get; set; } // Attachments
		/// <summary>工装申领列表</summary>	
		[Description("工装申领列表")]
        public string ReceiveDetail { get; set; } // ReceiveDetail
		/// <summary>部门领导意见</summary>	
		[Description("部门领导意见")]
        public string DeptLeader { get; set; } // DeptLeader
		/// <summary>承包部意见</summary>	
		[Description("承包部意见")]
        public string ContractingDept { get; set; } // ContractingDept

        // Reverse navigation
		[JsonIgnore]
        public virtual ICollection<T_WorkClothes_ManageReceive_ReceiveDetail> T_WorkClothes_ManageReceive_ReceiveDetail { get { onT_WorkClothes_ManageReceive_ReceiveDetailGetting(); return _T_WorkClothes_ManageReceive_ReceiveDetail;} }
		private ICollection<T_WorkClothes_ManageReceive_ReceiveDetail> _T_WorkClothes_ManageReceive_ReceiveDetail;
		partial void onT_WorkClothes_ManageReceive_ReceiveDetailGetting();


        public T_WorkClothes_ManageReceive()
        {
            _T_WorkClothes_ManageReceive_ReceiveDetail = new List<T_WorkClothes_ManageReceive_ReceiveDetail>();
        }
    }

	/// <summary>工装申领列表</summary>	
	[Description("工装申领列表")]
    public partial class T_WorkClothes_ManageReceive_ReceiveDetail : Formula.BaseModel
    {
		/// <summary></summary>	
		[Description("")]
        public string ID { get; set; } // ID (Primary key)
		/// <summary></summary>	
		[Description("")]
        public string T_WorkClothes_ManageReceiveID { get; set; } // T_WorkClothes_ManageReceiveID
		/// <summary></summary>	
		[Description("")]
        public double? SortIndex { get; set; } // SortIndex
		/// <summary></summary>	
		[Description("")]
        public string IsReleased { get; set; } // IsReleased
		/// <summary>工装种类</summary>	
		[Description("工装种类")]
        public string Category { get; set; } // Category
		/// <summary>155</summary>	
		[Description("155")]
        public string Size155Quantity { get; set; } // Size155Quantity
		/// <summary>160</summary>	
		[Description("160")]
        public string Size160Quantity { get; set; } // Size160Quantity
		/// <summary>165</summary>	
		[Description("165")]
        public string Size165Quantity { get; set; } // Size165Quantity
		/// <summary>170</summary>	
		[Description("170")]
        public string Size170Quantity { get; set; } // Size170Quantity
		/// <summary>175</summary>	
		[Description("175")]
        public string Size175Quantity { get; set; } // Size175Quantity
		/// <summary>180</summary>	
		[Description("180")]
        public string Size180Quantity { get; set; } // Size180Quantity
		/// <summary>185</summary>	
		[Description("185")]
        public string Size185Quantity { get; set; } // Size185Quantity
		/// <summary>合计数量</summary>	
		[Description("合计数量")]
        public string TotalQuantity { get; set; } // TotalQuantity
		/// <summary>单价</summary>	
		[Description("单价")]
        public string UnitPrice { get; set; } // UnitPrice
		/// <summary>总价</summary>	
		[Description("总价")]
        public string TotalPrice { get; set; } // TotalPrice

        // Foreign keys
		[JsonIgnore]
        public virtual T_WorkClothes_ManageReceive T_WorkClothes_ManageReceive { get; set; } //  T_WorkClothes_ManageReceiveID - FK_T_WorkClothes_ManageReceive_ReceiveDetail_T_WorkClothes_ManageReceive
    }

	/// <summary>工装库存查询</summary>	
	[Description("工装库存查询")]
    public partial class T_WorkClothes_Stock : Formula.BaseModel
    {
		/// <summary></summary>	
		[Description("")]
        public string ID { get; set; } // ID (Primary key)
		/// <summary></summary>	
		[Description("")]
        public DateTime? CreateDate { get; set; } // CreateDate
		/// <summary></summary>	
		[Description("")]
        public DateTime? ModifyDate { get; set; } // ModifyDate
		/// <summary></summary>	
		[Description("")]
        public string CreateUserID { get; set; } // CreateUserID
		/// <summary></summary>	
		[Description("")]
        public string CreateUser { get; set; } // CreateUser
		/// <summary></summary>	
		[Description("")]
        public string ModifyUserID { get; set; } // ModifyUserID
		/// <summary></summary>	
		[Description("")]
        public string ModifyUser { get; set; } // ModifyUser
		/// <summary></summary>	
		[Description("")]
        public string OrgID { get; set; } // OrgID
		/// <summary></summary>	
		[Description("")]
        public string CompanyID { get; set; } // CompanyID
		/// <summary></summary>	
		[Description("")]
        public string FlowPhase { get; set; } // FlowPhase
		/// <summary></summary>	
		[Description("")]
        public string FlowInfo { get; set; } // FlowInfo
		/// <summary></summary>	
		[Description("")]
        public string StepName { get; set; } // StepName
		/// <summary>登记人</summary>	
		[Description("登记人")]
        public string Registrant { get; set; } // Registrant
		/// <summary>登记人名称</summary>	
		[Description("登记人名称")]
        public string RegistrantName { get; set; } // RegistrantName
		/// <summary>登记日期</summary>	
		[Description("登记日期")]
        public DateTime? RegisterDate { get; set; } // RegisterDate
		/// <summary>管理夏装单价</summary>	
		[Description("管理夏装单价")]
        public string ManageSummerPrice { get; set; } // ManageSummerPrice
		/// <summary>管理秋装单价</summary>	
		[Description("管理秋装单价")]
        public string ManageAutumnPrice { get; set; } // ManageAutumnPrice
		/// <summary>管理冬装单价</summary>	
		[Description("管理冬装单价")]
        public string ManageWinterPrice { get; set; } // ManageWinterPrice
		/// <summary>工人夏装单价</summary>	
		[Description("工人夏装单价")]
        public string WorkerSummerPrice { get; set; } // WorkerSummerPrice
		/// <summary>工人秋装单价</summary>	
		[Description("工人秋装单价")]
        public string WorkerAutumnPrice { get; set; } // WorkerAutumnPrice
		/// <summary>工装详情</summary>	
		[Description("工装详情")]
        public string ClothesDetail { get; set; } // ClothesDetail

        // Reverse navigation
		[JsonIgnore]
        public virtual ICollection<T_WorkClothes_Stock_ClothesDetail> T_WorkClothes_Stock_ClothesDetail { get { onT_WorkClothes_Stock_ClothesDetailGetting(); return _T_WorkClothes_Stock_ClothesDetail;} }
		private ICollection<T_WorkClothes_Stock_ClothesDetail> _T_WorkClothes_Stock_ClothesDetail;
		partial void onT_WorkClothes_Stock_ClothesDetailGetting();


        public T_WorkClothes_Stock()
        {
            _T_WorkClothes_Stock_ClothesDetail = new List<T_WorkClothes_Stock_ClothesDetail>();
        }
    }

	/// <summary>工装详情</summary>	
	[Description("工装详情")]
    public partial class T_WorkClothes_Stock_ClothesDetail : Formula.BaseModel
    {
		/// <summary></summary>	
		[Description("")]
        public string ID { get; set; } // ID (Primary key)
		/// <summary></summary>	
		[Description("")]
        public string T_WorkClothes_StockID { get; set; } // T_WorkClothes_StockID
		/// <summary></summary>	
		[Description("")]
        public double? SortIndex { get; set; } // SortIndex
		/// <summary></summary>	
		[Description("")]
        public string IsReleased { get; set; } // IsReleased
		/// <summary>存放地点</summary>	
		[Description("存放地点")]
        public string Location { get; set; } // Location
		/// <summary>工装种类</summary>	
		[Description("工装种类")]
        public string Category { get; set; } // Category
		/// <summary>155</summary>	
		[Description("155")]
        public string Size155Quantity { get; set; } // Size155Quantity
		/// <summary>160</summary>	
		[Description("160")]
        public string Size160Quantity { get; set; } // Size160Quantity
		/// <summary>165</summary>	
		[Description("165")]
        public string Size165Quantity { get; set; } // Size165Quantity
		/// <summary>170</summary>	
		[Description("170")]
        public string Size170Quantity { get; set; } // Size170Quantity
		/// <summary>175</summary>	
		[Description("175")]
        public string Size175Quantity { get; set; } // Size175Quantity
		/// <summary>180</summary>	
		[Description("180")]
        public string Size180Quantity { get; set; } // Size180Quantity
		/// <summary>185</summary>	
		[Description("185")]
        public string Size185Quantity { get; set; } // Size185Quantity
		/// <summary>总数</summary>	
		[Description("总数")]
        public string TotalQuantity { get; set; } // TotalQuantity

        // Foreign keys
		[JsonIgnore]
        public virtual T_WorkClothes_Stock T_WorkClothes_Stock { get; set; } //  T_WorkClothes_StockID - FK_T_WorkClothes_Stock_ClothesDetail_T_WorkClothes_Stock
    }

	/// <summary>工人工装申领</summary>	
	[Description("工人工装申领")]
    public partial class T_WorkClothes_WorkerReceive : Formula.BaseModel
    {
		/// <summary></summary>	
		[Description("")]
        public string ID { get; set; } // ID (Primary key)
		/// <summary></summary>	
		[Description("")]
        public DateTime? CreateDate { get; set; } // CreateDate
		/// <summary></summary>	
		[Description("")]
        public DateTime? ModifyDate { get; set; } // ModifyDate
		/// <summary></summary>	
		[Description("")]
        public string CreateUserID { get; set; } // CreateUserID
		/// <summary></summary>	
		[Description("")]
        public string CreateUser { get; set; } // CreateUser
		/// <summary></summary>	
		[Description("")]
        public string ModifyUserID { get; set; } // ModifyUserID
		/// <summary></summary>	
		[Description("")]
        public string ModifyUser { get; set; } // ModifyUser
		/// <summary></summary>	
		[Description("")]
        public string OrgID { get; set; } // OrgID
		/// <summary></summary>	
		[Description("")]
        public string CompanyID { get; set; } // CompanyID
		/// <summary></summary>	
		[Description("")]
        public string FlowPhase { get; set; } // FlowPhase
		/// <summary></summary>	
		[Description("")]
        public string FlowInfo { get; set; } // FlowInfo
		/// <summary></summary>	
		[Description("")]
        public string StepName { get; set; } // StepName
		/// <summary>申领人</summary>	
		[Description("申领人")]
        public string Registrant { get; set; } // Registrant
		/// <summary>申领人名称</summary>	
		[Description("申领人名称")]
        public string RegistrantName { get; set; } // RegistrantName
		/// <summary>申领人部门</summary>	
		[Description("申领人部门")]
        public string RegisterDept { get; set; } // RegisterDept
		/// <summary>申领人部门名称</summary>	
		[Description("申领人部门名称")]
        public string RegisterDeptName { get; set; } // RegisterDeptName
		/// <summary>申领日期</summary>	
		[Description("申领日期")]
        public DateTime? RegisterDate { get; set; } // RegisterDate
		/// <summary>使用地点</summary>	
		[Description("使用地点")]
        public string Location { get; set; } // Location
		/// <summary>项目名称</summary>	
		[Description("项目名称")]
        public string Project { get; set; } // Project
		/// <summary>项目名称名称</summary>	
		[Description("项目名称名称")]
        public string ProjectName { get; set; } // ProjectName
		/// <summary>顾客名称</summary>	
		[Description("顾客名称")]
        public string Customer { get; set; } // Customer
		/// <summary>顾客名称名称</summary>	
		[Description("顾客名称名称")]
        public string CustomerName { get; set; } // CustomerName
		/// <summary>领取地点</summary>	
		[Description("领取地点")]
        public string ReceiveLocation { get; set; } // ReceiveLocation
		/// <summary>申领类型</summary>	
		[Description("申领类型")]
        public string RegisterType { get; set; } // RegisterType
		/// <summary>备注</summary>	
		[Description("备注")]
        public string Remark { get; set; } // Remark
		/// <summary>附件</summary>	
		[Description("附件")]
        public string Attachments { get; set; } // Attachments
		/// <summary>工装申领列表</summary>	
		[Description("工装申领列表")]
        public string ReceiveDetail { get; set; } // ReceiveDetail
		/// <summary>部门领导意见</summary>	
		[Description("部门领导意见")]
        public string DeptLeader { get; set; } // DeptLeader
		/// <summary>承包部意见</summary>	
		[Description("承包部意见")]
        public string ContractingDept { get; set; } // ContractingDept

        // Reverse navigation
		[JsonIgnore]
        public virtual ICollection<T_WorkClothes_WorkerReceive_ReceiveDetail> T_WorkClothes_WorkerReceive_ReceiveDetail { get { onT_WorkClothes_WorkerReceive_ReceiveDetailGetting(); return _T_WorkClothes_WorkerReceive_ReceiveDetail;} }
		private ICollection<T_WorkClothes_WorkerReceive_ReceiveDetail> _T_WorkClothes_WorkerReceive_ReceiveDetail;
		partial void onT_WorkClothes_WorkerReceive_ReceiveDetailGetting();


        public T_WorkClothes_WorkerReceive()
        {
            _T_WorkClothes_WorkerReceive_ReceiveDetail = new List<T_WorkClothes_WorkerReceive_ReceiveDetail>();
        }
    }

	/// <summary>工装申领列表</summary>	
	[Description("工装申领列表")]
    public partial class T_WorkClothes_WorkerReceive_ReceiveDetail : Formula.BaseModel
    {
		/// <summary></summary>	
		[Description("")]
        public string ID { get; set; } // ID (Primary key)
		/// <summary></summary>	
		[Description("")]
        public string T_WorkClothes_WorkerReceiveID { get; set; } // T_WorkClothes_WorkerReceiveID
		/// <summary></summary>	
		[Description("")]
        public double? SortIndex { get; set; } // SortIndex
		/// <summary></summary>	
		[Description("")]
        public string IsReleased { get; set; } // IsReleased
		/// <summary>工装种类</summary>	
		[Description("工装种类")]
        public string Category { get; set; } // Category
		/// <summary>155</summary>	
		[Description("155")]
        public string Size155Quantity { get; set; } // Size155Quantity
		/// <summary>160</summary>	
		[Description("160")]
        public string Size160Quantity { get; set; } // Size160Quantity
		/// <summary>165</summary>	
		[Description("165")]
        public string Size165Quantity { get; set; } // Size165Quantity
		/// <summary>170</summary>	
		[Description("170")]
        public string Size170Quantity { get; set; } // Size170Quantity
		/// <summary>175</summary>	
		[Description("175")]
        public string Size175Quantity { get; set; } // Size175Quantity
		/// <summary>180</summary>	
		[Description("180")]
        public string Size180Quantity { get; set; } // Size180Quantity
		/// <summary>185</summary>	
		[Description("185")]
        public string Size185Quantity { get; set; } // Size185Quantity
		/// <summary>合计数量</summary>	
		[Description("合计数量")]
        public string TotalQuantity { get; set; } // TotalQuantity
		/// <summary>单价</summary>	
		[Description("单价")]
        public string UnitPrice { get; set; } // UnitPrice
		/// <summary>总价</summary>	
		[Description("总价")]
        public string TotalPrice { get; set; } // TotalPrice

        // Foreign keys
		[JsonIgnore]
        public virtual T_WorkClothes_WorkerReceive T_WorkClothes_WorkerReceive { get; set; } //  T_WorkClothes_WorkerReceiveID - FK_T_WorkClothes_WorkerReceive_ReceiveDetail_T_WorkClothes_WorkerReceive
    }

	/// <summary>移动通测试</summary>	
	[Description("移动通测试")]
    public partial class T_YDTest : Formula.BaseModel
    {
		/// <summary></summary>	
		[Description("")]
        public string ID { get; set; } // ID (Primary key)
		/// <summary></summary>	
		[Description("")]
        public DateTime? CreateDate { get; set; } // CreateDate
		/// <summary></summary>	
		[Description("")]
        public DateTime? ModifyDate { get; set; } // ModifyDate
		/// <summary></summary>	
		[Description("")]
        public string CreateUserID { get; set; } // CreateUserID
		/// <summary></summary>	
		[Description("")]
        public string CreateUser { get; set; } // CreateUser
		/// <summary></summary>	
		[Description("")]
        public string ModifyUserID { get; set; } // ModifyUserID
		/// <summary></summary>	
		[Description("")]
        public string ModifyUser { get; set; } // ModifyUser
		/// <summary></summary>	
		[Description("")]
        public string OrgID { get; set; } // OrgID
		/// <summary></summary>	
		[Description("")]
        public string CompanyID { get; set; } // CompanyID
		/// <summary></summary>	
		[Description("")]
        public string FlowPhase { get; set; } // FlowPhase
		/// <summary></summary>	
		[Description("")]
        public string FlowInfo { get; set; } // FlowInfo
		/// <summary></summary>	
		[Description("")]
        public string StepName { get; set; } // StepName
		/// <summary>部门</summary>	
		[Description("部门")]
        public string DeptID { get; set; } // DeptID
		/// <summary>部门</summary>	
		[Description("部门")]
        public string DeptIDName { get; set; } // DeptIDName
		/// <summary>申请人</summary>	
		[Description("申请人")]
        public string ApplyUserID { get; set; } // ApplyUserID
		/// <summary>申请人</summary>	
		[Description("申请人")]
        public string ApplyUserIDName { get; set; } // ApplyUserIDName
		/// <summary>申请事由</summary>	
		[Description("申请事由")]
        public string ApplyReason { get; set; } // ApplyReason
		/// <summary>用印种类</summary>	
		[Description("用印种类")]
        public string SealType { get; set; } // SealType
		/// <summary>印章全称</summary>	
		[Description("印章全称")]
        public string SealInfoID { get; set; } // SealInfoID
		/// <summary>印章全称名称</summary>	
		[Description("印章全称名称")]
        public string SealInfoIDName { get; set; } // SealInfoIDName
		/// <summary>用印份数</summary>	
		[Description("用印份数")]
        public int? SealNumber { get; set; } // SealNumber
		/// <summary>用印日期</summary>	
		[Description("用印日期")]
        public DateTime? ApplyDate { get; set; } // ApplyDate
		/// <summary>部门领导意见</summary>	
		[Description("部门领导意见")]
        public string DeptLeaderComment { get; set; } // DeptLeaderComment
		/// <summary>分管领导意见</summary>	
		[Description("分管领导意见")]
        public string ApplyDeptDepartLeaderComment { get; set; } // ApplyDeptDepartLeaderComment
		/// <summary>印章明细</summary>	
		[Description("印章明细")]
        public string Detail { get; set; } // Detail
		/// <summary>申请原因</summary>	
		[Description("申请原因")]
        public string SQYY { get; set; } // SQYY
		/// <summary>附件</summary>	
		[Description("附件")]
        public string FJ { get; set; } // FJ
		/// <summary>多附件</summary>	
		[Description("多附件")]
        public string DFJ { get; set; } // DFJ
		/// <summary>金额信息</summary>	
		[Description("金额信息")]
        public string JEXX { get; set; } // JEXX

        // Reverse navigation
		[JsonIgnore]
        public virtual ICollection<T_YDTest_Detail> T_YDTest_Detail { get { onT_YDTest_DetailGetting(); return _T_YDTest_Detail;} }
		private ICollection<T_YDTest_Detail> _T_YDTest_Detail;
		partial void onT_YDTest_DetailGetting();

		[JsonIgnore]
        public virtual ICollection<T_YDTest_JEXX> T_YDTest_JEXX { get { onT_YDTest_JEXXGetting(); return _T_YDTest_JEXX;} }
		private ICollection<T_YDTest_JEXX> _T_YDTest_JEXX;
		partial void onT_YDTest_JEXXGetting();


        public T_YDTest()
        {
            _T_YDTest_Detail = new List<T_YDTest_Detail>();
            _T_YDTest_JEXX = new List<T_YDTest_JEXX>();
        }
    }

	/// <summary>印章明细</summary>	
	[Description("印章明细")]
    public partial class T_YDTest_Detail : Formula.BaseModel
    {
		/// <summary></summary>	
		[Description("")]
        public string ID { get; set; } // ID (Primary key)
		/// <summary></summary>	
		[Description("")]
        public string T_YDTestID { get; set; } // T_YDTestID
		/// <summary></summary>	
		[Description("")]
        public double? SortIndex { get; set; } // SortIndex
		/// <summary></summary>	
		[Description("")]
        public string IsReleased { get; set; } // IsReleased
		/// <summary>印章编号</summary>	
		[Description("印章编号")]
        public string SealCode { get; set; } // SealCode
		/// <summary>印章名称</summary>	
		[Description("印章名称")]
        public string SealName { get; set; } // SealName
		/// <summary>印章类别</summary>	
		[Description("印章类别")]
        public string SealType { get; set; } // SealType
		/// <summary>用印份数</summary>	
		[Description("用印份数")]
        public int? SealNumber { get; set; } // SealNumber
		/// <summary>印章保管部门</summary>	
		[Description("印章保管部门")]
        public string DeptIDName { get; set; } // DeptIDName
		/// <summary>印章保管人</summary>	
		[Description("印章保管人")]
        public string KeeperIDName { get; set; } // KeeperIDName
		/// <summary>印章ID</summary>	
		[Description("印章ID")]
        public string SealID { get; set; } // SealID

        // Foreign keys
		[JsonIgnore]
        public virtual T_YDTest T_YDTest { get; set; } //  T_YDTestID - FK_T_YDTest_Detail_T_YDTest
    }

	/// <summary>金额信息</summary>	
	[Description("金额信息")]
    public partial class T_YDTest_JEXX : Formula.BaseModel
    {
		/// <summary></summary>	
		[Description("")]
        public string ID { get; set; } // ID (Primary key)
		/// <summary></summary>	
		[Description("")]
        public string T_YDTestID { get; set; } // T_YDTestID
		/// <summary></summary>	
		[Description("")]
        public double? SortIndex { get; set; } // SortIndex
		/// <summary></summary>	
		[Description("")]
        public string IsReleased { get; set; } // IsReleased
		/// <summary>科目</summary>	
		[Description("科目")]
        public string KM { get; set; } // KM
		/// <summary>金额</summary>	
		[Description("金额")]
        public string JE { get; set; } // JE
		/// <summary>收据张数</summary>	
		[Description("收据张数")]
        public string SJZS { get; set; } // SJZS

        // Foreign keys
		[JsonIgnore]
        public virtual T_YDTest T_YDTest { get; set; } //  T_YDTestID - FK_T_YDTest_JEXX_T_YDTest
    }

	/// <summary>车辆管理</summary>	
	[Description("车辆管理")]
    public partial class test_1 : Formula.BaseModel
    {
		/// <summary></summary>	
		[Description("")]
        public string ID { get; set; } // ID (Primary key)
		/// <summary></summary>	
		[Description("")]
        public DateTime? CreateDate { get; set; } // CreateDate
		/// <summary></summary>	
		[Description("")]
        public DateTime? ModifyDate { get; set; } // ModifyDate
		/// <summary></summary>	
		[Description("")]
        public string CreateUserID { get; set; } // CreateUserID
		/// <summary></summary>	
		[Description("")]
        public string CreateUser { get; set; } // CreateUser
		/// <summary></summary>	
		[Description("")]
        public string ModifyUserID { get; set; } // ModifyUserID
		/// <summary></summary>	
		[Description("")]
        public string ModifyUser { get; set; } // ModifyUser
		/// <summary></summary>	
		[Description("")]
        public string OrgID { get; set; } // OrgID
		/// <summary></summary>	
		[Description("")]
        public string CompanyID { get; set; } // CompanyID
		/// <summary></summary>	
		[Description("")]
        public string FlowPhase { get; set; } // FlowPhase
		/// <summary></summary>	
		[Description("")]
        public string FlowInfo { get; set; } // FlowInfo
		/// <summary></summary>	
		[Description("")]
        public string StepName { get; set; } // StepName
		/// <summary>编号</summary>	
		[Description("编号")]
        public string BH { get; set; } // BH
		/// <summary>姓名</summary>	
		[Description("姓名")]
        public string XM { get; set; } // XM
		/// <summary>姓名名称</summary>	
		[Description("姓名名称")]
        public string XMName { get; set; } // XMName
		/// <summary>部门</summary>	
		[Description("部门")]
        public string BM { get; set; } // BM
		/// <summary>部门名称</summary>	
		[Description("部门名称")]
        public string BMName { get; set; } // BMName
		/// <summary>枚举</summary>	
		[Description("枚举")]
        public string MJ { get; set; } // MJ
    }

	/// <summary></summary>	
	[Description("")]
    public partial class V_DocumentFileAuthority : Formula.BaseModel
    {
		/// <summary></summary>	
		[Description("")]
        public string ID { get; set; } // ID
		/// <summary></summary>	
		[Description("")]
        public string DocumentInfoID { get; set; } // DocumentInfoID
		/// <summary></summary>	
		[Description("")]
        public string AuthType { get; set; } // AuthType
		/// <summary></summary>	
		[Description("")]
        public string RoleType { get; set; } // RoleType
		/// <summary></summary>	
		[Description("")]
        public string RoleCode { get; set; } // RoleCode
		/// <summary></summary>	
		[Description("")]
        public string Name { get; set; } // Name
		/// <summary></summary>	
		[Description("")]
        public int ReadOnly { get; set; } // ReadOnly
		/// <summary></summary>	
		[Description("")]
        public int CanWrite { get; set; } // CanWrite
		/// <summary></summary>	
		[Description("")]
        public int FullControl { get; set; } // FullControl
    }


    // ************************************************************************
    // POCO Configuration

    // E_BDS_AccommodationSavingEaward
    internal partial class E_BDS_AccommodationSavingEawardConfiguration : EntityTypeConfiguration<E_BDS_AccommodationSavingEaward>
    {
        public E_BDS_AccommodationSavingEawardConfiguration()
        {
			ToTable("E_BDS_ACCOMMODATIONSAVINGEAWARD");
            HasKey(x => x.ID);

            Property(x => x.ID).HasColumnName("ID").IsRequired().HasMaxLength(50);
            Property(x => x.CreateDate).HasColumnName("CREATEDATE").IsOptional();
            Property(x => x.ModifyDate).HasColumnName("MODIFYDATE").IsOptional();
            Property(x => x.CreateUserID).HasColumnName("CREATEUSERID").IsOptional().HasMaxLength(50);
            Property(x => x.CreateUser).HasColumnName("CREATEUSER").IsOptional().HasMaxLength(50);
            Property(x => x.ModifyUserID).HasColumnName("MODIFYUSERID").IsOptional().HasMaxLength(50);
            Property(x => x.ModifyUser).HasColumnName("MODIFYUSER").IsOptional().HasMaxLength(50);
            Property(x => x.OrgID).HasColumnName("ORGID").IsOptional().HasMaxLength(50);
            Property(x => x.CompanyID).HasColumnName("COMPANYID").IsOptional().HasMaxLength(50);
            Property(x => x.FlowPhase).HasColumnName("FLOWPHASE").IsOptional().HasMaxLength(50);
            Property(x => x.FlowInfo).HasColumnName("FLOWINFO").IsOptional().HasMaxLength(1073741823);
            Property(x => x.StepName).HasColumnName("STEPNAME").IsOptional().HasMaxLength(500);
            Property(x => x.Country).HasColumnName("COUNTRY").IsOptional().HasMaxLength(50);
            Property(x => x.Currency).HasColumnName("CURRENCY").IsOptional().HasMaxLength(50);
            Property(x => x.StartDate).HasColumnName("STARTDATE").IsOptional();
            Property(x => x.Reward).HasColumnName("REWARD").IsOptional().HasPrecision(18,2);
            Property(x => x.Remark).HasColumnName("REMARK").IsOptional().HasMaxLength(500);
        }
    }

    // E_BDS_AnnualValidityPeriodSet
    internal partial class E_BDS_AnnualValidityPeriodSetConfiguration : EntityTypeConfiguration<E_BDS_AnnualValidityPeriodSet>
    {
        public E_BDS_AnnualValidityPeriodSetConfiguration()
        {
			ToTable("E_BDS_ANNUALVALIDITYPERIODSET");
            HasKey(x => x.ID);

            Property(x => x.ID).HasColumnName("ID").IsRequired().HasMaxLength(50);
            Property(x => x.CreateDate).HasColumnName("CREATEDATE").IsOptional();
            Property(x => x.ModifyDate).HasColumnName("MODIFYDATE").IsOptional();
            Property(x => x.CreateUserID).HasColumnName("CREATEUSERID").IsOptional().HasMaxLength(50);
            Property(x => x.CreateUser).HasColumnName("CREATEUSER").IsOptional().HasMaxLength(50);
            Property(x => x.ModifyUserID).HasColumnName("MODIFYUSERID").IsOptional().HasMaxLength(50);
            Property(x => x.ModifyUser).HasColumnName("MODIFYUSER").IsOptional().HasMaxLength(50);
            Property(x => x.OrgID).HasColumnName("ORGID").IsOptional().HasMaxLength(50);
            Property(x => x.CompanyID).HasColumnName("COMPANYID").IsOptional().HasMaxLength(50);
            Property(x => x.FlowPhase).HasColumnName("FLOWPHASE").IsOptional().HasMaxLength(50);
            Property(x => x.FlowInfo).HasColumnName("FLOWINFO").IsOptional().HasMaxLength(1073741823);
            Property(x => x.StepName).HasColumnName("STEPNAME").IsOptional().HasMaxLength(500);
            Property(x => x.Year).HasColumnName("YEAR").IsOptional().HasMaxLength(200);
            Property(x => x.Expenseaccount).HasColumnName("EXPENSEACCOUNT").IsOptional().HasMaxLength(200);
            Property(x => x.StartDate).HasColumnName("STARTDATE").IsOptional();
            Property(x => x.EndDate).HasColumnName("ENDDATE").IsOptional();
        }
    }

    // E_BDS_BankForeignExchangeRate
    internal partial class E_BDS_BankForeignExchangeRateConfiguration : EntityTypeConfiguration<E_BDS_BankForeignExchangeRate>
    {
        public E_BDS_BankForeignExchangeRateConfiguration()
        {
			ToTable("E_BDS_BANKFOREIGNEXCHANGERATE");
            HasKey(x => x.ID);

            Property(x => x.ID).HasColumnName("ID").IsRequired().HasMaxLength(50);
            Property(x => x.CreateDate).HasColumnName("CREATEDATE").IsOptional();
            Property(x => x.ModifyDate).HasColumnName("MODIFYDATE").IsOptional();
            Property(x => x.CreateUserID).HasColumnName("CREATEUSERID").IsOptional().HasMaxLength(50);
            Property(x => x.CreateUser).HasColumnName("CREATEUSER").IsOptional().HasMaxLength(50);
            Property(x => x.ModifyUserID).HasColumnName("MODIFYUSERID").IsOptional().HasMaxLength(50);
            Property(x => x.ModifyUser).HasColumnName("MODIFYUSER").IsOptional().HasMaxLength(50);
            Property(x => x.OrgID).HasColumnName("ORGID").IsOptional().HasMaxLength(50);
            Property(x => x.CompanyID).HasColumnName("COMPANYID").IsOptional().HasMaxLength(50);
            Property(x => x.FlowPhase).HasColumnName("FLOWPHASE").IsOptional().HasMaxLength(50);
            Property(x => x.FlowInfo).HasColumnName("FLOWINFO").IsOptional().HasMaxLength(1073741823);
            Property(x => x.StepName).HasColumnName("STEPNAME").IsOptional().HasMaxLength(500);
            Property(x => x.ForeignCurrency).HasColumnName("FOREIGNCURRENCY").IsOptional().HasMaxLength(50);
            Property(x => x.MiddlePrice).HasColumnName("MIDDLEPRICE").IsOptional().HasPrecision(18,4);
            Property(x => x.MiddlePriceRate).HasColumnName("MIDDLEPRICERATE").IsOptional().HasPrecision(18,6);
            Property(x => x.SpotRate).HasColumnName("SPOTRATE").IsOptional().HasPrecision(18,4);
            Property(x => x.BuyingRate).HasColumnName("BUYINGRATE").IsOptional().HasPrecision(18,4);
            Property(x => x.CashOffer).HasColumnName("CASHOFFER").IsOptional().HasPrecision(18,4);
            Property(x => x.CashBuyRate).HasColumnName("CASHBUYRATE").IsOptional().HasPrecision(18,4);
            Property(x => x.DataUpdatetTime).HasColumnName("DATAUPDATETTIME").IsOptional();
            Property(x => x.BelongYear).HasColumnName("BELONGYEAR").IsOptional().HasMaxLength(50);
            Property(x => x.BelongMonth).HasColumnName("BELONGMONTH").IsOptional().HasMaxLength(50);
            Property(x => x.BelongDay).HasColumnName("BELONGDAY").IsOptional().HasMaxLength(50);
        }
    }

    // E_BDS_Citytransfeestandard
    internal partial class E_BDS_CitytransfeestandardConfiguration : EntityTypeConfiguration<E_BDS_Citytransfeestandard>
    {
        public E_BDS_CitytransfeestandardConfiguration()
        {
			ToTable("E_BDS_CITYTRANSFEESTANDARD");
            HasKey(x => x.ID);

            Property(x => x.ID).HasColumnName("ID").IsRequired().HasMaxLength(50);
            Property(x => x.CreateDate).HasColumnName("CREATEDATE").IsOptional();
            Property(x => x.ModifyDate).HasColumnName("MODIFYDATE").IsOptional();
            Property(x => x.CreateUserID).HasColumnName("CREATEUSERID").IsOptional().HasMaxLength(50);
            Property(x => x.CreateUser).HasColumnName("CREATEUSER").IsOptional().HasMaxLength(50);
            Property(x => x.ModifyUserID).HasColumnName("MODIFYUSERID").IsOptional().HasMaxLength(50);
            Property(x => x.ModifyUser).HasColumnName("MODIFYUSER").IsOptional().HasMaxLength(50);
            Property(x => x.OrgID).HasColumnName("ORGID").IsOptional().HasMaxLength(50);
            Property(x => x.CompanyID).HasColumnName("COMPANYID").IsOptional().HasMaxLength(50);
            Property(x => x.FlowPhase).HasColumnName("FLOWPHASE").IsOptional().HasMaxLength(50);
            Property(x => x.FlowInfo).HasColumnName("FLOWINFO").IsOptional().HasMaxLength(1073741823);
            Property(x => x.StepName).HasColumnName("STEPNAME").IsOptional().HasMaxLength(500);
            Property(x => x.PersonLevel).HasColumnName("PERSONLEVEL").IsOptional().HasMaxLength(200);
            Property(x => x.StartDate).HasColumnName("STARTDATE").IsOptional();
            Property(x => x.CityTransfeeStandard).HasColumnName("CITYTRANSFEESTANDARD").IsOptional().HasPrecision(18,2);
            Property(x => x.Remark).HasColumnName("REMARK").IsOptional().HasMaxLength(500);
        }
    }

    // E_BDS_CompanyBankAccountInfo
    internal partial class E_BDS_CompanyBankAccountInfoConfiguration : EntityTypeConfiguration<E_BDS_CompanyBankAccountInfo>
    {
        public E_BDS_CompanyBankAccountInfoConfiguration()
        {
			ToTable("E_BDS_COMPANYBANKACCOUNTINFO");
            HasKey(x => x.ID);

            Property(x => x.ID).HasColumnName("ID").IsRequired().HasMaxLength(50);
            Property(x => x.CreateDate).HasColumnName("CREATEDATE").IsOptional();
            Property(x => x.ModifyDate).HasColumnName("MODIFYDATE").IsOptional();
            Property(x => x.CreateUserID).HasColumnName("CREATEUSERID").IsOptional().HasMaxLength(50);
            Property(x => x.CreateUser).HasColumnName("CREATEUSER").IsOptional().HasMaxLength(50);
            Property(x => x.ModifyUserID).HasColumnName("MODIFYUSERID").IsOptional().HasMaxLength(50);
            Property(x => x.ModifyUser).HasColumnName("MODIFYUSER").IsOptional().HasMaxLength(50);
            Property(x => x.OrgID).HasColumnName("ORGID").IsOptional().HasMaxLength(50);
            Property(x => x.CompanyID).HasColumnName("COMPANYID").IsOptional().HasMaxLength(50);
            Property(x => x.FlowPhase).HasColumnName("FLOWPHASE").IsOptional().HasMaxLength(50);
            Property(x => x.FlowInfo).HasColumnName("FLOWINFO").IsOptional().HasMaxLength(1073741823);
            Property(x => x.StepName).HasColumnName("STEPNAME").IsOptional().HasMaxLength(500);
            Property(x => x.BankName).HasColumnName("BANKNAME").IsOptional().HasMaxLength(200);
            Property(x => x.BankAccount).HasColumnName("BANKACCOUNT").IsOptional().HasMaxLength(200);
            Property(x => x.Address).HasColumnName("ADDRESS").IsOptional().HasMaxLength(200);
            Property(x => x.Phone).HasColumnName("PHONE").IsOptional().HasMaxLength(200);
        }
    }

    // E_BDS_Domesticaccommodationstandard
    internal partial class E_BDS_DomesticaccommodationstandardConfiguration : EntityTypeConfiguration<E_BDS_Domesticaccommodationstandard>
    {
        public E_BDS_DomesticaccommodationstandardConfiguration()
        {
			ToTable("E_BDS_DOMESTICACCOMMODATIONSTANDARD");
            HasKey(x => x.ID);

            Property(x => x.ID).HasColumnName("ID").IsRequired().HasMaxLength(50);
            Property(x => x.CreateDate).HasColumnName("CREATEDATE").IsOptional();
            Property(x => x.ModifyDate).HasColumnName("MODIFYDATE").IsOptional();
            Property(x => x.CreateUserID).HasColumnName("CREATEUSERID").IsOptional().HasMaxLength(50);
            Property(x => x.CreateUser).HasColumnName("CREATEUSER").IsOptional().HasMaxLength(50);
            Property(x => x.ModifyUserID).HasColumnName("MODIFYUSERID").IsOptional().HasMaxLength(50);
            Property(x => x.ModifyUser).HasColumnName("MODIFYUSER").IsOptional().HasMaxLength(50);
            Property(x => x.OrgID).HasColumnName("ORGID").IsOptional().HasMaxLength(50);
            Property(x => x.CompanyID).HasColumnName("COMPANYID").IsOptional().HasMaxLength(50);
            Property(x => x.FlowPhase).HasColumnName("FLOWPHASE").IsOptional().HasMaxLength(50);
            Property(x => x.FlowInfo).HasColumnName("FLOWINFO").IsOptional().HasMaxLength(1073741823);
            Property(x => x.StepName).HasColumnName("STEPNAME").IsOptional().HasMaxLength(500);
            Property(x => x.PersonLevel).HasColumnName("PERSONLEVEL").IsOptional().HasMaxLength(200);
            Property(x => x.StartDate).HasColumnName("STARTDATE").IsOptional();
            Property(x => x.StandardAmount).HasColumnName("STANDARDAMOUNT").IsOptional().HasPrecision(18,2);
            Property(x => x.Remark).HasColumnName("REMARK").IsOptional().HasMaxLength(500);
            Property(x => x.Reward).HasColumnName("REWARD").IsOptional().HasMaxLength(1073741823);
        }
    }

    // E_BDS_Domesticaccommodationstandard_Reward
    internal partial class E_BDS_Domesticaccommodationstandard_RewardConfiguration : EntityTypeConfiguration<E_BDS_Domesticaccommodationstandard_Reward>
    {
        public E_BDS_Domesticaccommodationstandard_RewardConfiguration()
        {
			ToTable("E_BDS_DOMESTICACCOMMODATIONSTANDARD_REWARD");
            HasKey(x => x.ID);

            Property(x => x.ID).HasColumnName("ID").IsRequired().HasMaxLength(50);
            Property(x => x.E_BDS_DomesticaccommodationstandardID).HasColumnName("E_BDS_DOMESTICACCOMMODATIONSTANDARDID").IsOptional().HasMaxLength(50);
            Property(x => x.SortIndex).HasColumnName("SORTINDEX").IsOptional();
            Property(x => x.IsReleased).HasColumnName("ISRELEASED").IsOptional().HasMaxLength(1);
            Property(x => x.PJRJYJLEQ).HasColumnName("PJRJYJLEQ").IsOptional().HasPrecision(18,2);
            Property(x => x.PJRJYJLEZ).HasColumnName("PJRJYJLEZ").IsOptional().HasPrecision(18,2);
            Property(x => x.Reward).HasColumnName("REWARD").IsOptional();

            // Foreign keys
            HasOptional(a => a.E_BDS_Domesticaccommodationstandard).WithMany(b => b.E_BDS_Domesticaccommodationstandard_Reward).HasForeignKey(c => c.E_BDS_DomesticaccommodationstandardID); // FK_E_BDS_Domesticaccommodationstandard_Reward_E_BDS_Domesticaccommodationstandard
        }
    }

    // E_BDS_DomesticFoodCostStandard
    internal partial class E_BDS_DomesticFoodCostStandardConfiguration : EntityTypeConfiguration<E_BDS_DomesticFoodCostStandard>
    {
        public E_BDS_DomesticFoodCostStandardConfiguration()
        {
			ToTable("E_BDS_DOMESTICFOODCOSTSTANDARD");
            HasKey(x => x.ID);

            Property(x => x.ID).HasColumnName("ID").IsRequired().HasMaxLength(50);
            Property(x => x.CreateDate).HasColumnName("CREATEDATE").IsOptional();
            Property(x => x.ModifyDate).HasColumnName("MODIFYDATE").IsOptional();
            Property(x => x.CreateUserID).HasColumnName("CREATEUSERID").IsOptional().HasMaxLength(50);
            Property(x => x.CreateUser).HasColumnName("CREATEUSER").IsOptional().HasMaxLength(50);
            Property(x => x.ModifyUserID).HasColumnName("MODIFYUSERID").IsOptional().HasMaxLength(50);
            Property(x => x.ModifyUser).HasColumnName("MODIFYUSER").IsOptional().HasMaxLength(50);
            Property(x => x.OrgID).HasColumnName("ORGID").IsOptional().HasMaxLength(50);
            Property(x => x.CompanyID).HasColumnName("COMPANYID").IsOptional().HasMaxLength(50);
            Property(x => x.FlowPhase).HasColumnName("FLOWPHASE").IsOptional().HasMaxLength(50);
            Property(x => x.FlowInfo).HasColumnName("FLOWINFO").IsOptional().HasMaxLength(1073741823);
            Property(x => x.StepName).HasColumnName("STEPNAME").IsOptional().HasMaxLength(500);
            Property(x => x.Country).HasColumnName("COUNTRY").IsOptional().HasMaxLength(200);
            Property(x => x.StartDate).HasColumnName("STARTDATE").IsOptional();
            Property(x => x.Foods).HasColumnName("FOODS").IsOptional().HasPrecision(18,2);
            Property(x => x.Remark).HasColumnName("REMARK").IsOptional().HasMaxLength(500);
        }
    }

    // E_BDS_DomesticProjectManagerSubsidyStandard
    internal partial class E_BDS_DomesticProjectManagerSubsidyStandardConfiguration : EntityTypeConfiguration<E_BDS_DomesticProjectManagerSubsidyStandard>
    {
        public E_BDS_DomesticProjectManagerSubsidyStandardConfiguration()
        {
			ToTable("E_BDS_DOMESTICPROJECTMANAGERSUBSIDYSTANDARD");
            HasKey(x => x.ID);

            Property(x => x.ID).HasColumnName("ID").IsRequired().HasMaxLength(50);
            Property(x => x.CreateDate).HasColumnName("CREATEDATE").IsOptional();
            Property(x => x.ModifyDate).HasColumnName("MODIFYDATE").IsOptional();
            Property(x => x.CreateUserID).HasColumnName("CREATEUSERID").IsOptional().HasMaxLength(50);
            Property(x => x.CreateUser).HasColumnName("CREATEUSER").IsOptional().HasMaxLength(50);
            Property(x => x.ModifyUserID).HasColumnName("MODIFYUSERID").IsOptional().HasMaxLength(50);
            Property(x => x.ModifyUser).HasColumnName("MODIFYUSER").IsOptional().HasMaxLength(50);
            Property(x => x.OrgID).HasColumnName("ORGID").IsOptional().HasMaxLength(50);
            Property(x => x.CompanyID).HasColumnName("COMPANYID").IsOptional().HasMaxLength(50);
            Property(x => x.FlowPhase).HasColumnName("FLOWPHASE").IsOptional().HasMaxLength(50);
            Property(x => x.FlowInfo).HasColumnName("FLOWINFO").IsOptional().HasMaxLength(1073741823);
            Property(x => x.StepName).HasColumnName("STEPNAME").IsOptional().HasMaxLength(500);
            Property(x => x.Country).HasColumnName("COUNTRY").IsOptional().HasMaxLength(200);
            Property(x => x.StartDate).HasColumnName("STARTDATE").IsOptional();
            Property(x => x.Position).HasColumnName("POSITION").IsOptional().HasMaxLength(200);
            Property(x => x.Positionsubsidy).HasColumnName("POSITIONSUBSIDY").IsOptional().HasPrecision(18,2);
            Property(x => x.Remark).HasColumnName("REMARK").IsOptional().HasMaxLength(500);
        }
    }

    // E_BDS_ForeignAccommodationStandard
    internal partial class E_BDS_ForeignAccommodationStandardConfiguration : EntityTypeConfiguration<E_BDS_ForeignAccommodationStandard>
    {
        public E_BDS_ForeignAccommodationStandardConfiguration()
        {
			ToTable("E_BDS_FOREIGNACCOMMODATIONSTANDARD");
            HasKey(x => x.ID);

            Property(x => x.ID).HasColumnName("ID").IsRequired().HasMaxLength(50);
            Property(x => x.CreateDate).HasColumnName("CREATEDATE").IsOptional();
            Property(x => x.ModifyDate).HasColumnName("MODIFYDATE").IsOptional();
            Property(x => x.CreateUserID).HasColumnName("CREATEUSERID").IsOptional().HasMaxLength(50);
            Property(x => x.CreateUser).HasColumnName("CREATEUSER").IsOptional().HasMaxLength(50);
            Property(x => x.ModifyUserID).HasColumnName("MODIFYUSERID").IsOptional().HasMaxLength(50);
            Property(x => x.ModifyUser).HasColumnName("MODIFYUSER").IsOptional().HasMaxLength(50);
            Property(x => x.OrgID).HasColumnName("ORGID").IsOptional().HasMaxLength(50);
            Property(x => x.CompanyID).HasColumnName("COMPANYID").IsOptional().HasMaxLength(50);
            Property(x => x.FlowPhase).HasColumnName("FLOWPHASE").IsOptional().HasMaxLength(50);
            Property(x => x.FlowInfo).HasColumnName("FLOWINFO").IsOptional().HasMaxLength(1073741823);
            Property(x => x.StepName).HasColumnName("STEPNAME").IsOptional().HasMaxLength(500);
            Property(x => x.Businesstype).HasColumnName("BUSINESSTYPE").IsOptional().HasMaxLength(50);
            Property(x => x.Country).HasColumnName("COUNTRY").IsOptional().HasMaxLength(50);
            Property(x => x.City).HasColumnName("CITY").IsOptional().HasMaxLength(50);
            Property(x => x.Currency).HasColumnName("CURRENCY").IsOptional().HasMaxLength(50);
            Property(x => x.Accommodation).HasColumnName("ACCOMMODATION").IsOptional().HasPrecision(18,2);
            Property(x => x.Startdate).HasColumnName("STARTDATE").IsOptional();
            Property(x => x.Remark).HasColumnName("REMARK").IsOptional().HasMaxLength(500);
        }
    }

    // E_BDS_ForeignFoodSubsidyStandard
    internal partial class E_BDS_ForeignFoodSubsidyStandardConfiguration : EntityTypeConfiguration<E_BDS_ForeignFoodSubsidyStandard>
    {
        public E_BDS_ForeignFoodSubsidyStandardConfiguration()
        {
			ToTable("E_BDS_FOREIGNFOODSUBSIDYSTANDARD");
            HasKey(x => x.ID);

            Property(x => x.ID).HasColumnName("ID").IsRequired().HasMaxLength(50);
            Property(x => x.CreateDate).HasColumnName("CREATEDATE").IsOptional();
            Property(x => x.ModifyDate).HasColumnName("MODIFYDATE").IsOptional();
            Property(x => x.CreateUserID).HasColumnName("CREATEUSERID").IsOptional().HasMaxLength(50);
            Property(x => x.CreateUser).HasColumnName("CREATEUSER").IsOptional().HasMaxLength(50);
            Property(x => x.ModifyUserID).HasColumnName("MODIFYUSERID").IsOptional().HasMaxLength(50);
            Property(x => x.ModifyUser).HasColumnName("MODIFYUSER").IsOptional().HasMaxLength(50);
            Property(x => x.OrgID).HasColumnName("ORGID").IsOptional().HasMaxLength(50);
            Property(x => x.CompanyID).HasColumnName("COMPANYID").IsOptional().HasMaxLength(50);
            Property(x => x.FlowPhase).HasColumnName("FLOWPHASE").IsOptional().HasMaxLength(50);
            Property(x => x.FlowInfo).HasColumnName("FLOWINFO").IsOptional().HasMaxLength(1073741823);
            Property(x => x.StepName).HasColumnName("STEPNAME").IsOptional().HasMaxLength(500);
            Property(x => x.Businesstype).HasColumnName("BUSINESSTYPE").IsOptional().HasMaxLength(500);
            Property(x => x.Country).HasColumnName("COUNTRY").IsOptional().HasMaxLength(200);
            Property(x => x.City).HasColumnName("CITY").IsOptional().HasMaxLength(200);
            Property(x => x.Currency).HasColumnName("CURRENCY").IsOptional().HasMaxLength(200);
            Property(x => x.Mealallowance).HasColumnName("MEALALLOWANCE").IsOptional().HasPrecision(18,2);
            Property(x => x.Subsidies).HasColumnName("SUBSIDIES").IsOptional().HasPrecision(18,2);
            Property(x => x.StartDate).HasColumnName("STARTDATE").IsOptional();
            Property(x => x.Remark).HasColumnName("REMARK").IsOptional().HasMaxLength(500);
        }
    }

    // E_BDS_ForeignSavingReward
    internal partial class E_BDS_ForeignSavingRewardConfiguration : EntityTypeConfiguration<E_BDS_ForeignSavingReward>
    {
        public E_BDS_ForeignSavingRewardConfiguration()
        {
			ToTable("E_BDS_FOREIGNSAVINGREWARD");
            HasKey(x => x.ID);

            Property(x => x.ID).HasColumnName("ID").IsRequired().HasMaxLength(50);
            Property(x => x.CreateDate).HasColumnName("CREATEDATE").IsOptional();
            Property(x => x.ModifyDate).HasColumnName("MODIFYDATE").IsOptional();
            Property(x => x.CreateUserID).HasColumnName("CREATEUSERID").IsOptional().HasMaxLength(50);
            Property(x => x.CreateUser).HasColumnName("CREATEUSER").IsOptional().HasMaxLength(50);
            Property(x => x.ModifyUserID).HasColumnName("MODIFYUSERID").IsOptional().HasMaxLength(50);
            Property(x => x.ModifyUser).HasColumnName("MODIFYUSER").IsOptional().HasMaxLength(50);
            Property(x => x.OrgID).HasColumnName("ORGID").IsOptional().HasMaxLength(50);
            Property(x => x.CompanyID).HasColumnName("COMPANYID").IsOptional().HasMaxLength(50);
            Property(x => x.FlowPhase).HasColumnName("FLOWPHASE").IsOptional().HasMaxLength(50);
            Property(x => x.FlowInfo).HasColumnName("FLOWINFO").IsOptional().HasMaxLength(1073741823);
            Property(x => x.StepName).HasColumnName("STEPNAME").IsOptional().HasMaxLength(500);
            Property(x => x.Country).HasColumnName("COUNTRY").IsOptional().HasMaxLength(50);
            Property(x => x.Currency).HasColumnName("CURRENCY").IsOptional().HasMaxLength(50);
            Property(x => x.StartDate).HasColumnName("STARTDATE").IsOptional();
            Property(x => x.Remark).HasColumnName("REMARK").IsOptional().HasMaxLength(500);
            Property(x => x.Reward).HasColumnName("REWARD").IsOptional().HasMaxLength(1073741823);
        }
    }

    // E_BDS_ForeignSavingReward_Reward
    internal partial class E_BDS_ForeignSavingReward_RewardConfiguration : EntityTypeConfiguration<E_BDS_ForeignSavingReward_Reward>
    {
        public E_BDS_ForeignSavingReward_RewardConfiguration()
        {
			ToTable("E_BDS_FOREIGNSAVINGREWARD_REWARD");
            HasKey(x => x.ID);

            Property(x => x.ID).HasColumnName("ID").IsRequired().HasMaxLength(50);
            Property(x => x.E_BDS_ForeignSavingRewardID).HasColumnName("E_BDS_FOREIGNSAVINGREWARDID").IsOptional().HasMaxLength(50);
            Property(x => x.SortIndex).HasColumnName("SORTINDEX").IsOptional();
            Property(x => x.IsReleased).HasColumnName("ISRELEASED").IsOptional().HasMaxLength(1);
            Property(x => x.PJRJYJLEQ).HasColumnName("PJRJYJLEQ").IsOptional().HasPrecision(18,2);
            Property(x => x.PJRJYJLEZ).HasColumnName("PJRJYJLEZ").IsOptional().HasPrecision(18,2);
            Property(x => x.Reward).HasColumnName("REWARD").IsOptional().HasPrecision(18,2);

            // Foreign keys
            HasOptional(a => a.E_BDS_ForeignSavingReward).WithMany(b => b.E_BDS_ForeignSavingReward_Reward).HasForeignKey(c => c.E_BDS_ForeignSavingRewardID); // FK_E_BDS_ForeignSavingReward_Reward_E_BDS_ForeignSavingReward
        }
    }

    // E_BDS_LaborsInfo
    internal partial class E_BDS_LaborsInfoConfiguration : EntityTypeConfiguration<E_BDS_LaborsInfo>
    {
        public E_BDS_LaborsInfoConfiguration()
        {
			ToTable("E_BDS_LABORSINFO");
            HasKey(x => x.ID);

            Property(x => x.ID).HasColumnName("ID").IsRequired().HasMaxLength(50);
            Property(x => x.UserName).HasColumnName("USERNAME").IsOptional().HasMaxLength(50);
            Property(x => x.CertificateType).HasColumnName("CERTIFICATETYPE").IsOptional().HasMaxLength(50);
            Property(x => x.IDCard).HasColumnName("IDCARD").IsOptional().HasMaxLength(50);
            Property(x => x.UserPhone).HasColumnName("USERPHONE").IsOptional().HasMaxLength(50);
            Property(x => x.HiringTime).HasColumnName("HIRINGTIME").IsOptional();
            Property(x => x.AccountName).HasColumnName("ACCOUNTNAME").IsOptional().HasMaxLength(50);
            Property(x => x.OpenBank).HasColumnName("OPENBANK").IsOptional().HasMaxLength(50);
            Property(x => x.CardNumber).HasColumnName("CARDNUMBER").IsOptional().HasMaxLength(50);
        }
    }

    // E_BDS_MyBankCardInfo
    internal partial class E_BDS_MyBankCardInfoConfiguration : EntityTypeConfiguration<E_BDS_MyBankCardInfo>
    {
        public E_BDS_MyBankCardInfoConfiguration()
        {
			ToTable("E_BDS_MYBANKCARDINFO");
            HasKey(x => x.ID);

            Property(x => x.ID).HasColumnName("ID").IsRequired().HasMaxLength(50);
            Property(x => x.CreateDate).HasColumnName("CREATEDATE").IsOptional();
            Property(x => x.ModifyDate).HasColumnName("MODIFYDATE").IsOptional();
            Property(x => x.CreateUserID).HasColumnName("CREATEUSERID").IsOptional().HasMaxLength(50);
            Property(x => x.CreateUser).HasColumnName("CREATEUSER").IsOptional().HasMaxLength(50);
            Property(x => x.ModifyUserID).HasColumnName("MODIFYUSERID").IsOptional().HasMaxLength(50);
            Property(x => x.ModifyUser).HasColumnName("MODIFYUSER").IsOptional().HasMaxLength(50);
            Property(x => x.OrgID).HasColumnName("ORGID").IsOptional().HasMaxLength(50);
            Property(x => x.CompanyID).HasColumnName("COMPANYID").IsOptional().HasMaxLength(50);
            Property(x => x.FlowPhase).HasColumnName("FLOWPHASE").IsOptional().HasMaxLength(50);
            Property(x => x.FlowInfo).HasColumnName("FLOWINFO").IsOptional().HasMaxLength(1073741823);
            Property(x => x.StepName).HasColumnName("STEPNAME").IsOptional().HasMaxLength(500);
            Property(x => x.AccountName).HasColumnName("ACCOUNTNAME").IsOptional().HasMaxLength(200);
            Property(x => x.OpenBank).HasColumnName("OPENBANK").IsOptional().HasMaxLength(200);
            Property(x => x.CardNumber).HasColumnName("CARDNUMBER").IsOptional().HasMaxLength(200);
        }
    }

    // E_BDS_OnsiteSubsidyStandard
    internal partial class E_BDS_OnsiteSubsidyStandardConfiguration : EntityTypeConfiguration<E_BDS_OnsiteSubsidyStandard>
    {
        public E_BDS_OnsiteSubsidyStandardConfiguration()
        {
			ToTable("E_BDS_ONSITESUBSIDYSTANDARD");
            HasKey(x => x.ID);

            Property(x => x.ID).HasColumnName("ID").IsRequired().HasMaxLength(50);
            Property(x => x.CreateDate).HasColumnName("CREATEDATE").IsOptional();
            Property(x => x.ModifyDate).HasColumnName("MODIFYDATE").IsOptional();
            Property(x => x.CreateUserID).HasColumnName("CREATEUSERID").IsOptional().HasMaxLength(50);
            Property(x => x.CreateUser).HasColumnName("CREATEUSER").IsOptional().HasMaxLength(50);
            Property(x => x.ModifyUserID).HasColumnName("MODIFYUSERID").IsOptional().HasMaxLength(50);
            Property(x => x.ModifyUser).HasColumnName("MODIFYUSER").IsOptional().HasMaxLength(50);
            Property(x => x.OrgID).HasColumnName("ORGID").IsOptional().HasMaxLength(50);
            Property(x => x.CompanyID).HasColumnName("COMPANYID").IsOptional().HasMaxLength(50);
            Property(x => x.FlowPhase).HasColumnName("FLOWPHASE").IsOptional().HasMaxLength(50);
            Property(x => x.FlowInfo).HasColumnName("FLOWINFO").IsOptional().HasMaxLength(1073741823);
            Property(x => x.StepName).HasColumnName("STEPNAME").IsOptional().HasMaxLength(500);
            Property(x => x.Businesstype).HasColumnName("BUSINESSTYPE").IsOptional().HasMaxLength(500);
            Property(x => x.Country).HasColumnName("COUNTRY").IsOptional().HasMaxLength(200);
            Property(x => x.City).HasColumnName("CITY").IsOptional().HasMaxLength(200);
            Property(x => x.Currency).HasColumnName("CURRENCY").IsOptional().HasMaxLength(200);
            Property(x => x.Subsidyamount).HasColumnName("SUBSIDYAMOUNT").IsOptional().HasPrecision(18,2);
            Property(x => x.StartDate).HasColumnName("STARTDATE").IsOptional();
            Property(x => x.Remark).HasColumnName("REMARK").IsOptional().HasMaxLength(500);
        }
    }

    // E_BDS_PartyAndUnionBudget
    internal partial class E_BDS_PartyAndUnionBudgetConfiguration : EntityTypeConfiguration<E_BDS_PartyAndUnionBudget>
    {
        public E_BDS_PartyAndUnionBudgetConfiguration()
        {
			ToTable("E_BDS_PARTYANDUNIONBUDGET");
            HasKey(x => x.ID);

            Property(x => x.ID).HasColumnName("ID").IsRequired().HasMaxLength(50);
            Property(x => x.CreateDate).HasColumnName("CREATEDATE").IsOptional();
            Property(x => x.ModifyDate).HasColumnName("MODIFYDATE").IsOptional();
            Property(x => x.CreateUserID).HasColumnName("CREATEUSERID").IsOptional().HasMaxLength(50);
            Property(x => x.CreateUser).HasColumnName("CREATEUSER").IsOptional().HasMaxLength(50);
            Property(x => x.ModifyUserID).HasColumnName("MODIFYUSERID").IsOptional().HasMaxLength(50);
            Property(x => x.ModifyUser).HasColumnName("MODIFYUSER").IsOptional().HasMaxLength(50);
            Property(x => x.OrgID).HasColumnName("ORGID").IsOptional().HasMaxLength(50);
            Property(x => x.CompanyID).HasColumnName("COMPANYID").IsOptional().HasMaxLength(50);
            Property(x => x.FlowPhase).HasColumnName("FLOWPHASE").IsOptional().HasMaxLength(50);
            Property(x => x.FlowInfo).HasColumnName("FLOWINFO").IsOptional().HasMaxLength(1073741823);
            Property(x => x.StepName).HasColumnName("STEPNAME").IsOptional().HasMaxLength(500);
            Property(x => x.BelongYear).HasColumnName("BELONGYEAR").IsOptional().HasMaxLength(50);
            Property(x => x.Budget).HasColumnName("BUDGET").IsOptional().HasPrecision(18,2);
            Property(x => x.Name).HasColumnName("NAME").IsOptional().HasMaxLength(200);
            Property(x => x.BudgetType).HasColumnName("BUDGETTYPE").IsOptional().HasMaxLength(200);
        }
    }

    // E_BDS_Personnellevelsandpositions
    internal partial class E_BDS_PersonnellevelsandpositionsConfiguration : EntityTypeConfiguration<E_BDS_Personnellevelsandpositions>
    {
        public E_BDS_PersonnellevelsandpositionsConfiguration()
        {
			ToTable("E_BDS_PERSONNELLEVELSANDPOSITIONS");
            HasKey(x => x.ID);

            Property(x => x.ID).HasColumnName("ID").IsRequired().HasMaxLength(50);
            Property(x => x.CreateDate).HasColumnName("CREATEDATE").IsOptional();
            Property(x => x.ModifyDate).HasColumnName("MODIFYDATE").IsOptional();
            Property(x => x.CreateUserID).HasColumnName("CREATEUSERID").IsOptional().HasMaxLength(50);
            Property(x => x.CreateUser).HasColumnName("CREATEUSER").IsOptional().HasMaxLength(200);
            Property(x => x.ModifyUserID).HasColumnName("MODIFYUSERID").IsOptional().HasMaxLength(50);
            Property(x => x.ModifyUser).HasColumnName("MODIFYUSER").IsOptional().HasMaxLength(200);
            Property(x => x.OrgID).HasColumnName("ORGID").IsOptional().HasMaxLength(50);
            Property(x => x.CompanyID).HasColumnName("COMPANYID").IsOptional().HasMaxLength(50);
            Property(x => x.FlowPhase).HasColumnName("FLOWPHASE").IsOptional().HasMaxLength(50);
            Property(x => x.FlowInfo).HasColumnName("FLOWINFO").IsOptional().HasMaxLength(1073741823);
            Property(x => x.StepName).HasColumnName("STEPNAME").IsOptional().HasMaxLength(500);
            Property(x => x.Personlevel).HasColumnName("PERSONLEVEL").IsOptional().HasMaxLength(200);
            Property(x => x.StartDate).HasColumnName("STARTDATE").IsOptional();
            Property(x => x.Personposition).HasColumnName("PERSONPOSITION").IsOptional().HasMaxLength(200);
            Property(x => x.Remark).HasColumnName("REMARK").IsOptional().HasMaxLength(500);
        }
    }

    // E_BDS_Transportationstandards
    internal partial class E_BDS_TransportationstandardsConfiguration : EntityTypeConfiguration<E_BDS_Transportationstandards>
    {
        public E_BDS_TransportationstandardsConfiguration()
        {
			ToTable("E_BDS_TRANSPORTATIONSTANDARDS");
            HasKey(x => x.ID);

            Property(x => x.ID).HasColumnName("ID").IsRequired().HasMaxLength(50);
            Property(x => x.CreateDate).HasColumnName("CREATEDATE").IsOptional();
            Property(x => x.ModifyDate).HasColumnName("MODIFYDATE").IsOptional();
            Property(x => x.CreateUserID).HasColumnName("CREATEUSERID").IsOptional().HasMaxLength(50);
            Property(x => x.CreateUser).HasColumnName("CREATEUSER").IsOptional().HasMaxLength(200);
            Property(x => x.ModifyUserID).HasColumnName("MODIFYUSERID").IsOptional().HasMaxLength(50);
            Property(x => x.ModifyUser).HasColumnName("MODIFYUSER").IsOptional().HasMaxLength(50);
            Property(x => x.OrgID).HasColumnName("ORGID").IsOptional().HasMaxLength(50);
            Property(x => x.CompanyID).HasColumnName("COMPANYID").IsOptional().HasMaxLength(50);
            Property(x => x.FlowPhase).HasColumnName("FLOWPHASE").IsOptional().HasMaxLength(50);
            Property(x => x.FlowInfo).HasColumnName("FLOWINFO").IsOptional().HasMaxLength(1073741823);
            Property(x => x.StepName).HasColumnName("STEPNAME").IsOptional().HasMaxLength(500);
            Property(x => x.PersonLevel).HasColumnName("PERSONLEVEL").IsOptional().HasMaxLength(200);
            Property(x => x.StartDate).HasColumnName("STARTDATE").IsOptional();
            Property(x => x.Transportation).HasColumnName("TRANSPORTATION").IsOptional().HasMaxLength(500);
            Property(x => x.Remark).HasColumnName("REMARK").IsOptional().HasMaxLength(500);
        }
    }

    // E_BDS_UserAllowLoan
    internal partial class E_BDS_UserAllowLoanConfiguration : EntityTypeConfiguration<E_BDS_UserAllowLoan>
    {
        public E_BDS_UserAllowLoanConfiguration()
        {
			ToTable("E_BDS_USERALLOWLOAN");
            HasKey(x => x.ID);

            Property(x => x.ID).HasColumnName("ID").IsRequired().HasMaxLength(50);
            Property(x => x.UserID).HasColumnName("USERID").IsOptional().HasMaxLength(50);
            Property(x => x.UserName).HasColumnName("USERNAME").IsOptional().HasMaxLength(50);
            Property(x => x.UserCode).HasColumnName("USERCODE").IsOptional().HasMaxLength(50);
            Property(x => x.IsAllowLoan).HasColumnName("ISALLOWLOAN").IsOptional().HasMaxLength(50);
        }
    }

    // S_BM_LoanApply
    internal partial class S_BM_LoanApplyConfiguration : EntityTypeConfiguration<S_BM_LoanApply>
    {
        public S_BM_LoanApplyConfiguration()
        {
			ToTable("S_BM_LOANAPPLY");
            HasKey(x => x.ID);

            Property(x => x.ID).HasColumnName("ID").IsRequired().HasMaxLength(50);
            Property(x => x.CreateDate).HasColumnName("CREATEDATE").IsOptional();
            Property(x => x.ModifyDate).HasColumnName("MODIFYDATE").IsOptional();
            Property(x => x.CreateUserID).HasColumnName("CREATEUSERID").IsOptional().HasMaxLength(50);
            Property(x => x.CreateUser).HasColumnName("CREATEUSER").IsOptional().HasMaxLength(50);
            Property(x => x.ModifyUserID).HasColumnName("MODIFYUSERID").IsOptional().HasMaxLength(50);
            Property(x => x.ModifyUser).HasColumnName("MODIFYUSER").IsOptional().HasMaxLength(50);
            Property(x => x.OrgID).HasColumnName("ORGID").IsOptional().HasMaxLength(50);
            Property(x => x.CompanyID).HasColumnName("COMPANYID").IsOptional().HasMaxLength(50);
            Property(x => x.FlowPhase).HasColumnName("FLOWPHASE").IsOptional().HasMaxLength(50);
            Property(x => x.FlowInfo).HasColumnName("FLOWINFO").IsOptional().HasMaxLength(1073741823);
            Property(x => x.StepName).HasColumnName("STEPNAME").IsOptional().HasMaxLength(500);
            Property(x => x.ApplyName).HasColumnName("APPLYNAME").IsOptional().HasMaxLength(50);
            Property(x => x.ApplyNumber).HasColumnName("APPLYNUMBER").IsOptional().HasMaxLength(50);
            Property(x => x.ApplyDate).HasColumnName("APPLYDATE").IsOptional();
            Property(x => x.ApplyDept).HasColumnName("APPLYDEPT").IsOptional().HasMaxLength(200);
            Property(x => x.ApplyDeptName).HasColumnName("APPLYDEPTNAME").IsOptional().HasMaxLength(200);
            Property(x => x.SuperiorDept).HasColumnName("SUPERIORDEPT").IsOptional().HasMaxLength(200);
            Property(x => x.SuperiorDeptName).HasColumnName("SUPERIORDEPTNAME").IsOptional().HasMaxLength(200);
            Property(x => x.SerialNumber).HasColumnName("SERIALNUMBER").IsOptional().HasMaxLength(200);
            Property(x => x.ActualBorrower).HasColumnName("ACTUALBORROWER").IsOptional().HasMaxLength(50);
            Property(x => x.ActualBorrowerName).HasColumnName("ACTUALBORROWERNAME").IsOptional().HasMaxLength(50);
            Property(x => x.BorrowLocation).HasColumnName("BORROWLOCATION").IsOptional().HasMaxLength(200);
            Property(x => x.TaskNature).HasColumnName("TASKNATURE").IsOptional().HasMaxLength(200);
            Property(x => x.PaymentType).HasColumnName("PAYMENTTYPE").IsOptional().HasMaxLength(200);
            Property(x => x.LoanAmount).HasColumnName("LOANAMOUNT").IsOptional().HasPrecision(18,2);
            Property(x => x.LoanAmountCaps).HasColumnName("LOANAMOUNTCAPS").IsOptional().HasMaxLength(200);
            Property(x => x.Payee).HasColumnName("PAYEE").IsOptional().HasMaxLength(200);
            Property(x => x.CardNumber).HasColumnName("CARDNUMBER").IsOptional().HasMaxLength(200);
            Property(x => x.OpenBank).HasColumnName("OPENBANK").IsOptional().HasMaxLength(200);
            Property(x => x.LoanReason).HasColumnName("LOANREASON").IsOptional().HasMaxLength(500);
            Property(x => x.Attachment).HasColumnName("ATTACHMENT").IsOptional().HasMaxLength(500);
            Property(x => x.Project).HasColumnName("PROJECT").IsOptional().HasMaxLength(200);
            Property(x => x.ProjectName).HasColumnName("PROJECTNAME").IsOptional().HasMaxLength(200);
            Property(x => x.Customer).HasColumnName("CUSTOMER").IsOptional().HasMaxLength(200);
            Property(x => x.Remark).HasColumnName("REMARK").IsOptional().HasMaxLength(500);
            Property(x => x.IsPrintNote).HasColumnName("ISPRINTNOTE").IsOptional().HasMaxLength(200);
            Property(x => x.IsPrintReason).HasColumnName("ISPRINTREASON").IsOptional().HasMaxLength(200);
            Property(x => x.ApplySign).HasColumnName("APPLYSIGN").IsOptional();
            Property(x => x.ProfessionalSign).HasColumnName("PROFESSIONALSIGN").IsOptional();
            Property(x => x.DeptheadSign).HasColumnName("DEPTHEADSIGN").IsOptional();
            Property(x => x.CentraldeptSign).HasColumnName("CENTRALDEPTSIGN").IsOptional();
            Property(x => x.LeaderSign).HasColumnName("LEADERSIGN").IsOptional();
            Property(x => x.GeneralmanagerSign).HasColumnName("GENERALMANAGERSIGN").IsOptional();
            Property(x => x.FinancialSign).HasColumnName("FINANCIALSIGN").IsOptional();
            Property(x => x.BorrowSign).HasColumnName("BORROWSIGN").IsOptional();
            Property(x => x.RepayAmount).HasColumnName("REPAYAMOUNT").IsOptional().HasPrecision(18,4);
            Property(x => x.FlowEndDate).HasColumnName("FLOWENDDATE").IsOptional();
            Property(x => x.IsAllowBorrow).HasColumnName("ISALLOWBORROW").IsOptional().HasMaxLength(200);
            Property(x => x.ActualBorrowerPhone).HasColumnName("ACTUALBORROWERPHONE").IsOptional().HasMaxLength(200);
            Property(x => x.FormCode).HasColumnName("FORMCODE").IsOptional().HasMaxLength(50);
            Property(x => x.IsBranchLoan).HasColumnName("ISBRANCHLOAN").IsOptional().HasMaxLength(50);
            Property(x => x.AlreadyReturnAmount).HasColumnName("ALREADYRETURNAMOUNT").IsOptional().HasPrecision(18,2);
            Property(x => x.ApplyUserPhone).HasColumnName("APPLYUSERPHONE").IsOptional().HasMaxLength(200);
            Property(x => x.PlanLoanAmount).HasColumnName("PLANLOANAMOUNT").IsOptional().HasPrecision(18,2);
            Property(x => x.ProjectCode).HasColumnName("PROJECTCODE").IsOptional().HasMaxLength(50);
            Property(x => x.ContractCode).HasColumnName("CONTRACTCODE").IsOptional().HasMaxLength(50);
            Property(x => x.ProjectLeader).HasColumnName("PROJECTLEADER").IsOptional().HasMaxLength(50);
            Property(x => x.ProjectLeaderName).HasColumnName("PROJECTLEADERNAME").IsOptional().HasMaxLength(50);
            Property(x => x.ApplyDeptType).HasColumnName("APPLYDEPTTYPE").IsOptional().HasMaxLength(50);
            Property(x => x.JZMQWZSJJKRZWHKJE).HasColumnName("JZMQWZSJJKRZWHKJE").IsOptional().HasPrecision(18,2);
            Property(x => x.BelongYear).HasColumnName("BELONGYEAR").IsOptional();
            Property(x => x.BelongMonth).HasColumnName("BELONGMONTH").IsOptional();
            Property(x => x.BelongQuarter).HasColumnName("BELONGQUARTER").IsOptional();
            Property(x => x.UnReturnConfirmDate).HasColumnName("UNRETURNCONFIRMDATE").IsOptional();
            Property(x => x.UnReturnNoticeDate).HasColumnName("UNRETURNNOTICEDATE").IsOptional();
        }
    }

    // S_D_Comment
    internal partial class S_D_CommentConfiguration : EntityTypeConfiguration<S_D_Comment>
    {
        public S_D_CommentConfiguration()
        {
			ToTable("S_D_COMMENT");
            HasKey(x => x.ID);

            Property(x => x.ID).HasColumnName("ID").IsRequired().HasMaxLength(50);
            Property(x => x.Type).HasColumnName("TYPE").IsOptional().HasMaxLength(50);
            Property(x => x.UserName).HasColumnName("USERNAME").IsOptional().HasMaxLength(50);
            Property(x => x.UserID).HasColumnName("USERID").IsOptional().HasMaxLength(50);
            Property(x => x.Comment).HasColumnName("COMMENT").IsOptional().HasMaxLength(4000);
            Property(x => x.IsTemplate).HasColumnName("ISTEMPLATE").IsOptional().HasMaxLength(10);
            Property(x => x.IsUse).HasColumnName("ISUSE").IsOptional().HasMaxLength(10);
            Property(x => x.CreateUserName).HasColumnName("CREATEUSERNAME").IsOptional().HasMaxLength(50);
            Property(x => x.CreateUserID).HasColumnName("CREATEUSERID").IsOptional().HasMaxLength(50);
            Property(x => x.CreateDate).HasColumnName("CREATEDATE").IsOptional();
        }
    }

    // S_D_Incoming
    internal partial class S_D_IncomingConfiguration : EntityTypeConfiguration<S_D_Incoming>
    {
        public S_D_IncomingConfiguration()
        {
			ToTable("S_D_INCOMING");
            HasKey(x => x.ID);

            Property(x => x.ID).HasColumnName("ID").IsRequired().HasMaxLength(50);
            Property(x => x.CreateDate).HasColumnName("CREATEDATE").IsOptional();
            Property(x => x.ModifyDate).HasColumnName("MODIFYDATE").IsOptional();
            Property(x => x.CreateUserID).HasColumnName("CREATEUSERID").IsOptional().HasMaxLength(50);
            Property(x => x.CreateUser).HasColumnName("CREATEUSER").IsOptional().HasMaxLength(50);
            Property(x => x.ModifyUserID).HasColumnName("MODIFYUSERID").IsOptional().HasMaxLength(50);
            Property(x => x.ModifyUser).HasColumnName("MODIFYUSER").IsOptional().HasMaxLength(50);
            Property(x => x.OrgID).HasColumnName("ORGID").IsOptional().HasMaxLength(50);
            Property(x => x.CompanyID).HasColumnName("COMPANYID").IsOptional().HasMaxLength(50);
            Property(x => x.FlowPhase).HasColumnName("FLOWPHASE").IsOptional().HasMaxLength(50);
            Property(x => x.FlowInfo).HasColumnName("FLOWINFO").IsOptional().HasMaxLength(1073741823);
            Property(x => x.StepName).HasColumnName("STEPNAME").IsOptional().HasMaxLength(500);
            Property(x => x.FileTitle).HasColumnName("FILETITLE").IsOptional().HasMaxLength(200);
            Property(x => x.Files).HasColumnName("FILES").IsOptional().HasMaxLength(500);
            Property(x => x.OfficeFrom).HasColumnName("OFFICEFROM").IsOptional().HasMaxLength(200);
            Property(x => x.FontSize).HasColumnName("FONTSIZE").IsOptional().HasMaxLength(200);
            Property(x => x.Type).HasColumnName("TYPE").IsOptional().HasMaxLength(200);
            Property(x => x.Code).HasColumnName("CODE").IsOptional().HasMaxLength(200);
            Property(x => x.Number).HasColumnName("NUMBER").IsOptional().HasMaxLength(200);
            Property(x => x.IncomingDate).HasColumnName("INCOMINGDATE").IsOptional();
            Property(x => x.Security).HasColumnName("SECURITY").IsOptional().HasMaxLength(200);
            Property(x => x.EmergencyLevel).HasColumnName("EMERGENCYLEVEL").IsOptional().HasMaxLength(200);
            Property(x => x.FileCount).HasColumnName("FILECOUNT").IsOptional();
            Property(x => x.Materials).HasColumnName("MATERIALS").IsOptional().HasMaxLength(200);
            Property(x => x.UndertakeDeadline).HasColumnName("UNDERTAKEDEADLINE").IsOptional();
            Property(x => x.Subject).HasColumnName("SUBJECT").IsOptional().HasMaxLength(500);
            Property(x => x.Register).HasColumnName("REGISTER").IsOptional();
            Property(x => x.OfficialSign).HasColumnName("OFFICIALSIGN").IsOptional();
            Property(x => x.LeaderApprove).HasColumnName("LEADERAPPROVE").IsOptional();
            Property(x => x.DeptLeaderHandle).HasColumnName("DEPTLEADERHANDLE").IsOptional();
            Property(x => x.PresidentHandle).HasColumnName("PRESIDENTHANDLE").IsOptional();
            Property(x => x.PeopleHandle).HasColumnName("PEOPLEHANDLE").IsOptional();
            Property(x => x.IsArchiveField).HasColumnName("ISARCHIVEFIELD").IsOptional().HasMaxLength(200);
            Property(x => x.IsTwo).HasColumnName("ISTWO").IsOptional().HasMaxLength(200);
            Property(x => x.TwoDept).HasColumnName("TWODEPT").IsOptional().HasMaxLength(200);
            Property(x => x.ComprehensiveLeaderSign).HasColumnName("COMPREHENSIVELEADERSIGN").IsOptional();
            Property(x => x.TwoComprehensiveLeaderSign).HasColumnName("TWOCOMPREHENSIVELEADERSIGN").IsOptional();
            Property(x => x.TwoLeaderSign).HasColumnName("TWOLEADERSIGN").IsOptional();
            Property(x => x.LeaderSign).HasColumnName("LEADERSIGN").IsOptional();
            Property(x => x.Applicant).HasColumnName("APPLICANT").IsOptional().HasMaxLength(50);
            Property(x => x.ApplicantID).HasColumnName("APPLICANTID").IsOptional().HasMaxLength(50);
            Property(x => x.Status).HasColumnName("STATUS").IsOptional().HasMaxLength(50);
            Property(x => x.InsFlowID).HasColumnName("INSFLOWID").IsOptional().HasMaxLength(50);
            Property(x => x.ExecutedSteps).HasColumnName("EXECUTEDSTEPS").IsOptional().HasMaxLength(200);
        }
    }

    // S_D_Posting
    internal partial class S_D_PostingConfiguration : EntityTypeConfiguration<S_D_Posting>
    {
        public S_D_PostingConfiguration()
        {
			ToTable("S_D_POSTING");
            HasKey(x => x.ID);

            Property(x => x.ID).HasColumnName("ID").IsRequired().HasMaxLength(50);
            Property(x => x.CreateDate).HasColumnName("CREATEDATE").IsOptional();
            Property(x => x.ModifyDate).HasColumnName("MODIFYDATE").IsOptional();
            Property(x => x.CreateUserID).HasColumnName("CREATEUSERID").IsOptional().HasMaxLength(50);
            Property(x => x.CreateUser).HasColumnName("CREATEUSER").IsOptional().HasMaxLength(50);
            Property(x => x.ModifyUserID).HasColumnName("MODIFYUSERID").IsOptional().HasMaxLength(50);
            Property(x => x.ModifyUser).HasColumnName("MODIFYUSER").IsOptional().HasMaxLength(50);
            Property(x => x.OrgID).HasColumnName("ORGID").IsOptional().HasMaxLength(50);
            Property(x => x.CompanyID).HasColumnName("COMPANYID").IsOptional().HasMaxLength(50);
            Property(x => x.FlowPhase).HasColumnName("FLOWPHASE").IsOptional().HasMaxLength(50);
            Property(x => x.FlowInfo).HasColumnName("FLOWINFO").IsOptional().HasMaxLength(1073741823);
            Property(x => x.StepName).HasColumnName("STEPNAME").IsOptional().HasMaxLength(500);
            Property(x => x.MainFile).HasColumnName("MAINFILE").IsOptional().HasMaxLength(2147483647);
            Property(x => x.RedFile).HasColumnName("REDFILE").IsOptional().HasMaxLength(2147483647);
            Property(x => x.Title).HasColumnName("TITLE").IsOptional().HasMaxLength(200);
            Property(x => x.FileNo).HasColumnName("FILENO").IsOptional().HasMaxLength(200);
            Property(x => x.Drafter).HasColumnName("DRAFTER").IsOptional().HasMaxLength(200);
            Property(x => x.DrafterName).HasColumnName("DRAFTERNAME").IsOptional().HasMaxLength(200);
            Property(x => x.DraftDate).HasColumnName("DRAFTDATE").IsOptional();
            Property(x => x.DraftDept).HasColumnName("DRAFTDEPT").IsOptional().HasMaxLength(200);
            Property(x => x.DraftDeptName).HasColumnName("DRAFTDEPTNAME").IsOptional().HasMaxLength(200);
            Property(x => x.DeptLeader).HasColumnName("DEPTLEADER").IsOptional().HasMaxLength(200);
            Property(x => x.DeptLeaderName).HasColumnName("DEPTLEADERNAME").IsOptional().HasMaxLength(200);
            Property(x => x.Security).HasColumnName("SECURITY").IsOptional().HasMaxLength(200);
            Property(x => x.EmergencyLevel).HasColumnName("EMERGENCYLEVEL").IsOptional().HasMaxLength(200);
            Property(x => x.FormalNumber).HasColumnName("FORMALNUMBER").IsOptional();
            Property(x => x.AttachNumber).HasColumnName("ATTACHNUMBER").IsOptional();
            Property(x => x.TotalNumber).HasColumnName("TOTALNUMBER").IsOptional();
            Property(x => x.SendTo).HasColumnName("SENDTO").IsOptional().HasMaxLength(2000);
            Property(x => x.SendToName).HasColumnName("SENDTONAME").IsOptional().HasMaxLength(2000);
            Property(x => x.CopyTo).HasColumnName("COPYTO").IsOptional().HasMaxLength(2000);
            Property(x => x.CopyToName).HasColumnName("COPYTONAME").IsOptional().HasMaxLength(2000);
            Property(x => x.SpecificStaff).HasColumnName("SPECIFICSTAFF").IsOptional().HasMaxLength(200);
            Property(x => x.SpecificStaffName).HasColumnName("SPECIFICSTAFFNAME").IsOptional().HasMaxLength(200);
            Property(x => x.DraftSign).HasColumnName("DRAFTSIGN").IsOptional();
            Property(x => x.SectionChiefAudit).HasColumnName("SECTIONCHIEFAUDIT").IsOptional();
            Property(x => x.DirectorApprove).HasColumnName("DIRECTORAPPROVE").IsOptional();
            Property(x => x.OfficialTransfer).HasColumnName("OFFICIALTRANSFER").IsOptional();
            Property(x => x.LeaderApprove).HasColumnName("LEADERAPPROVE").IsOptional();
            Property(x => x.OfficialDocument).HasColumnName("OFFICIALDOCUMENT").IsOptional();
            Property(x => x.IsArchiveField).HasColumnName("ISARCHIVEFIELD").IsOptional().HasMaxLength(200);
            Property(x => x.IsRegulationRuleType).HasColumnName("ISREGULATIONRULETYPE").IsOptional().HasMaxLength(200);
            Property(x => x.FileType).HasColumnName("FILETYPE").IsOptional().HasMaxLength(200);
            Property(x => x.PostAttach).HasColumnName("POSTATTACH").IsOptional().HasMaxLength(500);
            Property(x => x.DeptLeaderSign).HasColumnName("DEPTLEADERSIGN").IsOptional().HasMaxLength(200);
            Property(x => x.CountersignDeptLeader).HasColumnName("COUNTERSIGNDEPTLEADER").IsOptional().HasMaxLength(200);
            Property(x => x.ComprehensiveSign).HasColumnName("COMPREHENSIVESIGN").IsOptional().HasMaxLength(200);
            Property(x => x.CompanyLeader).HasColumnName("COMPANYLEADER").IsOptional().HasMaxLength(200);
            Property(x => x.MergeDocID).HasColumnName("MERGEDOCID").IsOptional().HasMaxLength(50);
        }
    }

    // S_D_RedTitle
    internal partial class S_D_RedTitleConfiguration : EntityTypeConfiguration<S_D_RedTitle>
    {
        public S_D_RedTitleConfiguration()
        {
			ToTable("S_D_REDTITLE");
            HasKey(x => x.ID);

            Property(x => x.ID).HasColumnName("ID").IsRequired().HasMaxLength(50);
            Property(x => x.CreateDate).HasColumnName("CREATEDATE").IsOptional();
            Property(x => x.ModifyDate).HasColumnName("MODIFYDATE").IsOptional();
            Property(x => x.CreateUserID).HasColumnName("CREATEUSERID").IsOptional().HasMaxLength(50);
            Property(x => x.CreateUser).HasColumnName("CREATEUSER").IsOptional().HasMaxLength(50);
            Property(x => x.ModifyUserID).HasColumnName("MODIFYUSERID").IsOptional().HasMaxLength(50);
            Property(x => x.ModifyUser).HasColumnName("MODIFYUSER").IsOptional().HasMaxLength(50);
            Property(x => x.OrgID).HasColumnName("ORGID").IsOptional().HasMaxLength(50);
            Property(x => x.CompanyID).HasColumnName("COMPANYID").IsOptional().HasMaxLength(50);
            Property(x => x.FlowPhase).HasColumnName("FLOWPHASE").IsOptional().HasMaxLength(50);
            Property(x => x.FlowInfo).HasColumnName("FLOWINFO").IsOptional().HasMaxLength(1073741823);
            Property(x => x.StepName).HasColumnName("STEPNAME").IsOptional().HasMaxLength(500);
            Property(x => x.Title).HasColumnName("TITLE").IsOptional().HasMaxLength(200);
            Property(x => x.DeptInfo).HasColumnName("DEPTINFO").IsOptional().HasMaxLength(200);
            Property(x => x.DeptInfoName).HasColumnName("DEPTINFONAME").IsOptional().HasMaxLength(200);
            Property(x => x.Register).HasColumnName("REGISTER").IsOptional().HasMaxLength(200);
            Property(x => x.RegisterName).HasColumnName("REGISTERNAME").IsOptional().HasMaxLength(200);
            Property(x => x.RedFile).HasColumnName("REDFILE").IsOptional().HasMaxLength(500);
            Property(x => x.Remark).HasColumnName("REMARK").IsOptional().HasMaxLength(500);
        }
    }

    // S_E_Logistics_OfficePos
    internal partial class S_E_Logistics_OfficePosConfiguration : EntityTypeConfiguration<S_E_Logistics_OfficePos>
    {
        public S_E_Logistics_OfficePosConfiguration()
        {
			ToTable("S_E_LOGISTICS_OFFICEPOS");
            HasKey(x => x.ID);

            Property(x => x.ID).HasColumnName("ID").IsRequired().HasMaxLength(50);
            Property(x => x.CreateDate).HasColumnName("CREATEDATE").IsOptional();
            Property(x => x.ModifyDate).HasColumnName("MODIFYDATE").IsOptional();
            Property(x => x.CreateUserID).HasColumnName("CREATEUSERID").IsOptional().HasMaxLength(50);
            Property(x => x.CreateUser).HasColumnName("CREATEUSER").IsOptional().HasMaxLength(50);
            Property(x => x.ModifyUserID).HasColumnName("MODIFYUSERID").IsOptional().HasMaxLength(50);
            Property(x => x.ModifyUser).HasColumnName("MODIFYUSER").IsOptional().HasMaxLength(50);
            Property(x => x.OrgID).HasColumnName("ORGID").IsOptional().HasMaxLength(50);
            Property(x => x.CompanyID).HasColumnName("COMPANYID").IsOptional().HasMaxLength(50);
            Property(x => x.FlowPhase).HasColumnName("FLOWPHASE").IsOptional().HasMaxLength(50);
            Property(x => x.FlowInfo).HasColumnName("FLOWINFO").IsOptional().HasMaxLength(1073741823);
            Property(x => x.StepName).HasColumnName("STEPNAME").IsOptional().HasMaxLength(500);
            Property(x => x.Name).HasColumnName("NAME").IsOptional().HasMaxLength(200);
            Property(x => x.Code).HasColumnName("CODE").IsOptional().HasMaxLength(200);
            Property(x => x.Level).HasColumnName("LEVEL").IsOptional();
            Property(x => x.ParentID).HasColumnName("PARENTID").IsOptional().HasMaxLength(200);
            Property(x => x.FullID).HasColumnName("FULLID").IsOptional().HasMaxLength(200);
            Property(x => x.SortIndex).HasColumnName("SORTINDEX").IsOptional().HasMaxLength(200);
            Property(x => x.Description).HasColumnName("DESCRIPTION").IsOptional().HasMaxLength(500);
        }
    }

    // S_E_Logistics_OfficeRecord
    internal partial class S_E_Logistics_OfficeRecordConfiguration : EntityTypeConfiguration<S_E_Logistics_OfficeRecord>
    {
        public S_E_Logistics_OfficeRecordConfiguration()
        {
			ToTable("S_E_LOGISTICS_OFFICERECORD");
            HasKey(x => x.ID);

            Property(x => x.ID).HasColumnName("ID").IsRequired().HasMaxLength(50);
            Property(x => x.CreateDate).HasColumnName("CREATEDATE").IsOptional();
            Property(x => x.ModifyDate).HasColumnName("MODIFYDATE").IsOptional();
            Property(x => x.CreateUserID).HasColumnName("CREATEUSERID").IsOptional().HasMaxLength(50);
            Property(x => x.CreateUser).HasColumnName("CREATEUSER").IsOptional().HasMaxLength(50);
            Property(x => x.ModifyUserID).HasColumnName("MODIFYUSERID").IsOptional().HasMaxLength(50);
            Property(x => x.ModifyUser).HasColumnName("MODIFYUSER").IsOptional().HasMaxLength(50);
            Property(x => x.OrgID).HasColumnName("ORGID").IsOptional().HasMaxLength(50);
            Property(x => x.CompanyID).HasColumnName("COMPANYID").IsOptional().HasMaxLength(50);
            Property(x => x.FlowPhase).HasColumnName("FLOWPHASE").IsOptional().HasMaxLength(50);
            Property(x => x.FlowInfo).HasColumnName("FLOWINFO").IsOptional().HasMaxLength(1073741823);
            Property(x => x.StepName).HasColumnName("STEPNAME").IsOptional().HasMaxLength(500);
            Property(x => x.Dept).HasColumnName("DEPT").IsOptional().HasMaxLength(200);
            Property(x => x.DeptName).HasColumnName("DEPTNAME").IsOptional().HasMaxLength(200);
            Property(x => x.Office).HasColumnName("OFFICE").IsOptional().HasMaxLength(200);
            Property(x => x.OfficeName).HasColumnName("OFFICENAME").IsOptional().HasMaxLength(200);
            Property(x => x.Pos).HasColumnName("POS").IsOptional().HasMaxLength(200);
            Property(x => x.PosName).HasColumnName("POSNAME").IsOptional().HasMaxLength(200);
            Property(x => x.Area).HasColumnName("AREA").IsOptional().HasPrecision(18,4);
            Property(x => x.Number).HasColumnName("NUMBER").IsOptional();
            Property(x => x.StartDate).HasColumnName("STARTDATE").IsOptional();
            Property(x => x.EndDate).HasColumnName("ENDDATE").IsOptional();
        }
    }

    // S_EP_DefineSubject
    internal partial class S_EP_DefineSubjectConfiguration : EntityTypeConfiguration<S_EP_DefineSubject>
    {
        public S_EP_DefineSubjectConfiguration()
        {
			ToTable("S_EP_DEFINESUBJECT");
            HasKey(x => x.ID);

            Property(x => x.ID).HasColumnName("ID").IsRequired().HasMaxLength(50);
            Property(x => x.Name).HasColumnName("NAME").IsRequired().HasMaxLength(500);
            Property(x => x.Code).HasColumnName("CODE").IsOptional().HasMaxLength(500);
            Property(x => x.FullCode).HasColumnName("FULLCODE").IsOptional().HasMaxLength(500);
            Property(x => x.ParentID).HasColumnName("PARENTID").IsOptional().HasMaxLength(50);
            Property(x => x.FullID).HasColumnName("FULLID").IsRequired().HasMaxLength(500);
            Property(x => x.Level).HasColumnName("LEVEL").IsRequired();
            Property(x => x.Remark).HasColumnName("REMARK").IsOptional().HasMaxLength(500);
            Property(x => x.SubjectType).HasColumnName("SUBJECTTYPE").IsOptional().HasMaxLength(50);
            Property(x => x.SortIndex).HasColumnName("SORTINDEX").IsRequired().HasPrecision(18,2);
            Property(x => x.BindFinaceCBSID).HasColumnName("BINDFINACECBSID").IsOptional().HasMaxLength(50);
            Property(x => x.BindFinaceCBSCode).HasColumnName("BINDFINACECBSCODE").IsOptional().HasMaxLength(500);
            Property(x => x.BindFinaceCBSName).HasColumnName("BINDFINACECBSNAME").IsOptional().HasMaxLength(500);
            Property(x => x.NodeType).HasColumnName("NODETYPE").IsOptional().HasMaxLength(50);
            Property(x => x.BelongDeptIDs).HasColumnName("BELONGDEPTIDS").IsOptional().HasMaxLength(2000);
            Property(x => x.BelongDeptNames).HasColumnName("BELONGDEPTNAMES").IsOptional().HasMaxLength(2000);
            Property(x => x.CreateDate).HasColumnName("CREATEDATE").IsOptional();
            Property(x => x.CreateUserID).HasColumnName("CREATEUSERID").IsOptional().HasMaxLength(50);
            Property(x => x.CreateUserName).HasColumnName("CREATEUSERNAME").IsOptional().HasMaxLength(50);
            Property(x => x.ModifyDate).HasColumnName("MODIFYDATE").IsOptional();
            Property(x => x.ModifyUserID).HasColumnName("MODIFYUSERID").IsOptional().HasMaxLength(50);
            Property(x => x.ModifyUserName).HasColumnName("MODIFYUSERNAME").IsOptional().HasMaxLength(50);
        }
    }

    // S_EP_ReimbursementApply
    internal partial class S_EP_ReimbursementApplyConfiguration : EntityTypeConfiguration<S_EP_ReimbursementApply>
    {
        public S_EP_ReimbursementApplyConfiguration()
        {
			ToTable("S_EP_REIMBURSEMENTAPPLY");
            HasKey(x => x.ID);

            Property(x => x.ID).HasColumnName("ID").IsRequired().HasMaxLength(50);
            Property(x => x.CreateDate).HasColumnName("CREATEDATE").IsOptional();
            Property(x => x.ModifyDate).HasColumnName("MODIFYDATE").IsOptional();
            Property(x => x.CreateUserID).HasColumnName("CREATEUSERID").IsOptional().HasMaxLength(50);
            Property(x => x.CreateUser).HasColumnName("CREATEUSER").IsOptional().HasMaxLength(50);
            Property(x => x.ModifyUserID).HasColumnName("MODIFYUSERID").IsOptional().HasMaxLength(50);
            Property(x => x.ModifyUser).HasColumnName("MODIFYUSER").IsOptional().HasMaxLength(50);
            Property(x => x.OrgID).HasColumnName("ORGID").IsOptional().HasMaxLength(50);
            Property(x => x.CompanyID).HasColumnName("COMPANYID").IsOptional().HasMaxLength(50);
            Property(x => x.FlowPhase).HasColumnName("FLOWPHASE").IsOptional().HasMaxLength(50);
            Property(x => x.FlowInfo).HasColumnName("FLOWINFO").IsOptional().HasMaxLength(1073741823);
            Property(x => x.StepName).HasColumnName("STEPNAME").IsOptional().HasMaxLength(500);
            Property(x => x.SerialNumber).HasColumnName("SERIALNUMBER").IsOptional().HasMaxLength(200);
            Property(x => x.ReimbursementDate).HasColumnName("REIMBURSEMENTDATE").IsOptional();
            Property(x => x.Advertiser).HasColumnName("ADVERTISER").IsOptional().HasMaxLength(50);
            Property(x => x.AdvertiserName).HasColumnName("ADVERTISERNAME").IsOptional().HasMaxLength(50);
            Property(x => x.AdvertiserDept).HasColumnName("ADVERTISERDEPT").IsOptional().HasMaxLength(200);
            Property(x => x.AdvertiserDeptName).HasColumnName("ADVERTISERDEPTNAME").IsOptional().HasMaxLength(200);
            Property(x => x.CreateUserPhone).HasColumnName("CREATEUSERPHONE").IsOptional().HasMaxLength(200);
            Property(x => x.CapsReimbursementAmount).HasColumnName("CAPSREIMBURSEMENTAMOUNT").IsOptional().HasMaxLength(200);
            Property(x => x.ThisReversalAmount).HasColumnName("THISREVERSALAMOUNT").IsOptional().HasPrecision(18,2);
            Property(x => x.RefundAmount).HasColumnName("REFUNDAMOUNT").IsOptional().HasPrecision(18,2);
            Property(x => x.ReimbursementSite).HasColumnName("REIMBURSEMENTSITE").IsOptional().HasMaxLength(200);
            Property(x => x.AccountName).HasColumnName("ACCOUNTNAME").IsOptional().HasMaxLength(200);
            Property(x => x.OpenBank).HasColumnName("OPENBANK").IsOptional().HasMaxLength(200);
            Property(x => x.CardNumber).HasColumnName("CARDNUMBER").IsOptional().HasMaxLength(200);
            Property(x => x.Details).HasColumnName("DETAILS").IsOptional().HasMaxLength(1073741823);
            Property(x => x.LoanInfo).HasColumnName("LOANINFO").IsOptional().HasMaxLength(1073741823);
            Property(x => x.ProjectName).HasColumnName("PROJECTNAME").IsOptional().HasMaxLength(200);
            Property(x => x.ProjectNameName).HasColumnName("PROJECTNAMENAME").IsOptional().HasMaxLength(200);
            Property(x => x.CustomerName).HasColumnName("CUSTOMERNAME").IsOptional().HasMaxLength(200);
            Property(x => x.CustomerNameName).HasColumnName("CUSTOMERNAMENAME").IsOptional().HasMaxLength(200);
            Property(x => x.ProjectCode).HasColumnName("PROJECTCODE").IsOptional().HasMaxLength(200);
            Property(x => x.ContractCode).HasColumnName("CONTRACTCODE").IsOptional().HasMaxLength(200);
            Property(x => x.SQRQZYJ).HasColumnName("SQRQZYJ").IsOptional();
            Property(x => x.ZYSCQZYJ).HasColumnName("ZYSCQZYJ").IsOptional();
            Property(x => x.BMZZQZYJ).HasColumnName("BMZZQZYJ").IsOptional();
            Property(x => x.ZGLDQZYJ).HasColumnName("ZGLDQZYJ").IsOptional();
            Property(x => x.ZJLSPQZYJ).HasColumnName("ZJLSPQZYJ").IsOptional();
            Property(x => x.CWBFZRQZYJ).HasColumnName("CWBFZRQZYJ").IsOptional();
            Property(x => x.CWBLQZYJ).HasColumnName("CWBLQZYJ").IsOptional();
            Property(x => x.ReimbursementFormCode).HasColumnName("REIMBURSEMENTFORMCODE").IsOptional().HasMaxLength(200);
            Property(x => x.IsBranchReimbursement).HasColumnName("ISBRANCHREIMBURSEMENT").IsOptional().HasMaxLength(200);
            Property(x => x.FlowEndDate).HasColumnName("FLOWENDDATE").IsOptional();
            Property(x => x.TaskNature).HasColumnName("TASKNATURE").IsOptional().HasMaxLength(200);
            Property(x => x.ExpenseDateEnd).HasColumnName("EXPENSEDATEEND").IsOptional();
            Property(x => x.ExpenseDateStart).HasColumnName("EXPENSEDATESTART").IsOptional();
            Property(x => x.SubtotalDays).HasColumnName("SUBTOTALDAYS").IsOptional();
            Property(x => x.GNFYJTF).HasColumnName("GNFYJTF").IsOptional().HasMaxLength(1073741823);
            Property(x => x.GNZSBZY).HasColumnName("GNZSBZY").IsOptional().HasPrecision(18,2);
            Property(x => x.GNYPZSTS).HasColumnName("GNYPZSTS").IsOptional();
            Property(x => x.GNMRZFS).HasColumnName("GNMRZFS").IsOptional().HasPrecision(18,2);
            Property(x => x.GNZSFHJY).HasColumnName("GNZSFHJY").IsOptional().HasPrecision(18,2);
            Property(x => x.GNYPZSFYY).HasColumnName("GNYPZSFYY").IsOptional().HasPrecision(18,2);
            Property(x => x.GNWPZSTS).HasColumnName("GNWPZSTS").IsOptional();
            Property(x => x.GNYPZSJYJLY).HasColumnName("GNYPZSJYJLY").IsOptional().HasPrecision(18,2);
            Property(x => x.GNWPZSJLBZY).HasColumnName("GNWPZSJLBZY").IsOptional().HasPrecision(18,2);
            Property(x => x.EWZBTS).HasColumnName("EWZBTS").IsOptional();
            Property(x => x.GNWPZSJYJLY).HasColumnName("GNWPZSJYJLY").IsOptional().HasPrecision(18,2);
            Property(x => x.SNJTBZY).HasColumnName("SNJTBZY").IsOptional().HasPrecision(18,2);
            Property(x => x.SJSNJTFJEY).HasColumnName("SJSNJTFJEY").IsOptional().HasPrecision(18,2);
            Property(x => x.SNJTFJEY).HasColumnName("SNJTFJEY").IsOptional().HasPrecision(18,2);
            Property(x => x.ActualPhoneFee).HasColumnName("ACTUALPHONEFEE").IsOptional().HasPrecision(18,2);
            Property(x => x.ConfirmPhoneFee).HasColumnName("CONFIRMPHONEFEE").IsOptional().HasPrecision(18,2);
            Property(x => x.PostSubsidyStandard).HasColumnName("POSTSUBSIDYSTANDARD").IsOptional().HasPrecision(18,2);
            Property(x => x.TotalPostSubsidyAmount).HasColumnName("TOTALPOSTSUBSIDYAMOUNT").IsOptional().HasPrecision(18,2);
            Property(x => x.HSBTBZY).HasColumnName("HSBTBZY").IsOptional().HasPrecision(18,2);
            Property(x => x.HSBTY).HasColumnName("HSBTY").IsOptional().HasPrecision(18,2);
            Property(x => x.QTBTY).HasColumnName("QTBTY").IsOptional().HasPrecision(18,2);
            Property(x => x.OtherFee).HasColumnName("OTHERFEE").IsOptional().HasMaxLength(1073741823);
            Property(x => x.ExpenseScourse).HasColumnName("EXPENSESCOURSE").IsOptional().HasMaxLength(50);
            Property(x => x.PayReason).HasColumnName("PAYREASON").IsOptional().HasMaxLength(500);
            Property(x => x.Remark).HasColumnName("REMARK").IsOptional().HasMaxLength(500);
            Property(x => x.ProjectLeader).HasColumnName("PROJECTLEADER").IsOptional().HasMaxLength(200);
            Property(x => x.ProjectLeaderName).HasColumnName("PROJECTLEADERNAME").IsOptional().HasMaxLength(200);
            Property(x => x.RLZYBBLQZYJ).HasColumnName("RLZYBBLQZYJ").IsOptional();
            Property(x => x.RLZYBBCQZYJ).HasColumnName("RLZYBBCQZYJ").IsOptional();
            Property(x => x.ExpenseSite).HasColumnName("EXPENSESITE").IsOptional().HasMaxLength(200);
            Property(x => x.ProjectType).HasColumnName("PROJECTTYPE").IsOptional().HasMaxLength(200);
            Property(x => x.EmployeeLevel).HasColumnName("EMPLOYEELEVEL").IsOptional().HasMaxLength(200);
            Property(x => x.PersonPost).HasColumnName("PERSONPOST").IsOptional().HasMaxLength(200);
            Property(x => x.ReimbursementAmount).HasColumnName("REIMBURSEMENTAMOUNT").IsOptional().HasPrecision(18,2);
            Property(x => x.BXRYBXCLFRQ).HasColumnName("BXRYBXCLFRQ").IsOptional().HasMaxLength(1073741823);
            Property(x => x.ReimbursementEffectiveDateStart).HasColumnName("REIMBURSEMENTEFFECTIVEDATESTART").IsOptional();
            Property(x => x.ReimbursementEffectiveDateEnd).HasColumnName("REIMBURSEMENTEFFECTIVEDATEEND").IsOptional();
            Property(x => x.PaymentMethod).HasColumnName("PAYMENTMETHOD").IsOptional().HasMaxLength(200);
            Property(x => x.ExpenseScourseName).HasColumnName("EXPENSESCOURSENAME").IsOptional().HasMaxLength(200);
            Property(x => x.CostIncluded).HasColumnName("COSTINCLUDED").IsOptional().HasMaxLength(200);
            Property(x => x.WhetherRefund).HasColumnName("WHETHERREFUND").IsOptional().HasMaxLength(200);
            Property(x => x.PrintReason).HasColumnName("PRINTREASON").IsOptional().HasMaxLength(200);
            Property(x => x.NoElectronicTicket).HasColumnName("NOELECTRONICTICKET").IsOptional().HasMaxLength(500);
            Property(x => x.ElectronicTicket).HasColumnName("ELECTRONICTICKET").IsOptional().HasMaxLength(1073741823);
            Property(x => x.DeptDetail).HasColumnName("DEPTDETAIL").IsOptional().HasMaxLength(1073741823);
            Property(x => x.ZZSZYFPJXSEMX).HasColumnName("ZZSZYFPJXSEMX").IsOptional().HasMaxLength(1073741823);
            Property(x => x.SpecialInvoiceTaxTotal).HasColumnName("SPECIALINVOICETAXTOTAL").IsOptional().HasPrecision(18,2);
            Property(x => x.ZGBMQZYJ).HasColumnName("ZGBMQZYJ").IsOptional();
            Property(x => x.ExpenseScourseID).HasColumnName("EXPENSESCOURSEID").IsOptional().HasMaxLength(50);
            Property(x => x.IsIncludedOverseaFee).HasColumnName("ISINCLUDEDOVERSEAFEE").IsOptional().HasMaxLength(50);
            Property(x => x.IsESHaveChildNode).HasColumnName("ISESHAVECHILDNODE").IsOptional().HasMaxLength(50);
            Property(x => x.AdvertiserDeptProject).HasColumnName("ADVERTISERDEPTPROJECT").IsOptional().HasMaxLength(50);
            Property(x => x.ParentDept).HasColumnName("PARENTDEPT").IsOptional().HasMaxLength(200);
            Property(x => x.ParentDeptName).HasColumnName("PARENTDEPTNAME").IsOptional().HasMaxLength(200);
            Property(x => x.CompetentDept).HasColumnName("COMPETENTDEPT").IsOptional().HasMaxLength(200);
            Property(x => x.CompetentDeptName).HasColumnName("COMPETENTDEPTNAME").IsOptional().HasMaxLength(200);
            Property(x => x.AdvertiserDeptType).HasColumnName("ADVERTISERDEPTTYPE").IsOptional().HasMaxLength(50);
            Property(x => x.ReimbursementType).HasColumnName("REIMBURSEMENTTYPE").IsOptional().HasMaxLength(200);
            Property(x => x.ReimbursementClass).HasColumnName("REIMBURSEMENTCLASS").IsOptional().HasMaxLength(200);
            Property(x => x.ChargerUser).HasColumnName("CHARGERUSER").IsOptional().HasMaxLength(50);
            Property(x => x.ChargerUserName).HasColumnName("CHARGERUSERNAME").IsOptional().HasMaxLength(50);
            Property(x => x.DeptInfo).HasColumnName("DEPTINFO").IsOptional().HasMaxLength(200);
            Property(x => x.DeptInfoName).HasColumnName("DEPTINFONAME").IsOptional().HasMaxLength(200);
            Property(x => x.Attachments).HasColumnName("ATTACHMENTS").IsOptional().HasMaxLength(500);
            Property(x => x.IsExceed).HasColumnName("ISEXCEED").IsOptional().HasMaxLength(200);
            Property(x => x.ApplyUser).HasColumnName("APPLYUSER").IsOptional().HasMaxLength(50);
            Property(x => x.ApplyUserName).HasColumnName("APPLYUSERNAME").IsOptional().HasMaxLength(50);
            Property(x => x.ApplyDept).HasColumnName("APPLYDEPT").IsOptional().HasMaxLength(200);
            Property(x => x.ApplyDeptName).HasColumnName("APPLYDEPTNAME").IsOptional().HasMaxLength(200);
            Property(x => x.ExpenseDate).HasColumnName("EXPENSEDATE").IsOptional();
            Property(x => x.UseBudgetYear).HasColumnName("USEBUDGETYEAR").IsOptional().HasMaxLength(50);
            Property(x => x.BudgetAmount).HasColumnName("BUDGETAMOUNT").IsOptional().HasPrecision(18,2);
            Property(x => x.UsedBudgetAmount).HasColumnName("USEDBUDGETAMOUNT").IsOptional().HasPrecision(18,2);
            Property(x => x.ProcessExpensesAmount).HasColumnName("PROCESSEXPENSESAMOUNT").IsOptional().HasPrecision(18,2);
            Property(x => x.RemainingBudgetAmount).HasColumnName("REMAININGBUDGETAMOUNT").IsOptional().HasPrecision(18,2);
            Property(x => x.BelongBranch).HasColumnName("BELONGBRANCH").IsOptional().HasMaxLength(200);
            Property(x => x.CostIncludedBranch).HasColumnName("COSTINCLUDEDBRANCH").IsOptional().HasMaxLength(200);
            Property(x => x.DBCNQZYJ).HasColumnName("DBCNQZYJ").IsOptional();
            Property(x => x.DBLDQZYJ).HasColumnName("DBLDQZYJ").IsOptional();
            Property(x => x.DWLDQZYJ).HasColumnName("DWLDQZYJ").IsOptional();
            Property(x => x.CostIncludedBranchName).HasColumnName("COSTINCLUDEDBRANCHNAME").IsOptional().HasMaxLength(200);
            Property(x => x.BelongBranchName).HasColumnName("BELONGBRANCHNAME").IsOptional().HasMaxLength(200);
            Property(x => x.GHQZYJ).HasColumnName("GHQZYJ").IsOptional();
            Property(x => x.GHBGSBCQZYJ).HasColumnName("GHBGSBCQZYJ").IsOptional();
            Property(x => x.GHZXQZYJ).HasColumnName("GHZXQZYJ").IsOptional();
            Property(x => x.SJBXRQZ).HasColumnName("SJBXRQZ").IsOptional();
            Property(x => x.TotalWithholdVATAMount).HasColumnName("TOTALWITHHOLDVATAMOUNT").IsOptional().HasPrecision(18,2);
            Property(x => x.LaborCostsType).HasColumnName("LABORCOSTSTYPE").IsOptional().HasMaxLength(200);
            Property(x => x.InvoiceAmount).HasColumnName("INVOICEAMOUNT").IsOptional().HasPrecision(18,2);
            Property(x => x.CWBGSSP).HasColumnName("CWBGSSP").IsOptional();
            Property(x => x.CWBGSSPSJ).HasColumnName("CWBGSSPSJ").IsOptional();
            Property(x => x.PaymentSchedule).HasColumnName("PAYMENTSCHEDULE").IsOptional().HasMaxLength(1073741823);
            Property(x => x.EquipmentInventory).HasColumnName("EQUIPMENTINVENTORY").IsOptional().HasMaxLength(1073741823);
            Property(x => x.XXZXLDQZYJ).HasColumnName("XXZXLDQZYJ").IsOptional();
            Property(x => x.Position).HasColumnName("POSITION").IsOptional().HasMaxLength(200);
            Property(x => x.WorkNo).HasColumnName("WORKNO").IsOptional().HasMaxLength(50);
            Property(x => x.CostIncludedDept).HasColumnName("COSTINCLUDEDDEPT").IsOptional().HasMaxLength(200);
            Property(x => x.CostIncludedDeptName).HasColumnName("COSTINCLUDEDDEPTNAME").IsOptional().HasMaxLength(200);
            Property(x => x.ActualTravelDays).HasColumnName("ACTUALTRAVELDAYS").IsOptional();
            Property(x => x.YPZSTSHJ).HasColumnName("YPZSTSHJ").IsOptional();
            Property(x => x.WPZSTSHJ).HasColumnName("WPZSTSHJ").IsOptional();
            Property(x => x.YPZSFHJ).HasColumnName("YPZSFHJ").IsOptional().HasPrecision(18,2);
            Property(x => x.YPZSJYJL).HasColumnName("YPZSJYJL").IsOptional().HasPrecision(18,2);
            Property(x => x.WPZSJYJL).HasColumnName("WPZSJYJL").IsOptional().HasPrecision(18,2);
            Property(x => x.JTFHJ).HasColumnName("JTFHJ").IsOptional().HasPrecision(18,2);
            Property(x => x.TravelRecordInfo).HasColumnName("TRAVELRECORDINFO").IsOptional().HasMaxLength(1073741823);
            Property(x => x.ProjectInfo).HasColumnName("PROJECTINFO").IsOptional().HasMaxLength(1073741823);
            Property(x => x.DomesticExpenseDateStart).HasColumnName("DOMESTICEXPENSEDATESTART").IsOptional();
            Property(x => x.DomesticExpenseDateEnd).HasColumnName("DOMESTICEXPENSEDATEEND").IsOptional();
            Property(x => x.TravelRecordDate).HasColumnName("TRAVELRECORDDATE").IsOptional();
            Property(x => x.DeductionDays).HasColumnName("DEDUCTIONDAYS").IsOptional();
            Property(x => x.TravelDays).HasColumnName("TRAVELDAYS").IsOptional();
            Property(x => x.GNYPZSMTJYJLY).HasColumnName("GNYPZSMTJYJLY").IsOptional().HasPrecision(18,2);
            Property(x => x.SBSXZSFYY).HasColumnName("SBSXZSFYY").IsOptional().HasPrecision(18,2);
            Property(x => x.SNJTFTS).HasColumnName("SNJTFTS").IsOptional();
            Property(x => x.SNJTFKJTS).HasColumnName("SNJTFKJTS").IsOptional();
            Property(x => x.HSBTTS).HasColumnName("HSBTTS").IsOptional();
            Property(x => x.CGQSSJ).HasColumnName("CGQSSJ").IsOptional();
            Property(x => x.CGJSSJ).HasColumnName("CGJSSJ").IsOptional();
            Property(x => x.CGTS).HasColumnName("CGTS").IsOptional();
            Property(x => x.SXRY).HasColumnName("SXRY").IsOptional().HasMaxLength(2000);
            Property(x => x.SXRYName).HasColumnName("SXRYNAME").IsOptional().HasMaxLength(2000);
            Property(x => x.SXRYB).HasColumnName("SXRYB").IsOptional().HasMaxLength(1073741823);
            Property(x => x.GWFYMX).HasColumnName("GWFYMX").IsOptional().HasMaxLength(1073741823);
            Property(x => x.GNYPPJZSFY).HasColumnName("GNYPPJZSFY").IsOptional().HasPrecision(18,2);
            Property(x => x.PXTZHYTZ).HasColumnName("PXTZHYTZ").IsOptional().HasMaxLength(500);
            Property(x => x.SXRYBM).HasColumnName("SXRYBM").IsOptional().HasMaxLength(2000);
            Property(x => x.SXRYBMName).HasColumnName("SXRYBMNAME").IsOptional().HasMaxLength(2000);
            Property(x => x.TransportationStandard).HasColumnName("TRANSPORTATIONSTANDARD").IsOptional().HasMaxLength(500);
            Property(x => x.GNYPZSFSRewardStandard).HasColumnName("GNYPZSFSREWARDSTANDARD").IsOptional().HasMaxLength(1073741823);
            Property(x => x.GNWPZFSRewardStandard).HasColumnName("GNWPZFSREWARDSTANDARD").IsOptional().HasPrecision(18,2);
            Property(x => x.AutoDeleteSubItem_GWFYMX).HasColumnName("AUTODELETESUBITEM_GWFYMX").IsOptional().HasMaxLength(50);
        }
    }

    // S_EP_ReimbursementApply_BXRYBXCLFRQ
    internal partial class S_EP_ReimbursementApply_BXRYBXCLFRQConfiguration : EntityTypeConfiguration<S_EP_ReimbursementApply_BXRYBXCLFRQ>
    {
        public S_EP_ReimbursementApply_BXRYBXCLFRQConfiguration()
        {
			ToTable("S_EP_REIMBURSEMENTAPPLY_BXRYBXCLFRQ");
            HasKey(x => x.ID);

            Property(x => x.ID).HasColumnName("ID").IsRequired().HasMaxLength(50);
            Property(x => x.S_EP_ReimbursementApplyID).HasColumnName("S_EP_REIMBURSEMENTAPPLYID").IsOptional().HasMaxLength(50);
            Property(x => x.SortIndex).HasColumnName("SORTINDEX").IsOptional();
            Property(x => x.IsReleased).HasColumnName("ISRELEASED").IsOptional().HasMaxLength(1);
            Property(x => x.Advertiser).HasColumnName("ADVERTISER").IsOptional().HasMaxLength(50);
            Property(x => x.AdvertiserName).HasColumnName("ADVERTISERNAME").IsOptional().HasMaxLength(50);
            Property(x => x.StartingDate).HasColumnName("STARTINGDATE").IsOptional();
            Property(x => x.ArrivedDate).HasColumnName("ARRIVEDDATE").IsOptional();
            Property(x => x.ReimbursementFormCode).HasColumnName("REIMBURSEMENTFORMCODE").IsOptional().HasMaxLength(200);

            // Foreign keys
            HasOptional(a => a.S_EP_ReimbursementApply).WithMany(b => b.S_EP_ReimbursementApply_BXRYBXCLFRQ).HasForeignKey(c => c.S_EP_ReimbursementApplyID); // FK_S_EP_ReimbursementApply_BXRYBXCLFRQ_S_EP_ReimbursementApply
        }
    }

    // S_EP_ReimbursementApply_DeptDetail
    internal partial class S_EP_ReimbursementApply_DeptDetailConfiguration : EntityTypeConfiguration<S_EP_ReimbursementApply_DeptDetail>
    {
        public S_EP_ReimbursementApply_DeptDetailConfiguration()
        {
			ToTable("S_EP_REIMBURSEMENTAPPLY_DEPTDETAIL");
            HasKey(x => x.ID);

            Property(x => x.ID).HasColumnName("ID").IsRequired().HasMaxLength(50);
            Property(x => x.S_EP_ReimbursementApplyID).HasColumnName("S_EP_REIMBURSEMENTAPPLYID").IsOptional().HasMaxLength(50);
            Property(x => x.SortIndex).HasColumnName("SORTINDEX").IsOptional();
            Property(x => x.IsReleased).HasColumnName("ISRELEASED").IsOptional().HasMaxLength(1);
            Property(x => x.Dept).HasColumnName("DEPT").IsOptional().HasMaxLength(200);
            Property(x => x.DeptName).HasColumnName("DEPTNAME").IsOptional().HasMaxLength(200);
            Property(x => x.Amount).HasColumnName("AMOUNT").IsOptional().HasPrecision(18,2);

            // Foreign keys
            HasOptional(a => a.S_EP_ReimbursementApply).WithMany(b => b.S_EP_ReimbursementApply_DeptDetail).HasForeignKey(c => c.S_EP_ReimbursementApplyID); // FK_T_RM_ReimbursementForm_DeptDetail_T_RM_ReimbursementForm
        }
    }

    // S_EP_ReimbursementApply_Details
    internal partial class S_EP_ReimbursementApply_DetailsConfiguration : EntityTypeConfiguration<S_EP_ReimbursementApply_Details>
    {
        public S_EP_ReimbursementApply_DetailsConfiguration()
        {
			ToTable("S_EP_REIMBURSEMENTAPPLY_DETAILS");
            HasKey(x => x.ID);

            Property(x => x.ID).HasColumnName("ID").IsRequired().HasMaxLength(50);
            Property(x => x.S_EP_ReimbursementApplyID).HasColumnName("S_EP_REIMBURSEMENTAPPLYID").IsOptional().HasMaxLength(50);
            Property(x => x.SortIndex).HasColumnName("SORTINDEX").IsOptional();
            Property(x => x.IsReleased).HasColumnName("ISRELEASED").IsOptional().HasMaxLength(1);
            Property(x => x.TwoExpenseScourse).HasColumnName("TWOEXPENSESCOURSE").IsOptional().HasMaxLength(200);
            Property(x => x.ExpenseDate).HasColumnName("EXPENSEDATE").IsOptional();
            Property(x => x.CostAmount).HasColumnName("COSTAMOUNT").IsOptional().HasPrecision(18,2);
            Property(x => x.ExpenseSite).HasColumnName("EXPENSESITE").IsOptional().HasMaxLength(200);
            Property(x => x.Reason).HasColumnName("REASON").IsOptional().HasMaxLength(500);
            Property(x => x.ThreeExpenseScourse).HasColumnName("THREEEXPENSESCOURSE").IsOptional().HasMaxLength(200);
            Property(x => x.ExpenseCountry).HasColumnName("EXPENSECOUNTRY").IsOptional().HasMaxLength(200);
            Property(x => x.Currency).HasColumnName("CURRENCY").IsOptional().HasMaxLength(200);
            Property(x => x.ExchangeRate).HasColumnName("EXCHANGERATE").IsOptional().HasMaxLength(200);
            Property(x => x.TranslatedRMBAmount).HasColumnName("TRANSLATEDRMBAMOUNT").IsOptional().HasPrecision(18,2);
            Property(x => x.OneExpenseScourseID).HasColumnName("ONEEXPENSESCOURSEID").IsOptional().HasMaxLength(50);
            Property(x => x.TwoExpenseScourseCode).HasColumnName("TWOEXPENSESCOURSECODE").IsOptional().HasMaxLength(50);
            Property(x => x.TwoExpenseScourseID).HasColumnName("TWOEXPENSESCOURSEID").IsOptional().HasMaxLength(50);
            Property(x => x.IsTwoESHaveChildNode).HasColumnName("ISTWOESHAVECHILDNODE").IsOptional().HasMaxLength(50);
            Property(x => x.ThreeExpenseScourseCode).HasColumnName("THREEEXPENSESCOURSECODE").IsOptional().HasMaxLength(50);
            Property(x => x.ThreeExpenseScourseID).HasColumnName("THREEEXPENSESCOURSEID").IsOptional().HasMaxLength(50);
            Property(x => x.Accompany).HasColumnName("ACCOMPANY").IsOptional();
            Property(x => x.Guests).HasColumnName("GUESTS").IsOptional();
            Property(x => x.UserName).HasColumnName("USERNAME").IsOptional().HasMaxLength(50);
            Property(x => x.CertificateType).HasColumnName("CERTIFICATETYPE").IsOptional().HasMaxLength(50);
            Property(x => x.IDCard).HasColumnName("IDCARD").IsOptional().HasMaxLength(200);
            Property(x => x.IsNewPerson).HasColumnName("ISNEWPERSON").IsOptional().HasMaxLength(50);
            Property(x => x.UserPhone).HasColumnName("USERPHONE").IsOptional().HasMaxLength(200);
            Property(x => x.CurrentMonthReimburseCount).HasColumnName("CURRENTMONTHREIMBURSECOUNT").IsOptional();
            Property(x => x.HiringTime).HasColumnName("HIRINGTIME").IsOptional();
            Property(x => x.TaxAmount).HasColumnName("TAXAMOUNT").IsOptional().HasPrecision(18,2);
            Property(x => x.ActualLaborCost).HasColumnName("ACTUALLABORCOST").IsOptional().HasPrecision(18,2);
            Property(x => x.AccountName).HasColumnName("ACCOUNTNAME").IsOptional().HasMaxLength(200);
            Property(x => x.OpenBank).HasColumnName("OPENBANK").IsOptional().HasMaxLength(200);
            Property(x => x.CardNumber).HasColumnName("CARDNUMBER").IsOptional().HasMaxLength(200);
            Property(x => x.Remark).HasColumnName("REMARK").IsOptional().HasMaxLength(500);
            Property(x => x.CreateUser).HasColumnName("CREATEUSER").IsOptional().HasMaxLength(50);
            Property(x => x.CreateUserName).HasColumnName("CREATEUSERNAME").IsOptional().HasMaxLength(50);

            // Foreign keys
            HasOptional(a => a.S_EP_ReimbursementApply).WithMany(b => b.S_EP_ReimbursementApply_Details).HasForeignKey(c => c.S_EP_ReimbursementApplyID); // FK_S_EP_ReimbursementApply_Details_S_EP_ReimbursementApply
        }
    }

    // S_EP_ReimbursementApply_ElectronicTicket
    internal partial class S_EP_ReimbursementApply_ElectronicTicketConfiguration : EntityTypeConfiguration<S_EP_ReimbursementApply_ElectronicTicket>
    {
        public S_EP_ReimbursementApply_ElectronicTicketConfiguration()
        {
			ToTable("S_EP_REIMBURSEMENTAPPLY_ELECTRONICTICKET");
            HasKey(x => x.ID);

            Property(x => x.ID).HasColumnName("ID").IsRequired().HasMaxLength(50);
            Property(x => x.S_EP_ReimbursementApplyID).HasColumnName("S_EP_REIMBURSEMENTAPPLYID").IsOptional().HasMaxLength(50);
            Property(x => x.SortIndex).HasColumnName("SORTINDEX").IsOptional();
            Property(x => x.IsReleased).HasColumnName("ISRELEASED").IsOptional().HasMaxLength(1);
            Property(x => x.ElectronicInvoiceNumber).HasColumnName("ELECTRONICINVOICENUMBER").IsOptional().HasMaxLength(200);

            // Foreign keys
            HasOptional(a => a.S_EP_ReimbursementApply).WithMany(b => b.S_EP_ReimbursementApply_ElectronicTicket).HasForeignKey(c => c.S_EP_ReimbursementApplyID); // FK_S_EP_ReimbursementApply_ElectronicTicket_S_EP_ReimbursementApply
        }
    }

    // S_EP_ReimbursementApply_EquipmentInventory
    internal partial class S_EP_ReimbursementApply_EquipmentInventoryConfiguration : EntityTypeConfiguration<S_EP_ReimbursementApply_EquipmentInventory>
    {
        public S_EP_ReimbursementApply_EquipmentInventoryConfiguration()
        {
			ToTable("S_EP_REIMBURSEMENTAPPLY_EQUIPMENTINVENTORY");
            HasKey(x => x.ID);

            Property(x => x.ID).HasColumnName("ID").IsRequired().HasMaxLength(50);
            Property(x => x.S_EP_ReimbursementApplyID).HasColumnName("S_EP_REIMBURSEMENTAPPLYID").IsOptional().HasMaxLength(50);
            Property(x => x.SortIndex).HasColumnName("SORTINDEX").IsOptional();
            Property(x => x.IsReleased).HasColumnName("ISRELEASED").IsOptional().HasMaxLength(1);
            Property(x => x.Name).HasColumnName("NAME").IsOptional().HasMaxLength(200);
            Property(x => x.ProductName).HasColumnName("PRODUCTNAME").IsOptional().HasMaxLength(200);
            Property(x => x.Price).HasColumnName("PRICE").IsOptional().HasPrecision(18,2);
            Property(x => x.Quantity).HasColumnName("QUANTITY").IsOptional();

            // Foreign keys
            HasOptional(a => a.S_EP_ReimbursementApply).WithMany(b => b.S_EP_ReimbursementApply_EquipmentInventory).HasForeignKey(c => c.S_EP_ReimbursementApplyID); // FK_S_EP_ReimbursementApply_EquipmentInventory_S_EP_ReimbursementApply
        }
    }

    // S_EP_ReimbursementApply_GNFYJTF
    internal partial class S_EP_ReimbursementApply_GNFYJTFConfiguration : EntityTypeConfiguration<S_EP_ReimbursementApply_GNFYJTF>
    {
        public S_EP_ReimbursementApply_GNFYJTFConfiguration()
        {
			ToTable("S_EP_REIMBURSEMENTAPPLY_GNFYJTF");
            HasKey(x => x.ID);

            Property(x => x.ID).HasColumnName("ID").IsRequired().HasMaxLength(50);
            Property(x => x.S_EP_ReimbursementApplyID).HasColumnName("S_EP_REIMBURSEMENTAPPLYID").IsOptional().HasMaxLength(50);
            Property(x => x.SortIndex).HasColumnName("SORTINDEX").IsOptional();
            Property(x => x.IsReleased).HasColumnName("ISRELEASED").IsOptional().HasMaxLength(1);
            Property(x => x.StartingPlace).HasColumnName("STARTINGPLACE").IsOptional().HasMaxLength(200);
            Property(x => x.ArrivedPlace).HasColumnName("ARRIVEDPLACE").IsOptional().HasMaxLength(200);
            Property(x => x.StartingDate).HasColumnName("STARTINGDATE").IsOptional();
            Property(x => x.ArrivedDate).HasColumnName("ARRIVEDDATE").IsOptional();
            Property(x => x.InvoiceType).HasColumnName("INVOICETYPE").IsOptional().HasMaxLength(200);
            Property(x => x.TransportationStandard).HasColumnName("TRANSPORTATIONSTANDARD").IsOptional().HasMaxLength(500);
            Property(x => x.Transportation).HasColumnName("TRANSPORTATION").IsOptional().HasMaxLength(200);
            Property(x => x.SFTYCB).HasColumnName("SFTYCB").IsOptional().HasMaxLength(50);
            Property(x => x.TransportationFee).HasColumnName("TRANSPORTATIONFEE").IsOptional().HasPrecision(18,2);
            Property(x => x.TaxRate).HasColumnName("TAXRATE").IsOptional();
            Property(x => x.TaxAmount).HasColumnName("TAXAMOUNT").IsOptional().HasPrecision(18,2);
            Property(x => x.SavingSubsidy).HasColumnName("SAVINGSUBSIDY").IsOptional().HasPrecision(18,2);
            Property(x => x.ConfirmTransportationFee).HasColumnName("CONFIRMTRANSPORTATIONFEE").IsOptional().HasPrecision(18,2);
            Property(x => x.SFCB).HasColumnName("SFCB").IsOptional().HasMaxLength(50);

            // Foreign keys
            HasOptional(a => a.S_EP_ReimbursementApply).WithMany(b => b.S_EP_ReimbursementApply_GNFYJTF).HasForeignKey(c => c.S_EP_ReimbursementApplyID); // FK_S_EP_ReimbursementApply_GNFYJTF_S_EP_ReimbursementApply
        }
    }

    // S_EP_ReimbursementApply_GNYPZSFSRewardStandard
    internal partial class S_EP_ReimbursementApply_GNYPZSFSRewardStandardConfiguration : EntityTypeConfiguration<S_EP_ReimbursementApply_GNYPZSFSRewardStandard>
    {
        public S_EP_ReimbursementApply_GNYPZSFSRewardStandardConfiguration()
        {
			ToTable("S_EP_REIMBURSEMENTAPPLY_GNYPZSFSREWARDSTANDARD");
            HasKey(x => x.ID);

            Property(x => x.ID).HasColumnName("ID").IsRequired().HasMaxLength(50);
            Property(x => x.S_EP_ReimbursementApplyID).HasColumnName("S_EP_REIMBURSEMENTAPPLYID").IsOptional().HasMaxLength(50);
            Property(x => x.SortIndex).HasColumnName("SORTINDEX").IsOptional();
            Property(x => x.IsReleased).HasColumnName("ISRELEASED").IsOptional().HasMaxLength(1);
            Property(x => x.PJRJYJLEQ).HasColumnName("PJRJYJLEQ").IsOptional().HasPrecision(18,2);
            Property(x => x.PJRJYJLEZ).HasColumnName("PJRJYJLEZ").IsOptional().HasPrecision(18,2);
            Property(x => x.Reward).HasColumnName("REWARD").IsOptional();

            // Foreign keys
            HasOptional(a => a.S_EP_ReimbursementApply).WithMany(b => b.S_EP_ReimbursementApply_GNYPZSFSRewardStandard).HasForeignKey(c => c.S_EP_ReimbursementApplyID); // FK_S_EP_ReimbursementApply_GNYPZSFSRewardStandard_S_EP_ReimbursementApply
        }
    }

    // S_EP_ReimbursementApply_GWFYMX
    internal partial class S_EP_ReimbursementApply_GWFYMXConfiguration : EntityTypeConfiguration<S_EP_ReimbursementApply_GWFYMX>
    {
        public S_EP_ReimbursementApply_GWFYMXConfiguration()
        {
			ToTable("S_EP_REIMBURSEMENTAPPLY_GWFYMX");
            HasKey(x => x.ID);

            Property(x => x.ID).HasColumnName("ID").IsRequired().HasMaxLength(50);
            Property(x => x.S_EP_ReimbursementApplyID).HasColumnName("S_EP_REIMBURSEMENTAPPLYID").IsOptional().HasMaxLength(50);
            Property(x => x.SortIndex).HasColumnName("SORTINDEX").IsOptional();
            Property(x => x.IsReleased).HasColumnName("ISRELEASED").IsOptional().HasMaxLength(1);
            Property(x => x.TravelType).HasColumnName("TRAVELTYPE").IsOptional().HasMaxLength(200);
            Property(x => x.TravelUser).HasColumnName("TRAVELUSER").IsOptional().HasMaxLength(50);
            Property(x => x.TravelUserName).HasColumnName("TRAVELUSERNAME").IsOptional().HasMaxLength(50);
            Property(x => x.Country).HasColumnName("COUNTRY").IsOptional().HasMaxLength(50);
            Property(x => x.StartingPlace).HasColumnName("STARTINGPLACE").IsOptional().HasMaxLength(50);
            Property(x => x.ArrivedPlace).HasColumnName("ARRIVEDPLACE").IsOptional().HasMaxLength(50);
            Property(x => x.DepartureDate).HasColumnName("DEPARTUREDATE").IsOptional();
            Property(x => x.ArrivaledDate).HasColumnName("ARRIVALEDDATE").IsOptional();
            Property(x => x.LeftDate).HasColumnName("LEFTDATE").IsOptional();
            Property(x => x.Days).HasColumnName("DAYS").IsOptional();
            Property(x => x.JTFSJJE).HasColumnName("JTFSJJE").IsOptional().HasPrecision(18,2);
            Property(x => x.JTFBZ).HasColumnName("JTFBZ").IsOptional().HasMaxLength(50);
            Property(x => x.JTFHL).HasColumnName("JTFHL").IsOptional().HasPrecision(18,2);
            Property(x => x.JTFZHRMBJE).HasColumnName("JTFZHRMBJE").IsOptional().HasPrecision(18,2);
            Property(x => x.ZCBTMYBTBZ).HasColumnName("ZCBTMYBTBZ").IsOptional().HasPrecision(18,2);
            Property(x => x.ZCBTMYTS).HasColumnName("ZCBTMYTS").IsOptional();
            Property(x => x.ZCBTMYZHRMBJE).HasColumnName("ZCBTMYZHRMBJE").IsOptional().HasPrecision(18,2);
            Property(x => x.ZSFSJJE).HasColumnName("ZSFSJJE").IsOptional().HasPrecision(18,2);
            Property(x => x.ZSFBZ).HasColumnName("ZSFBZ").IsOptional().HasMaxLength(50);
            Property(x => x.ZSFHL).HasColumnName("ZSFHL").IsOptional().HasPrecision(18,2);
            Property(x => x.ZSFZHRMBJEY).HasColumnName("ZSFZHRMBJEY").IsOptional().HasPrecision(18,2);
            Property(x => x.ZSFYPZSTS).HasColumnName("ZSFYPZSTS").IsOptional();
            Property(x => x.ZSFWPZSTS).HasColumnName("ZSFWPZSTS").IsOptional();
            Property(x => x.ZSFYPPJZSFTY).HasColumnName("ZSFYPPJZSFTY").IsOptional().HasPrecision(18,2);
            Property(x => x.ZSFYPJYJLY).HasColumnName("ZSFYPJYJLY").IsOptional().HasPrecision(18,2);
            Property(x => x.ZSFJYJLHJY).HasColumnName("ZSFJYJLHJY").IsOptional().HasPrecision(18,2);
            Property(x => x.HYFSJJE).HasColumnName("HYFSJJE").IsOptional().HasPrecision(18,2);
            Property(x => x.HYFBZ).HasColumnName("HYFBZ").IsOptional().HasMaxLength(50);
            Property(x => x.HYFHL).HasColumnName("HYFHL").IsOptional().HasPrecision(18,2);
            Property(x => x.HYFZHRMBJE).HasColumnName("HYFZHRMBJE").IsOptional().HasPrecision(18,2);
            Property(x => x.PXFSJJE).HasColumnName("PXFSJJE").IsOptional().HasPrecision(18,2);
            Property(x => x.PXFBZ).HasColumnName("PXFBZ").IsOptional().HasMaxLength(50);
            Property(x => x.PXFHL).HasColumnName("PXFHL").IsOptional().HasPrecision(18,2);
            Property(x => x.PXFZHRMBJE).HasColumnName("PXFZHRMBJE").IsOptional().HasPrecision(18,2);
            Property(x => x.QTFYSJJE).HasColumnName("QTFYSJJE").IsOptional().HasPrecision(18,2);
            Property(x => x.QTFYBZ).HasColumnName("QTFYBZ").IsOptional().HasMaxLength(50);
            Property(x => x.QTFYHL).HasColumnName("QTFYHL").IsOptional().HasPrecision(18,2);
            Property(x => x.QTFYZHRMBJE).HasColumnName("QTFYZHRMBJE").IsOptional().HasPrecision(18,2);
            Property(x => x.QTFYSM).HasColumnName("QTFYSM").IsOptional().HasMaxLength(200);
            Property(x => x.HSBTBTBZ).HasColumnName("HSBTBTBZ").IsOptional().HasPrecision(18,2);
            Property(x => x.HSBTZHRMBJE).HasColumnName("HSBTZHRMBJE").IsOptional().HasPrecision(18,2);
            Property(x => x.GZFBTBZ).HasColumnName("GZFBTBZ").IsOptional().HasPrecision(18,2);
            Property(x => x.GZFZHRMBJE).HasColumnName("GZFZHRMBJE").IsOptional().HasPrecision(18,2);
            Property(x => x.TotalCostAmount).HasColumnName("TOTALCOSTAMOUNT").IsOptional().HasPrecision(18,2);
            Property(x => x.ZSFWPJYJLY).HasColumnName("ZSFWPJYJLY").IsOptional().HasPrecision(18,2);

            // Foreign keys
            HasOptional(a => a.S_EP_ReimbursementApply).WithMany(b => b.S_EP_ReimbursementApply_GWFYMX).HasForeignKey(c => c.S_EP_ReimbursementApplyID); // FK_S_EP_ReimbursementApply_GWFYMX_S_EP_ReimbursementApply
        }
    }

    // S_EP_ReimbursementApply_LoanInfo
    internal partial class S_EP_ReimbursementApply_LoanInfoConfiguration : EntityTypeConfiguration<S_EP_ReimbursementApply_LoanInfo>
    {
        public S_EP_ReimbursementApply_LoanInfoConfiguration()
        {
			ToTable("S_EP_REIMBURSEMENTAPPLY_LOANINFO");
            HasKey(x => x.ID);

            Property(x => x.ID).HasColumnName("ID").IsRequired().HasMaxLength(50);
            Property(x => x.S_EP_ReimbursementApplyID).HasColumnName("S_EP_REIMBURSEMENTAPPLYID").IsOptional().HasMaxLength(50);
            Property(x => x.SortIndex).HasColumnName("SORTINDEX").IsOptional();
            Property(x => x.IsReleased).HasColumnName("ISRELEASED").IsOptional().HasMaxLength(1);
            Property(x => x.LoanApplyID).HasColumnName("LOANAPPLYID").IsOptional().HasMaxLength(50);
            Property(x => x.BorrowFormNumber).HasColumnName("BORROWFORMNUMBER").IsOptional().HasMaxLength(50);
            Property(x => x.BorrowDate).HasColumnName("BORROWDATE").IsOptional();
            Property(x => x.ActualLoanAmount).HasColumnName("ACTUALLOANAMOUNT").IsOptional().HasPrecision(18,2);
            Property(x => x.AmountRepaid).HasColumnName("AMOUNTREPAID").IsOptional().HasPrecision(18,2);
            Property(x => x.NoRepayAmount).HasColumnName("NOREPAYAMOUNT").IsOptional().HasPrecision(18,2);
            Property(x => x.ThisReversalAmount).HasColumnName("THISREVERSALAMOUNT").IsOptional().HasPrecision(18,2);
            Property(x => x.LoanReason).HasColumnName("LOANREASON").IsOptional().HasMaxLength(500);
            Property(x => x.BorrowTaskNature).HasColumnName("BORROWTASKNATURE").IsOptional().HasMaxLength(200);
            Property(x => x.BorrowType).HasColumnName("BORROWTYPE").IsOptional().HasMaxLength(200);
            Property(x => x.JKSY).HasColumnName("JKSY").IsOptional().HasMaxLength(500);

            // Foreign keys
            HasOptional(a => a.S_EP_ReimbursementApply).WithMany(b => b.S_EP_ReimbursementApply_LoanInfo).HasForeignKey(c => c.S_EP_ReimbursementApplyID); // FK_S_EP_ReimbursementApply_LoanInfo_S_EP_ReimbursementApply
        }
    }

    // S_EP_ReimbursementApply_OtherFee
    internal partial class S_EP_ReimbursementApply_OtherFeeConfiguration : EntityTypeConfiguration<S_EP_ReimbursementApply_OtherFee>
    {
        public S_EP_ReimbursementApply_OtherFeeConfiguration()
        {
			ToTable("S_EP_REIMBURSEMENTAPPLY_OTHERFEE");
            HasKey(x => x.ID);

            Property(x => x.ID).HasColumnName("ID").IsRequired().HasMaxLength(50);
            Property(x => x.S_EP_ReimbursementApplyID).HasColumnName("S_EP_REIMBURSEMENTAPPLYID").IsOptional().HasMaxLength(50);
            Property(x => x.SortIndex).HasColumnName("SORTINDEX").IsOptional();
            Property(x => x.IsReleased).HasColumnName("ISRELEASED").IsOptional().HasMaxLength(1);
            Property(x => x.CostCategory).HasColumnName("COSTCATEGORY").IsOptional().HasMaxLength(200);
            Property(x => x.CostAmount).HasColumnName("COSTAMOUNT").IsOptional().HasPrecision(18,2);
            Property(x => x.Remark).HasColumnName("REMARK").IsOptional().HasMaxLength(200);

            // Foreign keys
            HasOptional(a => a.S_EP_ReimbursementApply).WithMany(b => b.S_EP_ReimbursementApply_OtherFee).HasForeignKey(c => c.S_EP_ReimbursementApplyID); // FK_S_EP_ReimbursementApply_OtherFee_S_EP_ReimbursementApply
        }
    }

    // S_EP_ReimbursementApply_PaymentSchedule
    internal partial class S_EP_ReimbursementApply_PaymentScheduleConfiguration : EntityTypeConfiguration<S_EP_ReimbursementApply_PaymentSchedule>
    {
        public S_EP_ReimbursementApply_PaymentScheduleConfiguration()
        {
			ToTable("S_EP_REIMBURSEMENTAPPLY_PAYMENTSCHEDULE");
            HasKey(x => x.ID);

            Property(x => x.ID).HasColumnName("ID").IsRequired().HasMaxLength(50);
            Property(x => x.S_EP_ReimbursementApplyID).HasColumnName("S_EP_REIMBURSEMENTAPPLYID").IsOptional().HasMaxLength(50);
            Property(x => x.SortIndex).HasColumnName("SORTINDEX").IsOptional();
            Property(x => x.IsReleased).HasColumnName("ISRELEASED").IsOptional().HasMaxLength(1);
            Property(x => x.PaymentPlanCode).HasColumnName("PAYMENTPLANCODE").IsOptional().HasMaxLength(50);
            Property(x => x.PaymentPlanName).HasColumnName("PAYMENTPLANNAME").IsOptional().HasMaxLength(200);
            Property(x => x.PaymentPlanDate).HasColumnName("PAYMENTPLANDATE").IsOptional();
            Property(x => x.PlanPaymentAmount).HasColumnName("PLANPAYMENTAMOUNT").IsOptional().HasPrecision(18,2);

            // Foreign keys
            HasOptional(a => a.S_EP_ReimbursementApply).WithMany(b => b.S_EP_ReimbursementApply_PaymentSchedule).HasForeignKey(c => c.S_EP_ReimbursementApplyID); // FK_S_EP_ReimbursementApply_PaymentSchedule_S_EP_ReimbursementApply
        }
    }

    // S_EP_ReimbursementApply_ProjectInfo
    internal partial class S_EP_ReimbursementApply_ProjectInfoConfiguration : EntityTypeConfiguration<S_EP_ReimbursementApply_ProjectInfo>
    {
        public S_EP_ReimbursementApply_ProjectInfoConfiguration()
        {
			ToTable("S_EP_REIMBURSEMENTAPPLY_PROJECTINFO");
            HasKey(x => x.ID);

            Property(x => x.ID).HasColumnName("ID").IsRequired().HasMaxLength(50);
            Property(x => x.S_EP_ReimbursementApplyID).HasColumnName("S_EP_REIMBURSEMENTAPPLYID").IsOptional().HasMaxLength(50);
            Property(x => x.SortIndex).HasColumnName("SORTINDEX").IsOptional();
            Property(x => x.IsReleased).HasColumnName("ISRELEASED").IsOptional().HasMaxLength(1);
            Property(x => x.ProjectCode).HasColumnName("PROJECTCODE").IsOptional().HasMaxLength(50);
            Property(x => x.ProjectName).HasColumnName("PROJECTNAME").IsOptional().HasMaxLength(200);
            Property(x => x.ProjectDays).HasColumnName("PROJECTDAYS").IsOptional();
            Property(x => x.XCSJF).HasColumnName("XCSJF").IsOptional().HasPrecision(18,2);
            Property(x => x.PositionName).HasColumnName("POSITIONNAME").IsOptional().HasMaxLength(200);
            Property(x => x.PostSubsidyStandards).HasColumnName("POSTSUBSIDYSTANDARDS").IsOptional().HasPrecision(18,2);
            Property(x => x.PostSubsidyAmount).HasColumnName("POSTSUBSIDYAMOUNT").IsOptional().HasPrecision(18,2);
            Property(x => x.ProjectID).HasColumnName("PROJECTID").IsOptional().HasMaxLength(50);
            Property(x => x.ProjectManager).HasColumnName("PROJECTMANAGER").IsOptional().HasMaxLength(500);
            Property(x => x.ProjectManagerName).HasColumnName("PROJECTMANAGERNAME").IsOptional().HasMaxLength(500);
            Property(x => x.DeputyProjectManager).HasColumnName("DEPUTYPROJECTMANAGER").IsOptional().HasMaxLength(500);
            Property(x => x.DeputyProjectManagerName).HasColumnName("DEPUTYPROJECTMANAGERNAME").IsOptional().HasMaxLength(500);
            Property(x => x.XMFTDBXFYY).HasColumnName("XMFTDBXFYY").IsOptional().HasPrecision(18,2);

            // Foreign keys
            HasOptional(a => a.S_EP_ReimbursementApply).WithMany(b => b.S_EP_ReimbursementApply_ProjectInfo).HasForeignKey(c => c.S_EP_ReimbursementApplyID); // FK_S_EP_ReimbursementApply_ProjectInfo_S_EP_ReimbursementApply
        }
    }

    // S_EP_ReimbursementApply_SXRYB
    internal partial class S_EP_ReimbursementApply_SXRYBConfiguration : EntityTypeConfiguration<S_EP_ReimbursementApply_SXRYB>
    {
        public S_EP_ReimbursementApply_SXRYBConfiguration()
        {
			ToTable("S_EP_REIMBURSEMENTAPPLY_SXRYB");
            HasKey(x => x.ID);

            Property(x => x.ID).HasColumnName("ID").IsRequired().HasMaxLength(50);
            Property(x => x.S_EP_ReimbursementApplyID).HasColumnName("S_EP_REIMBURSEMENTAPPLYID").IsOptional().HasMaxLength(50);
            Property(x => x.SortIndex).HasColumnName("SORTINDEX").IsOptional();
            Property(x => x.IsReleased).HasColumnName("ISRELEASED").IsOptional().HasMaxLength(1);
            Property(x => x.ReimburseUser).HasColumnName("REIMBURSEUSER").IsOptional().HasMaxLength(50);
            Property(x => x.ReimburseUserDept).HasColumnName("REIMBURSEUSERDEPT").IsOptional().HasMaxLength(200);
            Property(x => x.ReimburseUserDeptName).HasColumnName("REIMBURSEUSERDEPTNAME").IsOptional().HasMaxLength(200);
            Property(x => x.TravelRecordCode).HasColumnName("TRAVELRECORDCODE").IsOptional().HasMaxLength(50);
            Property(x => x.TotalTravelDays).HasColumnName("TOTALTRAVELDAYS").IsOptional();
            Property(x => x.TotalTrafficFee).HasColumnName("TOTALTRAFFICFEE").IsOptional().HasPrecision(18,2);
            Property(x => x.ZCBTHJY).HasColumnName("ZCBTHJY").IsOptional().HasPrecision(18,2);
            Property(x => x.YPZSTS).HasColumnName("YPZSTS").IsOptional();
            Property(x => x.WPZSTS).HasColumnName("WPZSTS").IsOptional();
            Property(x => x.ZSFHJY).HasColumnName("ZSFHJY").IsOptional().HasPrecision(18,2);
            Property(x => x.ZSFJYJLHJY).HasColumnName("ZSFJYJLHJY").IsOptional().HasPrecision(18,2);
            Property(x => x.HSBTHJY).HasColumnName("HSBTHJY").IsOptional().HasPrecision(18,2);
            Property(x => x.GZFHJY).HasColumnName("GZFHJY").IsOptional().HasPrecision(18,2);
            Property(x => x.PXFHJY).HasColumnName("PXFHJY").IsOptional().HasPrecision(18,2);
            Property(x => x.HYFHJY).HasColumnName("HYFHJY").IsOptional().HasPrecision(18,2);
            Property(x => x.QTFYHJY).HasColumnName("QTFYHJY").IsOptional().HasPrecision(18,2);
            Property(x => x.RGDTBTY).HasColumnName("RGDTBTY").IsOptional().HasPrecision(18,2);
            Property(x => x.TotalCostAmount).HasColumnName("TOTALCOSTAMOUNT").IsOptional().HasPrecision(18,2);
            Property(x => x.TotalSubsidyAmount).HasColumnName("TOTALSUBSIDYAMOUNT").IsOptional().HasPrecision(18,2);
            Property(x => x.TotalAmount).HasColumnName("TOTALAMOUNT").IsOptional().HasPrecision(18,2);
            Property(x => x.ZSFYPJYJLY).HasColumnName("ZSFYPJYJLY").IsOptional().HasPrecision(18,2);
            Property(x => x.ZSFWPJYJLY).HasColumnName("ZSFWPJYJLY").IsOptional().HasPrecision(18,2);
            Property(x => x.ReimburseUserName).HasColumnName("REIMBURSEUSERNAME").IsOptional().HasMaxLength(50);
            Property(x => x.TravelRecordCodeName).HasColumnName("TRAVELRECORDCODENAME").IsOptional().HasMaxLength(50);
            Property(x => x.TravelRecordType).HasColumnName("TRAVELRECORDTYPE").IsOptional().HasMaxLength(50);

            // Foreign keys
            HasOptional(a => a.S_EP_ReimbursementApply).WithMany(b => b.S_EP_ReimbursementApply_SXRYB).HasForeignKey(c => c.S_EP_ReimbursementApplyID); // FK_S_EP_ReimbursementApply_SXRYB_S_EP_ReimbursementApply
        }
    }

    // S_EP_ReimbursementApply_TravelRecordInfo
    internal partial class S_EP_ReimbursementApply_TravelRecordInfoConfiguration : EntityTypeConfiguration<S_EP_ReimbursementApply_TravelRecordInfo>
    {
        public S_EP_ReimbursementApply_TravelRecordInfoConfiguration()
        {
			ToTable("S_EP_REIMBURSEMENTAPPLY_TRAVELRECORDINFO");
            HasKey(x => x.ID);

            Property(x => x.ID).HasColumnName("ID").IsRequired().HasMaxLength(50);
            Property(x => x.S_EP_ReimbursementApplyID).HasColumnName("S_EP_REIMBURSEMENTAPPLYID").IsOptional().HasMaxLength(50);
            Property(x => x.SortIndex).HasColumnName("SORTINDEX").IsOptional();
            Property(x => x.IsReleased).HasColumnName("ISRELEASED").IsOptional().HasMaxLength(1);
            Property(x => x.TravelRecordCode).HasColumnName("TRAVELRECORDCODE").IsOptional().HasMaxLength(50);
            Property(x => x.StartingPlace).HasColumnName("STARTINGPLACE").IsOptional().HasMaxLength(50);
            Property(x => x.TravelLocation).HasColumnName("TRAVELLOCATION").IsOptional().HasMaxLength(50);
            Property(x => x.TravelDays).HasColumnName("TRAVELDAYS").IsOptional();
            Property(x => x.TaskNature).HasColumnName("TASKNATURE").IsOptional().HasMaxLength(200);
            Property(x => x.StartDate).HasColumnName("STARTDATE").IsOptional();
            Property(x => x.PlanEndDate).HasColumnName("PLANENDDATE").IsOptional();
            Property(x => x.TravelRecordID).HasColumnName("TRAVELRECORDID").IsOptional().HasMaxLength(200);
            Property(x => x.ParentID).HasColumnName("PARENTID").IsOptional().HasMaxLength(50);
            Property(x => x.RecordDate).HasColumnName("RECORDDATE").IsOptional();

            // Foreign keys
            HasOptional(a => a.S_EP_ReimbursementApply).WithMany(b => b.S_EP_ReimbursementApply_TravelRecordInfo).HasForeignKey(c => c.S_EP_ReimbursementApplyID); // FK_S_EP_ReimbursementApply_TravelRecordInfo_S_EP_ReimbursementApply
        }
    }

    // S_EP_ReimbursementApply_ZZSZYFPJXSEMX
    internal partial class S_EP_ReimbursementApply_ZZSZYFPJXSEMXConfiguration : EntityTypeConfiguration<S_EP_ReimbursementApply_ZZSZYFPJXSEMX>
    {
        public S_EP_ReimbursementApply_ZZSZYFPJXSEMXConfiguration()
        {
			ToTable("S_EP_REIMBURSEMENTAPPLY_ZZSZYFPJXSEMX");
            HasKey(x => x.ID);

            Property(x => x.ID).HasColumnName("ID").IsRequired().HasMaxLength(50);
            Property(x => x.S_EP_ReimbursementApplyID).HasColumnName("S_EP_REIMBURSEMENTAPPLYID").IsOptional().HasMaxLength(50);
            Property(x => x.SortIndex).HasColumnName("SORTINDEX").IsOptional();
            Property(x => x.IsReleased).HasColumnName("ISRELEASED").IsOptional().HasMaxLength(1);
            Property(x => x.TaxAmount).HasColumnName("TAXAMOUNT").IsOptional().HasPrecision(18,2);

            // Foreign keys
            HasOptional(a => a.S_EP_ReimbursementApply).WithMany(b => b.S_EP_ReimbursementApply_ZZSZYFPJXSEMX).HasForeignKey(c => c.S_EP_ReimbursementApplyID); // FK_S_EP_ReimbursementApply_ZZSZYFPJXSEMX_S_EP_ReimbursementApply
        }
    }

    // S_F_DocumentFileAuthority
    internal partial class S_F_DocumentFileAuthorityConfiguration : EntityTypeConfiguration<S_F_DocumentFileAuthority>
    {
        public S_F_DocumentFileAuthorityConfiguration()
        {
			ToTable("S_F_DOCUMENTFILEAUTHORITY");
            HasKey(x => x.ID);

            Property(x => x.ID).HasColumnName("ID").IsRequired().HasMaxLength(50);
            Property(x => x.DocumentInfoID).HasColumnName("DOCUMENTINFOID").IsOptional().HasMaxLength(50);
            Property(x => x.AuthType).HasColumnName("AUTHTYPE").IsOptional().HasMaxLength(50);
            Property(x => x.RoleType).HasColumnName("ROLETYPE").IsOptional().HasMaxLength(50);
            Property(x => x.RoleCode).HasColumnName("ROLECODE").IsOptional().HasMaxLength(50);
            Property(x => x.IsParentAuth).HasColumnName("ISPARENTAUTH").IsOptional();

            // Foreign keys
            HasOptional(a => a.S_F_DocumentInfo).WithMany(b => b.S_F_DocumentFileAuthority).HasForeignKey(c => c.DocumentInfoID); // FK_S_F_DocumentFileAuthority_S_F_DocumentInfo
        }
    }

    // S_F_DocumentInfo
    internal partial class S_F_DocumentInfoConfiguration : EntityTypeConfiguration<S_F_DocumentInfo>
    {
        public S_F_DocumentInfoConfiguration()
        {
			ToTable("S_F_DOCUMENTINFO");
            HasKey(x => x.ID);

            Property(x => x.ID).HasColumnName("ID").IsRequired().HasMaxLength(50);
            Property(x => x.ParentID).HasColumnName("PARENTID").IsOptional().HasMaxLength(50);
            Property(x => x.FullPathID).HasColumnName("FULLPATHID").IsOptional().HasMaxLength(500);
            Property(x => x.Name).HasColumnName("NAME").IsOptional().HasMaxLength(50);
            Property(x => x.Code).HasColumnName("CODE").IsOptional().HasMaxLength(50);
            Property(x => x.SortIndex).HasColumnName("SORTINDEX").IsOptional();
            Property(x => x.Level).HasColumnName("LEVEL").IsOptional();
            Property(x => x.CreateUserID).HasColumnName("CREATEUSERID").IsOptional().HasMaxLength(50);
            Property(x => x.CreateUserName).HasColumnName("CREATEUSERNAME").IsOptional().HasMaxLength(50);
            Property(x => x.CreateDate).HasColumnName("CREATEDATE").IsOptional();
            Property(x => x.ModifyUserID).HasColumnName("MODIFYUSERID").IsOptional().HasMaxLength(50);
            Property(x => x.ModifyUserName).HasColumnName("MODIFYUSERNAME").IsOptional().HasMaxLength(50);
            Property(x => x.ModifyDate).HasColumnName("MODIFYDATE").IsOptional();
            Property(x => x.IsInherit).HasColumnName("ISINHERIT").IsOptional();
            Property(x => x.IsValid).HasColumnName("ISVALID").IsOptional().HasMaxLength(10);
            Property(x => x.IsDeleted).HasColumnName("ISDELETED").IsOptional();
        }
    }

    // S_F_FileInfo
    internal partial class S_F_FileInfoConfiguration : EntityTypeConfiguration<S_F_FileInfo>
    {
        public S_F_FileInfoConfiguration()
        {
			ToTable("S_F_FILEINFO");
            HasKey(x => x.ID);

            Property(x => x.ID).HasColumnName("ID").IsRequired().HasMaxLength(50);
            Property(x => x.DocumentInfoID).HasColumnName("DOCUMENTINFOID").IsOptional().HasMaxLength(50);
            Property(x => x.FileName).HasColumnName("FILENAME").IsOptional().HasMaxLength(200);
            Property(x => x.FileCode).HasColumnName("FILECODE").IsOptional().HasMaxLength(200);
            Property(x => x.ExtName).HasColumnName("EXTNAME").IsOptional().HasMaxLength(200);
            Property(x => x.FileSize).HasColumnName("FILESIZE").IsOptional();
            Property(x => x.Attachment).HasColumnName("ATTACHMENT").IsOptional().HasMaxLength(2000);
            Property(x => x.SourceFileID).HasColumnName("SOURCEFILEID").IsOptional().HasMaxLength(200);
            Property(x => x.CreateUserID).HasColumnName("CREATEUSERID").IsOptional().HasMaxLength(50);
            Property(x => x.CreateUserName).HasColumnName("CREATEUSERNAME").IsOptional().HasMaxLength(50);
            Property(x => x.CreateDate).HasColumnName("CREATEDATE").IsOptional();
            Property(x => x.ModifyUserID).HasColumnName("MODIFYUSERID").IsOptional().HasMaxLength(50);
            Property(x => x.ModifyUserName).HasColumnName("MODIFYUSERNAME").IsOptional().HasMaxLength(50);
            Property(x => x.ModifyDate).HasColumnName("MODIFYDATE").IsOptional();
            Property(x => x.OrgID).HasColumnName("ORGID").IsOptional().HasMaxLength(50);
            Property(x => x.OrgName).HasColumnName("ORGNAME").IsOptional().HasMaxLength(50);
            Property(x => x.Remark).HasColumnName("REMARK").IsOptional().HasMaxLength(500);
            Property(x => x.IsValid).HasColumnName("ISVALID").IsOptional().HasMaxLength(50);
            Property(x => x.IsDeleted).HasColumnName("ISDELETED").IsOptional();
            Property(x => x.SubmitUser).HasColumnName("SUBMITUSER").IsOptional().HasMaxLength(200);
            Property(x => x.SubmitUserName).HasColumnName("SUBMITUSERNAME").IsOptional().HasMaxLength(200);
            Property(x => x.SubmitDept).HasColumnName("SUBMITDEPT").IsOptional().HasMaxLength(200);
            Property(x => x.SubmitDeptName).HasColumnName("SUBMITDEPTNAME").IsOptional().HasMaxLength(200);
            Property(x => x.SubmitDate).HasColumnName("SUBMITDATE").IsOptional();

            // Foreign keys
            HasOptional(a => a.S_F_DocumentInfo).WithMany(b => b.S_F_FileInfo).HasForeignKey(c => c.DocumentInfoID); // FK_S_F_FileInfo_S_F_DocumentInfo
        }
    }

    // S_FA_ProjectInfo
    internal partial class S_FA_ProjectInfoConfiguration : EntityTypeConfiguration<S_FA_ProjectInfo>
    {
        public S_FA_ProjectInfoConfiguration()
        {
			ToTable("S_FA_PROJECTINFO");
            HasKey(x => x.ID);

            Property(x => x.ID).HasColumnName("ID").IsRequired().HasMaxLength(50);
            Property(x => x.CreateDate).HasColumnName("CREATEDATE").IsOptional();
            Property(x => x.ModifyDate).HasColumnName("MODIFYDATE").IsOptional();
            Property(x => x.CreateUserID).HasColumnName("CREATEUSERID").IsOptional().HasMaxLength(50);
            Property(x => x.CreateUser).HasColumnName("CREATEUSER").IsOptional().HasMaxLength(50);
            Property(x => x.ModifyUserID).HasColumnName("MODIFYUSERID").IsOptional().HasMaxLength(50);
            Property(x => x.ModifyUser).HasColumnName("MODIFYUSER").IsOptional().HasMaxLength(50);
            Property(x => x.OrgID).HasColumnName("ORGID").IsOptional().HasMaxLength(50);
            Property(x => x.CompanyID).HasColumnName("COMPANYID").IsOptional().HasMaxLength(50);
            Property(x => x.FlowPhase).HasColumnName("FLOWPHASE").IsOptional().HasMaxLength(50);
            Property(x => x.FlowInfo).HasColumnName("FLOWINFO").IsOptional().HasMaxLength(1073741823);
            Property(x => x.StepName).HasColumnName("STEPNAME").IsOptional().HasMaxLength(500);
            Property(x => x.ProjectName).HasColumnName("PROJECTNAME").IsOptional().HasMaxLength(200);
            Property(x => x.ProjectType).HasColumnName("PROJECTTYPE").IsOptional().HasMaxLength(200);
            Property(x => x.ProjectNumber).HasColumnName("PROJECTNUMBER").IsOptional().HasMaxLength(200);
            Property(x => x.ApplyReason).HasColumnName("APPLYREASON").IsOptional().HasMaxLength(500);
            Property(x => x.ProjectDesc).HasColumnName("PROJECTDESC").IsOptional().HasMaxLength(500);
            Property(x => x.Budget).HasColumnName("BUDGET").IsOptional().HasPrecision(18,2);
            Property(x => x.StartDate).HasColumnName("STARTDATE").IsOptional();
            Property(x => x.EndDate).HasColumnName("ENDDATE").IsOptional();
            Property(x => x.BusinessSupervisor).HasColumnName("BUSINESSSUPERVISOR").IsOptional().HasMaxLength(200);
            Property(x => x.BusinessSupervisorName).HasColumnName("BUSINESSSUPERVISORNAME").IsOptional().HasMaxLength(200);
            Property(x => x.ProjectStatus).HasColumnName("PROJECTSTATUS").IsOptional().HasMaxLength(200);
            Property(x => x.ApplyYear).HasColumnName("APPLYYEAR").IsOptional().HasMaxLength(200);
            Property(x => x.Applicant).HasColumnName("APPLICANT").IsOptional().HasMaxLength(200);
            Property(x => x.ApplyDate).HasColumnName("APPLYDATE").IsOptional();
            Property(x => x.Attachments).HasColumnName("ATTACHMENTS").IsOptional().HasMaxLength(500);
            Property(x => x.FormID).HasColumnName("FORMID").IsOptional().HasMaxLength(200);
        }
    }

    // S_FC_CostInfo
    internal partial class S_FC_CostInfoConfiguration : EntityTypeConfiguration<S_FC_CostInfo>
    {
        public S_FC_CostInfoConfiguration()
        {
			ToTable("S_FC_COSTINFO");
            HasKey(x => x.ID);

            Property(x => x.ID).HasColumnName("ID").IsRequired().HasMaxLength(50);
            Property(x => x.SubjectName).HasColumnName("SUBJECTNAME").IsOptional().HasMaxLength(500);
            Property(x => x.SubjectCode).HasColumnName("SUBJECTCODE").IsOptional().HasMaxLength(500);
            Property(x => x.ProjectID).HasColumnName("PROJECTID").IsOptional().HasMaxLength(50);
            Property(x => x.ProjectName).HasColumnName("PROJECTNAME").IsOptional().HasMaxLength(500);
            Property(x => x.ProjectCode).HasColumnName("PROJECTCODE").IsOptional().HasMaxLength(500);
            Property(x => x.CostType).HasColumnName("COSTTYPE").IsOptional().HasMaxLength(50);
            Property(x => x.ProjectType).HasColumnName("PROJECTTYPE").IsOptional().HasMaxLength(50);
            Property(x => x.UnitPrice).HasColumnName("UNITPRICE").IsOptional().HasPrecision(18,4);
            Property(x => x.Quantity).HasColumnName("QUANTITY").IsOptional().HasPrecision(18,4);
            Property(x => x.CostValue).HasColumnName("COSTVALUE").IsRequired().HasPrecision(18,4);
            Property(x => x.CostUserID).HasColumnName("COSTUSERID").IsOptional().HasMaxLength(50);
            Property(x => x.CostUserName).HasColumnName("COSTUSERNAME").IsOptional().HasMaxLength(50);
            Property(x => x.CostUserDeptID).HasColumnName("COSTUSERDEPTID").IsOptional().HasMaxLength(500);
            Property(x => x.CostUserDeptName).HasColumnName("COSTUSERDEPTNAME").IsOptional().HasMaxLength(500);
            Property(x => x.ProjectDeptID).HasColumnName("PROJECTDEPTID").IsOptional().HasMaxLength(500);
            Property(x => x.ProjectDeptName).HasColumnName("PROJECTDEPTNAME").IsOptional().HasMaxLength(500);
            Property(x => x.ProjectChargerUserID).HasColumnName("PROJECTCHARGERUSERID").IsOptional().HasMaxLength(500);
            Property(x => x.ProjectChargerUserName).HasColumnName("PROJECTCHARGERUSERNAME").IsOptional().HasMaxLength(500);
            Property(x => x.ProjectClass).HasColumnName("PROJECTCLASS").IsOptional().HasMaxLength(50);
            Property(x => x.CostDate).HasColumnName("COSTDATE").IsRequired();
            Property(x => x.BelongYear).HasColumnName("BELONGYEAR").IsRequired();
            Property(x => x.BelongMonth).HasColumnName("BELONGMONTH").IsRequired();
            Property(x => x.BelongQuarter).HasColumnName("BELONGQUARTER").IsRequired();
            Property(x => x.RelateID).HasColumnName("RELATEID").IsOptional().HasMaxLength(50);
            Property(x => x.FormID).HasColumnName("FORMID").IsOptional().HasMaxLength(50);
            Property(x => x.Extend1).HasColumnName("EXTEND1").IsOptional().HasMaxLength(200);
            Property(x => x.Extend2).HasColumnName("EXTEND2").IsOptional().HasMaxLength(200);
            Property(x => x.Extend3).HasColumnName("EXTEND3").IsOptional().HasMaxLength(200);
            Property(x => x.Extend4).HasColumnName("EXTEND4").IsOptional().HasMaxLength(200);
            Property(x => x.Extend5).HasColumnName("EXTEND5").IsOptional().HasMaxLength(200);
            Property(x => x.Extend6).HasColumnName("EXTEND6").IsOptional().HasMaxLength(200);
            Property(x => x.Extend7).HasColumnName("EXTEND7").IsOptional().HasMaxLength(200);
            Property(x => x.Extend8).HasColumnName("EXTEND8").IsOptional().HasMaxLength(200);
        }
    }

    // S_FC_UserLoanAccount
    internal partial class S_FC_UserLoanAccountConfiguration : EntityTypeConfiguration<S_FC_UserLoanAccount>
    {
        public S_FC_UserLoanAccountConfiguration()
        {
			ToTable("S_FC_USERLOANACCOUNT");
            HasKey(x => x.ID);

            Property(x => x.ID).HasColumnName("ID").IsRequired().HasMaxLength(50);
            Property(x => x.UserID).HasColumnName("USERID").IsOptional().HasMaxLength(200);
            Property(x => x.UserName).HasColumnName("USERNAME").IsOptional().HasMaxLength(200);
            Property(x => x.UserDeptID).HasColumnName("USERDEPTID").IsOptional().HasMaxLength(200);
            Property(x => x.UserDeptName).HasColumnName("USERDEPTNAME").IsOptional().HasMaxLength(200);
            Property(x => x.AccountType).HasColumnName("ACCOUNTTYPE").IsOptional().HasMaxLength(200);
            Property(x => x.AccountValue).HasColumnName("ACCOUNTVALUE").IsRequired().HasPrecision(10,0);
            Property(x => x.RelateFormID).HasColumnName("RELATEFORMID").IsOptional().HasMaxLength(50);
            Property(x => x.CreateDate).HasColumnName("CREATEDATE").IsOptional();
            Property(x => x.AccountValueABS).HasColumnName("ACCOUNTVALUEABS").IsOptional();
        }
    }

    // S_M_ConferenceRoom
    internal partial class S_M_ConferenceRoomConfiguration : EntityTypeConfiguration<S_M_ConferenceRoom>
    {
        public S_M_ConferenceRoomConfiguration()
        {
			ToTable("S_M_CONFERENCEROOM");
            HasKey(x => x.ID);

            Property(x => x.ID).HasColumnName("ID").IsRequired().HasMaxLength(50);
            Property(x => x.CreateDate).HasColumnName("CREATEDATE").IsOptional();
            Property(x => x.ModifyDate).HasColumnName("MODIFYDATE").IsOptional();
            Property(x => x.CreateUserID).HasColumnName("CREATEUSERID").IsOptional().HasMaxLength(50);
            Property(x => x.CreateUser).HasColumnName("CREATEUSER").IsOptional().HasMaxLength(50);
            Property(x => x.ModifyUserID).HasColumnName("MODIFYUSERID").IsOptional().HasMaxLength(50);
            Property(x => x.ModifyUser).HasColumnName("MODIFYUSER").IsOptional().HasMaxLength(50);
            Property(x => x.OrgID).HasColumnName("ORGID").IsOptional().HasMaxLength(50);
            Property(x => x.CompanyID).HasColumnName("COMPANYID").IsOptional().HasMaxLength(50);
            Property(x => x.FlowPhase).HasColumnName("FLOWPHASE").IsOptional().HasMaxLength(50);
            Property(x => x.FlowInfo).HasColumnName("FLOWINFO").IsOptional().HasMaxLength(1073741823);
            Property(x => x.StepName).HasColumnName("STEPNAME").IsOptional().HasMaxLength(500);
            Property(x => x.RoomName).HasColumnName("ROOMNAME").IsOptional().HasMaxLength(50);
            Property(x => x.LinkName).HasColumnName("LINKNAME").IsOptional().HasMaxLength(50);
            Property(x => x.Capacity).HasColumnName("CAPACITY").IsOptional();
            Property(x => x.ManageDeptID).HasColumnName("MANAGEDEPTID").IsOptional().HasMaxLength(50);
            Property(x => x.ManageDeptIDName).HasColumnName("MANAGEDEPTIDNAME").IsOptional().HasMaxLength(50);
            Property(x => x.RoomAddress).HasColumnName("ROOMADDRESS").IsOptional().HasMaxLength(200);
            Property(x => x.Configuredevice).HasColumnName("CONFIGUREDEVICE").IsOptional();
            Property(x => x.LinkNameName).HasColumnName("LINKNAMENAME").IsOptional().HasMaxLength(50);
        }
    }

    // S_Survey_Option
    internal partial class S_Survey_OptionConfiguration : EntityTypeConfiguration<S_Survey_Option>
    {
        public S_Survey_OptionConfiguration()
        {
			ToTable("S_SURVEY_OPTION");
            HasKey(x => x.ID);

            Property(x => x.ID).HasColumnName("ID").IsRequired().HasMaxLength(50);
            Property(x => x.QuestionID).HasColumnName("QUESTIONID").IsOptional().HasMaxLength(50);
            Property(x => x.OptionName).HasColumnName("OPTIONNAME").IsOptional().HasMaxLength(200);
            Property(x => x.VoteNum).HasColumnName("VOTENUM").IsOptional();
            Property(x => x.CreateUserID).HasColumnName("CREATEUSERID").IsOptional().HasMaxLength(50);
            Property(x => x.CreateUserName).HasColumnName("CREATEUSERNAME").IsOptional().HasMaxLength(50);
            Property(x => x.CreateDate).HasColumnName("CREATEDATE").IsOptional();

            // Foreign keys
            HasOptional(a => a.S_Survey_Question).WithMany(b => b.S_Survey_Option).HasForeignKey(c => c.QuestionID); // FK_S_Survey_Option_S_Survey_Question
        }
    }

    // S_Survey_Question
    internal partial class S_Survey_QuestionConfiguration : EntityTypeConfiguration<S_Survey_Question>
    {
        public S_Survey_QuestionConfiguration()
        {
			ToTable("S_SURVEY_QUESTION");
            HasKey(x => x.ID);

            Property(x => x.ID).HasColumnName("ID").IsRequired().HasMaxLength(50);
            Property(x => x.SurveyID).HasColumnName("SURVEYID").IsOptional().HasMaxLength(50);
            Property(x => x.QuestionName).HasColumnName("QUESTIONNAME").IsOptional().HasMaxLength(100);
            Property(x => x.QuestionType).HasColumnName("QUESTIONTYPE").IsOptional().HasMaxLength(50);
            Property(x => x.IsMustAnswer).HasColumnName("ISMUSTANSWER").IsOptional().HasMaxLength(1);
            Property(x => x.IsComment).HasColumnName("ISCOMMENT").IsOptional().HasMaxLength(1);
            Property(x => x.CreateUserID).HasColumnName("CREATEUSERID").IsOptional().HasMaxLength(50);
            Property(x => x.CreateUserName).HasColumnName("CREATEUSERNAME").IsOptional().HasMaxLength(50);
            Property(x => x.CreateDate).HasColumnName("CREATEDATE").IsOptional();

            // Foreign keys
            HasOptional(a => a.S_Survey_Subject).WithMany(b => b.S_Survey_Question).HasForeignKey(c => c.SurveyID); // FK_S_Survey_Question_S_Survey_Subject
        }
    }

    // S_Survey_QuestionComment
    internal partial class S_Survey_QuestionCommentConfiguration : EntityTypeConfiguration<S_Survey_QuestionComment>
    {
        public S_Survey_QuestionCommentConfiguration()
        {
			ToTable("S_SURVEY_QUESTIONCOMMENT");
            HasKey(x => x.ID);

            Property(x => x.ID).HasColumnName("ID").IsRequired().HasMaxLength(50);
            Property(x => x.QuestionID).HasColumnName("QUESTIONID").IsOptional().HasMaxLength(50);
            Property(x => x.UserID).HasColumnName("USERID").IsOptional().HasMaxLength(50);
            Property(x => x.UserName).HasColumnName("USERNAME").IsOptional().HasMaxLength(50);
            Property(x => x.Comment).HasColumnName("COMMENT").IsOptional().HasMaxLength(4000);
            Property(x => x.VoteDate).HasColumnName("VOTEDATE").IsOptional();

            // Foreign keys
            HasOptional(a => a.S_Survey_Question).WithMany(b => b.S_Survey_QuestionComment).HasForeignKey(c => c.QuestionID); // FK_S_Survey_QuestionComment_S_Survey_Question
        }
    }

    // S_Survey_QuestionVote
    internal partial class S_Survey_QuestionVoteConfiguration : EntityTypeConfiguration<S_Survey_QuestionVote>
    {
        public S_Survey_QuestionVoteConfiguration()
        {
			ToTable("S_SURVEY_QUESTIONVOTE");
            HasKey(x => x.ID);

            Property(x => x.ID).HasColumnName("ID").IsRequired().HasMaxLength(50);
            Property(x => x.QuestionID).HasColumnName("QUESTIONID").IsOptional().HasMaxLength(50);
            Property(x => x.UserID).HasColumnName("USERID").IsOptional().HasMaxLength(50);
            Property(x => x.UserName).HasColumnName("USERNAME").IsOptional().HasMaxLength(50);
            Property(x => x.QuestionMsg).HasColumnName("QUESTIONMSG").IsOptional().HasMaxLength(4000);
            Property(x => x.VoteDate).HasColumnName("VOTEDATE").IsOptional();

            // Foreign keys
            HasOptional(a => a.S_Survey_Question).WithMany(b => b.S_Survey_QuestionVote).HasForeignKey(c => c.QuestionID); // FK_S_Survey_QuestionVote_S_Survey_Question
        }
    }

    // S_Survey_Subject
    internal partial class S_Survey_SubjectConfiguration : EntityTypeConfiguration<S_Survey_Subject>
    {
        public S_Survey_SubjectConfiguration()
        {
			ToTable("S_SURVEY_SUBJECT");
            HasKey(x => x.ID);

            Property(x => x.ID).HasColumnName("ID").IsRequired().HasMaxLength(50);
            Property(x => x.SurveyName).HasColumnName("SURVEYNAME").IsOptional().HasMaxLength(200);
            Property(x => x.QuestionNum).HasColumnName("QUESTIONNUM").IsOptional();
            Property(x => x.IsPeriod).HasColumnName("ISPERIOD").IsOptional().HasMaxLength(50);
            Property(x => x.SurveyStartDate).HasColumnName("SURVEYSTARTDATE").IsOptional();
            Property(x => x.SurveyEndDate).HasColumnName("SURVEYENDDATE").IsOptional();
            Property(x => x.IsMemoryUser).HasColumnName("ISMEMORYUSER").IsOptional().HasMaxLength(50);
            Property(x => x.QueryUserIDs).HasColumnName("QUERYUSERIDS").IsOptional().HasMaxLength(4000);
            Property(x => x.QueryUserNames).HasColumnName("QUERYUSERNAMES").IsOptional().HasMaxLength(4000);
            Property(x => x.StatisticsUserIDs).HasColumnName("STATISTICSUSERIDS").IsOptional().HasMaxLength(4000);
            Property(x => x.StatisticsUserNames).HasColumnName("STATISTICSUSERNAMES").IsOptional().HasMaxLength(4000);
            Property(x => x.SurveyAttchment).HasColumnName("SURVEYATTCHMENT").IsOptional().HasMaxLength(4000);
            Property(x => x.Remark).HasColumnName("REMARK").IsOptional().HasMaxLength(4000);
            Property(x => x.IssueID).HasColumnName("ISSUEID").IsOptional().HasMaxLength(50);
            Property(x => x.IssueName).HasColumnName("ISSUENAME").IsOptional().HasMaxLength(50);
            Property(x => x.IssueDate).HasColumnName("ISSUEDATE").IsOptional();
            Property(x => x.CreateUserID).HasColumnName("CREATEUSERID").IsOptional().HasMaxLength(50);
            Property(x => x.CreateUserName).HasColumnName("CREATEUSERNAME").IsOptional().HasMaxLength(50);
            Property(x => x.CreateDate).HasColumnName("CREATEDATE").IsOptional();
            Property(x => x.State).HasColumnName("STATE").IsOptional().HasMaxLength(50);
            Property(x => x.QueryDeptIDs).HasColumnName("QUERYDEPTIDS").IsOptional().HasMaxLength(4000);
            Property(x => x.QueryDeptNames).HasColumnName("QUERYDEPTNAMES").IsOptional().HasMaxLength(4000);
        }
    }

    // S_Survey_Vote
    internal partial class S_Survey_VoteConfiguration : EntityTypeConfiguration<S_Survey_Vote>
    {
        public S_Survey_VoteConfiguration()
        {
			ToTable("S_SURVEY_VOTE");
            HasKey(x => x.ID);

            Property(x => x.ID).HasColumnName("ID").IsRequired().HasMaxLength(50);
            Property(x => x.OptionID).HasColumnName("OPTIONID").IsOptional().HasMaxLength(50);
            Property(x => x.UserID).HasColumnName("USERID").IsOptional().HasMaxLength(50);
            Property(x => x.UserName).HasColumnName("USERNAME").IsOptional().HasMaxLength(50);
            Property(x => x.VoteDate).HasColumnName("VOTEDATE").IsOptional();

            // Foreign keys
            HasOptional(a => a.S_Survey_Option).WithMany(b => b.S_Survey_Vote).HasForeignKey(c => c.OptionID); // FK_S_Survey_Vote_S_Survey_Option
        }
    }

    // T_AskingLeave
    internal partial class T_AskingLeaveConfiguration : EntityTypeConfiguration<T_AskingLeave>
    {
        public T_AskingLeaveConfiguration()
        {
			ToTable("T_ASKINGLEAVE");
            HasKey(x => x.ID);

            Property(x => x.ID).HasColumnName("ID").IsRequired().HasMaxLength(50);
            Property(x => x.CreateDate).HasColumnName("CREATEDATE").IsOptional();
            Property(x => x.ModifyDate).HasColumnName("MODIFYDATE").IsOptional();
            Property(x => x.CreateUserID).HasColumnName("CREATEUSERID").IsOptional().HasMaxLength(50);
            Property(x => x.CreateUser).HasColumnName("CREATEUSER").IsOptional().HasMaxLength(50);
            Property(x => x.ModifyUserID).HasColumnName("MODIFYUSERID").IsOptional().HasMaxLength(50);
            Property(x => x.ModifyUser).HasColumnName("MODIFYUSER").IsOptional().HasMaxLength(50);
            Property(x => x.OrgID).HasColumnName("ORGID").IsOptional().HasMaxLength(50);
            Property(x => x.CompanyID).HasColumnName("COMPANYID").IsOptional().HasMaxLength(50);
            Property(x => x.FlowPhase).HasColumnName("FLOWPHASE").IsOptional().HasMaxLength(50);
            Property(x => x.FlowInfo).HasColumnName("FLOWINFO").IsOptional().HasMaxLength(1073741823);
            Property(x => x.StepName).HasColumnName("STEPNAME").IsOptional().HasMaxLength(500);
            Property(x => x.SerialNumber).HasColumnName("SERIALNUMBER").IsOptional().HasMaxLength(200);
            Property(x => x.ApplyUser).HasColumnName("APPLYUSER").IsOptional().HasMaxLength(200);
            Property(x => x.ApplyUserName).HasColumnName("APPLYUSERNAME").IsOptional().HasMaxLength(200);
            Property(x => x.ApplyDate).HasColumnName("APPLYDATE").IsOptional();
            Property(x => x.ApplyDuration).HasColumnName("APPLYDURATION").IsOptional().HasMaxLength(1073741823);
            Property(x => x.ApplyFile).HasColumnName("APPLYFILE").IsOptional().HasMaxLength(500);
            Property(x => x.ApprovalList).HasColumnName("APPROVALLIST").IsOptional();
            Property(x => x.ApplyToyalTime).HasColumnName("APPLYTOYALTIME").IsOptional().HasPrecision(18,2);
        }
    }

    // T_AskingLeave_ApplyDuration
    internal partial class T_AskingLeave_ApplyDurationConfiguration : EntityTypeConfiguration<T_AskingLeave_ApplyDuration>
    {
        public T_AskingLeave_ApplyDurationConfiguration()
        {
			ToTable("T_ASKINGLEAVE_APPLYDURATION");
            HasKey(x => x.ID);

            Property(x => x.ID).HasColumnName("ID").IsRequired().HasMaxLength(50);
            Property(x => x.T_AskingLeaveID).HasColumnName("T_ASKINGLEAVEID").IsOptional().HasMaxLength(50);
            Property(x => x.SortIndex).HasColumnName("SORTINDEX").IsOptional();
            Property(x => x.IsReleased).HasColumnName("ISRELEASED").IsOptional().HasMaxLength(1);
            Property(x => x.StartDate).HasColumnName("STARTDATE").IsOptional();
            Property(x => x.EndDate).HasColumnName("ENDDATE").IsOptional();
            Property(x => x.ApplyType).HasColumnName("APPLYTYPE").IsOptional().HasMaxLength(200);
            Property(x => x.RemainTime).HasColumnName("REMAINTIME").IsOptional().HasMaxLength(200);
            Property(x => x.ApplyTime).HasColumnName("APPLYTIME").IsOptional().HasMaxLength(200);

            // Foreign keys
            HasOptional(a => a.T_AskingLeave).WithMany(b => b.T_AskingLeave_ApplyDuration).HasForeignKey(c => c.T_AskingLeaveID); // FK_T_AskingLeave_ApplyDuration_T_AskingLeave
        }
    }

    // T_Audit_Mandate
    internal partial class T_Audit_MandateConfiguration : EntityTypeConfiguration<T_Audit_Mandate>
    {
        public T_Audit_MandateConfiguration()
        {
			ToTable("T_AUDIT_MANDATE");
            HasKey(x => x.ID);

            Property(x => x.ID).HasColumnName("ID").IsRequired().HasMaxLength(50);
            Property(x => x.CreateDate).HasColumnName("CREATEDATE").IsOptional();
            Property(x => x.ModifyDate).HasColumnName("MODIFYDATE").IsOptional();
            Property(x => x.CreateUserID).HasColumnName("CREATEUSERID").IsOptional().HasMaxLength(50);
            Property(x => x.CreateUser).HasColumnName("CREATEUSER").IsOptional().HasMaxLength(50);
            Property(x => x.ModifyUserID).HasColumnName("MODIFYUSERID").IsOptional().HasMaxLength(50);
            Property(x => x.ModifyUser).HasColumnName("MODIFYUSER").IsOptional().HasMaxLength(50);
            Property(x => x.OrgID).HasColumnName("ORGID").IsOptional().HasMaxLength(50);
            Property(x => x.CompanyID).HasColumnName("COMPANYID").IsOptional().HasMaxLength(50);
            Property(x => x.FlowPhase).HasColumnName("FLOWPHASE").IsOptional().HasMaxLength(50);
            Property(x => x.FlowInfo).HasColumnName("FLOWINFO").IsOptional().HasMaxLength(1073741823);
            Property(x => x.StepName).HasColumnName("STEPNAME").IsOptional().HasMaxLength(500);
            Property(x => x.TypesOfAudit).HasColumnName("TYPESOFAUDIT").IsOptional().HasMaxLength(200);
            Property(x => x.RelatedDepartments).HasColumnName("RELATEDDEPARTMENTS").IsOptional().HasMaxLength(200);
            Property(x => x.RelatedDepartmentsName).HasColumnName("RELATEDDEPARTMENTSNAME").IsOptional().HasMaxLength(200);
            Property(x => x.Auditee).HasColumnName("AUDITEE").IsOptional().HasMaxLength(200);
            Property(x => x.AuditeeName).HasColumnName("AUDITEENAME").IsOptional().HasMaxLength(200);
            Property(x => x.Auditor).HasColumnName("AUDITOR").IsOptional().HasMaxLength(200);
            Property(x => x.AuditorName).HasColumnName("AUDITORNAME").IsOptional().HasMaxLength(200);
            Property(x => x.AuditStartTime).HasColumnName("AUDITSTARTTIME").IsOptional();
            Property(x => x.AuditEndTime).HasColumnName("AUDITENDTIME").IsOptional();
            Property(x => x.AuditMatters).HasColumnName("AUDITMATTERS").IsOptional().HasMaxLength(200);
            Property(x => x.Enclosure).HasColumnName("ENCLOSURE").IsOptional().HasMaxLength(500);
            Property(x => x.AuthorizedDepartmentSignForApproval).HasColumnName("AUTHORIZEDDEPARTMENTSIGNFORAPPROVAL").IsOptional();
            Property(x => x.SignedAndApprovedByCompanyLeaders).HasColumnName("SIGNEDANDAPPROVEDBYCOMPANYLEADERS").IsOptional();
            Property(x => x.OpinionsOfLeadersOfLegalAuditDepartment).HasColumnName("OPINIONSOFLEADERSOFLEGALAUDITDEPARTMENT").IsOptional();
            Property(x => x.ApplyUser).HasColumnName("APPLYUSER").IsOptional().HasMaxLength(200);
            Property(x => x.ApplyUserName).HasColumnName("APPLYUSERNAME").IsOptional().HasMaxLength(200);
        }
    }

    // T_Audit_Notice
    internal partial class T_Audit_NoticeConfiguration : EntityTypeConfiguration<T_Audit_Notice>
    {
        public T_Audit_NoticeConfiguration()
        {
			ToTable("T_AUDIT_NOTICE");
            HasKey(x => x.ID);

            Property(x => x.ID).HasColumnName("ID").IsRequired().HasMaxLength(50);
            Property(x => x.CreateDate).HasColumnName("CREATEDATE").IsOptional();
            Property(x => x.ModifyDate).HasColumnName("MODIFYDATE").IsOptional();
            Property(x => x.CreateUserID).HasColumnName("CREATEUSERID").IsOptional().HasMaxLength(50);
            Property(x => x.CreateUser).HasColumnName("CREATEUSER").IsOptional().HasMaxLength(50);
            Property(x => x.ModifyUserID).HasColumnName("MODIFYUSERID").IsOptional().HasMaxLength(50);
            Property(x => x.ModifyUser).HasColumnName("MODIFYUSER").IsOptional().HasMaxLength(50);
            Property(x => x.OrgID).HasColumnName("ORGID").IsOptional().HasMaxLength(50);
            Property(x => x.CompanyID).HasColumnName("COMPANYID").IsOptional().HasMaxLength(50);
            Property(x => x.FlowPhase).HasColumnName("FLOWPHASE").IsOptional().HasMaxLength(50);
            Property(x => x.FlowInfo).HasColumnName("FLOWINFO").IsOptional().HasMaxLength(1073741823);
            Property(x => x.StepName).HasColumnName("STEPNAME").IsOptional().HasMaxLength(500);
            Property(x => x.AuditReleaseDate).HasColumnName("AUDITRELEASEDATE").IsOptional().HasMaxLength(200);
            Property(x => x.AuditNumber).HasColumnName("AUDITNUMBER").IsOptional().HasMaxLength(200);
            Property(x => x.ReceivingDepartment).HasColumnName("RECEIVINGDEPARTMENT").IsOptional().HasMaxLength(200);
            Property(x => x.Receiver).HasColumnName("RECEIVER").IsOptional().HasMaxLength(200);
            Property(x => x.AuditStartTime).HasColumnName("AUDITSTARTTIME").IsOptional();
            Property(x => x.AuditEndTime).HasColumnName("AUDITENDTIME").IsOptional();
            Property(x => x.AuditTeamLeader).HasColumnName("AUDITTEAMLEADER").IsOptional().HasMaxLength(200);
            Property(x => x.MembersOfAuditTeam).HasColumnName("MEMBERSOFAUDITTEAM").IsOptional().HasMaxLength(200);
            Property(x => x.AuditContents).HasColumnName("AUDITCONTENTS").IsOptional().HasMaxLength(200);
            Property(x => x.NoticeAnnex).HasColumnName("NOTICEANNEX").IsOptional().HasMaxLength(500);
            Property(x => x.OpinionOfLegalAuditDepartment).HasColumnName("OPINIONOFLEGALAUDITDEPARTMENT").IsOptional();
            Property(x => x.LeaderInChargeOfAuditDepartment).HasColumnName("LEADERINCHARGEOFAUDITDEPARTMENT").IsOptional();
            Property(x => x.LeaderInChargeOfReceivingDepartment).HasColumnName("LEADERINCHARGEOFRECEIVINGDEPARTMENT").IsOptional();
            Property(x => x.ReceivingDepartmentName).HasColumnName("RECEIVINGDEPARTMENTNAME").IsOptional().HasMaxLength(200);
            Property(x => x.ReceiverName).HasColumnName("RECEIVERNAME").IsOptional().HasMaxLength(200);
            Property(x => x.AuditTeamLeaderName).HasColumnName("AUDITTEAMLEADERNAME").IsOptional().HasMaxLength(200);
            Property(x => x.MembersOfAuditTeamName).HasColumnName("MEMBERSOFAUDITTEAMNAME").IsOptional().HasMaxLength(200);
            Property(x => x.AuditTeamHeadLeaderSign).HasColumnName("AUDITTEAMHEADLEADERSIGN").IsOptional();
            Property(x => x.AuditeeOpinion).HasColumnName("AUDITEEOPINION").IsOptional();
        }
    }

    // T_Audit_Project
    internal partial class T_Audit_ProjectConfiguration : EntityTypeConfiguration<T_Audit_Project>
    {
        public T_Audit_ProjectConfiguration()
        {
			ToTable("T_AUDIT_PROJECT");
            HasKey(x => x.ID);

            Property(x => x.ID).HasColumnName("ID").IsRequired().HasMaxLength(50);
            Property(x => x.CreateDate).HasColumnName("CREATEDATE").IsOptional();
            Property(x => x.ModifyDate).HasColumnName("MODIFYDATE").IsOptional();
            Property(x => x.CreateUserID).HasColumnName("CREATEUSERID").IsOptional().HasMaxLength(50);
            Property(x => x.CreateUser).HasColumnName("CREATEUSER").IsOptional().HasMaxLength(50);
            Property(x => x.ModifyUserID).HasColumnName("MODIFYUSERID").IsOptional().HasMaxLength(50);
            Property(x => x.ModifyUser).HasColumnName("MODIFYUSER").IsOptional().HasMaxLength(50);
            Property(x => x.OrgID).HasColumnName("ORGID").IsOptional().HasMaxLength(50);
            Property(x => x.CompanyID).HasColumnName("COMPANYID").IsOptional().HasMaxLength(50);
            Property(x => x.FlowPhase).HasColumnName("FLOWPHASE").IsOptional().HasMaxLength(50);
            Property(x => x.FlowInfo).HasColumnName("FLOWINFO").IsOptional().HasMaxLength(1073741823);
            Property(x => x.StepName).HasColumnName("STEPNAME").IsOptional().HasMaxLength(500);
            Property(x => x.Auditor).HasColumnName("AUDITOR").IsOptional().HasMaxLength(200);
            Property(x => x.AuditorName).HasColumnName("AUDITORNAME").IsOptional().HasMaxLength(200);
            Property(x => x.AuditMatters).HasColumnName("AUDITMATTERS").IsOptional().HasMaxLength(200);
            Property(x => x.BasisForEstablishment).HasColumnName("BASISFORESTABLISHMENT").IsOptional().HasMaxLength(200);
            Property(x => x.AuditTeamLeader).HasColumnName("AUDITTEAMLEADER").IsOptional().HasMaxLength(200);
            Property(x => x.MembersOfAuditTeam).HasColumnName("MEMBERSOFAUDITTEAM").IsOptional().HasMaxLength(200);
            Property(x => x.MembersOfAuditTeamName).HasColumnName("MEMBERSOFAUDITTEAMNAME").IsOptional().HasMaxLength(200);
            Property(x => x.MainContentsOfAudit).HasColumnName("MAINCONTENTSOFAUDIT").IsOptional().HasMaxLength(500);
            Property(x => x.Enclosure).HasColumnName("ENCLOSURE").IsOptional().HasMaxLength(500);
            Property(x => x.OpinionsOfLeadersOfLegalAuditDepartment).HasColumnName("OPINIONSOFLEADERSOFLEGALAUDITDEPARTMENT").IsOptional();
            Property(x => x.OpinionOfAuditTeamLeader).HasColumnName("OPINIONOFAUDITTEAMLEADER").IsOptional();
            Property(x => x.OpinionOfAuditLeaderInCharge).HasColumnName("OPINIONOFAUDITLEADERINCHARGE").IsOptional();
            Property(x => x.BasisForEstablishmentName).HasColumnName("BASISFORESTABLISHMENTNAME").IsOptional().HasMaxLength(200);
            Property(x => x.AuditTeamLeaderName).HasColumnName("AUDITTEAMLEADERNAME").IsOptional().HasMaxLength(200);
        }
    }

    // T_Audit_RectificationResultsCollection
    internal partial class T_Audit_RectificationResultsCollectionConfiguration : EntityTypeConfiguration<T_Audit_RectificationResultsCollection>
    {
        public T_Audit_RectificationResultsCollectionConfiguration()
        {
			ToTable("T_AUDIT_RECTIFICATIONRESULTSCOLLECTION");
            HasKey(x => x.ID);

            Property(x => x.ID).HasColumnName("ID").IsRequired().HasMaxLength(50);
            Property(x => x.CreateDate).HasColumnName("CREATEDATE").IsOptional();
            Property(x => x.ModifyDate).HasColumnName("MODIFYDATE").IsOptional();
            Property(x => x.CreateUserID).HasColumnName("CREATEUSERID").IsOptional().HasMaxLength(50);
            Property(x => x.CreateUser).HasColumnName("CREATEUSER").IsOptional().HasMaxLength(50);
            Property(x => x.ModifyUserID).HasColumnName("MODIFYUSERID").IsOptional().HasMaxLength(50);
            Property(x => x.ModifyUser).HasColumnName("MODIFYUSER").IsOptional().HasMaxLength(50);
            Property(x => x.OrgID).HasColumnName("ORGID").IsOptional().HasMaxLength(50);
            Property(x => x.CompanyID).HasColumnName("COMPANYID").IsOptional().HasMaxLength(50);
            Property(x => x.FlowPhase).HasColumnName("FLOWPHASE").IsOptional().HasMaxLength(50);
            Property(x => x.FlowInfo).HasColumnName("FLOWINFO").IsOptional().HasMaxLength(1073741823);
            Property(x => x.StepName).HasColumnName("STEPNAME").IsOptional().HasMaxLength(500);
            Property(x => x.Applicant).HasColumnName("APPLICANT").IsOptional().HasMaxLength(200);
            Property(x => x.DateOfSubmission).HasColumnName("DATEOFSUBMISSION").IsOptional();
            Property(x => x.RelatedAuditReport).HasColumnName("RELATEDAUDITREPORT").IsOptional().HasMaxLength(200);
            Property(x => x.RelatedAuditReportName).HasColumnName("RELATEDAUDITREPORTNAME").IsOptional().HasMaxLength(200);
            Property(x => x.AuditedDepartment).HasColumnName("AUDITEDDEPARTMENT").IsOptional().HasMaxLength(200);
            Property(x => x.AuditedDepartmentName).HasColumnName("AUDITEDDEPARTMENTNAME").IsOptional().HasMaxLength(200);
            Property(x => x.Auditor).HasColumnName("AUDITOR").IsOptional().HasMaxLength(200);
            Property(x => x.AuditorName).HasColumnName("AUDITORNAME").IsOptional().HasMaxLength(200);
            Property(x => x.AuditStartTime).HasColumnName("AUDITSTARTTIME").IsOptional();
            Property(x => x.AuditEndTime).HasColumnName("AUDITENDTIME").IsOptional();
            Property(x => x.AuditReportNo).HasColumnName("AUDITREPORTNO").IsOptional().HasMaxLength(200);
            Property(x => x.AuditTeamLeader).HasColumnName("AUDITTEAMLEADER").IsOptional().HasMaxLength(200);
            Property(x => x.AuditTeamLeaderName).HasColumnName("AUDITTEAMLEADERNAME").IsOptional().HasMaxLength(200);
            Property(x => x.MembersOfAuditTeam).HasColumnName("MEMBERSOFAUDITTEAM").IsOptional().HasMaxLength(200);
            Property(x => x.MembersOfAuditTeamName).HasColumnName("MEMBERSOFAUDITTEAMNAME").IsOptional().HasMaxLength(200);
            Property(x => x.RectificationRequirements).HasColumnName("RECTIFICATIONREQUIREMENTS").IsOptional().HasMaxLength(500);
            Property(x => x.RectificationCompletionStatus).HasColumnName("RECTIFICATIONCOMPLETIONSTATUS").IsOptional().HasMaxLength(200);
            Property(x => x.RectificationDate).HasColumnName("RECTIFICATIONDATE").IsOptional();
            Property(x => x.PersonInChargeOfRectification).HasColumnName("PERSONINCHARGEOFRECTIFICATION").IsOptional().HasMaxLength(200);
            Property(x => x.DepartmentHead).HasColumnName("DEPARTMENTHEAD").IsOptional().HasMaxLength(200);
            Property(x => x.DescriptionOfRectificationResults).HasColumnName("DESCRIPTIONOFRECTIFICATIONRESULTS").IsOptional().HasMaxLength(500);
            Property(x => x.RectificationAnnex).HasColumnName("RECTIFICATIONANNEX").IsOptional().HasMaxLength(500);
            Property(x => x.OpinionsOfDepartmentLeaders).HasColumnName("OPINIONSOFDEPARTMENTLEADERS").IsOptional();
            Property(x => x.OpinionOfAuditTeamLeader).HasColumnName("OPINIONOFAUDITTEAMLEADER").IsOptional();
            Property(x => x.OpinionOfLegalAuditDepartment).HasColumnName("OPINIONOFLEGALAUDITDEPARTMENT").IsOptional();
            Property(x => x.OpinionsOfLeadersInCharge).HasColumnName("OPINIONSOFLEADERSINCHARGE").IsOptional();
            Property(x => x.ApplicantName).HasColumnName("APPLICANTNAME").IsOptional().HasMaxLength(200);
        }
    }

    // T_Audit_ReportCommunication
    internal partial class T_Audit_ReportCommunicationConfiguration : EntityTypeConfiguration<T_Audit_ReportCommunication>
    {
        public T_Audit_ReportCommunicationConfiguration()
        {
			ToTable("T_AUDIT_REPORTCOMMUNICATION");
            HasKey(x => x.ID);

            Property(x => x.ID).HasColumnName("ID").IsRequired().HasMaxLength(50);
            Property(x => x.CreateDate).HasColumnName("CREATEDATE").IsOptional();
            Property(x => x.ModifyDate).HasColumnName("MODIFYDATE").IsOptional();
            Property(x => x.CreateUserID).HasColumnName("CREATEUSERID").IsOptional().HasMaxLength(50);
            Property(x => x.CreateUser).HasColumnName("CREATEUSER").IsOptional().HasMaxLength(50);
            Property(x => x.ModifyUserID).HasColumnName("MODIFYUSERID").IsOptional().HasMaxLength(50);
            Property(x => x.ModifyUser).HasColumnName("MODIFYUSER").IsOptional().HasMaxLength(50);
            Property(x => x.OrgID).HasColumnName("ORGID").IsOptional().HasMaxLength(50);
            Property(x => x.CompanyID).HasColumnName("COMPANYID").IsOptional().HasMaxLength(50);
            Property(x => x.FlowPhase).HasColumnName("FLOWPHASE").IsOptional().HasMaxLength(50);
            Property(x => x.FlowInfo).HasColumnName("FLOWINFO").IsOptional().HasMaxLength(1073741823);
            Property(x => x.StepName).HasColumnName("STEPNAME").IsOptional().HasMaxLength(500);
            Property(x => x.AuditYear).HasColumnName("AUDITYEAR").IsOptional().HasMaxLength(200);
            Property(x => x.ReportReleaseDate).HasColumnName("REPORTRELEASEDATE").IsOptional().HasMaxLength(200);
            Property(x => x.NameOfAuditReport).HasColumnName("NAMEOFAUDITREPORT").IsOptional().HasMaxLength(200);
            Property(x => x.AuditedDepartment).HasColumnName("AUDITEDDEPARTMENT").IsOptional().HasMaxLength(200);
            Property(x => x.AuditedDepartmentName).HasColumnName("AUDITEDDEPARTMENTNAME").IsOptional().HasMaxLength(200);
            Property(x => x.Auditor).HasColumnName("AUDITOR").IsOptional().HasMaxLength(200);
            Property(x => x.AuditorName).HasColumnName("AUDITORNAME").IsOptional().HasMaxLength(200);
            Property(x => x.AuditStartTime).HasColumnName("AUDITSTARTTIME").IsOptional();
            Property(x => x.AuditEndTime).HasColumnName("AUDITENDTIME").IsOptional();
            Property(x => x.AuditReportNo).HasColumnName("AUDITREPORTNO").IsOptional().HasMaxLength(200);
            Property(x => x.AuditTeamLeader).HasColumnName("AUDITTEAMLEADER").IsOptional().HasMaxLength(200);
            Property(x => x.AuditTeamLeaderName).HasColumnName("AUDITTEAMLEADERNAME").IsOptional().HasMaxLength(200);
            Property(x => x.DeadlineForSubmissionOfRectificationResults).HasColumnName("DEADLINEFORSUBMISSIONOFRECTIFICATIONRESULTS").IsOptional();
            Property(x => x.MembersOfAuditTeam).HasColumnName("MEMBERSOFAUDITTEAM").IsOptional().HasMaxLength(200);
            Property(x => x.MembersOfAuditTeamName).HasColumnName("MEMBERSOFAUDITTEAMNAME").IsOptional().HasMaxLength(200);
            Property(x => x.RectificationRequirements).HasColumnName("RECTIFICATIONREQUIREMENTS").IsOptional().HasMaxLength(500);
            Property(x => x.BodyOfAuditReport).HasColumnName("BODYOFAUDITREPORT").IsOptional().HasMaxLength(500);
            Property(x => x.AppendixToAuditReport).HasColumnName("APPENDIXTOAUDITREPORT").IsOptional().HasMaxLength(500);
            Property(x => x.InstructionsFromTheLeaderInChargeOfFinance).HasColumnName("INSTRUCTIONSFROMTHELEADERINCHARGEOFFINANCE").IsOptional();
            Property(x => x.InstructionsOfTheLeaderInChargeOfTheAuditedSite).HasColumnName("INSTRUCTIONSOFTHELEADERINCHARGEOFTHEAUDITEDSITE").IsOptional();
            Property(x => x.ApprovalOfTheLeaderInChargeOfAudit).HasColumnName("APPROVALOFTHELEADERINCHARGEOFAUDIT").IsOptional();
            Property(x => x.GeneralManagerInstructions).HasColumnName("GENERALMANAGERINSTRUCTIONS").IsOptional();
            Property(x => x.ApplyUser).HasColumnName("APPLYUSER").IsOptional().HasMaxLength(200);
            Property(x => x.ApplyUserName).HasColumnName("APPLYUSERNAME").IsOptional().HasMaxLength(200);
        }
    }

    // T_Audit_ReportIssuance
    internal partial class T_Audit_ReportIssuanceConfiguration : EntityTypeConfiguration<T_Audit_ReportIssuance>
    {
        public T_Audit_ReportIssuanceConfiguration()
        {
			ToTable("T_AUDIT_REPORTISSUANCE");
            HasKey(x => x.ID);

            Property(x => x.ID).HasColumnName("ID").IsRequired().HasMaxLength(50);
            Property(x => x.CreateDate).HasColumnName("CREATEDATE").IsOptional();
            Property(x => x.ModifyDate).HasColumnName("MODIFYDATE").IsOptional();
            Property(x => x.CreateUserID).HasColumnName("CREATEUSERID").IsOptional().HasMaxLength(50);
            Property(x => x.CreateUser).HasColumnName("CREATEUSER").IsOptional().HasMaxLength(50);
            Property(x => x.ModifyUserID).HasColumnName("MODIFYUSERID").IsOptional().HasMaxLength(50);
            Property(x => x.ModifyUser).HasColumnName("MODIFYUSER").IsOptional().HasMaxLength(50);
            Property(x => x.OrgID).HasColumnName("ORGID").IsOptional().HasMaxLength(50);
            Property(x => x.CompanyID).HasColumnName("COMPANYID").IsOptional().HasMaxLength(50);
            Property(x => x.FlowPhase).HasColumnName("FLOWPHASE").IsOptional().HasMaxLength(50);
            Property(x => x.FlowInfo).HasColumnName("FLOWINFO").IsOptional().HasMaxLength(1073741823);
            Property(x => x.StepName).HasColumnName("STEPNAME").IsOptional().HasMaxLength(500);
            Property(x => x.AuditYear).HasColumnName("AUDITYEAR").IsOptional().HasMaxLength(200);
            Property(x => x.ReportReleaseDate).HasColumnName("REPORTRELEASEDATE").IsOptional();
            Property(x => x.CommunicationRecordOfRelatedAuditReport).HasColumnName("COMMUNICATIONRECORDOFRELATEDAUDITREPORT").IsOptional().HasMaxLength(200);
            Property(x => x.CommunicationRecordOfRelatedAuditReportName).HasColumnName("COMMUNICATIONRECORDOFRELATEDAUDITREPORTNAME").IsOptional().HasMaxLength(200);
            Property(x => x.NameOfAuditReport).HasColumnName("NAMEOFAUDITREPORT").IsOptional().HasMaxLength(200);
            Property(x => x.AuditedDepartment).HasColumnName("AUDITEDDEPARTMENT").IsOptional().HasMaxLength(200);
            Property(x => x.Auditor).HasColumnName("AUDITOR").IsOptional().HasMaxLength(200);
            Property(x => x.AuditStartTime).HasColumnName("AUDITSTARTTIME").IsOptional();
            Property(x => x.AuditEndTime).HasColumnName("AUDITENDTIME").IsOptional();
            Property(x => x.AuditReportNo).HasColumnName("AUDITREPORTNO").IsOptional().HasMaxLength(200);
            Property(x => x.AuditTeamLeader).HasColumnName("AUDITTEAMLEADER").IsOptional().HasMaxLength(200);
            Property(x => x.DeadlineForSubmissionOfRectificationResults).HasColumnName("DEADLINEFORSUBMISSIONOFRECTIFICATIONRESULTS").IsOptional();
            Property(x => x.MembersOfAuditTeam).HasColumnName("MEMBERSOFAUDITTEAM").IsOptional().HasMaxLength(200);
            Property(x => x.RectificationRequirements).HasColumnName("RECTIFICATIONREQUIREMENTS").IsOptional().HasMaxLength(500);
            Property(x => x.BodyOfAuditReport).HasColumnName("BODYOFAUDITREPORT").IsOptional().HasMaxLength(500);
            Property(x => x.AppendixToAuditReport).HasColumnName("APPENDIXTOAUDITREPORT").IsOptional().HasMaxLength(500);
            Property(x => x.InstructionsFromTheLeaderInChargeOfFinance).HasColumnName("INSTRUCTIONSFROMTHELEADERINCHARGEOFFINANCE").IsOptional();
            Property(x => x.InstructionsOfTheLeaderInChargeOfTheAuditedSite).HasColumnName("INSTRUCTIONSOFTHELEADERINCHARGEOFTHEAUDITEDSITE").IsOptional();
            Property(x => x.ApprovalOfTheLeaderInChargeOfAudit).HasColumnName("APPROVALOFTHELEADERINCHARGEOFAUDIT").IsOptional();
            Property(x => x.GeneralManagerInstructions).HasColumnName("GENERALMANAGERINSTRUCTIONS").IsOptional();
            Property(x => x.ApplyUser).HasColumnName("APPLYUSER").IsOptional().HasMaxLength(200);
            Property(x => x.ApplyUserName).HasColumnName("APPLYUSERNAME").IsOptional().HasMaxLength(200);
            Property(x => x.AuditedDepartmentName).HasColumnName("AUDITEDDEPARTMENTNAME").IsOptional().HasMaxLength(200);
            Property(x => x.AuditorName).HasColumnName("AUDITORNAME").IsOptional().HasMaxLength(200);
            Property(x => x.AuditTeamLeaderName).HasColumnName("AUDITTEAMLEADERNAME").IsOptional().HasMaxLength(200);
            Property(x => x.MembersOfAuditTeamName).HasColumnName("MEMBERSOFAUDITTEAMNAME").IsOptional().HasMaxLength(200);
            Property(x => x.LegalAuditDepartmentLeaderSign).HasColumnName("LEGALAUDITDEPARTMENTLEADERSIGN").IsOptional();
        }
    }

    // T_B_MemoManagement
    internal partial class T_B_MemoManagementConfiguration : EntityTypeConfiguration<T_B_MemoManagement>
    {
        public T_B_MemoManagementConfiguration()
        {
			ToTable("T_B_MEMOMANAGEMENT");
            HasKey(x => x.ID);

            Property(x => x.ID).HasColumnName("ID").IsRequired().HasMaxLength(50);
            Property(x => x.CreateUserID).HasColumnName("CREATEUSERID").IsOptional().HasMaxLength(50);
            Property(x => x.CreateUser).HasColumnName("CREATEUSER").IsOptional().HasMaxLength(50);
            Property(x => x.CreateDate).HasColumnName("CREATEDATE").IsOptional();
            Property(x => x.ModifyUserID).HasColumnName("MODIFYUSERID").IsOptional().HasMaxLength(50);
            Property(x => x.ModifyUser).HasColumnName("MODIFYUSER").IsOptional().HasMaxLength(50);
            Property(x => x.ModifyDate).HasColumnName("MODIFYDATE").IsOptional();
            Property(x => x.OrgID).HasColumnName("ORGID").IsOptional().HasMaxLength(50);
            Property(x => x.OrgName).HasColumnName("ORGNAME").IsOptional().HasMaxLength(500);
            Property(x => x.FlowPhase).HasColumnName("FLOWPHASE").IsOptional().HasMaxLength(50);
            Property(x => x.StepName).HasColumnName("STEPNAME").IsOptional().HasMaxLength(50);
            Property(x => x.Dense).HasColumnName("DENSE").IsOptional().HasMaxLength(50);
            Property(x => x.UrgentSlow).HasColumnName("URGENTSLOW").IsOptional().HasMaxLength(50);
            Property(x => x.LeaderIssueName).HasColumnName("LEADERISSUENAME").IsOptional().HasMaxLength(50);
            Property(x => x.LeaderIssueID).HasColumnName("LEADERISSUEID").IsOptional().HasMaxLength(50);
            Property(x => x.LeaderIssueComment).HasColumnName("LEADERISSUECOMMENT").IsOptional().HasMaxLength(2000);
            Property(x => x.WorkDeptLeaderName).HasColumnName("WORKDEPTLEADERNAME").IsOptional().HasMaxLength(50);
            Property(x => x.WorkDeptLeaderID).HasColumnName("WORKDEPTLEADERID").IsOptional().HasMaxLength(50);
            Property(x => x.WorkDeptLeaderComment).HasColumnName("WORKDEPTLEADERCOMMENT").IsOptional().HasMaxLength(2000);
            Property(x => x.PublicCareerDeptName).HasColumnName("PUBLICCAREERDEPTNAME").IsOptional().HasMaxLength(50);
            Property(x => x.PublicCareerDeptID).HasColumnName("PUBLICCAREERDEPTID").IsOptional().HasMaxLength(50);
            Property(x => x.PublicCareerDeptComment).HasColumnName("PUBLICCAREERDEPTCOMMENT").IsOptional().HasMaxLength(2000);
            Property(x => x.LeaderCountersignNames).HasColumnName("LEADERCOUNTERSIGNNAMES").IsOptional().HasMaxLength(2000);
            Property(x => x.LeaderCountersignIDs).HasColumnName("LEADERCOUNTERSIGNIDS").IsOptional().HasMaxLength(2000);
            Property(x => x.LeaderCountersignComment).HasColumnName("LEADERCOUNTERSIGNCOMMENT").IsOptional();
            Property(x => x.DeptLeaderName).HasColumnName("DEPTLEADERNAME").IsOptional().HasMaxLength(50);
            Property(x => x.DeptLeaderID).HasColumnName("DEPTLEADERID").IsOptional().HasMaxLength(50);
            Property(x => x.DeptLeaderComment).HasColumnName("DEPTLEADERCOMMENT").IsOptional().HasMaxLength(2000);
            Property(x => x.DraftManComment).HasColumnName("DRAFTMANCOMMENT").IsOptional().HasMaxLength(2000);
            Property(x => x.PaperNumber).HasColumnName("PAPERNUMBER").IsOptional().HasMaxLength(50);
            Property(x => x.Title).HasColumnName("TITLE").IsOptional().HasMaxLength(500);
            Property(x => x.DocID).HasColumnName("DOCID").IsOptional().HasMaxLength(500);
            Property(x => x.MergeDocID).HasColumnName("MERGEDOCID").IsOptional().HasMaxLength(500);
            Property(x => x.MainSendUserName).HasColumnName("MAINSENDUSERNAME").IsOptional().HasMaxLength(500);
            Property(x => x.MainSendUserID).HasColumnName("MAINSENDUSERID").IsOptional().HasMaxLength(500);
            Property(x => x.OtherSendUserNames).HasColumnName("OTHERSENDUSERNAMES").IsOptional().HasMaxLength(500);
            Property(x => x.OtherSendUserIDs).HasColumnName("OTHERSENDUSERIDS").IsOptional().HasMaxLength(500);
            Property(x => x.TotalNumber).HasColumnName("TOTALNUMBER").IsOptional().HasMaxLength(50);
            Property(x => x.BodyTotalNumber).HasColumnName("BODYTOTALNUMBER").IsOptional().HasMaxLength(50);
            Property(x => x.AttachmentTotalNumber).HasColumnName("ATTACHMENTTOTALNUMBER").IsOptional().HasMaxLength(50);
            Property(x => x.Status).HasColumnName("STATUS").IsOptional().HasMaxLength(50);
            Property(x => x.ExecutedSteps).HasColumnName("EXECUTEDSTEPS").IsOptional().HasMaxLength(4000);
        }
    }

    // T_B_OutgoingFile
    internal partial class T_B_OutgoingFileConfiguration : EntityTypeConfiguration<T_B_OutgoingFile>
    {
        public T_B_OutgoingFileConfiguration()
        {
			ToTable("T_B_OUTGOINGFILE");
            HasKey(x => x.ID);

            Property(x => x.ID).HasColumnName("ID").IsRequired().HasMaxLength(50);
            Property(x => x.CreateUserID).HasColumnName("CREATEUSERID").IsOptional().HasMaxLength(50);
            Property(x => x.CreateUser).HasColumnName("CREATEUSER").IsOptional().HasMaxLength(50);
            Property(x => x.CreateDate).HasColumnName("CREATEDATE").IsOptional();
            Property(x => x.FlowState).HasColumnName("FLOWSTATE").IsOptional().HasMaxLength(50);
            Property(x => x.FlowPhase).HasColumnName("FLOWPHASE").IsOptional().HasMaxLength(50);
            Property(x => x.StepName).HasColumnName("STEPNAME").IsOptional().HasMaxLength(50);
            Property(x => x.WriteID).HasColumnName("WRITEID").IsOptional().HasMaxLength(50);
            Property(x => x.WriteName).HasColumnName("WRITENAME").IsOptional().HasMaxLength(50);
            Property(x => x.WriteDate).HasColumnName("WRITEDATE").IsOptional();
            Property(x => x.WriteDeptID).HasColumnName("WRITEDEPTID").IsOptional().HasMaxLength(50);
            Property(x => x.WriteDeptName).HasColumnName("WRITEDEPTNAME").IsOptional().HasMaxLength(50);
            Property(x => x.HandleDate).HasColumnName("HANDLEDATE").IsOptional();
            Property(x => x.OutType).HasColumnName("OUTTYPE").IsOptional().HasMaxLength(50);
            Property(x => x.Year).HasColumnName("YEAR").IsOptional().HasMaxLength(50);
            Property(x => x.Code).HasColumnName("CODE").IsOptional().HasMaxLength(50);
            Property(x => x.Security).HasColumnName("SECURITY").IsOptional().HasMaxLength(50);
            Property(x => x.Urgency).HasColumnName("URGENCY").IsOptional().HasMaxLength(50);
            Property(x => x.CopyCount).HasColumnName("COPYCOUNT").IsOptional();
            Property(x => x.Title).HasColumnName("TITLE").IsOptional().HasMaxLength(100);
            Property(x => x.MainSend).HasColumnName("MAINSEND").IsOptional().HasMaxLength(100);
            Property(x => x.TellDept).HasColumnName("TELLDEPT").IsOptional().HasMaxLength(100);
            Property(x => x.CopySend).HasColumnName("COPYSEND").IsOptional().HasMaxLength(100);
            Property(x => x.MainBody).HasColumnName("MAINBODY").IsOptional().HasMaxLength(100);
            Property(x => x.NewMainBody).HasColumnName("NEWMAINBODY").IsOptional().HasMaxLength(100);
            Property(x => x.Attachment).HasColumnName("ATTACHMENT").IsOptional();
            Property(x => x.MainDeptCheckSign).HasColumnName("MAINDEPTCHECKSIGN").IsOptional();
            Property(x => x.DrafterSign).HasColumnName("DRAFTERSIGN").IsOptional();
            Property(x => x.HuiQinSign).HasColumnName("HUIQINSIGN").IsOptional();
            Property(x => x.LeaderSign).HasColumnName("LEADERSIGN").IsOptional();
            Property(x => x.TaoHongAdmin).HasColumnName("TAOHONGADMIN").IsOptional().HasMaxLength(50);
            Property(x => x.SealID).HasColumnName("SEALID").IsOptional().HasMaxLength(50);
        }
    }

    // T_B_Remind
    internal partial class T_B_RemindConfiguration : EntityTypeConfiguration<T_B_Remind>
    {
        public T_B_RemindConfiguration()
        {
			ToTable("T_B_REMIND");
            HasKey(x => x.ID);

            Property(x => x.ID).HasColumnName("ID").IsRequired().HasMaxLength(50);
            Property(x => x.CreateUserID).HasColumnName("CREATEUSERID").IsOptional().HasMaxLength(50);
            Property(x => x.CreateUser).HasColumnName("CREATEUSER").IsOptional().HasMaxLength(50);
            Property(x => x.CreateDate).HasColumnName("CREATEDATE").IsOptional();
            Property(x => x.OutgoingFileID).HasColumnName("OUTGOINGFILEID").IsOptional().HasMaxLength(50);
            Property(x => x.UserID).HasColumnName("USERID").IsOptional();
            Property(x => x.UserName).HasColumnName("USERNAME").IsOptional();
            Property(x => x.Msg).HasColumnName("MSG").IsOptional();
        }
    }

    // T_B_SendFaxManagement
    internal partial class T_B_SendFaxManagementConfiguration : EntityTypeConfiguration<T_B_SendFaxManagement>
    {
        public T_B_SendFaxManagementConfiguration()
        {
			ToTable("T_B_SENDFAXMANAGEMENT");
            HasKey(x => x.ID);

            Property(x => x.ID).HasColumnName("ID").IsRequired().HasMaxLength(50);
            Property(x => x.CreateUserID).HasColumnName("CREATEUSERID").IsOptional().HasMaxLength(50);
            Property(x => x.CreateUser).HasColumnName("CREATEUSER").IsOptional().HasMaxLength(50);
            Property(x => x.CreateDate).HasColumnName("CREATEDATE").IsOptional();
            Property(x => x.ModifyUserID).HasColumnName("MODIFYUSERID").IsOptional().HasMaxLength(50);
            Property(x => x.ModifyUser).HasColumnName("MODIFYUSER").IsOptional().HasMaxLength(50);
            Property(x => x.ModifyDate).HasColumnName("MODIFYDATE").IsOptional();
            Property(x => x.OrgID).HasColumnName("ORGID").IsOptional().HasMaxLength(50);
            Property(x => x.OrgName).HasColumnName("ORGNAME").IsOptional().HasMaxLength(500);
            Property(x => x.ReceiveDept).HasColumnName("RECEIVEDEPT").IsOptional();
            Property(x => x.SendDept).HasColumnName("SENDDEPT").IsOptional().HasMaxLength(500);
            Property(x => x.SendDeptID).HasColumnName("SENDDEPTID").IsOptional().HasMaxLength(500);
            Property(x => x.ReceiveUserName).HasColumnName("RECEIVEUSERNAME").IsOptional().HasMaxLength(500);
            Property(x => x.SendUserName).HasColumnName("SENDUSERNAME").IsOptional().HasMaxLength(500);
            Property(x => x.SendUserID).HasColumnName("SENDUSERID").IsOptional().HasMaxLength(500);
            Property(x => x.OtherSendUserNames).HasColumnName("OTHERSENDUSERNAMES").IsOptional().HasMaxLength(500);
            Property(x => x.OtherSendUserIDs).HasColumnName("OTHERSENDUSERIDS").IsOptional().HasMaxLength(500);
            Property(x => x.SignedUserIDs).HasColumnName("SIGNEDUSERIDS").IsOptional().HasMaxLength(500);
            Property(x => x.SignedUserNames).HasColumnName("SIGNEDUSERNAMES").IsOptional().HasMaxLength(500);
            Property(x => x.PageNo).HasColumnName("PAGENO").IsOptional().HasMaxLength(50);
            Property(x => x.Telephone).HasColumnName("TELEPHONE").IsOptional().HasMaxLength(50);
            Property(x => x.Telephone2).HasColumnName("TELEPHONE2").IsOptional().HasMaxLength(50);
            Property(x => x.FaxNumber).HasColumnName("FAXNUMBER").IsOptional().HasMaxLength(50);
            Property(x => x.FaxNumber2).HasColumnName("FAXNUMBER2").IsOptional().HasMaxLength(50);
            Property(x => x.FaxTheme).HasColumnName("FAXTHEME").IsOptional().HasMaxLength(200);
            Property(x => x.Attachment).HasColumnName("ATTACHMENT").IsOptional().HasMaxLength(2000);
            Property(x => x.CheckorComment).HasColumnName("CHECKORCOMMENT").IsOptional().HasMaxLength(4000);
            Property(x => x.DeptLeaderComment).HasColumnName("DEPTLEADERCOMMENT").IsOptional().HasMaxLength(4000);
            Property(x => x.DepartLeaderComment).HasColumnName("DEPARTLEADERCOMMENT").IsOptional().HasMaxLength(4000);
            Property(x => x.FlowPhase).HasColumnName("FLOWPHASE").IsOptional().HasMaxLength(50);
        }
    }

    // T_BasicData_Supplier
    internal partial class T_BasicData_SupplierConfiguration : EntityTypeConfiguration<T_BasicData_Supplier>
    {
        public T_BasicData_SupplierConfiguration()
        {
			ToTable("T_BASICDATA_SUPPLIER");
            HasKey(x => x.ID);

            Property(x => x.ID).HasColumnName("ID").IsRequired().HasMaxLength(50);
            Property(x => x.CreateDate).HasColumnName("CREATEDATE").IsOptional();
            Property(x => x.ModifyDate).HasColumnName("MODIFYDATE").IsOptional();
            Property(x => x.CreateUserID).HasColumnName("CREATEUSERID").IsOptional().HasMaxLength(50);
            Property(x => x.CreateUser).HasColumnName("CREATEUSER").IsOptional().HasMaxLength(50);
            Property(x => x.ModifyUserID).HasColumnName("MODIFYUSERID").IsOptional().HasMaxLength(50);
            Property(x => x.ModifyUser).HasColumnName("MODIFYUSER").IsOptional().HasMaxLength(50);
            Property(x => x.OrgID).HasColumnName("ORGID").IsOptional().HasMaxLength(50);
            Property(x => x.CompanyID).HasColumnName("COMPANYID").IsOptional().HasMaxLength(50);
            Property(x => x.FlowPhase).HasColumnName("FLOWPHASE").IsOptional().HasMaxLength(50);
            Property(x => x.FlowInfo).HasColumnName("FLOWINFO").IsOptional().HasMaxLength(1073741823);
            Property(x => x.StepName).HasColumnName("STEPNAME").IsOptional().HasMaxLength(500);
            Property(x => x.CompanyName).HasColumnName("COMPANYNAME").IsOptional().HasMaxLength(200);
            Property(x => x.Abbreviation).HasColumnName("ABBREVIATION").IsOptional().HasMaxLength(200);
            Property(x => x.CompanyNature).HasColumnName("COMPANYNATURE").IsOptional().HasMaxLength(200);
            Property(x => x.CorporateRepresentative).HasColumnName("CORPORATEREPRESENTATIVE").IsOptional().HasMaxLength(200);
            Property(x => x.RegisteredCapital).HasColumnName("REGISTEREDCAPITAL").IsOptional().HasMaxLength(200);
            Property(x => x.RegisteredDate).HasColumnName("REGISTEREDDATE").IsOptional();
            Property(x => x.CompanyWebSite).HasColumnName("COMPANYWEBSITE").IsOptional().HasMaxLength(200);
            Property(x => x.CompanyAddress).HasColumnName("COMPANYADDRESS").IsOptional().HasMaxLength(200);
            Property(x => x.CompanyDesc).HasColumnName("COMPANYDESC").IsOptional().HasMaxLength(500);
            Property(x => x.OpenAccountBank).HasColumnName("OPENACCOUNTBANK").IsOptional().HasMaxLength(200);
            Property(x => x.BankAddress).HasColumnName("BANKADDRESS").IsOptional().HasMaxLength(200);
            Property(x => x.Taxation).HasColumnName("TAXATION").IsOptional().HasMaxLength(200);
            Property(x => x.BankAccount).HasColumnName("BANKACCOUNT").IsOptional().HasMaxLength(200);
            Property(x => x.Registrant).HasColumnName("REGISTRANT").IsOptional().HasMaxLength(200);
            Property(x => x.RegistrantName).HasColumnName("REGISTRANTNAME").IsOptional().HasMaxLength(200);
            Property(x => x.RegisterDate).HasColumnName("REGISTERDATE").IsOptional();
            Property(x => x.Remark).HasColumnName("REMARK").IsOptional().HasMaxLength(200);
            Property(x => x.Attachments).HasColumnName("ATTACHMENTS").IsOptional().HasMaxLength(500);
        }
    }

    // T_BM_NoPaymentConfirmation
    internal partial class T_BM_NoPaymentConfirmationConfiguration : EntityTypeConfiguration<T_BM_NoPaymentConfirmation>
    {
        public T_BM_NoPaymentConfirmationConfiguration()
        {
			ToTable("T_BM_NOPAYMENTCONFIRMATION");
            HasKey(x => x.ID);

            Property(x => x.ID).HasColumnName("ID").IsRequired().HasMaxLength(50);
            Property(x => x.CreateDate).HasColumnName("CREATEDATE").IsOptional();
            Property(x => x.ModifyDate).HasColumnName("MODIFYDATE").IsOptional();
            Property(x => x.CreateUserID).HasColumnName("CREATEUSERID").IsOptional().HasMaxLength(50);
            Property(x => x.CreateUser).HasColumnName("CREATEUSER").IsOptional().HasMaxLength(50);
            Property(x => x.ModifyUserID).HasColumnName("MODIFYUSERID").IsOptional().HasMaxLength(50);
            Property(x => x.ModifyUser).HasColumnName("MODIFYUSER").IsOptional().HasMaxLength(50);
            Property(x => x.OrgID).HasColumnName("ORGID").IsOptional().HasMaxLength(50);
            Property(x => x.CompanyID).HasColumnName("COMPANYID").IsOptional().HasMaxLength(50);
            Property(x => x.FlowPhase).HasColumnName("FLOWPHASE").IsOptional().HasMaxLength(50);
            Property(x => x.FlowInfo).HasColumnName("FLOWINFO").IsOptional().HasMaxLength(1073741823);
            Property(x => x.StepName).HasColumnName("STEPNAME").IsOptional().HasMaxLength(500);
            Property(x => x.CreateUserWorkNo).HasColumnName("CREATEUSERWORKNO").IsOptional().HasMaxLength(200);
            Property(x => x.CreateUserDept).HasColumnName("CREATEUSERDEPT").IsOptional().HasMaxLength(200);
            Property(x => x.CreateUserDeptName).HasColumnName("CREATEUSERDEPTNAME").IsOptional().HasMaxLength(200);
            Property(x => x.CreateUserPhone).HasColumnName("CREATEUSERPHONE").IsOptional().HasMaxLength(50);
            Property(x => x.TotalLoanAmount).HasColumnName("TOTALLOANAMOUNT").IsOptional().HasPrecision(18,2);
            Property(x => x.SumAlreadyReturnAmount).HasColumnName("SUMALREADYRETURNAMOUNT").IsOptional().HasPrecision(18,2);
            Property(x => x.SumUnReturnAmount).HasColumnName("SUMUNRETURNAMOUNT").IsOptional().HasPrecision(18,2);
            Property(x => x.DeptHeadIsAgree).HasColumnName("DEPTHEADISAGREE").IsOptional().HasMaxLength(50);
            Property(x => x.LoanInfo).HasColumnName("LOANINFO").IsOptional().HasMaxLength(1073741823);
            Property(x => x.Applysign).HasColumnName("APPLYSIGN").IsOptional();
            Property(x => x.DeptLeaderSign).HasColumnName("DEPTLEADERSIGN").IsOptional();
            Property(x => x.FinancialSign).HasColumnName("FINANCIALSIGN").IsOptional();
            Property(x => x.FlowEndDate).HasColumnName("FLOWENDDATE").IsOptional();
        }
    }

    // T_BM_NoPaymentConfirmation_LoanInfo
    internal partial class T_BM_NoPaymentConfirmation_LoanInfoConfiguration : EntityTypeConfiguration<T_BM_NoPaymentConfirmation_LoanInfo>
    {
        public T_BM_NoPaymentConfirmation_LoanInfoConfiguration()
        {
			ToTable("T_BM_NOPAYMENTCONFIRMATION_LOANINFO");
            HasKey(x => x.ID);

            Property(x => x.ID).HasColumnName("ID").IsRequired().HasMaxLength(50);
            Property(x => x.T_BM_NoPaymentConfirmationID).HasColumnName("T_BM_NOPAYMENTCONFIRMATIONID").IsOptional().HasMaxLength(50);
            Property(x => x.SortIndex).HasColumnName("SORTINDEX").IsOptional();
            Property(x => x.IsReleased).HasColumnName("ISRELEASED").IsOptional().HasMaxLength(1);
            Property(x => x.LoanApplyID).HasColumnName("LOANAPPLYID").IsOptional().HasMaxLength(50);
            Property(x => x.LoanSerialNumber).HasColumnName("LOANSERIALNUMBER").IsOptional().HasMaxLength(200);
            Property(x => x.LoanDate).HasColumnName("LOANDATE").IsOptional();
            Property(x => x.TaskNature).HasColumnName("TASKNATURE").IsOptional().HasMaxLength(50);
            Property(x => x.LoanAmount).HasColumnName("LOANAMOUNT").IsOptional().HasPrecision(18,2);
            Property(x => x.AlreadyReturnAmount).HasColumnName("ALREADYRETURNAMOUNT").IsOptional().HasPrecision(18,2);
            Property(x => x.UnReturnAmount).HasColumnName("UNRETURNAMOUNT").IsOptional().HasPrecision(18,2);
            Property(x => x.UnReturnReason).HasColumnName("UNRETURNREASON").IsOptional().HasMaxLength(500);
            Property(x => x.PlanRepayDate).HasColumnName("PLANREPAYDATE").IsOptional();

            // Foreign keys
            HasOptional(a => a.T_BM_NoPaymentConfirmation).WithMany(b => b.T_BM_NoPaymentConfirmation_LoanInfo).HasForeignKey(c => c.T_BM_NoPaymentConfirmationID); // FK_T_BM_NoPaymentConfirmation_LoanInfo_T_BM_NoPaymentConfirmation
        }
    }

    // T_BM_PersonalLoanUnReturnNotice
    internal partial class T_BM_PersonalLoanUnReturnNoticeConfiguration : EntityTypeConfiguration<T_BM_PersonalLoanUnReturnNotice>
    {
        public T_BM_PersonalLoanUnReturnNoticeConfiguration()
        {
			ToTable("T_BM_PERSONALLOANUNRETURNNOTICE");
            HasKey(x => x.ID);

            Property(x => x.ID).HasColumnName("ID").IsRequired().HasMaxLength(50);
            Property(x => x.CreateDate).HasColumnName("CREATEDATE").IsOptional();
            Property(x => x.ModifyDate).HasColumnName("MODIFYDATE").IsOptional();
            Property(x => x.CreateUserID).HasColumnName("CREATEUSERID").IsOptional().HasMaxLength(50);
            Property(x => x.CreateUser).HasColumnName("CREATEUSER").IsOptional().HasMaxLength(50);
            Property(x => x.ModifyUserID).HasColumnName("MODIFYUSERID").IsOptional().HasMaxLength(50);
            Property(x => x.ModifyUser).HasColumnName("MODIFYUSER").IsOptional().HasMaxLength(50);
            Property(x => x.OrgID).HasColumnName("ORGID").IsOptional().HasMaxLength(50);
            Property(x => x.CompanyID).HasColumnName("COMPANYID").IsOptional().HasMaxLength(50);
            Property(x => x.FlowPhase).HasColumnName("FLOWPHASE").IsOptional().HasMaxLength(50);
            Property(x => x.FlowInfo).HasColumnName("FLOWINFO").IsOptional().HasMaxLength(1073741823);
            Property(x => x.StepName).HasColumnName("STEPNAME").IsOptional().HasMaxLength(500);
            Property(x => x.TJJZRQ).HasColumnName("TJJZRQ").IsOptional();
            Property(x => x.HKJZRQ).HasColumnName("HKJZRQ").IsOptional();
            Property(x => x.ABUserIDs).HasColumnName("ABUSERIDS").IsOptional();
            Property(x => x.ABUser).HasColumnName("ABUSER").IsOptional();
            Property(x => x.ABUserName).HasColumnName("ABUSERNAME").IsOptional();
        }
    }

    // T_BM_RepaymentForm
    internal partial class T_BM_RepaymentFormConfiguration : EntityTypeConfiguration<T_BM_RepaymentForm>
    {
        public T_BM_RepaymentFormConfiguration()
        {
			ToTable("T_BM_REPAYMENTFORM");
            HasKey(x => x.ID);

            Property(x => x.ID).HasColumnName("ID").IsRequired().HasMaxLength(50);
            Property(x => x.CreateDate).HasColumnName("CREATEDATE").IsOptional();
            Property(x => x.ModifyDate).HasColumnName("MODIFYDATE").IsOptional();
            Property(x => x.CreateUserID).HasColumnName("CREATEUSERID").IsOptional().HasMaxLength(50);
            Property(x => x.CreateUser).HasColumnName("CREATEUSER").IsOptional().HasMaxLength(50);
            Property(x => x.ModifyUserID).HasColumnName("MODIFYUSERID").IsOptional().HasMaxLength(50);
            Property(x => x.ModifyUser).HasColumnName("MODIFYUSER").IsOptional().HasMaxLength(50);
            Property(x => x.OrgID).HasColumnName("ORGID").IsOptional().HasMaxLength(50);
            Property(x => x.CompanyID).HasColumnName("COMPANYID").IsOptional().HasMaxLength(50);
            Property(x => x.FlowPhase).HasColumnName("FLOWPHASE").IsOptional().HasMaxLength(50);
            Property(x => x.FlowInfo).HasColumnName("FLOWINFO").IsOptional().HasMaxLength(1073741823);
            Property(x => x.StepName).HasColumnName("STEPNAME").IsOptional().HasMaxLength(500);
            Property(x => x.Repayor).HasColumnName("REPAYOR").IsOptional().HasMaxLength(50);
            Property(x => x.RepayorDept).HasColumnName("REPAYORDEPT").IsOptional().HasMaxLength(200);
            Property(x => x.RepayorDeptName).HasColumnName("REPAYORDEPTNAME").IsOptional().HasMaxLength(200);
            Property(x => x.RepayDate).HasColumnName("REPAYDATE").IsOptional();
            Property(x => x.UnReturnAmount).HasColumnName("UNRETURNAMOUNT").IsOptional().HasPrecision(18,2);
            Property(x => x.RepayAmount).HasColumnName("REPAYAMOUNT").IsOptional().HasPrecision(18,2);
            Property(x => x.RepayLocation).HasColumnName("REPAYLOCATION").IsOptional().HasMaxLength(200);
            Property(x => x.RepayType).HasColumnName("REPAYTYPE").IsOptional().HasMaxLength(200);
            Property(x => x.Remark).HasColumnName("REMARK").IsOptional().HasMaxLength(500);
            Property(x => x.Attachment).HasColumnName("ATTACHMENT").IsOptional().HasMaxLength(500);
            Property(x => x.LoanInfo).HasColumnName("LOANINFO").IsOptional().HasMaxLength(1073741823);
            Property(x => x.ApplySign).HasColumnName("APPLYSIGN").IsOptional();
            Property(x => x.FinancialSign).HasColumnName("FINANCIALSIGN").IsOptional();
            Property(x => x.FormCode).HasColumnName("FORMCODE").IsOptional().HasMaxLength(50);
            Property(x => x.IsBranchRepayment).HasColumnName("ISBRANCHREPAYMENT").IsOptional().HasMaxLength(50);
            Property(x => x.FlowEndDate).HasColumnName("FLOWENDDATE").IsOptional();
            Property(x => x.RepayorWorkNo).HasColumnName("REPAYORWORKNO").IsOptional().HasMaxLength(50);
            Property(x => x.RepayorPhone).HasColumnName("REPAYORPHONE").IsOptional().HasMaxLength(50);
            Property(x => x.FinanceDeptDate).HasColumnName("FINANCEDEPTDATE").IsOptional();
            Property(x => x.FinancialAuditor).HasColumnName("FINANCIALAUDITOR").IsOptional().HasMaxLength(200);
            Property(x => x.FinancialAuditorName).HasColumnName("FINANCIALAUDITORNAME").IsOptional().HasMaxLength(200);
        }
    }

    // T_BM_RepaymentForm_LoanInfo
    internal partial class T_BM_RepaymentForm_LoanInfoConfiguration : EntityTypeConfiguration<T_BM_RepaymentForm_LoanInfo>
    {
        public T_BM_RepaymentForm_LoanInfoConfiguration()
        {
			ToTable("T_BM_REPAYMENTFORM_LOANINFO");
            HasKey(x => x.ID);

            Property(x => x.ID).HasColumnName("ID").IsRequired().HasMaxLength(50);
            Property(x => x.T_BM_RepaymentFormID).HasColumnName("T_BM_REPAYMENTFORMID").IsOptional().HasMaxLength(50);
            Property(x => x.SortIndex).HasColumnName("SORTINDEX").IsOptional();
            Property(x => x.IsReleased).HasColumnName("ISRELEASED").IsOptional().HasMaxLength(1);
            Property(x => x.LoanApplyID).HasColumnName("LOANAPPLYID").IsOptional().HasMaxLength(50);
            Property(x => x.LoanSerialNumber).HasColumnName("LOANSERIALNUMBER").IsOptional().HasMaxLength(50);
            Property(x => x.LoanDate).HasColumnName("LOANDATE").IsOptional();
            Property(x => x.LoanAmount).HasColumnName("LOANAMOUNT").IsOptional().HasPrecision(18,2);
            Property(x => x.AlreadyReturnAmount).HasColumnName("ALREADYRETURNAMOUNT").IsOptional().HasPrecision(18,2);
            Property(x => x.UnReturnAmount).HasColumnName("UNRETURNAMOUNT").IsOptional().HasPrecision(18,2);
            Property(x => x.ThisTimeAmount).HasColumnName("THISTIMEAMOUNT").IsOptional().HasPrecision(18,2);
            Property(x => x.LoanReason).HasColumnName("LOANREASON").IsOptional().HasMaxLength(500);
            Property(x => x.TaskNature).HasColumnName("TASKNATURE").IsOptional().HasMaxLength(200);

            // Foreign keys
            HasOptional(a => a.T_BM_RepaymentForm).WithMany(b => b.T_BM_RepaymentForm_LoanInfo).HasForeignKey(c => c.T_BM_RepaymentFormID); // FK_T_BM_RepaymentForm_LoanInfo_T_BM_RepaymentForm
        }
    }

    // T_Car_Base
    internal partial class T_Car_BaseConfiguration : EntityTypeConfiguration<T_Car_Base>
    {
        public T_Car_BaseConfiguration()
        {
			ToTable("T_CAR_BASE");
            HasKey(x => x.ID);

            Property(x => x.ID).HasColumnName("ID").IsRequired().HasMaxLength(50);
            Property(x => x.CreateDate).HasColumnName("CREATEDATE").IsOptional();
            Property(x => x.ModifyDate).HasColumnName("MODIFYDATE").IsOptional();
            Property(x => x.CreateUserID).HasColumnName("CREATEUSERID").IsOptional().HasMaxLength(50);
            Property(x => x.CreateUser).HasColumnName("CREATEUSER").IsOptional().HasMaxLength(50);
            Property(x => x.ModifyUserID).HasColumnName("MODIFYUSERID").IsOptional().HasMaxLength(50);
            Property(x => x.ModifyUser).HasColumnName("MODIFYUSER").IsOptional().HasMaxLength(50);
            Property(x => x.OrgID).HasColumnName("ORGID").IsOptional().HasMaxLength(50);
            Property(x => x.CompanyID).HasColumnName("COMPANYID").IsOptional().HasMaxLength(50);
            Property(x => x.FlowPhase).HasColumnName("FLOWPHASE").IsOptional().HasMaxLength(50);
            Property(x => x.FlowInfo).HasColumnName("FLOWINFO").IsOptional().HasMaxLength(1073741823);
            Property(x => x.StepName).HasColumnName("STEPNAME").IsOptional().HasMaxLength(500);
            Property(x => x.CarType).HasColumnName("CARTYPE").IsOptional().HasMaxLength(200);
            Property(x => x.CarStatus).HasColumnName("CARSTATUS").IsOptional().HasMaxLength(200);
            Property(x => x.CarNo).HasColumnName("CARNO").IsOptional().HasMaxLength(200);
            Property(x => x.EngineNo).HasColumnName("ENGINENO").IsOptional().HasMaxLength(200);
            Property(x => x.CarModel).HasColumnName("CARMODEL").IsOptional().HasMaxLength(200);
            Property(x => x.CarBrand).HasColumnName("CARBRAND").IsOptional().HasMaxLength(200);
            Property(x => x.CarSeatNum).HasColumnName("CARSEATNUM").IsOptional();
            Property(x => x.BuyDate).HasColumnName("BUYDATE").IsOptional();
            Property(x => x.LicenseDate).HasColumnName("LICENSEDATE").IsOptional();
            Property(x => x.SupplyName).HasColumnName("SUPPLYNAME").IsOptional().HasMaxLength(200);
            Property(x => x.SupplyContact).HasColumnName("SUPPLYCONTACT").IsOptional().HasMaxLength(200);
            Property(x => x.SupplyPhone).HasColumnName("SUPPLYPHONE").IsOptional().HasMaxLength(200);
            Property(x => x.Remark).HasColumnName("REMARK").IsOptional().HasMaxLength(500);
            Property(x => x.CarPhoto).HasColumnName("CARPHOTO").IsOptional().HasMaxLength(2147483647);
        }
    }

    // T_Car_Driver
    internal partial class T_Car_DriverConfiguration : EntityTypeConfiguration<T_Car_Driver>
    {
        public T_Car_DriverConfiguration()
        {
			ToTable("T_CAR_DRIVER");
            HasKey(x => x.ID);

            Property(x => x.ID).HasColumnName("ID").IsRequired().HasMaxLength(50);
            Property(x => x.CreateDate).HasColumnName("CREATEDATE").IsOptional();
            Property(x => x.ModifyDate).HasColumnName("MODIFYDATE").IsOptional();
            Property(x => x.CreateUserID).HasColumnName("CREATEUSERID").IsOptional().HasMaxLength(50);
            Property(x => x.CreateUser).HasColumnName("CREATEUSER").IsOptional().HasMaxLength(50);
            Property(x => x.ModifyUserID).HasColumnName("MODIFYUSERID").IsOptional().HasMaxLength(50);
            Property(x => x.ModifyUser).HasColumnName("MODIFYUSER").IsOptional().HasMaxLength(50);
            Property(x => x.OrgID).HasColumnName("ORGID").IsOptional().HasMaxLength(50);
            Property(x => x.CompanyID).HasColumnName("COMPANYID").IsOptional().HasMaxLength(50);
            Property(x => x.FlowPhase).HasColumnName("FLOWPHASE").IsOptional().HasMaxLength(50);
            Property(x => x.FlowInfo).HasColumnName("FLOWINFO").IsOptional().HasMaxLength(1073741823);
            Property(x => x.StepName).HasColumnName("STEPNAME").IsOptional().HasMaxLength(500);
            Property(x => x.Name).HasColumnName("NAME").IsOptional().HasMaxLength(200);
            Property(x => x.Dept).HasColumnName("DEPT").IsOptional().HasMaxLength(200);
            Property(x => x.DeptName).HasColumnName("DEPTNAME").IsOptional().HasMaxLength(200);
            Property(x => x.Sex).HasColumnName("SEX").IsOptional().HasMaxLength(200);
            Property(x => x.Bir).HasColumnName("BIR").IsOptional();
            Property(x => x.DrivingLicenseDriveType).HasColumnName("DRIVINGLICENSEDRIVETYPE").IsOptional().HasMaxLength(200);
            Property(x => x.DrivingLicenseDriveNo).HasColumnName("DRIVINGLICENSEDRIVENO").IsOptional().HasMaxLength(200);
            Property(x => x.DrivingLicenseDriveCode).HasColumnName("DRIVINGLICENSEDRIVECODE").IsOptional().HasMaxLength(200);
            Property(x => x.FirstReissueDate).HasColumnName("FIRSTREISSUEDATE").IsOptional();
            Property(x => x.NextCheckDate).HasColumnName("NEXTCHECKDATE").IsOptional();
            Property(x => x.DriverLicenseExpirationDate).HasColumnName("DRIVERLICENSEEXPIRATIONDATE").IsOptional();
            Property(x => x.EmployStartDate).HasColumnName("EMPLOYSTARTDATE").IsOptional();
            Property(x => x.EmployEndDate).HasColumnName("EMPLOYENDDATE").IsOptional();
            Property(x => x.OfficePhone).HasColumnName("OFFICEPHONE").IsOptional().HasMaxLength(200);
            Property(x => x.HomePhone).HasColumnName("HOMEPHONE").IsOptional().HasMaxLength(200);
            Property(x => x.MobilePhone).HasColumnName("MOBILEPHONE").IsOptional().HasMaxLength(200);
            Property(x => x.MainCarType).HasColumnName("MAINCARTYPE").IsOptional().HasMaxLength(200);
            Property(x => x.Attachment).HasColumnName("ATTACHMENT").IsOptional().HasMaxLength(500);
        }
    }

    // T_Car_Maintenance
    internal partial class T_Car_MaintenanceConfiguration : EntityTypeConfiguration<T_Car_Maintenance>
    {
        public T_Car_MaintenanceConfiguration()
        {
			ToTable("T_CAR_MAINTENANCE");
            HasKey(x => x.ID);

            Property(x => x.ID).HasColumnName("ID").IsRequired().HasMaxLength(50);
            Property(x => x.CreateDate).HasColumnName("CREATEDATE").IsOptional();
            Property(x => x.ModifyDate).HasColumnName("MODIFYDATE").IsOptional();
            Property(x => x.CreateUserID).HasColumnName("CREATEUSERID").IsOptional().HasMaxLength(50);
            Property(x => x.CreateUser).HasColumnName("CREATEUSER").IsOptional().HasMaxLength(50);
            Property(x => x.ModifyUserID).HasColumnName("MODIFYUSERID").IsOptional().HasMaxLength(50);
            Property(x => x.ModifyUser).HasColumnName("MODIFYUSER").IsOptional().HasMaxLength(50);
            Property(x => x.OrgID).HasColumnName("ORGID").IsOptional().HasMaxLength(50);
            Property(x => x.CompanyID).HasColumnName("COMPANYID").IsOptional().HasMaxLength(50);
            Property(x => x.FlowPhase).HasColumnName("FLOWPHASE").IsOptional().HasMaxLength(50);
            Property(x => x.FlowInfo).HasColumnName("FLOWINFO").IsOptional().HasMaxLength(1073741823);
            Property(x => x.StepName).HasColumnName("STEPNAME").IsOptional().HasMaxLength(500);
            Property(x => x.CarNo).HasColumnName("CARNO").IsOptional().HasMaxLength(200);
            Property(x => x.CarNoName).HasColumnName("CARNONAME").IsOptional().HasMaxLength(200);
            Property(x => x.MaintenanceDate).HasColumnName("MAINTENANCEDATE").IsOptional();
            Property(x => x.MaintenanceDetail).HasColumnName("MAINTENANCEDETAIL").IsOptional().HasMaxLength(1073741823);
            Property(x => x.AllCost).HasColumnName("ALLCOST").IsOptional().HasPrecision(18,4);
            Property(x => x.CostOperator).HasColumnName("COSTOPERATOR").IsOptional().HasMaxLength(200);
            Property(x => x.CostOperatorName).HasColumnName("COSTOPERATORNAME").IsOptional().HasMaxLength(200);
            Property(x => x.CostInsured).HasColumnName("COSTINSURED").IsOptional().HasPrecision(18,4);
            Property(x => x.CostOutInsurance).HasColumnName("COSTOUTINSURANCE").IsOptional().HasPrecision(18,4);
            Property(x => x.Pos).HasColumnName("POS").IsOptional().HasMaxLength(200);
            Property(x => x.Remark).HasColumnName("REMARK").IsOptional().HasMaxLength(500);
        }
    }

    // T_Car_Maintenance_MaintenanceDetail
    internal partial class T_Car_Maintenance_MaintenanceDetailConfiguration : EntityTypeConfiguration<T_Car_Maintenance_MaintenanceDetail>
    {
        public T_Car_Maintenance_MaintenanceDetailConfiguration()
        {
			ToTable("T_CAR_MAINTENANCE_MAINTENANCEDETAIL");
            HasKey(x => x.ID);

            Property(x => x.ID).HasColumnName("ID").IsRequired().HasMaxLength(50);
            Property(x => x.T_Car_MaintenanceID).HasColumnName("T_CAR_MAINTENANCEID").IsOptional().HasMaxLength(50);
            Property(x => x.SortIndex).HasColumnName("SORTINDEX").IsOptional();
            Property(x => x.IsReleased).HasColumnName("ISRELEASED").IsOptional().HasMaxLength(1);
            Property(x => x.MaintenanceCategory).HasColumnName("MAINTENANCECATEGORY").IsOptional().HasMaxLength(200);
            Property(x => x.MaintenanceCategorySmall).HasColumnName("MAINTENANCECATEGORYSMALL").IsOptional().HasMaxLength(200);
            Property(x => x.Cost).HasColumnName("COST").IsOptional().HasMaxLength(200);
            Property(x => x.Remark).HasColumnName("REMARK").IsOptional().HasMaxLength(200);

            // Foreign keys
            HasOptional(a => a.T_Car_Maintenance).WithMany(b => b.T_Car_Maintenance_MaintenanceDetail).HasForeignKey(c => c.T_Car_MaintenanceID); // FK_T_Car_Maintenance_MaintenanceDetail_T_Car_Maintenance
        }
    }

    // T_Car_UseApply
    internal partial class T_Car_UseApplyConfiguration : EntityTypeConfiguration<T_Car_UseApply>
    {
        public T_Car_UseApplyConfiguration()
        {
			ToTable("T_CAR_USEAPPLY");
            HasKey(x => x.ID);

            Property(x => x.ID).HasColumnName("ID").IsRequired().HasMaxLength(50);
            Property(x => x.CreateDate).HasColumnName("CREATEDATE").IsOptional();
            Property(x => x.ModifyDate).HasColumnName("MODIFYDATE").IsOptional();
            Property(x => x.CreateUserID).HasColumnName("CREATEUSERID").IsOptional().HasMaxLength(50);
            Property(x => x.CreateUser).HasColumnName("CREATEUSER").IsOptional().HasMaxLength(50);
            Property(x => x.ModifyUserID).HasColumnName("MODIFYUSERID").IsOptional().HasMaxLength(50);
            Property(x => x.ModifyUser).HasColumnName("MODIFYUSER").IsOptional().HasMaxLength(50);
            Property(x => x.OrgID).HasColumnName("ORGID").IsOptional().HasMaxLength(50);
            Property(x => x.CompanyID).HasColumnName("COMPANYID").IsOptional().HasMaxLength(50);
            Property(x => x.FlowPhase).HasColumnName("FLOWPHASE").IsOptional().HasMaxLength(50);
            Property(x => x.FlowInfo).HasColumnName("FLOWINFO").IsOptional().HasMaxLength(1073741823);
            Property(x => x.StepName).HasColumnName("STEPNAME").IsOptional().HasMaxLength(500);
            Property(x => x.Apply).HasColumnName("APPLY").IsOptional().HasMaxLength(200);
            Property(x => x.ApplyName).HasColumnName("APPLYNAME").IsOptional().HasMaxLength(200);
            Property(x => x.ApplyDate).HasColumnName("APPLYDATE").IsOptional();
            Property(x => x.CarUser).HasColumnName("CARUSER").IsOptional().HasMaxLength(200);
            Property(x => x.CarUserName).HasColumnName("CARUSERNAME").IsOptional().HasMaxLength(200);
            Property(x => x.CarUseDept).HasColumnName("CARUSEDEPT").IsOptional().HasMaxLength(200);
            Property(x => x.CarUseDeptName).HasColumnName("CARUSEDEPTNAME").IsOptional().HasMaxLength(200);
            Property(x => x.Phone).HasColumnName("PHONE").IsOptional().HasMaxLength(200);
            Property(x => x.Project).HasColumnName("PROJECT").IsOptional().HasMaxLength(200);
            Property(x => x.ProjectName).HasColumnName("PROJECTNAME").IsOptional().HasMaxLength(200);
            Property(x => x.ProjectNameName).HasColumnName("PROJECTNAMENAME").IsOptional().HasMaxLength(200);
            Property(x => x.CarUseNum).HasColumnName("CARUSENUM").IsOptional();
            Property(x => x.CarUsePos).HasColumnName("CARUSEPOS").IsOptional().HasMaxLength(200);
            Property(x => x.Destination).HasColumnName("DESTINATION").IsOptional().HasMaxLength(200);
            Property(x => x.WaitPlace).HasColumnName("WAITPLACE").IsOptional().HasMaxLength(200);
            Property(x => x.Reson).HasColumnName("RESON").IsOptional().HasMaxLength(200);
            Property(x => x.LeaveDate).HasColumnName("LEAVEDATE").IsOptional();
            Property(x => x.ExpectBackDate).HasColumnName("EXPECTBACKDATE").IsOptional();
            Property(x => x.Remark).HasColumnName("REMARK").IsOptional().HasMaxLength(500);
            Property(x => x.InternalDispatchInformation).HasColumnName("INTERNALDISPATCHINFORMATION").IsOptional().HasMaxLength(1073741823);
            Property(x => x.ExternalDispatchInformation).HasColumnName("EXTERNALDISPATCHINFORMATION").IsOptional().HasMaxLength(1073741823);
            Property(x => x.ActualLeaveDate).HasColumnName("ACTUALLEAVEDATE").IsOptional();
            Property(x => x.ActualBackDate).HasColumnName("ACTUALBACKDATE").IsOptional();
            Property(x => x.AcutalUseDays).HasColumnName("ACUTALUSEDAYS").IsOptional().HasMaxLength(200);
            Property(x => x.MileageThisTime).HasColumnName("MILEAGETHISTIME").IsOptional().HasMaxLength(200);
            Property(x => x.DeptLeaderSign).HasColumnName("DEPTLEADERSIGN").IsOptional();
            Property(x => x.CarClassSendCarSign).HasColumnName("CARCLASSSENDCARSIGN").IsOptional();
            Property(x => x.CarClassLeaderSign).HasColumnName("CARCLASSLEADERSIGN").IsOptional();
            Property(x => x.ApplyDept).HasColumnName("APPLYDEPT").IsOptional().HasMaxLength(200);
            Property(x => x.ApplyDeptName).HasColumnName("APPLYDEPTNAME").IsOptional().HasMaxLength(200);
            Property(x => x.ExpectUseDays).HasColumnName("EXPECTUSEDAYS").IsOptional();
            Property(x => x.SerialNumber).HasColumnName("SERIALNUMBER").IsOptional().HasMaxLength(200);
        }
    }

    // T_Car_UseApply_ExternalDispatchInformation
    internal partial class T_Car_UseApply_ExternalDispatchInformationConfiguration : EntityTypeConfiguration<T_Car_UseApply_ExternalDispatchInformation>
    {
        public T_Car_UseApply_ExternalDispatchInformationConfiguration()
        {
			ToTable("T_CAR_USEAPPLY_EXTERNALDISPATCHINFORMATION");
            HasKey(x => x.ID);

            Property(x => x.ID).HasColumnName("ID").IsRequired().HasMaxLength(50);
            Property(x => x.T_Car_UseApplyID).HasColumnName("T_CAR_USEAPPLYID").IsOptional().HasMaxLength(50);
            Property(x => x.SortIndex).HasColumnName("SORTINDEX").IsOptional();
            Property(x => x.IsReleased).HasColumnName("ISRELEASED").IsOptional().HasMaxLength(1);
            Property(x => x.RentalCarCompany).HasColumnName("RENTALCARCOMPANY").IsOptional().HasMaxLength(200);
            Property(x => x.CarBrand).HasColumnName("CARBRAND").IsOptional().HasMaxLength(200);
            Property(x => x.CarModel).HasColumnName("CARMODEL").IsOptional().HasMaxLength(200);
            Property(x => x.CarSeatNum).HasColumnName("CARSEATNUM").IsOptional();
            Property(x => x.CarNo).HasColumnName("CARNO").IsOptional().HasMaxLength(200);
            Property(x => x.ContactName).HasColumnName("CONTACTNAME").IsOptional().HasMaxLength(200);
            Property(x => x.MobilePhone).HasColumnName("MOBILEPHONE").IsOptional().HasMaxLength(200);

            // Foreign keys
            HasOptional(a => a.T_Car_UseApply).WithMany(b => b.T_Car_UseApply_ExternalDispatchInformation).HasForeignKey(c => c.T_Car_UseApplyID); // FK_T_Car_UseApply_ExternalDispatchInformation_T_Car_UseApply
        }
    }

    // T_Car_UseApply_InternalDispatchInformation
    internal partial class T_Car_UseApply_InternalDispatchInformationConfiguration : EntityTypeConfiguration<T_Car_UseApply_InternalDispatchInformation>
    {
        public T_Car_UseApply_InternalDispatchInformationConfiguration()
        {
			ToTable("T_CAR_USEAPPLY_INTERNALDISPATCHINFORMATION");
            HasKey(x => x.ID);

            Property(x => x.ID).HasColumnName("ID").IsRequired().HasMaxLength(50);
            Property(x => x.T_Car_UseApplyID).HasColumnName("T_CAR_USEAPPLYID").IsOptional().HasMaxLength(50);
            Property(x => x.SortIndex).HasColumnName("SORTINDEX").IsOptional();
            Property(x => x.IsReleased).HasColumnName("ISRELEASED").IsOptional().HasMaxLength(1);
            Property(x => x.CarNo).HasColumnName("CARNO").IsOptional().HasMaxLength(200);
            Property(x => x.CarNoName).HasColumnName("CARNONAME").IsOptional().HasMaxLength(200);
            Property(x => x.CarBrand).HasColumnName("CARBRAND").IsOptional().HasMaxLength(200);
            Property(x => x.CarModel).HasColumnName("CARMODEL").IsOptional().HasMaxLength(200);
            Property(x => x.CarSeatNum).HasColumnName("CARSEATNUM").IsOptional().HasMaxLength(200);
            Property(x => x.DriverName).HasColumnName("DRIVERNAME").IsOptional().HasMaxLength(200);
            Property(x => x.DriverNameName).HasColumnName("DRIVERNAMENAME").IsOptional().HasMaxLength(200);
            Property(x => x.MobilePhone).HasColumnName("MOBILEPHONE").IsOptional().HasMaxLength(200);

            // Foreign keys
            HasOptional(a => a.T_Car_UseApply).WithMany(b => b.T_Car_UseApply_InternalDispatchInformation).HasForeignKey(c => c.T_Car_UseApplyID); // FK_T_Car_UseApply_InternalDispatchInformation_T_Car_UseApply
        }
    }

    // T_ContractsAndProjects_ProjectDataAccessRequest
    internal partial class T_ContractsAndProjects_ProjectDataAccessRequestConfiguration : EntityTypeConfiguration<T_ContractsAndProjects_ProjectDataAccessRequest>
    {
        public T_ContractsAndProjects_ProjectDataAccessRequestConfiguration()
        {
			ToTable("T_CONTRACTSANDPROJECTS_PROJECTDATAACCESSREQUEST");
            HasKey(x => x.ID);

            Property(x => x.ID).HasColumnName("ID").IsRequired().HasMaxLength(50);
            Property(x => x.CreateDate).HasColumnName("CREATEDATE").IsOptional();
            Property(x => x.ModifyDate).HasColumnName("MODIFYDATE").IsOptional();
            Property(x => x.CreateUserID).HasColumnName("CREATEUSERID").IsOptional().HasMaxLength(50);
            Property(x => x.CreateUser).HasColumnName("CREATEUSER").IsOptional().HasMaxLength(50);
            Property(x => x.ModifyUserID).HasColumnName("MODIFYUSERID").IsOptional().HasMaxLength(50);
            Property(x => x.ModifyUser).HasColumnName("MODIFYUSER").IsOptional().HasMaxLength(50);
            Property(x => x.OrgID).HasColumnName("ORGID").IsOptional().HasMaxLength(50);
            Property(x => x.CompanyID).HasColumnName("COMPANYID").IsOptional().HasMaxLength(50);
            Property(x => x.FlowPhase).HasColumnName("FLOWPHASE").IsOptional().HasMaxLength(50);
            Property(x => x.FlowInfo).HasColumnName("FLOWINFO").IsOptional().HasMaxLength(1073741823);
            Property(x => x.StepName).HasColumnName("STEPNAME").IsOptional().HasMaxLength(500);
            Property(x => x.FillInPerson).HasColumnName("FILLINPERSON").IsOptional().HasMaxLength(200);
            Property(x => x.DateOfCompletion).HasColumnName("DATEOFCOMPLETION").IsOptional();
            Property(x => x.ProjectNameInvolved).HasColumnName("PROJECTNAMEINVOLVED").IsOptional().HasMaxLength(200);
            Property(x => x.ProjectNameInvolvedName).HasColumnName("PROJECTNAMEINVOLVEDNAME").IsOptional().HasMaxLength(200);
            Property(x => x.NameOfCaseInvolved).HasColumnName("NAMEOFCASEINVOLVED").IsOptional().HasMaxLength(200);
            Property(x => x.NameOfCaseInvolvedName).HasColumnName("NAMEOFCASEINVOLVEDNAME").IsOptional().HasMaxLength(200);
            Property(x => x.ContentOfApplicationInformation).HasColumnName("CONTENTOFAPPLICATIONINFORMATION").IsOptional().HasMaxLength(500);
            Property(x => x.ReasonsForInspection).HasColumnName("REASONSFORINSPECTION").IsOptional().HasMaxLength(500);
            Property(x => x.AuthorizationStartTime).HasColumnName("AUTHORIZATIONSTARTTIME").IsOptional();
            Property(x => x.AuthorizationDeadline).HasColumnName("AUTHORIZATIONDEADLINE").IsOptional();
            Property(x => x.AuthorizedUser).HasColumnName("AUTHORIZEDUSER").IsOptional().HasMaxLength(200);
            Property(x => x.AuthorizedUserName).HasColumnName("AUTHORIZEDUSERNAME").IsOptional().HasMaxLength(200);
            Property(x => x.Remarks).HasColumnName("REMARKS").IsOptional().HasMaxLength(500);
            Property(x => x.Enclosure).HasColumnName("ENCLOSURE").IsOptional().HasMaxLength(500);
            Property(x => x.HeadOfLegalDepartment).HasColumnName("HEADOFLEGALDEPARTMENT").IsOptional();
            Property(x => x.OpinionsOfProductionManagementDepartment).HasColumnName("OPINIONSOFPRODUCTIONMANAGEMENTDEPARTMENT").IsOptional();
            Property(x => x.OpinionsOfTheContractingDepartment).HasColumnName("OPINIONSOFTHECONTRACTINGDEPARTMENT").IsOptional();
            Property(x => x.FillInPersonName).HasColumnName("FILLINPERSONNAME").IsOptional().HasMaxLength(200);
        }
    }

    // T_Decrypt_Apply
    internal partial class T_Decrypt_ApplyConfiguration : EntityTypeConfiguration<T_Decrypt_Apply>
    {
        public T_Decrypt_ApplyConfiguration()
        {
			ToTable("T_DECRYPT_APPLY");
            HasKey(x => x.ID);

            Property(x => x.ID).HasColumnName("ID").IsRequired().HasMaxLength(50);
            Property(x => x.CreateDate).HasColumnName("CREATEDATE").IsOptional();
            Property(x => x.ModifyDate).HasColumnName("MODIFYDATE").IsOptional();
            Property(x => x.CreateUserID).HasColumnName("CREATEUSERID").IsOptional().HasMaxLength(50);
            Property(x => x.CreateUser).HasColumnName("CREATEUSER").IsOptional().HasMaxLength(50);
            Property(x => x.ModifyUserID).HasColumnName("MODIFYUSERID").IsOptional().HasMaxLength(50);
            Property(x => x.ModifyUser).HasColumnName("MODIFYUSER").IsOptional().HasMaxLength(50);
            Property(x => x.OrgID).HasColumnName("ORGID").IsOptional().HasMaxLength(50);
            Property(x => x.CompanyID).HasColumnName("COMPANYID").IsOptional().HasMaxLength(50);
            Property(x => x.FlowPhase).HasColumnName("FLOWPHASE").IsOptional().HasMaxLength(50);
            Property(x => x.FlowInfo).HasColumnName("FLOWINFO").IsOptional().HasMaxLength(1073741823);
            Property(x => x.StepName).HasColumnName("STEPNAME").IsOptional().HasMaxLength(500);
            Property(x => x.ApplyUser).HasColumnName("APPLYUSER").IsOptional().HasMaxLength(200);
            Property(x => x.ApplyUserName).HasColumnName("APPLYUSERNAME").IsOptional().HasMaxLength(200);
            Property(x => x.ApplyDept).HasColumnName("APPLYDEPT").IsOptional().HasMaxLength(200);
            Property(x => x.ApplyDeptName).HasColumnName("APPLYDEPTNAME").IsOptional().HasMaxLength(200);
            Property(x => x.ApplyDate).HasColumnName("APPLYDATE").IsOptional();
            Property(x => x.Deadline).HasColumnName("DEADLINE").IsOptional();
            Property(x => x.DecryptionType).HasColumnName("DECRYPTIONTYPE").IsOptional().HasMaxLength(200);
            Property(x => x.Reson).HasColumnName("RESON").IsOptional().HasMaxLength(500);
            Property(x => x.DeptLeaderSign).HasColumnName("DEPTLEADERSIGN").IsOptional();
            Property(x => x.ApproverSign).HasColumnName("APPROVERSIGN").IsOptional();
            Property(x => x.AgentSign).HasColumnName("AGENTSIGN").IsOptional();
        }
    }

    // T_DeviceManage_AddedPurchase
    internal partial class T_DeviceManage_AddedPurchaseConfiguration : EntityTypeConfiguration<T_DeviceManage_AddedPurchase>
    {
        public T_DeviceManage_AddedPurchaseConfiguration()
        {
			ToTable("T_DEVICEMANAGE_ADDEDPURCHASE");
            HasKey(x => x.ID);

            Property(x => x.ID).HasColumnName("ID").IsRequired().HasMaxLength(50);
            Property(x => x.CreateDate).HasColumnName("CREATEDATE").IsOptional();
            Property(x => x.ModifyDate).HasColumnName("MODIFYDATE").IsOptional();
            Property(x => x.CreateUserID).HasColumnName("CREATEUSERID").IsOptional().HasMaxLength(50);
            Property(x => x.CreateUser).HasColumnName("CREATEUSER").IsOptional().HasMaxLength(50);
            Property(x => x.ModifyUserID).HasColumnName("MODIFYUSERID").IsOptional().HasMaxLength(50);
            Property(x => x.ModifyUser).HasColumnName("MODIFYUSER").IsOptional().HasMaxLength(50);
            Property(x => x.OrgID).HasColumnName("ORGID").IsOptional().HasMaxLength(50);
            Property(x => x.CompanyID).HasColumnName("COMPANYID").IsOptional().HasMaxLength(50);
            Property(x => x.FlowPhase).HasColumnName("FLOWPHASE").IsOptional().HasMaxLength(50);
            Property(x => x.FlowInfo).HasColumnName("FLOWINFO").IsOptional().HasMaxLength(1073741823);
            Property(x => x.StepName).HasColumnName("STEPNAME").IsOptional().HasMaxLength(500);
            Property(x => x.Applicant).HasColumnName("APPLICANT").IsOptional().HasMaxLength(200);
            Property(x => x.ApplicantName).HasColumnName("APPLICANTNAME").IsOptional().HasMaxLength(200);
            Property(x => x.ApplicantDept).HasColumnName("APPLICANTDEPT").IsOptional().HasMaxLength(200);
            Property(x => x.ApplicantDeptName).HasColumnName("APPLICANTDEPTNAME").IsOptional().HasMaxLength(200);
            Property(x => x.FormName).HasColumnName("FORMNAME").IsOptional().HasMaxLength(200);
            Property(x => x.Category).HasColumnName("CATEGORY").IsOptional().HasMaxLength(200);
            Property(x => x.ApplyReason).HasColumnName("APPLYREASON").IsOptional().HasMaxLength(500);
            Property(x => x.Supplier).HasColumnName("SUPPLIER").IsOptional().HasMaxLength(200);
            Property(x => x.SupplierName).HasColumnName("SUPPLIERNAME").IsOptional().HasMaxLength(200);
            Property(x => x.ApplyDate).HasColumnName("APPLYDATE").IsOptional();
            Property(x => x.TotalPrice).HasColumnName("TOTALPRICE").IsOptional().HasMaxLength(200);
            Property(x => x.TotalPriceCase).HasColumnName("TOTALPRICECASE").IsOptional().HasMaxLength(200);
            Property(x => x.IsCompleted).HasColumnName("ISCOMPLETED").IsOptional().HasMaxLength(200);
            Property(x => x.ProjectType).HasColumnName("PROJECTTYPE").IsOptional().HasMaxLength(200);
            Property(x => x.ProjectNumber).HasColumnName("PROJECTNUMBER").IsOptional().HasMaxLength(200);
            Property(x => x.ProjectNumberName).HasColumnName("PROJECTNUMBERNAME").IsOptional().HasMaxLength(200);
            Property(x => x.ProjectName).HasColumnName("PROJECTNAME").IsOptional().HasMaxLength(200);
            Property(x => x.IsContract).HasColumnName("ISCONTRACT").IsOptional().HasMaxLength(200);
            Property(x => x.ContractCategory).HasColumnName("CONTRACTCATEGORY").IsOptional().HasMaxLength(200);
            Property(x => x.SealLocation).HasColumnName("SEALLOCATION").IsOptional().HasMaxLength(200);
            Property(x => x.ContractNumber).HasColumnName("CONTRACTNUMBER").IsOptional().HasMaxLength(200);
            Property(x => x.ContractName).HasColumnName("CONTRACTNAME").IsOptional().HasMaxLength(200);
            Property(x => x.ContractAttachments).HasColumnName("CONTRACTATTACHMENTS").IsOptional().HasMaxLength(200);
            Property(x => x.PaymentDetail).HasColumnName("PAYMENTDETAIL").IsOptional().HasMaxLength(1073741823);
            Property(x => x.SupplierDetail).HasColumnName("SUPPLIERDETAIL").IsOptional().HasMaxLength(1073741823);
            Property(x => x.Attachments).HasColumnName("ATTACHMENTS").IsOptional().HasMaxLength(500);
            Property(x => x.ComprehensiveOpinion).HasColumnName("COMPREHENSIVEOPINION").IsOptional().HasMaxLength(500);
            Property(x => x.PurchasingSupervisor).HasColumnName("PURCHASINGSUPERVISOR").IsOptional();
            Property(x => x.DeptLeader).HasColumnName("DEPTLEADER").IsOptional();
            Property(x => x.CompanyLeader).HasColumnName("COMPANYLEADER").IsOptional();
        }
    }

    // T_DeviceManage_AddedPurchase_PaymentDetail
    internal partial class T_DeviceManage_AddedPurchase_PaymentDetailConfiguration : EntityTypeConfiguration<T_DeviceManage_AddedPurchase_PaymentDetail>
    {
        public T_DeviceManage_AddedPurchase_PaymentDetailConfiguration()
        {
			ToTable("T_DEVICEMANAGE_ADDEDPURCHASE_PAYMENTDETAIL");
            HasKey(x => x.ID);

            Property(x => x.ID).HasColumnName("ID").IsRequired().HasMaxLength(50);
            Property(x => x.T_DeviceManage_AddedPurchaseID).HasColumnName("T_DEVICEMANAGE_ADDEDPURCHASEID").IsOptional().HasMaxLength(50);
            Property(x => x.SortIndex).HasColumnName("SORTINDEX").IsOptional();
            Property(x => x.IsReleased).HasColumnName("ISRELEASED").IsOptional().HasMaxLength(1);
            Property(x => x.PaymentYear).HasColumnName("PAYMENTYEAR").IsOptional().HasMaxLength(200);
            Property(x => x.PaymentMonth).HasColumnName("PAYMENTMONTH").IsOptional().HasMaxLength(200);
            Property(x => x.PaymentBatch).HasColumnName("PAYMENTBATCH").IsOptional().HasMaxLength(200);
            Property(x => x.PaymentProportion).HasColumnName("PAYMENTPROPORTION").IsOptional().HasMaxLength(200);
            Property(x => x.PaymentAmount).HasColumnName("PAYMENTAMOUNT").IsOptional().HasMaxLength(200);
            Property(x => x.PaymentExplain).HasColumnName("PAYMENTEXPLAIN").IsOptional().HasMaxLength(200);

            // Foreign keys
            HasOptional(a => a.T_DeviceManage_AddedPurchase).WithMany(b => b.T_DeviceManage_AddedPurchase_PaymentDetail).HasForeignKey(c => c.T_DeviceManage_AddedPurchaseID); // FK_T_DeviceManage_AddedPurchase_PaymentDetail_T_DeviceManage_AddedPurchase
        }
    }

    // T_DeviceManage_AddedPurchase_SupplierDetail
    internal partial class T_DeviceManage_AddedPurchase_SupplierDetailConfiguration : EntityTypeConfiguration<T_DeviceManage_AddedPurchase_SupplierDetail>
    {
        public T_DeviceManage_AddedPurchase_SupplierDetailConfiguration()
        {
			ToTable("T_DEVICEMANAGE_ADDEDPURCHASE_SUPPLIERDETAIL");
            HasKey(x => x.ID);

            Property(x => x.ID).HasColumnName("ID").IsRequired().HasMaxLength(50);
            Property(x => x.T_DeviceManage_AddedPurchaseID).HasColumnName("T_DEVICEMANAGE_ADDEDPURCHASEID").IsOptional().HasMaxLength(50);
            Property(x => x.SortIndex).HasColumnName("SORTINDEX").IsOptional();
            Property(x => x.IsReleased).HasColumnName("ISRELEASED").IsOptional().HasMaxLength(1);
            Property(x => x.Recommend).HasColumnName("RECOMMEND").IsOptional().HasMaxLength(200);
            Property(x => x.Supplier).HasColumnName("SUPPLIER").IsOptional().HasMaxLength(200);
            Property(x => x.SupplierName).HasColumnName("SUPPLIERNAME").IsOptional().HasMaxLength(200);
            Property(x => x.Module).HasColumnName("MODULE").IsOptional().HasMaxLength(200);
            Property(x => x.Price).HasColumnName("PRICE").IsOptional().HasMaxLength(200);
            Property(x => x.DiscountPrice).HasColumnName("DISCOUNTPRICE").IsOptional().HasMaxLength(200);
            Property(x => x.UnitPrice).HasColumnName("UNITPRICE").IsOptional().HasMaxLength(200);
            Property(x => x.TechnologyAbility).HasColumnName("TECHNOLOGYABILITY").IsOptional().HasMaxLength(200);
            Property(x => x.ServiceLevel).HasColumnName("SERVICELEVEL").IsOptional().HasMaxLength(200);
            Property(x => x.TestProcess).HasColumnName("TESTPROCESS").IsOptional().HasMaxLength(200);

            // Foreign keys
            HasOptional(a => a.T_DeviceManage_AddedPurchase).WithMany(b => b.T_DeviceManage_AddedPurchase_SupplierDetail).HasForeignKey(c => c.T_DeviceManage_AddedPurchaseID); // FK_T_DeviceManage_AddedPurchase_SupplierDetail_T_DeviceManage_AddedPurchase
        }
    }

    // T_DeviceManage_ConsumablesPurchase
    internal partial class T_DeviceManage_ConsumablesPurchaseConfiguration : EntityTypeConfiguration<T_DeviceManage_ConsumablesPurchase>
    {
        public T_DeviceManage_ConsumablesPurchaseConfiguration()
        {
			ToTable("T_DEVICEMANAGE_CONSUMABLESPURCHASE");
            HasKey(x => x.ID);

            Property(x => x.ID).HasColumnName("ID").IsRequired().HasMaxLength(50);
            Property(x => x.CreateDate).HasColumnName("CREATEDATE").IsOptional();
            Property(x => x.ModifyDate).HasColumnName("MODIFYDATE").IsOptional();
            Property(x => x.CreateUserID).HasColumnName("CREATEUSERID").IsOptional().HasMaxLength(50);
            Property(x => x.CreateUser).HasColumnName("CREATEUSER").IsOptional().HasMaxLength(50);
            Property(x => x.ModifyUserID).HasColumnName("MODIFYUSERID").IsOptional().HasMaxLength(50);
            Property(x => x.ModifyUser).HasColumnName("MODIFYUSER").IsOptional().HasMaxLength(50);
            Property(x => x.OrgID).HasColumnName("ORGID").IsOptional().HasMaxLength(50);
            Property(x => x.CompanyID).HasColumnName("COMPANYID").IsOptional().HasMaxLength(50);
            Property(x => x.FlowPhase).HasColumnName("FLOWPHASE").IsOptional().HasMaxLength(50);
            Property(x => x.FlowInfo).HasColumnName("FLOWINFO").IsOptional().HasMaxLength(1073741823);
            Property(x => x.StepName).HasColumnName("STEPNAME").IsOptional().HasMaxLength(500);
            Property(x => x.Applicant).HasColumnName("APPLICANT").IsOptional().HasMaxLength(200);
            Property(x => x.ApplicantName).HasColumnName("APPLICANTNAME").IsOptional().HasMaxLength(200);
            Property(x => x.ApplicantDept).HasColumnName("APPLICANTDEPT").IsOptional().HasMaxLength(200);
            Property(x => x.ApplicantDeptName).HasColumnName("APPLICANTDEPTNAME").IsOptional().HasMaxLength(200);
            Property(x => x.FormName).HasColumnName("FORMNAME").IsOptional().HasMaxLength(200);
            Property(x => x.Category).HasColumnName("CATEGORY").IsOptional().HasMaxLength(200);
            Property(x => x.ApplyReason).HasColumnName("APPLYREASON").IsOptional().HasMaxLength(500);
            Property(x => x.Supplier).HasColumnName("SUPPLIER").IsOptional().HasMaxLength(200);
            Property(x => x.SupplierName).HasColumnName("SUPPLIERNAME").IsOptional().HasMaxLength(200);
            Property(x => x.ApplyDate).HasColumnName("APPLYDATE").IsOptional();
            Property(x => x.TotalPrice).HasColumnName("TOTALPRICE").IsOptional().HasMaxLength(200);
            Property(x => x.TotalPriceCase).HasColumnName("TOTALPRICECASE").IsOptional().HasMaxLength(200);
            Property(x => x.IsCompleted).HasColumnName("ISCOMPLETED").IsOptional().HasMaxLength(200);
            Property(x => x.ProjectType).HasColumnName("PROJECTTYPE").IsOptional().HasMaxLength(200);
            Property(x => x.ProjectNumber).HasColumnName("PROJECTNUMBER").IsOptional().HasMaxLength(200);
            Property(x => x.ProjectNumberName).HasColumnName("PROJECTNUMBERNAME").IsOptional().HasMaxLength(200);
            Property(x => x.ProjectName).HasColumnName("PROJECTNAME").IsOptional().HasMaxLength(200);
            Property(x => x.IsContract).HasColumnName("ISCONTRACT").IsOptional().HasMaxLength(200);
            Property(x => x.ContractCategory).HasColumnName("CONTRACTCATEGORY").IsOptional().HasMaxLength(200);
            Property(x => x.SealLocation).HasColumnName("SEALLOCATION").IsOptional().HasMaxLength(200);
            Property(x => x.ContractNumber).HasColumnName("CONTRACTNUMBER").IsOptional().HasMaxLength(200);
            Property(x => x.ContractName).HasColumnName("CONTRACTNAME").IsOptional().HasMaxLength(200);
            Property(x => x.ContractAttachments).HasColumnName("CONTRACTATTACHMENTS").IsOptional().HasMaxLength(200);
            Property(x => x.PaymentDetail).HasColumnName("PAYMENTDETAIL").IsOptional().HasMaxLength(1073741823);
            Property(x => x.PurchaseDetail).HasColumnName("PURCHASEDETAIL").IsOptional().HasMaxLength(1073741823);
            Property(x => x.Attachments).HasColumnName("ATTACHMENTS").IsOptional().HasMaxLength(500);
            Property(x => x.PurchasingSupervisor).HasColumnName("PURCHASINGSUPERVISOR").IsOptional();
            Property(x => x.DeptLeader).HasColumnName("DEPTLEADER").IsOptional();
            Property(x => x.CompanyLeader).HasColumnName("COMPANYLEADER").IsOptional();
        }
    }

    // T_DeviceManage_ConsumablesPurchase_PaymentDetail
    internal partial class T_DeviceManage_ConsumablesPurchase_PaymentDetailConfiguration : EntityTypeConfiguration<T_DeviceManage_ConsumablesPurchase_PaymentDetail>
    {
        public T_DeviceManage_ConsumablesPurchase_PaymentDetailConfiguration()
        {
			ToTable("T_DEVICEMANAGE_CONSUMABLESPURCHASE_PAYMENTDETAIL");
            HasKey(x => x.ID);

            Property(x => x.ID).HasColumnName("ID").IsRequired().HasMaxLength(50);
            Property(x => x.T_DeviceManage_ConsumablesPurchaseID).HasColumnName("T_DEVICEMANAGE_CONSUMABLESPURCHASEID").IsOptional().HasMaxLength(50);
            Property(x => x.SortIndex).HasColumnName("SORTINDEX").IsOptional();
            Property(x => x.IsReleased).HasColumnName("ISRELEASED").IsOptional().HasMaxLength(1);
            Property(x => x.PaymentYear).HasColumnName("PAYMENTYEAR").IsOptional().HasMaxLength(200);
            Property(x => x.PaymentMonth).HasColumnName("PAYMENTMONTH").IsOptional().HasMaxLength(200);
            Property(x => x.PaymentBatch).HasColumnName("PAYMENTBATCH").IsOptional().HasMaxLength(200);
            Property(x => x.PaymentProportion).HasColumnName("PAYMENTPROPORTION").IsOptional().HasMaxLength(200);
            Property(x => x.PaymentAmount).HasColumnName("PAYMENTAMOUNT").IsOptional().HasMaxLength(200);
            Property(x => x.PaymentExplain).HasColumnName("PAYMENTEXPLAIN").IsOptional().HasMaxLength(200);

            // Foreign keys
            HasOptional(a => a.T_DeviceManage_ConsumablesPurchase).WithMany(b => b.T_DeviceManage_ConsumablesPurchase_PaymentDetail).HasForeignKey(c => c.T_DeviceManage_ConsumablesPurchaseID); // FK_T_DeviceManage_ConsumablesPurchase_PaymentDetail_T_DeviceManage_ConsumablesPurchase
        }
    }

    // T_DeviceManage_ConsumablesPurchase_PurchaseDetail
    internal partial class T_DeviceManage_ConsumablesPurchase_PurchaseDetailConfiguration : EntityTypeConfiguration<T_DeviceManage_ConsumablesPurchase_PurchaseDetail>
    {
        public T_DeviceManage_ConsumablesPurchase_PurchaseDetailConfiguration()
        {
			ToTable("T_DEVICEMANAGE_CONSUMABLESPURCHASE_PURCHASEDETAIL");
            HasKey(x => x.ID);

            Property(x => x.ID).HasColumnName("ID").IsRequired().HasMaxLength(50);
            Property(x => x.T_DeviceManage_ConsumablesPurchaseID).HasColumnName("T_DEVICEMANAGE_CONSUMABLESPURCHASEID").IsOptional().HasMaxLength(50);
            Property(x => x.SortIndex).HasColumnName("SORTINDEX").IsOptional();
            Property(x => x.IsReleased).HasColumnName("ISRELEASED").IsOptional().HasMaxLength(1);
            Property(x => x.Location).HasColumnName("LOCATION").IsOptional().HasMaxLength(200);
            Property(x => x.DeviceCategory).HasColumnName("DEVICECATEGORY").IsOptional().HasMaxLength(200);
            Property(x => x.DeviceName).HasColumnName("DEVICENAME").IsOptional().HasMaxLength(200);
            Property(x => x.DeviceBrand).HasColumnName("DEVICEBRAND").IsOptional().HasMaxLength(200);
            Property(x => x.Specifications).HasColumnName("SPECIFICATIONS").IsOptional().HasMaxLength(200);
            Property(x => x.Quantity).HasColumnName("QUANTITY").IsOptional().HasMaxLength(200);
            Property(x => x.UnitPrice).HasColumnName("UNITPRICE").IsOptional().HasMaxLength(200);
            Property(x => x.Units).HasColumnName("UNITS").IsOptional().HasMaxLength(200);
            Property(x => x.Incidental).HasColumnName("INCIDENTAL").IsOptional().HasMaxLength(200);
            Property(x => x.TotalPrice).HasColumnName("TOTALPRICE").IsOptional().HasMaxLength(200);
            Property(x => x.Information).HasColumnName("INFORMATION").IsOptional().HasMaxLength(200);
            Property(x => x.Description).HasColumnName("DESCRIPTION").IsOptional().HasMaxLength(200);

            // Foreign keys
            HasOptional(a => a.T_DeviceManage_ConsumablesPurchase).WithMany(b => b.T_DeviceManage_ConsumablesPurchase_PurchaseDetail).HasForeignKey(c => c.T_DeviceManage_ConsumablesPurchaseID); // FK_T_DeviceManage_ConsumablesPurchase_PurchaseDetail_T_DeviceManage_ConsumablesPurchase
        }
    }

    // T_DeviceManage_Entry
    internal partial class T_DeviceManage_EntryConfiguration : EntityTypeConfiguration<T_DeviceManage_Entry>
    {
        public T_DeviceManage_EntryConfiguration()
        {
			ToTable("T_DEVICEMANAGE_ENTRY");
            HasKey(x => x.ID);

            Property(x => x.ID).HasColumnName("ID").IsRequired().HasMaxLength(50);
            Property(x => x.CreateDate).HasColumnName("CREATEDATE").IsOptional();
            Property(x => x.ModifyDate).HasColumnName("MODIFYDATE").IsOptional();
            Property(x => x.CreateUserID).HasColumnName("CREATEUSERID").IsOptional().HasMaxLength(50);
            Property(x => x.CreateUser).HasColumnName("CREATEUSER").IsOptional().HasMaxLength(50);
            Property(x => x.ModifyUserID).HasColumnName("MODIFYUSERID").IsOptional().HasMaxLength(50);
            Property(x => x.ModifyUser).HasColumnName("MODIFYUSER").IsOptional().HasMaxLength(50);
            Property(x => x.OrgID).HasColumnName("ORGID").IsOptional().HasMaxLength(50);
            Property(x => x.CompanyID).HasColumnName("COMPANYID").IsOptional().HasMaxLength(50);
            Property(x => x.FlowPhase).HasColumnName("FLOWPHASE").IsOptional().HasMaxLength(50);
            Property(x => x.FlowInfo).HasColumnName("FLOWINFO").IsOptional().HasMaxLength(1073741823);
            Property(x => x.StepName).HasColumnName("STEPNAME").IsOptional().HasMaxLength(500);
            Property(x => x.Registrant).HasColumnName("REGISTRANT").IsOptional().HasMaxLength(200);
            Property(x => x.RegistrantName).HasColumnName("REGISTRANTNAME").IsOptional().HasMaxLength(200);
            Property(x => x.RegistrantDate).HasColumnName("REGISTRANTDATE").IsOptional();
            Property(x => x.PurchaseCategory).HasColumnName("PURCHASECATEGORY").IsOptional().HasMaxLength(200);
            Property(x => x.PurchaseDate).HasColumnName("PURCHASEDATE").IsOptional();
            Property(x => x.PurchaseForm).HasColumnName("PURCHASEFORM").IsOptional().HasMaxLength(200);
            Property(x => x.PurchaseFormName).HasColumnName("PURCHASEFORMNAME").IsOptional().HasMaxLength(200);
            Property(x => x.Supplier).HasColumnName("SUPPLIER").IsOptional().HasMaxLength(200);
            Property(x => x.SupplierName).HasColumnName("SUPPLIERNAME").IsOptional().HasMaxLength(200);
            Property(x => x.PurchaseDetail).HasColumnName("PURCHASEDETAIL").IsOptional().HasMaxLength(1073741823);
            Property(x => x.Attachments).HasColumnName("ATTACHMENTS").IsOptional().HasMaxLength(500);
            Property(x => x.DeptLeader).HasColumnName("DEPTLEADER").IsOptional();
        }
    }

    // T_DeviceManage_Entry_PurchaseDetail
    internal partial class T_DeviceManage_Entry_PurchaseDetailConfiguration : EntityTypeConfiguration<T_DeviceManage_Entry_PurchaseDetail>
    {
        public T_DeviceManage_Entry_PurchaseDetailConfiguration()
        {
			ToTable("T_DEVICEMANAGE_ENTRY_PURCHASEDETAIL");
            HasKey(x => x.ID);

            Property(x => x.ID).HasColumnName("ID").IsRequired().HasMaxLength(50);
            Property(x => x.T_DeviceManage_EntryID).HasColumnName("T_DEVICEMANAGE_ENTRYID").IsOptional().HasMaxLength(50);
            Property(x => x.SortIndex).HasColumnName("SORTINDEX").IsOptional();
            Property(x => x.IsReleased).HasColumnName("ISRELEASED").IsOptional().HasMaxLength(1);
            Property(x => x.Location).HasColumnName("LOCATION").IsOptional().HasMaxLength(200);
            Property(x => x.DeviceCategory).HasColumnName("DEVICECATEGORY").IsOptional().HasMaxLength(200);
            Property(x => x.ArticlesName).HasColumnName("ARTICLESNAME").IsOptional().HasMaxLength(200);
            Property(x => x.Supplier).HasColumnName("SUPPLIER").IsOptional().HasMaxLength(200);
            Property(x => x.Brand).HasColumnName("BRAND").IsOptional().HasMaxLength(200);
            Property(x => x.Specification).HasColumnName("SPECIFICATION").IsOptional().HasMaxLength(200);
            Property(x => x.Quantity).HasColumnName("QUANTITY").IsOptional().HasMaxLength(200);
            Property(x => x.Price).HasColumnName("PRICE").IsOptional().HasMaxLength(200);
            Property(x => x.Units).HasColumnName("UNITS").IsOptional().HasMaxLength(200);
            Property(x => x.TotalPrice).HasColumnName("TOTALPRICE").IsOptional().HasMaxLength(200);
            Property(x => x.SNNumber).HasColumnName("SNNUMBER").IsOptional().HasMaxLength(200);
            Property(x => x.AssetsType).HasColumnName("ASSETSTYPE").IsOptional().HasMaxLength(200);
            Property(x => x.Remark).HasColumnName("REMARK").IsOptional().HasMaxLength(200);
            Property(x => x.Status).HasColumnName("STATUS").IsOptional().HasMaxLength(200);

            // Foreign keys
            HasOptional(a => a.T_DeviceManage_Entry).WithMany(b => b.T_DeviceManage_Entry_PurchaseDetail).HasForeignKey(c => c.T_DeviceManage_EntryID); // FK_T_DeviceManage_Entry_PurchaseDetail_T_DeviceManage_Entry
        }
    }

    // T_DeviceManage_PurchaseDemand
    internal partial class T_DeviceManage_PurchaseDemandConfiguration : EntityTypeConfiguration<T_DeviceManage_PurchaseDemand>
    {
        public T_DeviceManage_PurchaseDemandConfiguration()
        {
			ToTable("T_DEVICEMANAGE_PURCHASEDEMAND");
            HasKey(x => x.ID);

            Property(x => x.ID).HasColumnName("ID").IsRequired().HasMaxLength(50);
            Property(x => x.CreateDate).HasColumnName("CREATEDATE").IsOptional();
            Property(x => x.ModifyDate).HasColumnName("MODIFYDATE").IsOptional();
            Property(x => x.CreateUserID).HasColumnName("CREATEUSERID").IsOptional().HasMaxLength(50);
            Property(x => x.CreateUser).HasColumnName("CREATEUSER").IsOptional().HasMaxLength(50);
            Property(x => x.ModifyUserID).HasColumnName("MODIFYUSERID").IsOptional().HasMaxLength(50);
            Property(x => x.ModifyUser).HasColumnName("MODIFYUSER").IsOptional().HasMaxLength(50);
            Property(x => x.OrgID).HasColumnName("ORGID").IsOptional().HasMaxLength(50);
            Property(x => x.CompanyID).HasColumnName("COMPANYID").IsOptional().HasMaxLength(50);
            Property(x => x.FlowPhase).HasColumnName("FLOWPHASE").IsOptional().HasMaxLength(50);
            Property(x => x.FlowInfo).HasColumnName("FLOWINFO").IsOptional().HasMaxLength(1073741823);
            Property(x => x.StepName).HasColumnName("STEPNAME").IsOptional().HasMaxLength(500);
            Property(x => x.Applicant).HasColumnName("APPLICANT").IsOptional().HasMaxLength(200);
            Property(x => x.ApplicantName).HasColumnName("APPLICANTNAME").IsOptional().HasMaxLength(200);
            Property(x => x.ApplyDept).HasColumnName("APPLYDEPT").IsOptional().HasMaxLength(200);
            Property(x => x.ApplyDeptName).HasColumnName("APPLYDEPTNAME").IsOptional().HasMaxLength(200);
            Property(x => x.ApplyPhone).HasColumnName("APPLYPHONE").IsOptional().HasMaxLength(200);
            Property(x => x.ApplyDate).HasColumnName("APPLYDATE").IsOptional();
            Property(x => x.DemandDesc).HasColumnName("DEMANDDESC").IsOptional().HasMaxLength(500);
            Property(x => x.DemandDetail).HasColumnName("DEMANDDETAIL").IsOptional().HasMaxLength(1073741823);
            Property(x => x.DeptLeader).HasColumnName("DEPTLEADER").IsOptional();
            Property(x => x.Information).HasColumnName("INFORMATION").IsOptional();
            Property(x => x.DeviceManagement).HasColumnName("DEVICEMANAGEMENT").IsOptional();
        }
    }

    // T_DeviceManage_PurchaseDemand_DemandDetail
    internal partial class T_DeviceManage_PurchaseDemand_DemandDetailConfiguration : EntityTypeConfiguration<T_DeviceManage_PurchaseDemand_DemandDetail>
    {
        public T_DeviceManage_PurchaseDemand_DemandDetailConfiguration()
        {
			ToTable("T_DEVICEMANAGE_PURCHASEDEMAND_DEMANDDETAIL");
            HasKey(x => x.ID);

            Property(x => x.ID).HasColumnName("ID").IsRequired().HasMaxLength(50);
            Property(x => x.T_DeviceManage_PurchaseDemandID).HasColumnName("T_DEVICEMANAGE_PURCHASEDEMANDID").IsOptional().HasMaxLength(50);
            Property(x => x.SortIndex).HasColumnName("SORTINDEX").IsOptional();
            Property(x => x.IsReleased).HasColumnName("ISRELEASED").IsOptional().HasMaxLength(1);
            Property(x => x.MaterialsName).HasColumnName("MATERIALSNAME").IsOptional().HasMaxLength(200);
            Property(x => x.Brand).HasColumnName("BRAND").IsOptional().HasMaxLength(200);
            Property(x => x.Category).HasColumnName("CATEGORY").IsOptional().HasMaxLength(200);
            Property(x => x.Specifications).HasColumnName("SPECIFICATIONS").IsOptional().HasMaxLength(200);
            Property(x => x.Quantity).HasColumnName("QUANTITY").IsOptional().HasMaxLength(200);
            Property(x => x.Remark).HasColumnName("REMARK").IsOptional().HasMaxLength(200);

            // Foreign keys
            HasOptional(a => a.T_DeviceManage_PurchaseDemand).WithMany(b => b.T_DeviceManage_PurchaseDemand_DemandDetail).HasForeignKey(c => c.T_DeviceManage_PurchaseDemandID); // FK_T_DeviceManage_PurchaseDemand_DemandDetail_T_DeviceManage_PurchaseDemand
        }
    }

    // T_DeviceManage_ServicePurchase
    internal partial class T_DeviceManage_ServicePurchaseConfiguration : EntityTypeConfiguration<T_DeviceManage_ServicePurchase>
    {
        public T_DeviceManage_ServicePurchaseConfiguration()
        {
			ToTable("T_DEVICEMANAGE_SERVICEPURCHASE");
            HasKey(x => x.ID);

            Property(x => x.ID).HasColumnName("ID").IsRequired().HasMaxLength(50);
            Property(x => x.CreateDate).HasColumnName("CREATEDATE").IsOptional();
            Property(x => x.ModifyDate).HasColumnName("MODIFYDATE").IsOptional();
            Property(x => x.CreateUserID).HasColumnName("CREATEUSERID").IsOptional().HasMaxLength(50);
            Property(x => x.CreateUser).HasColumnName("CREATEUSER").IsOptional().HasMaxLength(50);
            Property(x => x.ModifyUserID).HasColumnName("MODIFYUSERID").IsOptional().HasMaxLength(50);
            Property(x => x.ModifyUser).HasColumnName("MODIFYUSER").IsOptional().HasMaxLength(50);
            Property(x => x.OrgID).HasColumnName("ORGID").IsOptional().HasMaxLength(50);
            Property(x => x.CompanyID).HasColumnName("COMPANYID").IsOptional().HasMaxLength(50);
            Property(x => x.FlowPhase).HasColumnName("FLOWPHASE").IsOptional().HasMaxLength(50);
            Property(x => x.FlowInfo).HasColumnName("FLOWINFO").IsOptional().HasMaxLength(1073741823);
            Property(x => x.StepName).HasColumnName("STEPNAME").IsOptional().HasMaxLength(500);
            Property(x => x.Applicant).HasColumnName("APPLICANT").IsOptional().HasMaxLength(200);
            Property(x => x.ApplicantName).HasColumnName("APPLICANTNAME").IsOptional().HasMaxLength(200);
            Property(x => x.ApplicantDept).HasColumnName("APPLICANTDEPT").IsOptional().HasMaxLength(200);
            Property(x => x.ApplicantDeptName).HasColumnName("APPLICANTDEPTNAME").IsOptional().HasMaxLength(200);
            Property(x => x.FormName).HasColumnName("FORMNAME").IsOptional().HasMaxLength(200);
            Property(x => x.Category).HasColumnName("CATEGORY").IsOptional().HasMaxLength(200);
            Property(x => x.ApplyReason).HasColumnName("APPLYREASON").IsOptional().HasMaxLength(500);
            Property(x => x.Supplier).HasColumnName("SUPPLIER").IsOptional().HasMaxLength(200);
            Property(x => x.SupplierName).HasColumnName("SUPPLIERNAME").IsOptional().HasMaxLength(200);
            Property(x => x.ApplyDate).HasColumnName("APPLYDATE").IsOptional();
            Property(x => x.TotalPrice).HasColumnName("TOTALPRICE").IsOptional().HasMaxLength(200);
            Property(x => x.TotalPriceCase).HasColumnName("TOTALPRICECASE").IsOptional().HasMaxLength(200);
            Property(x => x.Attachments).HasColumnName("ATTACHMENTS").IsOptional().HasMaxLength(500);
            Property(x => x.ComprehensiveOpinion).HasColumnName("COMPREHENSIVEOPINION").IsOptional().HasMaxLength(500);
            Property(x => x.IsCompleted).HasColumnName("ISCOMPLETED").IsOptional().HasMaxLength(200);
            Property(x => x.ProjectType).HasColumnName("PROJECTTYPE").IsOptional().HasMaxLength(200);
            Property(x => x.ProjectNumber).HasColumnName("PROJECTNUMBER").IsOptional().HasMaxLength(200);
            Property(x => x.ProjectNumberName).HasColumnName("PROJECTNUMBERNAME").IsOptional().HasMaxLength(200);
            Property(x => x.ProjectName).HasColumnName("PROJECTNAME").IsOptional().HasMaxLength(200);
            Property(x => x.IsContract).HasColumnName("ISCONTRACT").IsOptional().HasMaxLength(200);
            Property(x => x.ContractCategory).HasColumnName("CONTRACTCATEGORY").IsOptional().HasMaxLength(200);
            Property(x => x.SealLocation).HasColumnName("SEALLOCATION").IsOptional().HasMaxLength(200);
            Property(x => x.ContractNumber).HasColumnName("CONTRACTNUMBER").IsOptional().HasMaxLength(200);
            Property(x => x.ContractName).HasColumnName("CONTRACTNAME").IsOptional().HasMaxLength(200);
            Property(x => x.PaymentDetail).HasColumnName("PAYMENTDETAIL").IsOptional().HasMaxLength(1073741823);
            Property(x => x.PurchasingSupervisor).HasColumnName("PURCHASINGSUPERVISOR").IsOptional();
            Property(x => x.DeptLeader).HasColumnName("DEPTLEADER").IsOptional();
            Property(x => x.CompanyLeader).HasColumnName("COMPANYLEADER").IsOptional();
        }
    }

    // T_DeviceManage_ServicePurchase_PaymentDetail
    internal partial class T_DeviceManage_ServicePurchase_PaymentDetailConfiguration : EntityTypeConfiguration<T_DeviceManage_ServicePurchase_PaymentDetail>
    {
        public T_DeviceManage_ServicePurchase_PaymentDetailConfiguration()
        {
			ToTable("T_DEVICEMANAGE_SERVICEPURCHASE_PAYMENTDETAIL");
            HasKey(x => x.ID);

            Property(x => x.ID).HasColumnName("ID").IsRequired().HasMaxLength(50);
            Property(x => x.T_DeviceManage_ServicePurchaseID).HasColumnName("T_DEVICEMANAGE_SERVICEPURCHASEID").IsOptional().HasMaxLength(50);
            Property(x => x.SortIndex).HasColumnName("SORTINDEX").IsOptional();
            Property(x => x.IsReleased).HasColumnName("ISRELEASED").IsOptional().HasMaxLength(1);
            Property(x => x.PaymentYear).HasColumnName("PAYMENTYEAR").IsOptional().HasMaxLength(200);
            Property(x => x.PaymentMonth).HasColumnName("PAYMENTMONTH").IsOptional().HasMaxLength(200);
            Property(x => x.PaymentBatch).HasColumnName("PAYMENTBATCH").IsOptional().HasMaxLength(200);
            Property(x => x.PaymentProportion).HasColumnName("PAYMENTPROPORTION").IsOptional().HasMaxLength(200);
            Property(x => x.PaymentAmount).HasColumnName("PAYMENTAMOUNT").IsOptional().HasMaxLength(200);
            Property(x => x.PaymentExplain).HasColumnName("PAYMENTEXPLAIN").IsOptional().HasMaxLength(200);

            // Foreign keys
            HasOptional(a => a.T_DeviceManage_ServicePurchase).WithMany(b => b.T_DeviceManage_ServicePurchase_PaymentDetail).HasForeignKey(c => c.T_DeviceManage_ServicePurchaseID); // FK_T_DeviceManage_ServicePurchase_PaymentDetail_T_DeviceManage_ServicePurchase
        }
    }

    // T_DRA_BankFinancingApplication
    internal partial class T_DRA_BankFinancingApplicationConfiguration : EntityTypeConfiguration<T_DRA_BankFinancingApplication>
    {
        public T_DRA_BankFinancingApplicationConfiguration()
        {
			ToTable("T_DRA_BANKFINANCINGAPPLICATION");
            HasKey(x => x.ID);

            Property(x => x.ID).HasColumnName("ID").IsRequired().HasMaxLength(50);
            Property(x => x.CreateDate).HasColumnName("CREATEDATE").IsOptional();
            Property(x => x.ModifyDate).HasColumnName("MODIFYDATE").IsOptional();
            Property(x => x.CreateUserID).HasColumnName("CREATEUSERID").IsOptional().HasMaxLength(50);
            Property(x => x.CreateUser).HasColumnName("CREATEUSER").IsOptional().HasMaxLength(50);
            Property(x => x.ModifyUserID).HasColumnName("MODIFYUSERID").IsOptional().HasMaxLength(50);
            Property(x => x.ModifyUser).HasColumnName("MODIFYUSER").IsOptional().HasMaxLength(50);
            Property(x => x.OrgID).HasColumnName("ORGID").IsOptional().HasMaxLength(50);
            Property(x => x.CompanyID).HasColumnName("COMPANYID").IsOptional().HasMaxLength(50);
            Property(x => x.FlowPhase).HasColumnName("FLOWPHASE").IsOptional().HasMaxLength(50);
            Property(x => x.FlowInfo).HasColumnName("FLOWINFO").IsOptional().HasMaxLength(1073741823);
            Property(x => x.StepName).HasColumnName("STEPNAME").IsOptional().HasMaxLength(500);
            Property(x => x.CreateUserDept).HasColumnName("CREATEUSERDEPT").IsOptional().HasMaxLength(200);
            Property(x => x.CreateUserDeptName).HasColumnName("CREATEUSERDEPTNAME").IsOptional().HasMaxLength(200);
            Property(x => x.FinancingCategory).HasColumnName("FINANCINGCATEGORY").IsOptional().HasMaxLength(50);
            Property(x => x.EstimatedFinancingDate).HasColumnName("ESTIMATEDFINANCINGDATE").IsOptional();
            Property(x => x.FinancingExpireDate).HasColumnName("FINANCINGEXPIREDATE").IsOptional();
            Property(x => x.ProjectName).HasColumnName("PROJECTNAME").IsOptional().HasMaxLength(500);
            Property(x => x.GuaranteeBeneficiary).HasColumnName("GUARANTEEBENEFICIARY").IsOptional().HasMaxLength(200);
            Property(x => x.FinancingAmount).HasColumnName("FINANCINGAMOUNT").IsOptional().HasPrecision(18,2);
            Property(x => x.CapsFinancingAmount).HasColumnName("CAPSFINANCINGAMOUNT").IsOptional().HasMaxLength(50);
            Property(x => x.Enclosure).HasColumnName("ENCLOSURE").IsOptional().HasMaxLength(500);
            Property(x => x.Remark).HasColumnName("REMARK").IsOptional().HasMaxLength(500);
            Property(x => x.SQRQZYJ).HasColumnName("SQRQZYJ").IsOptional();
            Property(x => x.BMZZQZYJ).HasColumnName("BMZZQZYJ").IsOptional();
            Property(x => x.ZJLQZYJ).HasColumnName("ZJLQZYJ").IsOptional();
            Property(x => x.FlowEndDate).HasColumnName("FLOWENDDATE").IsOptional();
            Property(x => x.FinancingBank).HasColumnName("FINANCINGBANK").IsOptional().HasMaxLength(50);
        }
    }

    // T_DRA_GJJDLLXDKGS
    internal partial class T_DRA_GJJDLLXDKGSConfiguration : EntityTypeConfiguration<T_DRA_GJJDLLXDKGS>
    {
        public T_DRA_GJJDLLXDKGSConfiguration()
        {
			ToTable("T_DRA_GJJDLLXDKGS");
            HasKey(x => x.ID);

            Property(x => x.ID).HasColumnName("ID").IsRequired().HasMaxLength(50);
            Property(x => x.CreateDate).HasColumnName("CREATEDATE").IsOptional();
            Property(x => x.ModifyDate).HasColumnName("MODIFYDATE").IsOptional();
            Property(x => x.CreateUserID).HasColumnName("CREATEUSERID").IsOptional().HasMaxLength(50);
            Property(x => x.CreateUser).HasColumnName("CREATEUSER").IsOptional().HasMaxLength(50);
            Property(x => x.ModifyUserID).HasColumnName("MODIFYUSERID").IsOptional().HasMaxLength(50);
            Property(x => x.ModifyUser).HasColumnName("MODIFYUSER").IsOptional().HasMaxLength(50);
            Property(x => x.OrgID).HasColumnName("ORGID").IsOptional().HasMaxLength(50);
            Property(x => x.CompanyID).HasColumnName("COMPANYID").IsOptional().HasMaxLength(50);
            Property(x => x.FlowPhase).HasColumnName("FLOWPHASE").IsOptional().HasMaxLength(50);
            Property(x => x.FlowInfo).HasColumnName("FLOWINFO").IsOptional().HasMaxLength(1073741823);
            Property(x => x.StepName).HasColumnName("STEPNAME").IsOptional().HasMaxLength(500);
            Property(x => x.WokNo).HasColumnName("WOKNO").IsOptional().HasMaxLength(50);
            Property(x => x.IDCard).HasColumnName("IDCARD").IsOptional().HasMaxLength(50);
            Property(x => x.BelongYear).HasColumnName("BELONGYEAR").IsOptional().HasMaxLength(50);
            Property(x => x.InterestInfo).HasColumnName("INTERESTINFO").IsOptional().HasMaxLength(1073741823);
        }
    }

    // T_DRA_GJJDLLXDKGS_InterestInfo
    internal partial class T_DRA_GJJDLLXDKGS_InterestInfoConfiguration : EntityTypeConfiguration<T_DRA_GJJDLLXDKGS_InterestInfo>
    {
        public T_DRA_GJJDLLXDKGS_InterestInfoConfiguration()
        {
			ToTable("T_DRA_GJJDLLXDKGS_INTERESTINFO");
            HasKey(x => x.ID);

            Property(x => x.ID).HasColumnName("ID").IsRequired().HasMaxLength(50);
            Property(x => x.T_DRA_GJJDLLXDKGSID).HasColumnName("T_DRA_GJJDLLXDKGSID").IsOptional().HasMaxLength(50);
            Property(x => x.SortIndex).HasColumnName("SORTINDEX").IsOptional();
            Property(x => x.IsReleased).HasColumnName("ISRELEASED").IsOptional().HasMaxLength(1);
            Property(x => x.ARIBelongYear).HasColumnName("ARIBELONGYEAR").IsOptional().HasMaxLength(50);
            Property(x => x.ARIBelongMonth).HasColumnName("ARIBELONGMONTH").IsOptional().HasMaxLength(50);
            Property(x => x.ActualRepaymentInterest).HasColumnName("ACTUALREPAYMENTINTEREST").IsOptional().HasPrecision(18,2);
            Property(x => x.ADIBelongYear).HasColumnName("ADIBELONGYEAR").IsOptional().HasMaxLength(50);
            Property(x => x.ADIBelongMonth).HasColumnName("ADIBELONGMONTH").IsOptional().HasMaxLength(50);
            Property(x => x.ActualDeductionInterest).HasColumnName("ACTUALDEDUCTIONINTEREST").IsOptional().HasPrecision(18,2);

            // Foreign keys
            HasOptional(a => a.T_DRA_GJJDLLXDKGS).WithMany(b => b.T_DRA_GJJDLLXDKGS_InterestInfo).HasForeignKey(c => c.T_DRA_GJJDLLXDKGSID); // FK_T_DRA_GJJDLLXDKGS_InterestInfo_T_DRA_GJJDLLXDKGS
        }
    }

    // T_DRA_IncludeApplication
    internal partial class T_DRA_IncludeApplicationConfiguration : EntityTypeConfiguration<T_DRA_IncludeApplication>
    {
        public T_DRA_IncludeApplicationConfiguration()
        {
			ToTable("T_DRA_INCLUDEAPPLICATION");
            HasKey(x => x.ID);

            Property(x => x.ID).HasColumnName("ID").IsRequired().HasMaxLength(50);
            Property(x => x.CreateDate).HasColumnName("CREATEDATE").IsOptional();
            Property(x => x.ModifyDate).HasColumnName("MODIFYDATE").IsOptional();
            Property(x => x.CreateUserID).HasColumnName("CREATEUSERID").IsOptional().HasMaxLength(50);
            Property(x => x.CreateUser).HasColumnName("CREATEUSER").IsOptional().HasMaxLength(50);
            Property(x => x.ModifyUserID).HasColumnName("MODIFYUSERID").IsOptional().HasMaxLength(50);
            Property(x => x.ModifyUser).HasColumnName("MODIFYUSER").IsOptional().HasMaxLength(50);
            Property(x => x.OrgID).HasColumnName("ORGID").IsOptional().HasMaxLength(50);
            Property(x => x.CompanyID).HasColumnName("COMPANYID").IsOptional().HasMaxLength(50);
            Property(x => x.FlowPhase).HasColumnName("FLOWPHASE").IsOptional().HasMaxLength(50);
            Property(x => x.FlowInfo).HasColumnName("FLOWINFO").IsOptional().HasMaxLength(1073741823);
            Property(x => x.StepName).HasColumnName("STEPNAME").IsOptional().HasMaxLength(500);
            Property(x => x.CreateUserDept).HasColumnName("CREATEUSERDEPT").IsOptional().HasMaxLength(200);
            Property(x => x.CreateUserDeptName).HasColumnName("CREATEUSERDEPTNAME").IsOptional().HasMaxLength(200);
            Property(x => x.CreateUserPhone).HasColumnName("CREATEUSERPHONE").IsOptional().HasMaxLength(50);
            Property(x => x.GuaranteeType).HasColumnName("GUARANTEETYPE").IsOptional().HasMaxLength(50);
            Property(x => x.GuaranteeAmount).HasColumnName("GUARANTEEAMOUNT").IsOptional().HasPrecision(18,2);
            Property(x => x.CapsGuaranteeAmount).HasColumnName("CAPSGUARANTEEAMOUNT").IsOptional().HasMaxLength(200);
            Property(x => x.GuaranteeBeneficiary).HasColumnName("GUARANTEEBENEFICIARY").IsOptional().HasMaxLength(200);
            Property(x => x.IssuedGuaranteeBank).HasColumnName("ISSUEDGUARANTEEBANK").IsOptional().HasMaxLength(50);
            Property(x => x.GuaranteeExpiryDate).HasColumnName("GUARANTEEEXPIRYDATE").IsOptional();
            Property(x => x.HandleMode).HasColumnName("HANDLEMODE").IsOptional().HasMaxLength(50);
            Property(x => x.GuaranteeLatestDate).HasColumnName("GUARANTEELATESTDATE").IsOptional();
            Property(x => x.ContractEnclosure).HasColumnName("CONTRACTENCLOSURE").IsOptional().HasMaxLength(2000);
            Property(x => x.Remark).HasColumnName("REMARK").IsOptional().HasMaxLength(2000);
            Property(x => x.SQRQZYJ).HasColumnName("SQRQZYJ").IsOptional();
            Property(x => x.BMZZQZYJ).HasColumnName("BMZZQZYJ").IsOptional();
            Property(x => x.GSSGFZ).HasColumnName("GSSGFZ").IsOptional();
            Property(x => x.CWBJBR).HasColumnName("CWBJBR").IsOptional();
            Property(x => x.CWBBGSZR).HasColumnName("CWBBGSZR").IsOptional();
            Property(x => x.FlowEndDate).HasColumnName("FLOWENDDATE").IsOptional();
        }
    }

    // T_DRA_ReceiptAcquittanceForm
    internal partial class T_DRA_ReceiptAcquittanceFormConfiguration : EntityTypeConfiguration<T_DRA_ReceiptAcquittanceForm>
    {
        public T_DRA_ReceiptAcquittanceFormConfiguration()
        {
			ToTable("T_DRA_RECEIPTACQUITTANCEFORM");
            HasKey(x => x.ID);

            Property(x => x.ID).HasColumnName("ID").IsRequired().HasMaxLength(50);
            Property(x => x.CreateDate).HasColumnName("CREATEDATE").IsOptional();
            Property(x => x.ModifyDate).HasColumnName("MODIFYDATE").IsOptional();
            Property(x => x.CreateUserID).HasColumnName("CREATEUSERID").IsOptional().HasMaxLength(50);
            Property(x => x.CreateUser).HasColumnName("CREATEUSER").IsOptional().HasMaxLength(50);
            Property(x => x.ModifyUserID).HasColumnName("MODIFYUSERID").IsOptional().HasMaxLength(50);
            Property(x => x.ModifyUser).HasColumnName("MODIFYUSER").IsOptional().HasMaxLength(50);
            Property(x => x.OrgID).HasColumnName("ORGID").IsOptional().HasMaxLength(50);
            Property(x => x.CompanyID).HasColumnName("COMPANYID").IsOptional().HasMaxLength(50);
            Property(x => x.FlowPhase).HasColumnName("FLOWPHASE").IsOptional().HasMaxLength(50);
            Property(x => x.FlowInfo).HasColumnName("FLOWINFO").IsOptional().HasMaxLength(1073741823);
            Property(x => x.StepName).HasColumnName("STEPNAME").IsOptional().HasMaxLength(500);
            Property(x => x.CreateUserDept).HasColumnName("CREATEUSERDEPT").IsOptional().HasMaxLength(200);
            Property(x => x.CreateUserDeptName).HasColumnName("CREATEUSERDEPTNAME").IsOptional().HasMaxLength(200);
            Property(x => x.CreateUserPhone).HasColumnName("CREATEUSERPHONE").IsOptional().HasMaxLength(50);
            Property(x => x.CustomerName).HasColumnName("CUSTOMERNAME").IsOptional().HasMaxLength(200);
            Property(x => x.ApplicationPlace).HasColumnName("APPLICATIONPLACE").IsOptional().HasMaxLength(50);
            Property(x => x.ReceiptAmount).HasColumnName("RECEIPTAMOUNT").IsOptional().HasPrecision(18,2);
            Property(x => x.CapsReceiptAmount).HasColumnName("CAPSRECEIPTAMOUNT").IsOptional().HasMaxLength(50);
            Property(x => x.BillProcessingMethod).HasColumnName("BILLPROCESSINGMETHOD").IsOptional().HasMaxLength(50);
            Property(x => x.EstimatedCollectionDate).HasColumnName("ESTIMATEDCOLLECTIONDATE").IsOptional();
            Property(x => x.ReceiptReason).HasColumnName("RECEIPTREASON").IsOptional().HasMaxLength(500);
            Property(x => x.Remark).HasColumnName("REMARK").IsOptional().HasMaxLength(500);
            Property(x => x.MailInfo).HasColumnName("MAILINFO").IsOptional().HasMaxLength(500);
            Property(x => x.ActualReceiptDate).HasColumnName("ACTUALRECEIPTDATE").IsOptional();
            Property(x => x.ReceiptCode).HasColumnName("RECEIPTCODE").IsOptional().HasMaxLength(50);
            Property(x => x.ReceiptCount).HasColumnName("RECEIPTCOUNT").IsOptional();
            Property(x => x.TakeReceiptPerson).HasColumnName("TAKERECEIPTPERSON").IsOptional().HasMaxLength(50);
            Property(x => x.TakeReceiptPersonName).HasColumnName("TAKERECEIPTPERSONNAME").IsOptional().HasMaxLength(50);
            Property(x => x.CourierNumber).HasColumnName("COURIERNUMBER").IsOptional().HasMaxLength(50);
            Property(x => x.SQRQZYJ).HasColumnName("SQRQZYJ").IsOptional();
            Property(x => x.BMZZQZYJ).HasColumnName("BMZZQZYJ").IsOptional();
            Property(x => x.CWBZZQZYJ).HasColumnName("CWBZZQZYJ").IsOptional();
            Property(x => x.CWCNQZYJ).HasColumnName("CWCNQZYJ").IsOptional();
            Property(x => x.FlowEndDate).HasColumnName("FLOWENDDATE").IsOptional();
        }
    }

    // T_EngineeringBuildApplyDemo
    internal partial class T_EngineeringBuildApplyDemoConfiguration : EntityTypeConfiguration<T_EngineeringBuildApplyDemo>
    {
        public T_EngineeringBuildApplyDemoConfiguration()
        {
			ToTable("T_ENGINEERINGBUILDAPPLYDEMO");
            HasKey(x => x.ID);

            Property(x => x.ID).HasColumnName("ID").IsRequired().HasMaxLength(50);
            Property(x => x.CreateDate).HasColumnName("CREATEDATE").IsOptional();
            Property(x => x.ModifyDate).HasColumnName("MODIFYDATE").IsOptional();
            Property(x => x.CreateUserID).HasColumnName("CREATEUSERID").IsOptional().HasMaxLength(50);
            Property(x => x.CreateUser).HasColumnName("CREATEUSER").IsOptional().HasMaxLength(50);
            Property(x => x.ModifyUserID).HasColumnName("MODIFYUSERID").IsOptional().HasMaxLength(50);
            Property(x => x.ModifyUser).HasColumnName("MODIFYUSER").IsOptional().HasMaxLength(50);
            Property(x => x.OrgID).HasColumnName("ORGID").IsOptional().HasMaxLength(50);
            Property(x => x.CompanyID).HasColumnName("COMPANYID").IsOptional().HasMaxLength(50);
            Property(x => x.FlowPhase).HasColumnName("FLOWPHASE").IsOptional().HasMaxLength(50);
            Property(x => x.FlowInfo).HasColumnName("FLOWINFO").IsOptional().HasMaxLength(1073741823);
            Property(x => x.StepName).HasColumnName("STEPNAME").IsOptional().HasMaxLength(500);
            Property(x => x.Name).HasColumnName("NAME").IsOptional().HasMaxLength(200);
            Property(x => x.SerialNumber).HasColumnName("SERIALNUMBER").IsOptional().HasMaxLength(200);
            Property(x => x.CustomerInfo).HasColumnName("CUSTOMERINFO").IsOptional().HasMaxLength(200);
            Property(x => x.CustomerInfoName).HasColumnName("CUSTOMERINFONAME").IsOptional().HasMaxLength(200);
            Property(x => x.CustomerCode).HasColumnName("CUSTOMERCODE").IsOptional().HasMaxLength(200);
            Property(x => x.CustomerAddress).HasColumnName("CUSTOMERADDRESS").IsOptional().HasMaxLength(200);
            Property(x => x.ProjectClass).HasColumnName("PROJECTCLASS").IsOptional().HasMaxLength(200);
            Property(x => x.ProjectScale).HasColumnName("PROJECTSCALE").IsOptional().HasMaxLength(200);
            Property(x => x.ProjectPhase).HasColumnName("PROJECTPHASE").IsOptional().HasMaxLength(200);
            Property(x => x.SalePeriod).HasColumnName("SALEPERIOD").IsOptional().HasMaxLength(200);
            Property(x => x.ProductionValue).HasColumnName("PRODUCTIONVALUE").IsOptional().HasMaxLength(200);
            Property(x => x.BuildType).HasColumnName("BUILDTYPE").IsOptional().HasMaxLength(200);
            Property(x => x.ProjectPreiod).HasColumnName("PROJECTPREIOD").IsOptional().HasMaxLength(200);
            Property(x => x.Competition).HasColumnName("COMPETITION").IsOptional().HasMaxLength(200);
            Property(x => x.IsInvestigate).HasColumnName("ISINVESTIGATE").IsOptional().HasMaxLength(200);
            Property(x => x.ExaminePerformance).HasColumnName("EXAMINEPERFORMANCE").IsOptional().HasMaxLength(200);
            Property(x => x.IsInvestigateDate).HasColumnName("ISINVESTIGATEDATE").IsOptional();
            Property(x => x.IsInvestigateProject).HasColumnName("ISINVESTIGATEPROJECT").IsOptional().HasMaxLength(200);
            Property(x => x.ContractMode).HasColumnName("CONTRACTMODE").IsOptional().HasMaxLength(200);
            Property(x => x.ProjectContent).HasColumnName("PROJECTCONTENT").IsOptional().HasMaxLength(500);
            Property(x => x.Advantage).HasColumnName("ADVANTAGE").IsOptional().HasMaxLength(500);
            Property(x => x.SuccessRate).HasColumnName("SUCCESSRATE").IsOptional().HasMaxLength(200);
            Property(x => x.CanBuilder).HasColumnName("CANBUILDER").IsOptional().HasMaxLength(200);
            Property(x => x.Remark).HasColumnName("REMARK").IsOptional().HasMaxLength(500);
            Property(x => x.State).HasColumnName("STATE").IsOptional().HasMaxLength(200);
            Property(x => x.Attachment).HasColumnName("ATTACHMENT").IsOptional().HasMaxLength(500);
            Property(x => x.Register).HasColumnName("REGISTER").IsOptional().HasMaxLength(200);
            Property(x => x.RegisterName).HasColumnName("REGISTERNAME").IsOptional().HasMaxLength(200);
            Property(x => x.RegistDate).HasColumnName("REGISTDATE").IsOptional();
            Property(x => x.DeptSign).HasColumnName("DEPTSIGN").IsOptional();
            Property(x => x.SaleDirectorSign).HasColumnName("SALEDIRECTORSIGN").IsOptional();
            Property(x => x.CEOSign).HasColumnName("CEOSIGN").IsOptional();
            Property(x => x.ClueID).HasColumnName("CLUEID").IsOptional().HasMaxLength(200);
            Property(x => x.IsImportantCustomer).HasColumnName("ISIMPORTANTCUSTOMER").IsOptional().HasMaxLength(200);
            Property(x => x.Lat).HasColumnName("LAT").IsOptional().HasMaxLength(200);
            Property(x => x.Long).HasColumnName("LONG").IsOptional().HasMaxLength(200);
            Property(x => x.Province).HasColumnName("PROVINCE").IsOptional().HasMaxLength(200);
            Property(x => x.City).HasColumnName("CITY").IsOptional().HasMaxLength(200);
            Property(x => x.Area).HasColumnName("AREA").IsOptional().HasMaxLength(200);
            Property(x => x.EngineerAddress).HasColumnName("ENGINEERADDRESS").IsOptional().HasMaxLength(200);
            Property(x => x.ChargerDept).HasColumnName("CHARGERDEPT").IsOptional().HasMaxLength(200);
            Property(x => x.ChargerDeptName).HasColumnName("CHARGERDEPTNAME").IsOptional().HasMaxLength(200);
        }
    }

    // T_EngineeringBuildApplyDemo_Competitor
    internal partial class T_EngineeringBuildApplyDemo_CompetitorConfiguration : EntityTypeConfiguration<T_EngineeringBuildApplyDemo_Competitor>
    {
        public T_EngineeringBuildApplyDemo_CompetitorConfiguration()
        {
			ToTable("T_ENGINEERINGBUILDAPPLYDEMO_COMPETITOR");
            HasKey(x => x.ID);

            Property(x => x.ID).HasColumnName("ID").IsRequired().HasMaxLength(50);
            Property(x => x.T_EngineeringBuildApplyDemoID).HasColumnName("T_ENGINEERINGBUILDAPPLYDEMOID").IsOptional().HasMaxLength(50);
            Property(x => x.SortIndex).HasColumnName("SORTINDEX").IsOptional();
            Property(x => x.IsReleased).HasColumnName("ISRELEASED").IsOptional().HasMaxLength(1);
            Property(x => x.Competitor).HasColumnName("COMPETITOR").IsOptional().HasMaxLength(200);
            Property(x => x.Remark).HasColumnName("REMARK").IsOptional().HasMaxLength(200);

            // Foreign keys
            HasOptional(a => a.T_EngineeringBuildApplyDemo).WithMany(b => b.T_EngineeringBuildApplyDemo_Competitor).HasForeignKey(c => c.T_EngineeringBuildApplyDemoID); // FK_T_EngineeringBuildApplyDemo_Competitor_T_EngineeringBuildApplyDemo
        }
    }

    // T_EngineeringBuildApplyDemo_CustomerContace
    internal partial class T_EngineeringBuildApplyDemo_CustomerContaceConfiguration : EntityTypeConfiguration<T_EngineeringBuildApplyDemo_CustomerContace>
    {
        public T_EngineeringBuildApplyDemo_CustomerContaceConfiguration()
        {
			ToTable("T_ENGINEERINGBUILDAPPLYDEMO_CUSTOMERCONTACE");
            HasKey(x => x.ID);

            Property(x => x.ID).HasColumnName("ID").IsRequired().HasMaxLength(50);
            Property(x => x.T_EngineeringBuildApplyDemoID).HasColumnName("T_ENGINEERINGBUILDAPPLYDEMOID").IsOptional().HasMaxLength(50);
            Property(x => x.SortIndex).HasColumnName("SORTINDEX").IsOptional();
            Property(x => x.IsReleased).HasColumnName("ISRELEASED").IsOptional().HasMaxLength(1);
            Property(x => x.Name).HasColumnName("NAME").IsOptional().HasMaxLength(200);
            Property(x => x.Position).HasColumnName("POSITION").IsOptional().HasMaxLength(200);
            Property(x => x.CellPhone).HasColumnName("CELLPHONE").IsOptional().HasMaxLength(200);
            Property(x => x.OfficePhone).HasColumnName("OFFICEPHONE").IsOptional().HasMaxLength(200);
            Property(x => x.EMail).HasColumnName("EMAIL").IsOptional().HasMaxLength(200);
            Property(x => x.Remark).HasColumnName("REMARK").IsOptional().HasMaxLength(200);

            // Foreign keys
            HasOptional(a => a.T_EngineeringBuildApplyDemo).WithMany(b => b.T_EngineeringBuildApplyDemo_CustomerContace).HasForeignKey(c => c.T_EngineeringBuildApplyDemoID); // FK_T_EngineeringBuildApplyDemo_CustomerContace_T_EngineeringBuildApplyDemo
        }
    }

    // T_F_LoanApply
    internal partial class T_F_LoanApplyConfiguration : EntityTypeConfiguration<T_F_LoanApply>
    {
        public T_F_LoanApplyConfiguration()
        {
			ToTable("T_F_LOANAPPLY");
            HasKey(x => x.ID);

            Property(x => x.ID).HasColumnName("ID").IsRequired().HasMaxLength(50);
            Property(x => x.CreateDate).HasColumnName("CREATEDATE").IsOptional();
            Property(x => x.ModifyDate).HasColumnName("MODIFYDATE").IsOptional();
            Property(x => x.CreateUserID).HasColumnName("CREATEUSERID").IsOptional().HasMaxLength(50);
            Property(x => x.CreateUser).HasColumnName("CREATEUSER").IsOptional().HasMaxLength(50);
            Property(x => x.ModifyUserID).HasColumnName("MODIFYUSERID").IsOptional().HasMaxLength(50);
            Property(x => x.ModifyUser).HasColumnName("MODIFYUSER").IsOptional().HasMaxLength(50);
            Property(x => x.OrgID).HasColumnName("ORGID").IsOptional().HasMaxLength(50);
            Property(x => x.CompanyID).HasColumnName("COMPANYID").IsOptional().HasMaxLength(50);
            Property(x => x.FlowPhase).HasColumnName("FLOWPHASE").IsOptional().HasMaxLength(50);
            Property(x => x.FlowInfo).HasColumnName("FLOWINFO").IsOptional().HasMaxLength(1073741823);
            Property(x => x.StepName).HasColumnName("STEPNAME").IsOptional().HasMaxLength(500);
            Property(x => x.SerialNumber).HasColumnName("SERIALNUMBER").IsOptional().HasMaxLength(200);
            Property(x => x.ApplyUser).HasColumnName("APPLYUSER").IsOptional().HasMaxLength(200);
            Property(x => x.ApplyUserName).HasColumnName("APPLYUSERNAME").IsOptional().HasMaxLength(200);
            Property(x => x.ApplyDept).HasColumnName("APPLYDEPT").IsOptional().HasMaxLength(200);
            Property(x => x.ApplyDeptName).HasColumnName("APPLYDEPTNAME").IsOptional().HasMaxLength(200);
            Property(x => x.ApplyDate).HasColumnName("APPLYDATE").IsOptional();
            Property(x => x.LoanValue).HasColumnName("LOANVALUE").IsOptional().HasPrecision(18,4);
            Property(x => x.Reason).HasColumnName("REASON").IsOptional().HasMaxLength(500);
            Property(x => x.ProjectInfo).HasColumnName("PROJECTINFO").IsOptional().HasMaxLength(500);
            Property(x => x.ProjectInfoName).HasColumnName("PROJECTINFONAME").IsOptional().HasMaxLength(2000);
            Property(x => x.Remark).HasColumnName("REMARK").IsOptional().HasMaxLength(500);
            Property(x => x.Attachment).HasColumnName("ATTACHMENT").IsOptional().HasMaxLength(500);
            Property(x => x.FactValue).HasColumnName("FACTVALUE").IsOptional().HasPrecision(18,4);
            Property(x => x.LoanValueDX).HasColumnName("LOANVALUEDX").IsOptional().HasMaxLength(200);
            Property(x => x.FactValueDX).HasColumnName("FACTVALUEDX").IsOptional().HasMaxLength(200);
            Property(x => x.TravelApply).HasColumnName("TRAVELAPPLY").IsOptional().HasMaxLength(200);
            Property(x => x.TravelApplyName).HasColumnName("TRAVELAPPLYNAME").IsOptional().HasMaxLength(2000);
        }
    }

    // T_F_PaymentApply
    internal partial class T_F_PaymentApplyConfiguration : EntityTypeConfiguration<T_F_PaymentApply>
    {
        public T_F_PaymentApplyConfiguration()
        {
			ToTable("T_F_PAYMENTAPPLY");
            HasKey(x => x.ID);

            Property(x => x.ID).HasColumnName("ID").IsRequired().HasMaxLength(50);
            Property(x => x.CreateDate).HasColumnName("CREATEDATE").IsOptional();
            Property(x => x.ModifyDate).HasColumnName("MODIFYDATE").IsOptional();
            Property(x => x.CreateUserID).HasColumnName("CREATEUSERID").IsOptional().HasMaxLength(50);
            Property(x => x.CreateUser).HasColumnName("CREATEUSER").IsOptional().HasMaxLength(50);
            Property(x => x.ModifyUserID).HasColumnName("MODIFYUSERID").IsOptional().HasMaxLength(50);
            Property(x => x.ModifyUser).HasColumnName("MODIFYUSER").IsOptional().HasMaxLength(50);
            Property(x => x.OrgID).HasColumnName("ORGID").IsOptional().HasMaxLength(50);
            Property(x => x.CompanyID).HasColumnName("COMPANYID").IsOptional().HasMaxLength(50);
            Property(x => x.FlowPhase).HasColumnName("FLOWPHASE").IsOptional().HasMaxLength(50);
            Property(x => x.FlowInfo).HasColumnName("FLOWINFO").IsOptional().HasMaxLength(1073741823);
            Property(x => x.StepName).HasColumnName("STEPNAME").IsOptional().HasMaxLength(500);
            Property(x => x.ApplyUser).HasColumnName("APPLYUSER").IsOptional().HasMaxLength(200);
            Property(x => x.ApplyUserName).HasColumnName("APPLYUSERNAME").IsOptional().HasMaxLength(200);
            Property(x => x.ApplyDept).HasColumnName("APPLYDEPT").IsOptional().HasMaxLength(200);
            Property(x => x.ApplyDeptName).HasColumnName("APPLYDEPTNAME").IsOptional().HasMaxLength(200);
            Property(x => x.ApplyDate).HasColumnName("APPLYDATE").IsOptional();
            Property(x => x.PaymentType).HasColumnName("PAYMENTTYPE").IsOptional().HasMaxLength(200);
            Property(x => x.ApplyValue).HasColumnName("APPLYVALUE").IsOptional().HasPrecision(18,4);
            Property(x => x.ApplyValueDX).HasColumnName("APPLYVALUEDX").IsOptional().HasMaxLength(200);
            Property(x => x.Contract).HasColumnName("CONTRACT").IsOptional().HasMaxLength(200);
            Property(x => x.ContractName).HasColumnName("CONTRACTNAME").IsOptional().HasMaxLength(200);
            Property(x => x.PaymentValue).HasColumnName("PAYMENTVALUE").IsOptional().HasPrecision(18,4);
            Property(x => x.ContractValue).HasColumnName("CONTRACTVALUE").IsOptional().HasPrecision(18,4);
            Property(x => x.ReceiptUnit).HasColumnName("RECEIPTUNIT").IsOptional().HasMaxLength(200);
            Property(x => x.Remark).HasColumnName("REMARK").IsOptional().HasMaxLength(500);
            Property(x => x.ProjectInfo).HasColumnName("PROJECTINFO").IsOptional().HasMaxLength(200);
            Property(x => x.ProjectInfoName).HasColumnName("PROJECTINFONAME").IsOptional().HasMaxLength(200);
            Property(x => x.SubjectCode).HasColumnName("SUBJECTCODE").IsOptional().HasMaxLength(200);
        }
    }

    // T_F_ReimbursementApply
    internal partial class T_F_ReimbursementApplyConfiguration : EntityTypeConfiguration<T_F_ReimbursementApply>
    {
        public T_F_ReimbursementApplyConfiguration()
        {
			ToTable("T_F_REIMBURSEMENTAPPLY");
            HasKey(x => x.ID);

            Property(x => x.ID).HasColumnName("ID").IsRequired().HasMaxLength(50);
            Property(x => x.CreateDate).HasColumnName("CREATEDATE").IsOptional();
            Property(x => x.ModifyDate).HasColumnName("MODIFYDATE").IsOptional();
            Property(x => x.CreateUserID).HasColumnName("CREATEUSERID").IsOptional().HasMaxLength(50);
            Property(x => x.CreateUser).HasColumnName("CREATEUSER").IsOptional().HasMaxLength(50);
            Property(x => x.ModifyUserID).HasColumnName("MODIFYUSERID").IsOptional().HasMaxLength(50);
            Property(x => x.ModifyUser).HasColumnName("MODIFYUSER").IsOptional().HasMaxLength(50);
            Property(x => x.OrgID).HasColumnName("ORGID").IsOptional().HasMaxLength(50);
            Property(x => x.CompanyID).HasColumnName("COMPANYID").IsOptional().HasMaxLength(50);
            Property(x => x.FlowPhase).HasColumnName("FLOWPHASE").IsOptional().HasMaxLength(50);
            Property(x => x.FlowInfo).HasColumnName("FLOWINFO").IsOptional().HasMaxLength(1073741823);
            Property(x => x.StepName).HasColumnName("STEPNAME").IsOptional().HasMaxLength(500);
            Property(x => x.ApplyUser).HasColumnName("APPLYUSER").IsOptional().HasMaxLength(200);
            Property(x => x.ApplyUserName).HasColumnName("APPLYUSERNAME").IsOptional().HasMaxLength(200);
            Property(x => x.ApplyDate).HasColumnName("APPLYDATE").IsOptional();
            Property(x => x.ApplyDept).HasColumnName("APPLYDEPT").IsOptional().HasMaxLength(200);
            Property(x => x.ApplyDeptName).HasColumnName("APPLYDEPTNAME").IsOptional().HasMaxLength(200);
            Property(x => x.ReimbursementType).HasColumnName("REIMBURSEMENTTYPE").IsOptional().HasMaxLength(200);
            Property(x => x.ReimbursementClass).HasColumnName("REIMBURSEMENTCLASS").IsOptional().HasMaxLength(200);
            Property(x => x.DeptInfo).HasColumnName("DEPTINFO").IsOptional().HasMaxLength(200);
            Property(x => x.DeptInfoName).HasColumnName("DEPTINFONAME").IsOptional().HasMaxLength(200);
            Property(x => x.TravelApplyInfo).HasColumnName("TRAVELAPPLYINFO").IsOptional().HasMaxLength(200);
            Property(x => x.TravelApplyInfoName).HasColumnName("TRAVELAPPLYINFONAME").IsOptional().HasMaxLength(200);
            Property(x => x.FactPaymentValue).HasColumnName("FACTPAYMENTVALUE").IsOptional().HasPrecision(18,4);
            Property(x => x.ReimbursementValue).HasColumnName("REIMBURSEMENTVALUE").IsOptional().HasPrecision(18,4);
            Property(x => x.ApplyValue).HasColumnName("APPLYVALUE").IsOptional().HasPrecision(18,4);
            Property(x => x.LoanValue).HasColumnName("LOANVALUE").IsOptional().HasPrecision(18,4);
            Property(x => x.Attachments).HasColumnName("ATTACHMENTS").IsOptional().HasMaxLength(500);
            Property(x => x.Remark).HasColumnName("REMARK").IsOptional().HasMaxLength(500);
            Property(x => x.SerialNumber).HasColumnName("SERIALNUMBER").IsOptional().HasMaxLength(200);
            Property(x => x.ProjectInfo).HasColumnName("PROJECTINFO").IsOptional().HasMaxLength(500);
            Property(x => x.ProjectInfoName).HasColumnName("PROJECTINFONAME").IsOptional().HasMaxLength(500);
            Property(x => x.Details).HasColumnName("DETAILS").IsOptional().HasMaxLength(1073741823);
        }
    }

    // T_F_ReimbursementApply_Details
    internal partial class T_F_ReimbursementApply_DetailsConfiguration : EntityTypeConfiguration<T_F_ReimbursementApply_Details>
    {
        public T_F_ReimbursementApply_DetailsConfiguration()
        {
			ToTable("T_F_REIMBURSEMENTAPPLY_DETAILS");
            HasKey(x => x.ID);

            Property(x => x.ID).HasColumnName("ID").IsRequired().HasMaxLength(50);
            Property(x => x.T_F_ReimbursementApplyID).HasColumnName("T_F_REIMBURSEMENTAPPLYID").IsOptional().HasMaxLength(50);
            Property(x => x.SortIndex).HasColumnName("SORTINDEX").IsOptional();
            Property(x => x.IsReleased).HasColumnName("ISRELEASED").IsOptional().HasMaxLength(1);
            Property(x => x.ProjectInfo).HasColumnName("PROJECTINFO").IsOptional().HasMaxLength(200);
            Property(x => x.ProjectInfoName).HasColumnName("PROJECTINFONAME").IsOptional().HasMaxLength(200);
            Property(x => x.SubjectCode).HasColumnName("SUBJECTCODE").IsOptional().HasMaxLength(200);
            Property(x => x.ApplyValue).HasColumnName("APPLYVALUE").IsOptional().HasPrecision(18,4);
            Property(x => x.Remark).HasColumnName("REMARK").IsOptional().HasMaxLength(500);
            Property(x => x.ProjectType).HasColumnName("PROJECTTYPE").IsOptional().HasMaxLength(200);
            Property(x => x.Dept).HasColumnName("DEPT").IsOptional().HasMaxLength(200);
            Property(x => x.DeptName).HasColumnName("DEPTNAME").IsOptional().HasMaxLength(200);

            // Foreign keys
            HasOptional(a => a.T_F_ReimbursementApply).WithMany(b => b.T_F_ReimbursementApply_Details).HasForeignKey(c => c.T_F_ReimbursementApplyID); // FK_T_F_ReimbursementApply_Details_T_F_ReimbursementApply
        }
    }

    // T_FDM_FinanceElectronicDocumentDownload
    internal partial class T_FDM_FinanceElectronicDocumentDownloadConfiguration : EntityTypeConfiguration<T_FDM_FinanceElectronicDocumentDownload>
    {
        public T_FDM_FinanceElectronicDocumentDownloadConfiguration()
        {
			ToTable("T_FDM_FINANCEELECTRONICDOCUMENTDOWNLOAD");
            HasKey(x => x.ID);

            Property(x => x.ID).HasColumnName("ID").IsRequired().HasMaxLength(50);
            Property(x => x.CreateDate).HasColumnName("CREATEDATE").IsOptional();
            Property(x => x.ModifyDate).HasColumnName("MODIFYDATE").IsOptional();
            Property(x => x.CreateUserID).HasColumnName("CREATEUSERID").IsOptional().HasMaxLength(50);
            Property(x => x.CreateUser).HasColumnName("CREATEUSER").IsOptional().HasMaxLength(50);
            Property(x => x.ModifyUserID).HasColumnName("MODIFYUSERID").IsOptional().HasMaxLength(50);
            Property(x => x.ModifyUser).HasColumnName("MODIFYUSER").IsOptional().HasMaxLength(50);
            Property(x => x.OrgID).HasColumnName("ORGID").IsOptional().HasMaxLength(50);
            Property(x => x.CompanyID).HasColumnName("COMPANYID").IsOptional().HasMaxLength(50);
            Property(x => x.FlowPhase).HasColumnName("FLOWPHASE").IsOptional().HasMaxLength(50);
            Property(x => x.FlowInfo).HasColumnName("FLOWINFO").IsOptional().HasMaxLength(1073741823);
            Property(x => x.StepName).HasColumnName("STEPNAME").IsOptional().HasMaxLength(500);
            Property(x => x.CreateUserDept).HasColumnName("CREATEUSERDEPT").IsOptional().HasMaxLength(200);
            Property(x => x.CreateUserDeptName).HasColumnName("CREATEUSERDEPTNAME").IsOptional().HasMaxLength(200);
            Property(x => x.CreateUserPhone).HasColumnName("CREATEUSERPHONE").IsOptional().HasMaxLength(50);
            Property(x => x.ApplyReason).HasColumnName("APPLYREASON").IsOptional().HasMaxLength(500);
            Property(x => x.Detail).HasColumnName("DETAIL").IsOptional().HasMaxLength(1073741823);
            Property(x => x.SQRQZYJ).HasColumnName("SQRQZYJ").IsOptional();
            Property(x => x.CWWDBGYQZYJ).HasColumnName("CWWDBGYQZYJ").IsOptional();
            Property(x => x.FlowEndDate).HasColumnName("FLOWENDDATE").IsOptional();
        }
    }

    // T_FDM_FinanceElectronicDocumentDownload_Detail
    internal partial class T_FDM_FinanceElectronicDocumentDownload_DetailConfiguration : EntityTypeConfiguration<T_FDM_FinanceElectronicDocumentDownload_Detail>
    {
        public T_FDM_FinanceElectronicDocumentDownload_DetailConfiguration()
        {
			ToTable("T_FDM_FINANCEELECTRONICDOCUMENTDOWNLOAD_DETAIL");
            HasKey(x => x.ID);

            Property(x => x.ID).HasColumnName("ID").IsRequired().HasMaxLength(50);
            Property(x => x.T_FDM_FinanceElectronicDocumentDownloadID).HasColumnName("T_FDM_FINANCEELECTRONICDOCUMENTDOWNLOADID").IsOptional().HasMaxLength(50);
            Property(x => x.SortIndex).HasColumnName("SORTINDEX").IsOptional();
            Property(x => x.IsReleased).HasColumnName("ISRELEASED").IsOptional().HasMaxLength(1);
            Property(x => x.FinanceElectronicDocumentInfoID).HasColumnName("FINANCEELECTRONICDOCUMENTINFOID").IsOptional().HasMaxLength(200);
            Property(x => x.SerialNumber).HasColumnName("SERIALNUMBER").IsOptional().HasMaxLength(50);
            Property(x => x.Title).HasColumnName("TITLE").IsOptional().HasMaxLength(200);
            Property(x => x.FileType).HasColumnName("FILETYPE").IsOptional().HasMaxLength(200);
            Property(x => x.FileSecondType).HasColumnName("FILESECONDTYPE").IsOptional().HasMaxLength(200);
            Property(x => x.FileThirdType).HasColumnName("FILETHIRDTYPE").IsOptional().HasMaxLength(200);
            Property(x => x.IsSpecial).HasColumnName("ISSPECIAL").IsOptional().HasMaxLength(50);
            Property(x => x.DueDate).HasColumnName("DUEDATE").IsOptional();
            Property(x => x.RelatedEnclosure).HasColumnName("RELATEDENCLOSURE").IsOptional().HasMaxLength(200);

            // Foreign keys
            HasOptional(a => a.T_FDM_FinanceElectronicDocumentDownload).WithMany(b => b.T_FDM_FinanceElectronicDocumentDownload_Detail).HasForeignKey(c => c.T_FDM_FinanceElectronicDocumentDownloadID); // FK_T_FDM_FinanceElectronicDocumentDownload_Detail_T_FDM_FinanceElectronicDocumentDownload
        }
    }

    // T_FDM_FinanceElectronicDocumentUpload
    internal partial class T_FDM_FinanceElectronicDocumentUploadConfiguration : EntityTypeConfiguration<T_FDM_FinanceElectronicDocumentUpload>
    {
        public T_FDM_FinanceElectronicDocumentUploadConfiguration()
        {
			ToTable("T_FDM_FINANCEELECTRONICDOCUMENTUPLOAD");
            HasKey(x => x.ID);

            Property(x => x.ID).HasColumnName("ID").IsRequired().HasMaxLength(50);
            Property(x => x.CreateDate).HasColumnName("CREATEDATE").IsOptional();
            Property(x => x.ModifyDate).HasColumnName("MODIFYDATE").IsOptional();
            Property(x => x.CreateUserID).HasColumnName("CREATEUSERID").IsOptional().HasMaxLength(50);
            Property(x => x.CreateUser).HasColumnName("CREATEUSER").IsOptional().HasMaxLength(50);
            Property(x => x.ModifyUserID).HasColumnName("MODIFYUSERID").IsOptional().HasMaxLength(50);
            Property(x => x.ModifyUser).HasColumnName("MODIFYUSER").IsOptional().HasMaxLength(50);
            Property(x => x.OrgID).HasColumnName("ORGID").IsOptional().HasMaxLength(50);
            Property(x => x.CompanyID).HasColumnName("COMPANYID").IsOptional().HasMaxLength(50);
            Property(x => x.FlowPhase).HasColumnName("FLOWPHASE").IsOptional().HasMaxLength(50);
            Property(x => x.FlowInfo).HasColumnName("FLOWINFO").IsOptional().HasMaxLength(1073741823);
            Property(x => x.StepName).HasColumnName("STEPNAME").IsOptional().HasMaxLength(500);
            Property(x => x.CreateUserDept).HasColumnName("CREATEUSERDEPT").IsOptional().HasMaxLength(200);
            Property(x => x.CreateUserDeptName).HasColumnName("CREATEUSERDEPTNAME").IsOptional().HasMaxLength(200);
            Property(x => x.SerialNumber).HasColumnName("SERIALNUMBER").IsOptional().HasMaxLength(50);
            Property(x => x.Title).HasColumnName("TITLE").IsOptional().HasMaxLength(200);
            Property(x => x.FileType).HasColumnName("FILETYPE").IsOptional().HasMaxLength(50);
            Property(x => x.FileTypeName).HasColumnName("FILETYPENAME").IsOptional().HasMaxLength(50);
            Property(x => x.FileSecondType).HasColumnName("FILESECONDTYPE").IsOptional().HasMaxLength(50);
            Property(x => x.FileThirdType).HasColumnName("FILETHIRDTYPE").IsOptional().HasMaxLength(50);
            Property(x => x.IsSpecial).HasColumnName("ISSPECIAL").IsOptional().HasMaxLength(50);
            Property(x => x.FileCount).HasColumnName("FILECOUNT").IsOptional();
            Property(x => x.BriefDescription).HasColumnName("BRIEFDESCRIPTION").IsOptional().HasMaxLength(500);
            Property(x => x.RelatedEnclosure).HasColumnName("RELATEDENCLOSURE").IsOptional().HasMaxLength(500);
            Property(x => x.DownLoadCount).HasColumnName("DOWNLOADCOUNT").IsOptional();
            Property(x => x.BorrowingCount).HasColumnName("BORROWINGCOUNT").IsOptional();
        }
    }

    // T_FDM_FinancialDocumentBorrowingApplication
    internal partial class T_FDM_FinancialDocumentBorrowingApplicationConfiguration : EntityTypeConfiguration<T_FDM_FinancialDocumentBorrowingApplication>
    {
        public T_FDM_FinancialDocumentBorrowingApplicationConfiguration()
        {
			ToTable("T_FDM_FINANCIALDOCUMENTBORROWINGAPPLICATION");
            HasKey(x => x.ID);

            Property(x => x.ID).HasColumnName("ID").IsRequired().HasMaxLength(50);
            Property(x => x.CreateDate).HasColumnName("CREATEDATE").IsOptional();
            Property(x => x.ModifyDate).HasColumnName("MODIFYDATE").IsOptional();
            Property(x => x.CreateUserID).HasColumnName("CREATEUSERID").IsOptional().HasMaxLength(50);
            Property(x => x.CreateUser).HasColumnName("CREATEUSER").IsOptional().HasMaxLength(50);
            Property(x => x.ModifyUserID).HasColumnName("MODIFYUSERID").IsOptional().HasMaxLength(50);
            Property(x => x.ModifyUser).HasColumnName("MODIFYUSER").IsOptional().HasMaxLength(50);
            Property(x => x.OrgID).HasColumnName("ORGID").IsOptional().HasMaxLength(50);
            Property(x => x.CompanyID).HasColumnName("COMPANYID").IsOptional().HasMaxLength(50);
            Property(x => x.FlowPhase).HasColumnName("FLOWPHASE").IsOptional().HasMaxLength(50);
            Property(x => x.FlowInfo).HasColumnName("FLOWINFO").IsOptional().HasMaxLength(1073741823);
            Property(x => x.StepName).HasColumnName("STEPNAME").IsOptional().HasMaxLength(500);
            Property(x => x.CreateUserDept).HasColumnName("CREATEUSERDEPT").IsOptional().HasMaxLength(200);
            Property(x => x.CreateUserDeptName).HasColumnName("CREATEUSERDEPTNAME").IsOptional().HasMaxLength(200);
            Property(x => x.CreateUserPhone).HasColumnName("CREATEUSERPHONE").IsOptional().HasMaxLength(50);
            Property(x => x.ExpectedReturnDate).HasColumnName("EXPECTEDRETURNDATE").IsOptional();
            Property(x => x.ActualReturnDate).HasColumnName("ACTUALRETURNDATE").IsOptional();
            Property(x => x.FileUnit).HasColumnName("FILEUNIT").IsOptional().HasMaxLength(50);
            Property(x => x.FileType).HasColumnName("FILETYPE").IsOptional().HasMaxLength(50);
            Property(x => x.Reason).HasColumnName("REASON").IsOptional().HasMaxLength(500);
            Property(x => x.Remark).HasColumnName("REMARK").IsOptional().HasMaxLength(500);
            Property(x => x.SQRQZYJ).HasColumnName("SQRQZYJ").IsOptional();
            Property(x => x.BMZZQZYJ).HasColumnName("BMZZQZYJ").IsOptional();
            Property(x => x.CWBZZQZYJ).HasColumnName("CWBZZQZYJ").IsOptional();
            Property(x => x.CWWDBGYQZYJ).HasColumnName("CWWDBGYQZYJ").IsOptional();
            Property(x => x.SQRGHQZYJ).HasColumnName("SQRGHQZYJ").IsOptional();
            Property(x => x.CWWDBGYJSQZYJ).HasColumnName("CWWDBGYJSQZYJ").IsOptional();
            Property(x => x.FlowEndDate).HasColumnName("FLOWENDDATE").IsOptional();
        }
    }

    // T_FDM_FinancialDocumenTest
    internal partial class T_FDM_FinancialDocumenTestConfiguration : EntityTypeConfiguration<T_FDM_FinancialDocumenTest>
    {
        public T_FDM_FinancialDocumenTestConfiguration()
        {
			ToTable("T_FDM_FINANCIALDOCUMENTEST");
            HasKey(x => x.ID);

            Property(x => x.ID).HasColumnName("ID").IsRequired().HasMaxLength(50);
            Property(x => x.CreateDate).HasColumnName("CREATEDATE").IsOptional();
            Property(x => x.ModifyDate).HasColumnName("MODIFYDATE").IsOptional();
            Property(x => x.CreateUserID).HasColumnName("CREATEUSERID").IsOptional().HasMaxLength(50);
            Property(x => x.CreateUser).HasColumnName("CREATEUSER").IsOptional().HasMaxLength(200);
            Property(x => x.ModifyUserID).HasColumnName("MODIFYUSERID").IsOptional().HasMaxLength(50);
            Property(x => x.ModifyUser).HasColumnName("MODIFYUSER").IsOptional().HasMaxLength(50);
            Property(x => x.OrgID).HasColumnName("ORGID").IsOptional().HasMaxLength(50);
            Property(x => x.CompanyID).HasColumnName("COMPANYID").IsOptional().HasMaxLength(50);
            Property(x => x.FlowPhase).HasColumnName("FLOWPHASE").IsOptional().HasMaxLength(50);
            Property(x => x.FlowInfo).HasColumnName("FLOWINFO").IsOptional().HasMaxLength(1073741823);
            Property(x => x.StepName).HasColumnName("STEPNAME").IsOptional().HasMaxLength(500);
            Property(x => x.CreateDept).HasColumnName("CREATEDEPT").IsOptional().HasMaxLength(200);
            Property(x => x.Reason).HasColumnName("REASON").IsOptional().HasMaxLength(200);
        }
    }

    // T_FDM_FinancialDocumenTest_liuliu
    internal partial class T_FDM_FinancialDocumenTest_liuliuConfiguration : EntityTypeConfiguration<T_FDM_FinancialDocumenTest_liuliu>
    {
        public T_FDM_FinancialDocumenTest_liuliuConfiguration()
        {
			ToTable("T_FDM_FINANCIALDOCUMENTEST_LIULIU");
            HasKey(x => x.ID);

            Property(x => x.ID).HasColumnName("ID").IsRequired().HasMaxLength(50);
            Property(x => x.CreateDate).HasColumnName("CREATEDATE").IsOptional();
            Property(x => x.ModifyDate).HasColumnName("MODIFYDATE").IsOptional();
            Property(x => x.CreateUserID).HasColumnName("CREATEUSERID").IsOptional().HasMaxLength(50);
            Property(x => x.CreateUser).HasColumnName("CREATEUSER").IsOptional().HasMaxLength(50);
            Property(x => x.ModifyUserID).HasColumnName("MODIFYUSERID").IsOptional().HasMaxLength(50);
            Property(x => x.ModifyUser).HasColumnName("MODIFYUSER").IsOptional().HasMaxLength(50);
            Property(x => x.OrgID).HasColumnName("ORGID").IsOptional().HasMaxLength(50);
            Property(x => x.CompanyID).HasColumnName("COMPANYID").IsOptional().HasMaxLength(50);
            Property(x => x.FlowPhase).HasColumnName("FLOWPHASE").IsOptional().HasMaxLength(50);
            Property(x => x.FlowInfo).HasColumnName("FLOWINFO").IsOptional().HasMaxLength(1073741823);
            Property(x => x.StepName).HasColumnName("STEPNAME").IsOptional().HasMaxLength(500);
            Property(x => x.username).HasColumnName("USERNAME").IsOptional().HasMaxLength(200);
            Property(x => x.applydate).HasColumnName("APPLYDATE").IsOptional();
            Property(x => x.filename).HasColumnName("FILENAME").IsOptional().HasMaxLength(200);
            Property(x => x.filetype).HasColumnName("FILETYPE").IsOptional().HasMaxLength(1073741823);
            Property(x => x.bz).HasColumnName("BZ").IsOptional().HasMaxLength(200);
            Property(x => x.TaskName).HasColumnName("TASKNAME").IsOptional().HasMaxLength(500);
            Property(x => x.filetype2).HasColumnName("FILETYPE2").IsOptional().HasMaxLength(200);
            Property(x => x.filetype2Name).HasColumnName("FILETYPE2NAME").IsOptional().HasMaxLength(200);
            Property(x => x.appydept).HasColumnName("APPYDEPT").IsOptional().HasMaxLength(200);
            Property(x => x.staydays).HasColumnName("STAYDAYS").IsOptional();
            Property(x => x.Gabroadname).HasColumnName("GABROADNAME").IsOptional().HasMaxLength(1073741823);
            Property(x => x.cgsm).HasColumnName("CGSM").IsOptional().HasMaxLength(500);
            Property(x => x.deptsign).HasColumnName("DEPTSIGN").IsOptional();
            Property(x => x.leadersign).HasColumnName("LEADERSIGN").IsOptional();
        }
    }

    // T_FDM_FinancialDocumenTest_liuliu_Gabroadname
    internal partial class T_FDM_FinancialDocumenTest_liuliu_GabroadnameConfiguration : EntityTypeConfiguration<T_FDM_FinancialDocumenTest_liuliu_Gabroadname>
    {
        public T_FDM_FinancialDocumenTest_liuliu_GabroadnameConfiguration()
        {
			ToTable("T_FDM_FINANCIALDOCUMENTEST_LIULIU_GABROADNAME");
            HasKey(x => x.ID);

            Property(x => x.ID).HasColumnName("ID").IsRequired().HasMaxLength(50);
            Property(x => x.T_FDM_FinancialDocumenTest_liuliuID).HasColumnName("T_FDM_FINANCIALDOCUMENTEST_LIULIUID").IsOptional().HasMaxLength(50);
            Property(x => x.SortIndex).HasColumnName("SORTINDEX").IsOptional();
            Property(x => x.IsReleased).HasColumnName("ISRELEASED").IsOptional().HasMaxLength(1);
            Property(x => x.name).HasColumnName("NAME").IsOptional().HasMaxLength(200);
            Property(x => x.nameName).HasColumnName("NAMENAME").IsOptional().HasMaxLength(200);
            Property(x => x.deptname).HasColumnName("DEPTNAME").IsOptional().HasMaxLength(200);

            // Foreign keys
            HasOptional(a => a.T_FDM_FinancialDocumenTest_liuliu).WithMany(b => b.T_FDM_FinancialDocumenTest_liuliu_Gabroadname).HasForeignKey(c => c.T_FDM_FinancialDocumenTest_liuliuID); // FK_T_FDM_FinancialDocumenTest_liuliu_Gabroadname_T_FDM_FinancialDocumenTest_liuliu
        }
    }

    // T_FDM_FinancialDocumenTesttypedic_liuliu
    internal partial class T_FDM_FinancialDocumenTesttypedic_liuliuConfiguration : EntityTypeConfiguration<T_FDM_FinancialDocumenTesttypedic_liuliu>
    {
        public T_FDM_FinancialDocumenTesttypedic_liuliuConfiguration()
        {
			ToTable("T_FDM_FINANCIALDOCUMENTESTTYPEDIC_LIULIU");
            HasKey(x => x.ID);

            Property(x => x.ID).HasColumnName("ID").IsRequired().HasMaxLength(50);
            Property(x => x.CreateDate).HasColumnName("CREATEDATE").IsOptional();
            Property(x => x.ModifyDate).HasColumnName("MODIFYDATE").IsOptional();
            Property(x => x.CreateUserID).HasColumnName("CREATEUSERID").IsOptional().HasMaxLength(50);
            Property(x => x.CreateUser).HasColumnName("CREATEUSER").IsOptional().HasMaxLength(50);
            Property(x => x.ModifyUserID).HasColumnName("MODIFYUSERID").IsOptional().HasMaxLength(50);
            Property(x => x.ModifyUser).HasColumnName("MODIFYUSER").IsOptional().HasMaxLength(50);
            Property(x => x.OrgID).HasColumnName("ORGID").IsOptional().HasMaxLength(50);
            Property(x => x.CompanyID).HasColumnName("COMPANYID").IsOptional().HasMaxLength(50);
            Property(x => x.FlowPhase).HasColumnName("FLOWPHASE").IsOptional().HasMaxLength(50);
            Property(x => x.FlowInfo).HasColumnName("FLOWINFO").IsOptional().HasMaxLength(1073741823);
            Property(x => x.StepName).HasColumnName("STEPNAME").IsOptional().HasMaxLength(500);
            Property(x => x.LXMC).HasColumnName("LXMC").IsOptional().HasMaxLength(200);
        }
    }

    // T_FDM_TechnicalPlatformDocumentTypeMaintenance
    internal partial class T_FDM_TechnicalPlatformDocumentTypeMaintenanceConfiguration : EntityTypeConfiguration<T_FDM_TechnicalPlatformDocumentTypeMaintenance>
    {
        public T_FDM_TechnicalPlatformDocumentTypeMaintenanceConfiguration()
        {
			ToTable("T_FDM_TECHNICALPLATFORMDOCUMENTTYPEMAINTENANCE");
            HasKey(x => x.ID);

            Property(x => x.ID).HasColumnName("ID").IsRequired().HasMaxLength(50);
            Property(x => x.CreateDate).HasColumnName("CREATEDATE").IsOptional();
            Property(x => x.ModifyDate).HasColumnName("MODIFYDATE").IsOptional();
            Property(x => x.CreateUserID).HasColumnName("CREATEUSERID").IsOptional().HasMaxLength(50);
            Property(x => x.CreateUser).HasColumnName("CREATEUSER").IsOptional().HasMaxLength(50);
            Property(x => x.ModifyUserID).HasColumnName("MODIFYUSERID").IsOptional().HasMaxLength(50);
            Property(x => x.ModifyUser).HasColumnName("MODIFYUSER").IsOptional().HasMaxLength(50);
            Property(x => x.OrgID).HasColumnName("ORGID").IsOptional().HasMaxLength(50);
            Property(x => x.CompanyID).HasColumnName("COMPANYID").IsOptional().HasMaxLength(50);
            Property(x => x.FlowPhase).HasColumnName("FLOWPHASE").IsOptional().HasMaxLength(50);
            Property(x => x.FlowInfo).HasColumnName("FLOWINFO").IsOptional().HasMaxLength(1073741823);
            Property(x => x.StepName).HasColumnName("STEPNAME").IsOptional().HasMaxLength(500);
            Property(x => x.CreateUserDept).HasColumnName("CREATEUSERDEPT").IsOptional().HasMaxLength(200);
            Property(x => x.CreateUserDeptName).HasColumnName("CREATEUSERDEPTNAME").IsOptional().HasMaxLength(200);
            Property(x => x.FileType).HasColumnName("FILETYPE").IsOptional().HasMaxLength(200);
            Property(x => x.FileSecondType).HasColumnName("FILESECONDTYPE").IsOptional().HasMaxLength(200);
            Property(x => x.FileThirdType).HasColumnName("FILETHIRDTYPE").IsOptional().HasMaxLength(200);
            Property(x => x.Remark).HasColumnName("REMARK").IsOptional().HasMaxLength(2000);
        }
    }

    // T_Lawsuit_CaseFile
    internal partial class T_Lawsuit_CaseFileConfiguration : EntityTypeConfiguration<T_Lawsuit_CaseFile>
    {
        public T_Lawsuit_CaseFileConfiguration()
        {
			ToTable("T_LAWSUIT_CASEFILE");
            HasKey(x => x.ID);

            Property(x => x.ID).HasColumnName("ID").IsRequired().HasMaxLength(50);
            Property(x => x.CreateDate).HasColumnName("CREATEDATE").IsOptional();
            Property(x => x.ModifyDate).HasColumnName("MODIFYDATE").IsOptional();
            Property(x => x.CreateUserID).HasColumnName("CREATEUSERID").IsOptional().HasMaxLength(50);
            Property(x => x.CreateUser).HasColumnName("CREATEUSER").IsOptional().HasMaxLength(50);
            Property(x => x.ModifyUserID).HasColumnName("MODIFYUSERID").IsOptional().HasMaxLength(50);
            Property(x => x.ModifyUser).HasColumnName("MODIFYUSER").IsOptional().HasMaxLength(50);
            Property(x => x.OrgID).HasColumnName("ORGID").IsOptional().HasMaxLength(50);
            Property(x => x.CompanyID).HasColumnName("COMPANYID").IsOptional().HasMaxLength(50);
            Property(x => x.FlowPhase).HasColumnName("FLOWPHASE").IsOptional().HasMaxLength(50);
            Property(x => x.FlowInfo).HasColumnName("FLOWINFO").IsOptional().HasMaxLength(1073741823);
            Property(x => x.StepName).HasColumnName("STEPNAME").IsOptional().HasMaxLength(500);
            Property(x => x.NameOfCase).HasColumnName("NAMEOFCASE").IsOptional().HasMaxLength(200);
            Property(x => x.SubjectHeadings).HasColumnName("SUBJECTHEADINGS").IsOptional().HasMaxLength(200);
            Property(x => x.CaseType).HasColumnName("CASETYPE").IsOptional().HasMaxLength(200);
            Property(x => x.AmountOfTheSubjectMatterOfTheCase).HasColumnName("AMOUNTOFTHESUBJECTMATTEROFTHECASE").IsOptional().HasMaxLength(200);
            Property(x => x.LitigationResponseDate).HasColumnName("LITIGATIONRESPONSEDATE").IsOptional();
            Property(x => x.CaseNumber).HasColumnName("CASENUMBER").IsOptional().HasMaxLength(200);
            Property(x => x.Plaintiff).HasColumnName("PLAINTIFF").IsOptional().HasMaxLength(200);
            Property(x => x.Defendant).HasColumnName("DEFENDANT").IsOptional().HasMaxLength(200);
            Property(x => x.TrialProcedure).HasColumnName("TRIALPROCEDURE").IsOptional().HasMaxLength(200);
            Property(x => x.TransferingUnit).HasColumnName("TRANSFERINGUNIT").IsOptional().HasMaxLength(200);
            Property(x => x.UploadingPeople).HasColumnName("UPLOADINGPEOPLE").IsOptional().HasMaxLength(200);
            Property(x => x.UploadingPeopleName).HasColumnName("UPLOADINGPEOPLENAME").IsOptional().HasMaxLength(200);
            Property(x => x.UploadTime).HasColumnName("UPLOADTIME").IsOptional();
            Property(x => x.NameOfData).HasColumnName("NAMEOFDATA").IsOptional().HasMaxLength(200);
            Property(x => x.DataPhase).HasColumnName("DATAPHASE").IsOptional().HasMaxLength(200);
            Property(x => x.DataFile).HasColumnName("DATAFILE").IsOptional().HasMaxLength(500);
            Property(x => x.AdditionalExplanation).HasColumnName("ADDITIONALEXPLANATION").IsOptional().HasMaxLength(500);
            Property(x => x.CaseID).HasColumnName("CASEID").IsOptional().HasMaxLength(200);
        }
    }

    // T_Lawsuit_CaseInformation
    internal partial class T_Lawsuit_CaseInformationConfiguration : EntityTypeConfiguration<T_Lawsuit_CaseInformation>
    {
        public T_Lawsuit_CaseInformationConfiguration()
        {
			ToTable("T_LAWSUIT_CASEINFORMATION");
            HasKey(x => x.ID);

            Property(x => x.ID).HasColumnName("ID").IsRequired().HasMaxLength(50);
            Property(x => x.CreateDate).HasColumnName("CREATEDATE").IsOptional();
            Property(x => x.ModifyDate).HasColumnName("MODIFYDATE").IsOptional();
            Property(x => x.CreateUserID).HasColumnName("CREATEUSERID").IsOptional().HasMaxLength(50);
            Property(x => x.CreateUser).HasColumnName("CREATEUSER").IsOptional().HasMaxLength(50);
            Property(x => x.ModifyUserID).HasColumnName("MODIFYUSERID").IsOptional().HasMaxLength(50);
            Property(x => x.ModifyUser).HasColumnName("MODIFYUSER").IsOptional().HasMaxLength(50);
            Property(x => x.OrgID).HasColumnName("ORGID").IsOptional().HasMaxLength(50);
            Property(x => x.CompanyID).HasColumnName("COMPANYID").IsOptional().HasMaxLength(50);
            Property(x => x.FlowPhase).HasColumnName("FLOWPHASE").IsOptional().HasMaxLength(50);
            Property(x => x.FlowInfo).HasColumnName("FLOWINFO").IsOptional().HasMaxLength(1073741823);
            Property(x => x.StepName).HasColumnName("STEPNAME").IsOptional().HasMaxLength(500);
            Property(x => x.TypesOfLitigation).HasColumnName("TYPESOFLITIGATION").IsOptional().HasMaxLength(200);
            Property(x => x.RelatedLitigationApplication).HasColumnName("RELATEDLITIGATIONAPPLICATION").IsOptional().HasMaxLength(200);
            Property(x => x.RelatedLitigationApplicationName).HasColumnName("RELATEDLITIGATIONAPPLICATIONNAME").IsOptional().HasMaxLength(200);
            Property(x => x.NameOfCase).HasColumnName("NAMEOFCASE").IsOptional().HasMaxLength(200);
            Property(x => x.SubjectHeadings).HasColumnName("SUBJECTHEADINGS").IsOptional().HasMaxLength(200);
            Property(x => x.CaseType).HasColumnName("CASETYPE").IsOptional().HasMaxLength(200);
            Property(x => x.AmountOfTheSubjectMatterOfTheCase).HasColumnName("AMOUNTOFTHESUBJECTMATTEROFTHECASE").IsOptional().HasMaxLength(200);
            Property(x => x.LitigationResponseDate).HasColumnName("LITIGATIONRESPONSEDATE").IsOptional();
            Property(x => x.CaseNumber).HasColumnName("CASENUMBER").IsOptional().HasMaxLength(200);
            Property(x => x.Plaintiff).HasColumnName("PLAINTIFF").IsOptional().HasMaxLength(200);
            Property(x => x.Defendant).HasColumnName("DEFENDANT").IsOptional().HasMaxLength(200);
            Property(x => x.TrialProcedure).HasColumnName("TRIALPROCEDURE").IsOptional().HasMaxLength(200);
            Property(x => x.TransferingUnit).HasColumnName("TRANSFERINGUNIT").IsOptional().HasMaxLength(200);
            Property(x => x.Remarks).HasColumnName("REMARKS").IsOptional().HasMaxLength(500);
        }
    }

    // T_Lawsuit_CaseReport
    internal partial class T_Lawsuit_CaseReportConfiguration : EntityTypeConfiguration<T_Lawsuit_CaseReport>
    {
        public T_Lawsuit_CaseReportConfiguration()
        {
			ToTable("T_LAWSUIT_CASEREPORT");
            HasKey(x => x.ID);

            Property(x => x.ID).HasColumnName("ID").IsRequired().HasMaxLength(50);
            Property(x => x.CreateDate).HasColumnName("CREATEDATE").IsOptional();
            Property(x => x.ModifyDate).HasColumnName("MODIFYDATE").IsOptional();
            Property(x => x.CreateUserID).HasColumnName("CREATEUSERID").IsOptional().HasMaxLength(50);
            Property(x => x.CreateUser).HasColumnName("CREATEUSER").IsOptional().HasMaxLength(50);
            Property(x => x.ModifyUserID).HasColumnName("MODIFYUSERID").IsOptional().HasMaxLength(50);
            Property(x => x.ModifyUser).HasColumnName("MODIFYUSER").IsOptional().HasMaxLength(50);
            Property(x => x.OrgID).HasColumnName("ORGID").IsOptional().HasMaxLength(50);
            Property(x => x.CompanyID).HasColumnName("COMPANYID").IsOptional().HasMaxLength(50);
            Property(x => x.FlowPhase).HasColumnName("FLOWPHASE").IsOptional().HasMaxLength(50);
            Property(x => x.FlowInfo).HasColumnName("FLOWINFO").IsOptional().HasMaxLength(1073741823);
            Property(x => x.StepName).HasColumnName("STEPNAME").IsOptional().HasMaxLength(500);
            Property(x => x.ApplyUser).HasColumnName("APPLYUSER").IsOptional().HasMaxLength(200);
            Property(x => x.ApplyUserName).HasColumnName("APPLYUSERNAME").IsOptional().HasMaxLength(200);
            Property(x => x.ApplyDate).HasColumnName("APPLYDATE").IsOptional().HasMaxLength(200);
            Property(x => x.CaseName).HasColumnName("CASENAME").IsOptional().HasMaxLength(200);
            Property(x => x.CaseNumber).HasColumnName("CASENUMBER").IsOptional().HasMaxLength(200);
            Property(x => x.TrialDate).HasColumnName("TRIALDATE").IsOptional();
            Property(x => x.SubjectHeadings).HasColumnName("SUBJECTHEADINGS").IsOptional().HasMaxLength(200);
            Property(x => x.PlaintiffOrOriginalApplicant).HasColumnName("PLAINTIFFORORIGINALAPPLICANT").IsOptional().HasMaxLength(200);
            Property(x => x.DefendantOrRespondent).HasColumnName("DEFENDANTORRESPONDENT").IsOptional().HasMaxLength(200);
            Property(x => x.IsThereAnIndependentClaim).HasColumnName("ISTHEREANINDEPENDENTCLAIM").IsOptional().HasMaxLength(200);
            Property(x => x.TrialProcedure).HasColumnName("TRIALPROCEDURE").IsOptional().HasMaxLength(200);
            Property(x => x.MembersOfTheArbitralTribunal).HasColumnName("MEMBERSOFTHEARBITRALTRIBUNAL").IsOptional().HasMaxLength(500);
            Property(x => x.TransferingUnit).HasColumnName("TRANSFERINGUNIT").IsOptional().HasMaxLength(200);
            Property(x => x.TransferingUnitName).HasColumnName("TRANSFERINGUNITNAME").IsOptional().HasMaxLength(200);
            Property(x => x.SubjectMatterOfTheCase).HasColumnName("SUBJECTMATTEROFTHECASE").IsOptional().HasPrecision(18,4);
            Property(x => x.BriefIntroductionOfTheCase).HasColumnName("BRIEFINTRODUCTIONOFTHECASE").IsOptional().HasMaxLength(500);
            Property(x => x.ClosingMethod).HasColumnName("CLOSINGMETHOD").IsOptional().HasMaxLength(200);
            Property(x => x.MediationContent).HasColumnName("MEDIATIONCONTENT").IsOptional().HasMaxLength(500);
            Property(x => x.RefereeContent).HasColumnName("REFEREECONTENT").IsOptional().HasMaxLength(500);
            Property(x => x.ImplementationSituation).HasColumnName("IMPLEMENTATIONSITUATION").IsOptional().HasMaxLength(500);
            Property(x => x.OtherProblemsToBeExplainedOrNoted).HasColumnName("OTHERPROBLEMSTOBEEXPLAINEDORNOTED").IsOptional().HasMaxLength(500);
            Property(x => x.OpinionsOfLeadersOfTheCompanyInChargeOfTheProject).HasColumnName("OPINIONSOFLEADERSOFTHECOMPANYINCHARGEOFTHEPROJECT").IsOptional();
            Property(x => x.OpinionOfLegalAuditDepartment).HasColumnName("OPINIONOFLEGALAUDITDEPARTMENT").IsOptional();
            Property(x => x.OpinionsOfTheUnitInvolvedInTheCase).HasColumnName("OPINIONSOFTHEUNITINVOLVEDINTHECASE").IsOptional();
            Property(x => x.ApplyDept).HasColumnName("APPLYDEPT").IsOptional().HasMaxLength(200);
            Property(x => x.ApplyDeptName).HasColumnName("APPLYDEPTNAME").IsOptional().HasMaxLength(200);
            Property(x => x.ProjectsInvolved).HasColumnName("PROJECTSINVOLVED").IsOptional().HasMaxLength(200);
            Property(x => x.ProjectsInvolvedName).HasColumnName("PROJECTSINVOLVEDNAME").IsOptional().HasMaxLength(200);
            Property(x => x.ProjectsInvolvedLeader).HasColumnName("PROJECTSINVOLVEDLEADER").IsOptional().HasMaxLength(200);
            Property(x => x.ProjectsInvolvedLeaderName).HasColumnName("PROJECTSINVOLVEDLEADERNAME").IsOptional().HasMaxLength(200);
        }
    }

    // T_Lawsuit_NoProject
    internal partial class T_Lawsuit_NoProjectConfiguration : EntityTypeConfiguration<T_Lawsuit_NoProject>
    {
        public T_Lawsuit_NoProjectConfiguration()
        {
			ToTable("T_LAWSUIT_NOPROJECT");
            HasKey(x => x.ID);

            Property(x => x.ID).HasColumnName("ID").IsRequired().HasMaxLength(50);
            Property(x => x.CreateDate).HasColumnName("CREATEDATE").IsOptional();
            Property(x => x.ModifyDate).HasColumnName("MODIFYDATE").IsOptional();
            Property(x => x.CreateUserID).HasColumnName("CREATEUSERID").IsOptional().HasMaxLength(50);
            Property(x => x.CreateUser).HasColumnName("CREATEUSER").IsOptional().HasMaxLength(50);
            Property(x => x.ModifyUserID).HasColumnName("MODIFYUSERID").IsOptional().HasMaxLength(50);
            Property(x => x.ModifyUser).HasColumnName("MODIFYUSER").IsOptional().HasMaxLength(50);
            Property(x => x.OrgID).HasColumnName("ORGID").IsOptional().HasMaxLength(50);
            Property(x => x.CompanyID).HasColumnName("COMPANYID").IsOptional().HasMaxLength(50);
            Property(x => x.FlowPhase).HasColumnName("FLOWPHASE").IsOptional().HasMaxLength(50);
            Property(x => x.FlowInfo).HasColumnName("FLOWINFO").IsOptional().HasMaxLength(1073741823);
            Property(x => x.StepName).HasColumnName("STEPNAME").IsOptional().HasMaxLength(500);
            Property(x => x.Applicant).HasColumnName("APPLICANT").IsOptional().HasMaxLength(200);
            Property(x => x.ApplicantName).HasColumnName("APPLICANTNAME").IsOptional().HasMaxLength(200);
            Property(x => x.DateOfApplication).HasColumnName("DATEOFAPPLICATION").IsOptional();
            Property(x => x.TransferingUnit).HasColumnName("TRANSFERINGUNIT").IsOptional().HasMaxLength(200);
            Property(x => x.TransferingUnitName).HasColumnName("TRANSFERINGUNITNAME").IsOptional().HasMaxLength(200);
            Property(x => x.DateOfTransfer).HasColumnName("DATEOFTRANSFER").IsOptional();
            Property(x => x.TypesOfLitigation).HasColumnName("TYPESOFLITIGATION").IsOptional().HasMaxLength(200);
            Property(x => x.NameRespondent).HasColumnName("NAMERESPONDENT").IsOptional().HasMaxLength(200);
            Property(x => x.NameOfOurContractSubject).HasColumnName("NAMEOFOURCONTRACTSUBJECT").IsOptional().HasMaxLength(200);
            Property(x => x.NameOfCase).HasColumnName("NAMEOFCASE").IsOptional().HasMaxLength(200);
            Property(x => x.BriefIntroductionOfTheCase).HasColumnName("BRIEFINTRODUCTIONOFTHECASE").IsOptional().HasMaxLength(200);
            Property(x => x.ReasonsForTransfer).HasColumnName("REASONSFORTRANSFER").IsOptional().HasMaxLength(200);
            Property(x => x.ExpectedTarget).HasColumnName("EXPECTEDTARGET").IsOptional().HasMaxLength(200);
            Property(x => x.OurBreach).HasColumnName("OURBREACH").IsOptional().HasMaxLength(500);
            Property(x => x.OurSuedDepartment).HasColumnName("OURSUEDDEPARTMENT").IsOptional().HasMaxLength(200);
            Property(x => x.ReceiptName).HasColumnName("RECEIPTNAME").IsOptional().HasMaxLength(200);
            Property(x => x.BriefIntroductionToTheCaseOfSubpoena).HasColumnName("BRIEFINTRODUCTIONTOTHECASEOFSUBPOENA").IsOptional().HasMaxLength(500);
            Property(x => x.DescriptionOfKeyIssues).HasColumnName("DESCRIPTIONOFKEYISSUES").IsOptional().HasMaxLength(500);
            Property(x => x.EvidentialDataRequirements).HasColumnName("EVIDENTIALDATAREQUIREMENTS").IsOptional().HasMaxLength(500);
            Property(x => x.ScanningCopyOfLegalDocuments).HasColumnName("SCANNINGCOPYOFLEGALDOCUMENTS").IsOptional().HasMaxLength(500);
            Property(x => x.TransferToTheHeadOfTheUnit).HasColumnName("TRANSFERTOTHEHEADOFTHEUNIT").IsOptional();
            Property(x => x.LeaderInChargeOfTransferUnit).HasColumnName("LEADERINCHARGEOFTRANSFERUNIT").IsOptional();
            Property(x => x.DesignatedDockingPersonnelOfHandoverUnit).HasColumnName("DESIGNATEDDOCKINGPERSONNELOFHANDOVERUNIT").IsOptional().HasMaxLength(200);
            Property(x => x.DesignatedDockingPersonnelOfHandoverUnitName).HasColumnName("DESIGNATEDDOCKINGPERSONNELOFHANDOVERUNITNAME").IsOptional().HasMaxLength(200);
            Property(x => x.ContactNumber).HasColumnName("CONTACTNUMBER").IsOptional().HasMaxLength(500);
            Property(x => x.ListOfEvidenceTransfer).HasColumnName("LISTOFEVIDENCETRANSFER").IsOptional().HasMaxLength(1073741823);
            Property(x => x.CommentOnTheTransferUnit).HasColumnName("COMMENTONTHETRANSFERUNIT").IsOptional().HasMaxLength(200);
            Property(x => x.CommentOnTheTransferUnitName).HasColumnName("COMMENTONTHETRANSFERUNITNAME").IsOptional().HasMaxLength(200);
            Property(x => x.ProvisionalNumbering).HasColumnName("PROVISIONALNUMBERING").IsOptional().HasMaxLength(200);
            Property(x => x.NameOfRespondent).HasColumnName("NAMEOFRESPONDENT").IsOptional().HasMaxLength(200);
            Property(x => x.CommentOnTheNameOfOurContractSubject).HasColumnName("COMMENTONTHENAMEOFOURCONTRACTSUBJECT").IsOptional().HasMaxLength(200);
            Property(x => x.CaseName).HasColumnName("CASENAME").IsOptional().HasMaxLength(200);
            Property(x => x.PYBriefIntroductionOfTheCase).HasColumnName("PYBRIEFINTRODUCTIONOFTHECASE").IsOptional().HasMaxLength(200);
            Property(x => x.ComplianceOfTransferredData).HasColumnName("COMPLIANCEOFTRANSFERREDDATA").IsOptional().HasMaxLength(200);
            Property(x => x.WhetherTheTransferMeetsTheProsecutionConditions).HasColumnName("WHETHERTHETRANSFERMEETSTHEPROSECUTIONCONDITIONS").IsOptional().HasMaxLength(200);
            Property(x => x.WhetherTheLimitationOfActionExceeds).HasColumnName("WHETHERTHELIMITATIONOFACTIONEXCEEDS").IsOptional().HasMaxLength(200);
            Property(x => x.WhetherTheLitigationMeetsTheProsecutionConditions).HasColumnName("WHETHERTHELITIGATIONMEETSTHEPROSECUTIONCONDITIONS").IsOptional().HasMaxLength(200);
            Property(x => x.WhetherThePaymentNodeReaches).HasColumnName("WHETHERTHEPAYMENTNODEREACHES").IsOptional().HasMaxLength(200);
            Property(x => x.WhetherThePaymentMeetsTheProsecutionConditions).HasColumnName("WHETHERTHEPAYMENTMEETSTHEPROSECUTIONCONDITIONS").IsOptional().HasMaxLength(200);
            Property(x => x.AreThereAnyKeyPaymentObstacles).HasColumnName("ARETHEREANYKEYPAYMENTOBSTACLES").IsOptional().HasMaxLength(200);
            Property(x => x.WhetherTheProsecutionConditionsAreMet).HasColumnName("WHETHERTHEPROSECUTIONCONDITIONSAREMET").IsOptional().HasMaxLength(200);
            Property(x => x.PreliminaryCalculationOfRelevantAmount).HasColumnName("PRELIMINARYCALCULATIONOFRELEVANTAMOUNT").IsOptional().HasPrecision(18,4);
            Property(x => x.EstimatedLitigationCosts).HasColumnName("ESTIMATEDLITIGATIONCOSTS").IsOptional().HasPrecision(18,4);
            Property(x => x.ComprehensiveAnalysisAndEvaluationOfTheCase).HasColumnName("COMPREHENSIVEANALYSISANDEVALUATIONOFTHECASE").IsOptional().HasMaxLength(500);
            Property(x => x.OurResponsibilityAnalysisAndEvaluation).HasColumnName("OURRESPONSIBILITYANALYSISANDEVALUATION").IsOptional().HasMaxLength(500);
            Property(x => x.PreliminaryAnalysisOfTheOpponentsAbility).HasColumnName("PRELIMINARYANALYSISOFTHEOPPONENTSABILITY").IsOptional().HasMaxLength(500);
            Property(x => x.AnalysisOnTheCycleAndDifficultyOfCases).HasColumnName("ANALYSISONTHECYCLEANDDIFFICULTYOFCASES").IsOptional().HasMaxLength(500);
            Property(x => x.EvaluationConclusion).HasColumnName("EVALUATIONCONCLUSION").IsOptional().HasMaxLength(500);
            Property(x => x.MainOpinionsOfIntermediary).HasColumnName("MAINOPINIONSOFINTERMEDIARY").IsOptional().HasMaxLength(500);
            Property(x => x.HandlingOpinions).HasColumnName("HANDLINGOPINIONS").IsOptional().HasMaxLength(500);
            Property(x => x.DepartmentHead).HasColumnName("DEPARTMENTHEAD").IsOptional();
            Property(x => x.DepartmentLeaderInCharge).HasColumnName("DEPARTMENTLEADERINCHARGE").IsOptional();
        }
    }

    // T_Lawsuit_NoProject_ListOfEvidenceTransfer
    internal partial class T_Lawsuit_NoProject_ListOfEvidenceTransferConfiguration : EntityTypeConfiguration<T_Lawsuit_NoProject_ListOfEvidenceTransfer>
    {
        public T_Lawsuit_NoProject_ListOfEvidenceTransferConfiguration()
        {
			ToTable("T_LAWSUIT_NOPROJECT_LISTOFEVIDENCETRANSFER");
            HasKey(x => x.ID);

            Property(x => x.ID).HasColumnName("ID").IsRequired().HasMaxLength(50);
            Property(x => x.T_Lawsuit_NoProjectID).HasColumnName("T_LAWSUIT_NOPROJECTID").IsOptional().HasMaxLength(50);
            Property(x => x.SortIndex).HasColumnName("SORTINDEX").IsOptional();
            Property(x => x.IsReleased).HasColumnName("ISRELEASED").IsOptional().HasMaxLength(1);
            Property(x => x.Number).HasColumnName("NUMBER").IsOptional().HasMaxLength(200);
            Property(x => x.NeedFile).HasColumnName("NEEDFILE").IsOptional().HasMaxLength(200);
            Property(x => x.BreachOfContractInformation).HasColumnName("BREACHOFCONTRACTINFORMATION").IsOptional().HasMaxLength(200);
            Property(x => x.InformationOnInfringementCases).HasColumnName("INFORMATIONONINFRINGEMENTCASES").IsOptional().HasMaxLength(200);
            Property(x => x.InformationOnOtherCases).HasColumnName("INFORMATIONONOTHERCASES").IsOptional().HasMaxLength(200);
            Property(x => x.Level).HasColumnName("LEVEL").IsOptional().HasMaxLength(200);
            Property(x => x.ProvideType).HasColumnName("PROVIDETYPE").IsOptional().HasMaxLength(200);
            Property(x => x.ActualDesc).HasColumnName("ACTUALDESC").IsOptional().HasMaxLength(200);

            // Foreign keys
            HasOptional(a => a.T_Lawsuit_NoProject).WithMany(b => b.T_Lawsuit_NoProject_ListOfEvidenceTransfer).HasForeignKey(c => c.T_Lawsuit_NoProjectID); // FK_T_Lawsuit_NoProject_ListOfEvidenceTransfer_T_Lawsuit_NoProject
        }
    }

    // T_Lawsuit_Project
    internal partial class T_Lawsuit_ProjectConfiguration : EntityTypeConfiguration<T_Lawsuit_Project>
    {
        public T_Lawsuit_ProjectConfiguration()
        {
			ToTable("T_LAWSUIT_PROJECT");
            HasKey(x => x.ID);

            Property(x => x.ID).HasColumnName("ID").IsRequired().HasMaxLength(50);
            Property(x => x.CreateDate).HasColumnName("CREATEDATE").IsOptional();
            Property(x => x.ModifyDate).HasColumnName("MODIFYDATE").IsOptional();
            Property(x => x.CreateUserID).HasColumnName("CREATEUSERID").IsOptional().HasMaxLength(50);
            Property(x => x.CreateUser).HasColumnName("CREATEUSER").IsOptional().HasMaxLength(50);
            Property(x => x.ModifyUserID).HasColumnName("MODIFYUSERID").IsOptional().HasMaxLength(50);
            Property(x => x.ModifyUser).HasColumnName("MODIFYUSER").IsOptional().HasMaxLength(50);
            Property(x => x.OrgID).HasColumnName("ORGID").IsOptional().HasMaxLength(50);
            Property(x => x.CompanyID).HasColumnName("COMPANYID").IsOptional().HasMaxLength(50);
            Property(x => x.FlowPhase).HasColumnName("FLOWPHASE").IsOptional().HasMaxLength(50);
            Property(x => x.FlowInfo).HasColumnName("FLOWINFO").IsOptional().HasMaxLength(1073741823);
            Property(x => x.StepName).HasColumnName("STEPNAME").IsOptional().HasMaxLength(500);
            Property(x => x.ApplyUser).HasColumnName("APPLYUSER").IsOptional().HasMaxLength(200);
            Property(x => x.ApplyUserName).HasColumnName("APPLYUSERNAME").IsOptional().HasMaxLength(200);
            Property(x => x.ApplyDate).HasColumnName("APPLYDATE").IsOptional();
            Property(x => x.TransferDept).HasColumnName("TRANSFERDEPT").IsOptional().HasMaxLength(200);
            Property(x => x.TransferDeptName).HasColumnName("TRANSFERDEPTNAME").IsOptional().HasMaxLength(200);
            Property(x => x.TransferDate).HasColumnName("TRANSFERDATE").IsOptional();
            Property(x => x.LitigationType).HasColumnName("LITIGATIONTYPE").IsOptional().HasMaxLength(200);
            Property(x => x.DefendantName).HasColumnName("DEFENDANTNAME").IsOptional().HasMaxLength(200);
            Property(x => x.OurContractSubjectName).HasColumnName("OURCONTRACTSUBJECTNAME").IsOptional().HasMaxLength(200);
            Property(x => x.ProjectName).HasColumnName("PROJECTNAME").IsOptional().HasMaxLength(200);
            Property(x => x.ProjectNameName).HasColumnName("PROJECTNAMENAME").IsOptional().HasMaxLength(200);
            Property(x => x.ProjectArea).HasColumnName("PROJECTAREA").IsOptional().HasMaxLength(200);
            Property(x => x.ProjectStatus).HasColumnName("PROJECTSTATUS").IsOptional().HasMaxLength(200);
            Property(x => x.ProjectTotalAmount).HasColumnName("PROJECTTOTALAMOUNT").IsOptional().HasMaxLength(200);
            Property(x => x.AmountIsNoMistake).HasColumnName("AMOUNTISNOMISTAKE").IsOptional().HasMaxLength(200);
            Property(x => x.AgreeTermsAndConditionsLastPayment).HasColumnName("AGREETERMSANDCONDITIONSLASTPAYMENT").IsOptional().HasMaxLength(200);
            Property(x => x.AgreeLastPaymentTermOrCondition).HasColumnName("AGREELASTPAYMENTTERMORCONDITION").IsOptional().HasMaxLength(200);
            Property(x => x.ActualFinalPayDate).HasColumnName("ACTUALFINALPAYDATE").IsOptional();
            Property(x => x.PayAmountAndWay).HasColumnName("PAYAMOUNTANDWAY").IsOptional().HasMaxLength(200);
            Property(x => x.CurrentAmountOwed).HasColumnName("CURRENTAMOUNTOWED").IsOptional().HasMaxLength(200);
            Property(x => x.NeedDesc).HasColumnName("NEEDDESC").IsOptional().HasMaxLength(200);
            Property(x => x.CalculatingLiquidatedDamagesBasis).HasColumnName("CALCULATINGLIQUIDATEDDAMAGESBASIS").IsOptional().HasMaxLength(200);
            Property(x => x.EstimateAmount).HasColumnName("ESTIMATEAMOUNT").IsOptional().HasMaxLength(200);
            Property(x => x.FirstDate).HasColumnName("FIRSTDATE").IsOptional();
            Property(x => x.FirstWay).HasColumnName("FIRSTWAY").IsOptional().HasMaxLength(200);
            Property(x => x.SecondDate).HasColumnName("SECONDDATE").IsOptional();
            Property(x => x.SecondWay).HasColumnName("SECONDWAY").IsOptional().HasMaxLength(200);
            Property(x => x.ThirdDate).HasColumnName("THIRDDATE").IsOptional();
            Property(x => x.ThirdWay).HasColumnName("THIRDWAY").IsOptional().HasMaxLength(200);
            Property(x => x.KnowingCounterpartyAssets).HasColumnName("KNOWINGCOUNTERPARTYASSETS").IsOptional().HasMaxLength(500);
            Property(x => x.KnowingDefendantCase).HasColumnName("KNOWINGDEFENDANTCASE").IsOptional().HasMaxLength(500);
            Property(x => x.TransferReason).HasColumnName("TRANSFERREASON").IsOptional().HasMaxLength(200);
            Property(x => x.ExpectTarget).HasColumnName("EXPECTTARGET").IsOptional().HasMaxLength(200);
            Property(x => x.OurBreachOfContract).HasColumnName("OURBREACHOFCONTRACT").IsOptional().HasMaxLength(500);
            Property(x => x.OurRespondentDepartmentUnit).HasColumnName("OURRESPONDENTDEPARTMENTUNIT").IsOptional().HasMaxLength(200);
            Property(x => x.ReceiptName).HasColumnName("RECEIPTNAME").IsOptional().HasMaxLength(200);
            Property(x => x.RespondentProject).HasColumnName("RESPONDENTPROJECT").IsOptional().HasMaxLength(200);
            Property(x => x.RespondentProjectName).HasColumnName("RESPONDENTPROJECTNAME").IsOptional().HasMaxLength(200);
            Property(x => x.CaseBrief).HasColumnName("CASEBRIEF").IsOptional().HasMaxLength(500);
            Property(x => x.DescriptionOfKeyIssues).HasColumnName("DESCRIPTIONOFKEYISSUES").IsOptional().HasMaxLength(500);
            Property(x => x.EvidenceInformationRequirements).HasColumnName("EVIDENCEINFORMATIONREQUIREMENTS").IsOptional().HasMaxLength(500);
            Property(x => x.ScannedLegalDocuments).HasColumnName("SCANNEDLEGALDOCUMENTS").IsOptional().HasMaxLength(500);
            Property(x => x.TransferUnitDeptLeaderSign).HasColumnName("TRANSFERUNITDEPTLEADERSIGN").IsOptional();
            Property(x => x.TransferUnitDesignatedDockingPersonnel).HasColumnName("TRANSFERUNITDESIGNATEDDOCKINGPERSONNEL").IsOptional().HasMaxLength(200);
            Property(x => x.TransferUnitDesignatedDockingPersonnelName).HasColumnName("TRANSFERUNITDESIGNATEDDOCKINGPERSONNELNAME").IsOptional().HasMaxLength(200);
            Property(x => x.FistHeadOfLegalDepartment).HasColumnName("FISTHEADOFLEGALDEPARTMENT").IsOptional();
            Property(x => x.Phone).HasColumnName("PHONE").IsOptional().HasMaxLength(200);
            Property(x => x.TransferDetail).HasColumnName("TRANSFERDETAIL").IsOptional().HasMaxLength(1073741823);
            Property(x => x.PY_TransferDept).HasColumnName("PY_TRANSFERDEPT").IsOptional().HasMaxLength(200);
            Property(x => x.PY_TransferDeptName).HasColumnName("PY_TRANSFERDEPTNAME").IsOptional().HasMaxLength(200);
            Property(x => x.PY_TempNumber).HasColumnName("PY_TEMPNUMBER").IsOptional().HasMaxLength(200);
            Property(x => x.PY_DefendantName).HasColumnName("PY_DEFENDANTNAME").IsOptional().HasMaxLength(200);
            Property(x => x.PY_OurContractSubjectName).HasColumnName("PY_OURCONTRACTSUBJECTNAME").IsOptional().HasMaxLength(200);
            Property(x => x.PY_ProjectName).HasColumnName("PY_PROJECTNAME").IsOptional().HasMaxLength(200);
            Property(x => x.PY_ProjectNameName).HasColumnName("PY_PROJECTNAMENAME").IsOptional().HasMaxLength(200);
            Property(x => x.PY_JZDQQKJE).HasColumnName("PY_JZDQQKJE").IsOptional().HasMaxLength(200);
            Property(x => x.TransferUnitArrearsDescription).HasColumnName("TRANSFERUNITARREARSDESCRIPTION").IsOptional().HasMaxLength(200);
            Property(x => x.TransferDataCompliance).HasColumnName("TRANSFERDATACOMPLIANCE").IsOptional().HasMaxLength(200);
            Property(x => x.YJ_IsMeetTheConditionsForProsecution).HasColumnName("YJ_ISMEETTHECONDITIONSFORPROSECUTION").IsOptional().HasMaxLength(200);
            Property(x => x.IsTheStatuteOfLimitationsOver).HasColumnName("ISTHESTATUTEOFLIMITATIONSOVER").IsOptional().HasMaxLength(200);
            Property(x => x.SS_IsMeetTheConditionsForProsecution).HasColumnName("SS_ISMEETTHECONDITIONSFORPROSECUTION").IsOptional().HasMaxLength(200);
            Property(x => x.WhetherThePaymentNodeHasReached).HasColumnName("WHETHERTHEPAYMENTNODEHASREACHED").IsOptional().HasMaxLength(200);
            Property(x => x.FK_IsMeetTheConditionsForProsecution).HasColumnName("FK_ISMEETTHECONDITIONSFORPROSECUTION").IsOptional().HasMaxLength(200);
            Property(x => x.IsKeyPaymentBarrier).HasColumnName("ISKEYPAYMENTBARRIER").IsOptional().HasMaxLength(200);
            Property(x => x.YWZDFK_IsMeetTheConditionsForProsecution).HasColumnName("YWZDFK_ISMEETTHECONDITIONSFORPROSECUTION").IsOptional().HasMaxLength(200);
            Property(x => x.PreliminaryCalculationRelevantAmounts).HasColumnName("PRELIMINARYCALCULATIONRELEVANTAMOUNTS").IsOptional().HasPrecision(18,4);
            Property(x => x.EstimatedLitigationCosts).HasColumnName("ESTIMATEDLITIGATIONCOSTS").IsOptional().HasPrecision(18,4);
            Property(x => x.ComprehensiveAnalysisAndEvaluationOfTheCase).HasColumnName("COMPREHENSIVEANALYSISANDEVALUATIONOFTHECASE").IsOptional().HasMaxLength(500);
            Property(x => x.OurResponsibilityAnalysisAndEvaluation).HasColumnName("OURRESPONSIBILITYANALYSISANDEVALUATION").IsOptional().HasMaxLength(500);
            Property(x => x.PreliminaryAnalysisOfTheOpponentAbility).HasColumnName("PRELIMINARYANALYSISOFTHEOPPONENTABILITY").IsOptional().HasMaxLength(500);
            Property(x => x.AnalysisOfCaseCycleAndDifficulty).HasColumnName("ANALYSISOFCASECYCLEANDDIFFICULTY").IsOptional().HasMaxLength(500);
            Property(x => x.EvaluationConclusion).HasColumnName("EVALUATIONCONCLUSION").IsOptional().HasMaxLength(500);
            Property(x => x.MainOpinionsOfIntermediary).HasColumnName("MAINOPINIONSOFINTERMEDIARY").IsOptional().HasMaxLength(500);
            Property(x => x.HandlingOpinions).HasColumnName("HANDLINGOPINIONS").IsOptional().HasMaxLength(500);
            Property(x => x.HeadOfLegalDepartment).HasColumnName("HEADOFLEGALDEPARTMENT").IsOptional();
            Property(x => x.LeaderInChargeOfInitiatingDepartment).HasColumnName("LEADERINCHARGEOFINITIATINGDEPARTMENT").IsOptional();
            Property(x => x.ApplyDept).HasColumnName("APPLYDEPT").IsOptional().HasMaxLength(200);
            Property(x => x.ApplyDeptName).HasColumnName("APPLYDEPTNAME").IsOptional().HasMaxLength(200);
        }
    }

    // T_Lawsuit_Project_TransferDetail
    internal partial class T_Lawsuit_Project_TransferDetailConfiguration : EntityTypeConfiguration<T_Lawsuit_Project_TransferDetail>
    {
        public T_Lawsuit_Project_TransferDetailConfiguration()
        {
			ToTable("T_LAWSUIT_PROJECT_TRANSFERDETAIL");
            HasKey(x => x.ID);

            Property(x => x.ID).HasColumnName("ID").IsRequired().HasMaxLength(50);
            Property(x => x.T_Lawsuit_ProjectID).HasColumnName("T_LAWSUIT_PROJECTID").IsOptional().HasMaxLength(50);
            Property(x => x.SortIndex).HasColumnName("SORTINDEX").IsOptional();
            Property(x => x.IsReleased).HasColumnName("ISRELEASED").IsOptional().HasMaxLength(1);
            Property(x => x.NeedProvideDoc).HasColumnName("NEEDPROVIDEDOC").IsOptional().HasMaxLength(200);
            Property(x => x.Explain).HasColumnName("EXPLAIN").IsOptional().HasMaxLength(200);
            Property(x => x.ImportantLevel).HasColumnName("IMPORTANTLEVEL").IsOptional().HasMaxLength(200);
            Property(x => x.ProvideWay).HasColumnName("PROVIDEWAY").IsOptional().HasMaxLength(200);
            Property(x => x.ActualProvideDesc).HasColumnName("ACTUALPROVIDEDESC").IsOptional().HasMaxLength(200);

            // Foreign keys
            HasOptional(a => a.T_Lawsuit_Project).WithMany(b => b.T_Lawsuit_Project_TransferDetail).HasForeignKey(c => c.T_Lawsuit_ProjectID); // FK_T_Lawsuit_Project_TransferDetail_T_Lawsuit_Project
        }
    }

    // T_LegalPublicity_LawActivities
    internal partial class T_LegalPublicity_LawActivitiesConfiguration : EntityTypeConfiguration<T_LegalPublicity_LawActivities>
    {
        public T_LegalPublicity_LawActivitiesConfiguration()
        {
			ToTable("T_LEGALPUBLICITY_LAWACTIVITIES");
            HasKey(x => x.ID);

            Property(x => x.ID).HasColumnName("ID").IsRequired().HasMaxLength(50);
            Property(x => x.CreateDate).HasColumnName("CREATEDATE").IsOptional();
            Property(x => x.ModifyDate).HasColumnName("MODIFYDATE").IsOptional();
            Property(x => x.CreateUserID).HasColumnName("CREATEUSERID").IsOptional().HasMaxLength(50);
            Property(x => x.CreateUser).HasColumnName("CREATEUSER").IsOptional().HasMaxLength(50);
            Property(x => x.ModifyUserID).HasColumnName("MODIFYUSERID").IsOptional().HasMaxLength(50);
            Property(x => x.ModifyUser).HasColumnName("MODIFYUSER").IsOptional().HasMaxLength(50);
            Property(x => x.OrgID).HasColumnName("ORGID").IsOptional().HasMaxLength(50);
            Property(x => x.CompanyID).HasColumnName("COMPANYID").IsOptional().HasMaxLength(50);
            Property(x => x.FlowPhase).HasColumnName("FLOWPHASE").IsOptional().HasMaxLength(50);
            Property(x => x.FlowInfo).HasColumnName("FLOWINFO").IsOptional().HasMaxLength(1073741823);
            Property(x => x.StepName).HasColumnName("STEPNAME").IsOptional().HasMaxLength(500);
            Property(x => x.ActivityOrganizationUnit).HasColumnName("ACTIVITYORGANIZATIONUNIT").IsOptional().HasMaxLength(200);
            Property(x => x.ActivityOrganizationUnitName).HasColumnName("ACTIVITYORGANIZATIONUNITNAME").IsOptional().HasMaxLength(200);
            Property(x => x.ReportingDate).HasColumnName("REPORTINGDATE").IsOptional();
            Property(x => x.ActivityTheme).HasColumnName("ACTIVITYTHEME").IsOptional().HasMaxLength(200);
            Property(x => x.ActivityForm).HasColumnName("ACTIVITYFORM").IsOptional().HasMaxLength(500);
            Property(x => x.ActivityTime).HasColumnName("ACTIVITYTIME").IsOptional();
            Property(x => x.ParticipantsAndInfluencersNumber).HasColumnName("PARTICIPANTSANDINFLUENCERSNUMBER").IsOptional().HasPrecision(18,4);
            Property(x => x.ActivitySituation).HasColumnName("ACTIVITYSITUATION").IsOptional().HasMaxLength(500);
            Property(x => x.ActivityEffectiveness).HasColumnName("ACTIVITYEFFECTIVENESS").IsOptional().HasMaxLength(500);
            Property(x => x.DeficienciesOrImprovements).HasColumnName("DEFICIENCIESORIMPROVEMENTS").IsOptional().HasMaxLength(500);
            Property(x => x.Remarks).HasColumnName("REMARKS").IsOptional().HasMaxLength(500);
            Property(x => x.Enclosure).HasColumnName("ENCLOSURE").IsOptional().HasMaxLength(500);
            Property(x => x.Contacts).HasColumnName("CONTACTS").IsOptional().HasMaxLength(200);
            Property(x => x.ContactNumber).HasColumnName("CONTACTNUMBER").IsOptional().HasMaxLength(200);
            Property(x => x.EventOrganizer).HasColumnName("EVENTORGANIZER").IsOptional();
            Property(x => x.DeputyLeadersLegalDepartmentOpinions).HasColumnName("DEPUTYLEADERSLEGALDEPARTMENTOPINIONS").IsOptional();
            Property(x => x.PrincipalLeadersLegalDepartmentOpinions).HasColumnName("PRINCIPALLEADERSLEGALDEPARTMENTOPINIONS").IsOptional();
            Property(x => x.TheCompanyLeaderInCharge).HasColumnName("THECOMPANYLEADERINCHARGE").IsOptional();
        }
    }

    // T_Logistics_DiningApply
    internal partial class T_Logistics_DiningApplyConfiguration : EntityTypeConfiguration<T_Logistics_DiningApply>
    {
        public T_Logistics_DiningApplyConfiguration()
        {
			ToTable("T_LOGISTICS_DININGAPPLY");
            HasKey(x => x.ID);

            Property(x => x.ID).HasColumnName("ID").IsRequired().HasMaxLength(50);
            Property(x => x.CreateDate).HasColumnName("CREATEDATE").IsOptional();
            Property(x => x.ModifyDate).HasColumnName("MODIFYDATE").IsOptional();
            Property(x => x.CreateUserID).HasColumnName("CREATEUSERID").IsOptional().HasMaxLength(50);
            Property(x => x.CreateUser).HasColumnName("CREATEUSER").IsOptional().HasMaxLength(50);
            Property(x => x.ModifyUserID).HasColumnName("MODIFYUSERID").IsOptional().HasMaxLength(50);
            Property(x => x.ModifyUser).HasColumnName("MODIFYUSER").IsOptional().HasMaxLength(50);
            Property(x => x.OrgID).HasColumnName("ORGID").IsOptional().HasMaxLength(50);
            Property(x => x.CompanyID).HasColumnName("COMPANYID").IsOptional().HasMaxLength(50);
            Property(x => x.FlowPhase).HasColumnName("FLOWPHASE").IsOptional().HasMaxLength(50);
            Property(x => x.FlowInfo).HasColumnName("FLOWINFO").IsOptional().HasMaxLength(1073741823);
            Property(x => x.StepName).HasColumnName("STEPNAME").IsOptional().HasMaxLength(500);
            Property(x => x.ApplyUser).HasColumnName("APPLYUSER").IsOptional().HasMaxLength(200);
            Property(x => x.ApplyUserName).HasColumnName("APPLYUSERNAME").IsOptional().HasMaxLength(200);
            Property(x => x.ApplyDept).HasColumnName("APPLYDEPT").IsOptional().HasMaxLength(200);
            Property(x => x.ApplyDeptName).HasColumnName("APPLYDEPTNAME").IsOptional().HasMaxLength(200);
            Property(x => x.ApplyDate).HasColumnName("APPLYDATE").IsOptional();
            Property(x => x.MealTime).HasColumnName("MEALTIME").IsOptional().HasMaxLength(200);
            Property(x => x.CustomerUnit).HasColumnName("CUSTOMERUNIT").IsOptional().HasMaxLength(200);
            Property(x => x.Contact).HasColumnName("CONTACT").IsOptional().HasMaxLength(200);
            Property(x => x.ContactName).HasColumnName("CONTACTNAME").IsOptional().HasMaxLength(200);
            Property(x => x.ContactPhone).HasColumnName("CONTACTPHONE").IsOptional().HasMaxLength(200);
            Property(x => x.ApplyMealNumber).HasColumnName("APPLYMEALNUMBER").IsOptional();
            Property(x => x.MealType).HasColumnName("MEALTYPE").IsOptional().HasMaxLength(200);
            Property(x => x.ActualMealNumber).HasColumnName("ACTUALMEALNUMBER").IsOptional();
            Property(x => x.ActualCostMoney).HasColumnName("ACTUALCOSTMONEY").IsOptional().HasPrecision(18,4);
            Property(x => x.DeptLeaderSign).HasColumnName("DEPTLEADERSIGN").IsOptional();
            Property(x => x.CanteenManagerSign).HasColumnName("CANTEENMANAGERSIGN").IsOptional();
            Property(x => x.IsRestaurantSupervisor).HasColumnName("ISRESTAURANTSUPERVISOR").IsOptional().HasMaxLength(200);
        }
    }

    // T_Logistics_ExternalClientApartApply
    internal partial class T_Logistics_ExternalClientApartApplyConfiguration : EntityTypeConfiguration<T_Logistics_ExternalClientApartApply>
    {
        public T_Logistics_ExternalClientApartApplyConfiguration()
        {
			ToTable("T_LOGISTICS_EXTERNALCLIENTAPARTAPPLY");
            HasKey(x => x.ID);

            Property(x => x.ID).HasColumnName("ID").IsRequired().HasMaxLength(50);
            Property(x => x.CreateDate).HasColumnName("CREATEDATE").IsOptional();
            Property(x => x.ModifyDate).HasColumnName("MODIFYDATE").IsOptional();
            Property(x => x.CreateUserID).HasColumnName("CREATEUSERID").IsOptional().HasMaxLength(50);
            Property(x => x.CreateUser).HasColumnName("CREATEUSER").IsOptional().HasMaxLength(50);
            Property(x => x.ModifyUserID).HasColumnName("MODIFYUSERID").IsOptional().HasMaxLength(50);
            Property(x => x.ModifyUser).HasColumnName("MODIFYUSER").IsOptional().HasMaxLength(50);
            Property(x => x.OrgID).HasColumnName("ORGID").IsOptional().HasMaxLength(50);
            Property(x => x.CompanyID).HasColumnName("COMPANYID").IsOptional().HasMaxLength(50);
            Property(x => x.FlowPhase).HasColumnName("FLOWPHASE").IsOptional().HasMaxLength(50);
            Property(x => x.FlowInfo).HasColumnName("FLOWINFO").IsOptional().HasMaxLength(1073741823);
            Property(x => x.StepName).HasColumnName("STEPNAME").IsOptional().HasMaxLength(500);
            Property(x => x.ApplyUser).HasColumnName("APPLYUSER").IsOptional().HasMaxLength(200);
            Property(x => x.ApplyUserName).HasColumnName("APPLYUSERNAME").IsOptional().HasMaxLength(200);
            Property(x => x.ApplyDept).HasColumnName("APPLYDEPT").IsOptional().HasMaxLength(200);
            Property(x => x.ApplyDeptName).HasColumnName("APPLYDEPTNAME").IsOptional().HasMaxLength(200);
            Property(x => x.ApplyCheckInDate).HasColumnName("APPLYCHECKINDATE").IsOptional();
            Property(x => x.CheckInPersonNumber).HasColumnName("CHECKINPERSONNUMBER").IsOptional();
            Property(x => x.ActualCheckInPersonNumber).HasColumnName("ACTUALCHECKINPERSONNUMBER").IsOptional();
            Property(x => x.ApplyRoomNumber).HasColumnName("APPLYROOMNUMBER").IsOptional();
            Property(x => x.CustomerContact).HasColumnName("CUSTOMERCONTACT").IsOptional().HasMaxLength(200);
            Property(x => x.CheckInContact).HasColumnName("CHECKINCONTACT").IsOptional().HasMaxLength(200);
            Property(x => x.Customer).HasColumnName("CUSTOMER").IsOptional().HasMaxLength(200);
            Property(x => x.CheckInDesc).HasColumnName("CHECKINDESC").IsOptional().HasMaxLength(500);
            Property(x => x.DeptLeaderSign).HasColumnName("DEPTLEADERSIGN").IsOptional();
            Property(x => x.ApartmentSupervisorSign).HasColumnName("APARTMENTSUPERVISORSIGN").IsOptional();
            Property(x => x.ApplyCode).HasColumnName("APPLYCODE").IsOptional().HasMaxLength(200);
            Property(x => x.ApplySex).HasColumnName("APPLYSEX").IsOptional().HasMaxLength(200);
            Property(x => x.IsApartManage).HasColumnName("ISAPARTMANAGE").IsOptional().HasMaxLength(200);
        }
    }

    // T_Logistics_Office
    internal partial class T_Logistics_OfficeConfiguration : EntityTypeConfiguration<T_Logistics_Office>
    {
        public T_Logistics_OfficeConfiguration()
        {
			ToTable("T_LOGISTICS_OFFICE");
            HasKey(x => x.ID);

            Property(x => x.ID).HasColumnName("ID").IsRequired().HasMaxLength(50);
            Property(x => x.CreateDate).HasColumnName("CREATEDATE").IsOptional();
            Property(x => x.ModifyDate).HasColumnName("MODIFYDATE").IsOptional();
            Property(x => x.CreateUserID).HasColumnName("CREATEUSERID").IsOptional().HasMaxLength(50);
            Property(x => x.CreateUser).HasColumnName("CREATEUSER").IsOptional().HasMaxLength(50);
            Property(x => x.ModifyUserID).HasColumnName("MODIFYUSERID").IsOptional().HasMaxLength(50);
            Property(x => x.ModifyUser).HasColumnName("MODIFYUSER").IsOptional().HasMaxLength(50);
            Property(x => x.OrgID).HasColumnName("ORGID").IsOptional().HasMaxLength(50);
            Property(x => x.CompanyID).HasColumnName("COMPANYID").IsOptional().HasMaxLength(50);
            Property(x => x.FlowPhase).HasColumnName("FLOWPHASE").IsOptional().HasMaxLength(50);
            Property(x => x.FlowInfo).HasColumnName("FLOWINFO").IsOptional().HasMaxLength(1073741823);
            Property(x => x.StepName).HasColumnName("STEPNAME").IsOptional().HasMaxLength(500);
            Property(x => x.Filler).HasColumnName("FILLER").IsOptional().HasMaxLength(200);
            Property(x => x.FillerName).HasColumnName("FILLERNAME").IsOptional().HasMaxLength(200);
            Property(x => x.FillDate).HasColumnName("FILLDATE").IsOptional();
            Property(x => x.Name).HasColumnName("NAME").IsOptional().HasMaxLength(200);
            Property(x => x.Pos).HasColumnName("POS").IsOptional().HasMaxLength(200);
            Property(x => x.Area).HasColumnName("AREA").IsOptional().HasPrecision(18,4);
            Property(x => x.Status).HasColumnName("STATUS").IsOptional().HasMaxLength(200);
            Property(x => x.Number).HasColumnName("NUMBER").IsOptional();
            Property(x => x.Description).HasColumnName("DESCRIPTION").IsOptional().HasMaxLength(200);
            Property(x => x.SoftwareAndHardwareSituation).HasColumnName("SOFTWAREANDHARDWARESITUATION").IsOptional().HasMaxLength(200);
            Property(x => x.Remark).HasColumnName("REMARK").IsOptional().HasMaxLength(500);
            Property(x => x.Attach).HasColumnName("ATTACH").IsOptional().HasMaxLength(500);
            Property(x => x.NodeID).HasColumnName("NODEID").IsOptional().HasMaxLength(200);
            Property(x => x.NodeFullID).HasColumnName("NODEFULLID").IsOptional().HasMaxLength(200);
            Property(x => x.CurrentUseDept).HasColumnName("CURRENTUSEDEPT").IsOptional().HasMaxLength(200);
            Property(x => x.CurrentUseDeptName).HasColumnName("CURRENTUSEDEPTNAME").IsOptional().HasMaxLength(200);
            Property(x => x.UseStatus).HasColumnName("USESTATUS").IsOptional().HasMaxLength(200);
            Property(x => x.PosName).HasColumnName("POSNAME").IsOptional().HasMaxLength(200);
        }
    }

    // T_Logistics_OfficeApply
    internal partial class T_Logistics_OfficeApplyConfiguration : EntityTypeConfiguration<T_Logistics_OfficeApply>
    {
        public T_Logistics_OfficeApplyConfiguration()
        {
			ToTable("T_LOGISTICS_OFFICEAPPLY");
            HasKey(x => x.ID);

            Property(x => x.ID).HasColumnName("ID").IsRequired().HasMaxLength(50);
            Property(x => x.CreateDate).HasColumnName("CREATEDATE").IsOptional();
            Property(x => x.ModifyDate).HasColumnName("MODIFYDATE").IsOptional();
            Property(x => x.CreateUserID).HasColumnName("CREATEUSERID").IsOptional().HasMaxLength(50);
            Property(x => x.CreateUser).HasColumnName("CREATEUSER").IsOptional().HasMaxLength(50);
            Property(x => x.ModifyUserID).HasColumnName("MODIFYUSERID").IsOptional().HasMaxLength(50);
            Property(x => x.ModifyUser).HasColumnName("MODIFYUSER").IsOptional().HasMaxLength(50);
            Property(x => x.OrgID).HasColumnName("ORGID").IsOptional().HasMaxLength(50);
            Property(x => x.CompanyID).HasColumnName("COMPANYID").IsOptional().HasMaxLength(50);
            Property(x => x.FlowPhase).HasColumnName("FLOWPHASE").IsOptional().HasMaxLength(50);
            Property(x => x.FlowInfo).HasColumnName("FLOWINFO").IsOptional().HasMaxLength(1073741823);
            Property(x => x.StepName).HasColumnName("STEPNAME").IsOptional().HasMaxLength(500);
            Property(x => x.ApplyUser).HasColumnName("APPLYUSER").IsOptional().HasMaxLength(200);
            Property(x => x.ApplyUserName).HasColumnName("APPLYUSERNAME").IsOptional().HasMaxLength(200);
            Property(x => x.ApplyDept).HasColumnName("APPLYDEPT").IsOptional().HasMaxLength(200);
            Property(x => x.ApplyDeptName).HasColumnName("APPLYDEPTNAME").IsOptional().HasMaxLength(200);
            Property(x => x.ApplyDate).HasColumnName("APPLYDATE").IsOptional();
            Property(x => x.ApplyType).HasColumnName("APPLYTYPE").IsOptional().HasMaxLength(200);
            Property(x => x.Change_NewOfficeName).HasColumnName("CHANGE_NEWOFFICENAME").IsOptional().HasMaxLength(200);
            Property(x => x.Change_NewOfficeNameName).HasColumnName("CHANGE_NEWOFFICENAMENAME").IsOptional().HasMaxLength(200);
            Property(x => x.Change_NewOfficeArea).HasColumnName("CHANGE_NEWOFFICEAREA").IsOptional().HasMaxLength(200);
            Property(x => x.Change_StartDate).HasColumnName("CHANGE_STARTDATE").IsOptional();
            Property(x => x.Change_UseNumber).HasColumnName("CHANGE_USENUMBER").IsOptional();
            Property(x => x.NewOfficeName).HasColumnName("NEWOFFICENAME").IsOptional().HasMaxLength(1073741823);
            Property(x => x.NewOfficeNameName).HasColumnName("NEWOFFICENAMENAME").IsOptional().HasMaxLength(1073741823);
            Property(x => x.NewOfficeArea).HasColumnName("NEWOFFICEAREA").IsOptional().HasMaxLength(200);
            Property(x => x.StartDate).HasColumnName("STARTDATE").IsOptional();
            Property(x => x.UseNumber).HasColumnName("USENUMBER").IsOptional();
            Property(x => x.BackOfficeName).HasColumnName("BACKOFFICENAME").IsOptional().HasMaxLength(200);
            Property(x => x.BackOfficeNameName).HasColumnName("BACKOFFICENAMENAME").IsOptional().HasMaxLength(200);
            Property(x => x.OfficeArea).HasColumnName("OFFICEAREA").IsOptional().HasMaxLength(200);
            Property(x => x.BackDate).HasColumnName("BACKDATE").IsOptional();
            Property(x => x.ApplyReason).HasColumnName("APPLYREASON").IsOptional().HasMaxLength(500);
            Property(x => x.OfficeFurnitureRequirements).HasColumnName("OFFICEFURNITUREREQUIREMENTS").IsOptional().HasMaxLength(500);
            Property(x => x.HardwareAndSoftwareResourceRequirements).HasColumnName("HARDWAREANDSOFTWARERESOURCEREQUIREMENTS").IsOptional().HasMaxLength(500);
            Property(x => x.DeptLeaderSign).HasColumnName("DEPTLEADERSIGN").IsOptional();
            Property(x => x.ComprehensiveDeptSign).HasColumnName("COMPREHENSIVEDEPTSIGN").IsOptional();
            Property(x => x.Change_OldOfficeName).HasColumnName("CHANGE_OLDOFFICENAME").IsOptional().HasMaxLength(200);
            Property(x => x.Change_OldOfficeNameName).HasColumnName("CHANGE_OLDOFFICENAMENAME").IsOptional().HasMaxLength(200);
            Property(x => x.Change_OldOfficeArea).HasColumnName("CHANGE_OLDOFFICEAREA").IsOptional().HasMaxLength(200);
        }
    }

    // T_Logistics_OfficePos
    internal partial class T_Logistics_OfficePosConfiguration : EntityTypeConfiguration<T_Logistics_OfficePos>
    {
        public T_Logistics_OfficePosConfiguration()
        {
			ToTable("T_LOGISTICS_OFFICEPOS");
            HasKey(x => x.ID);

            Property(x => x.ID).HasColumnName("ID").IsRequired().HasMaxLength(50);
            Property(x => x.CreateDate).HasColumnName("CREATEDATE").IsOptional();
            Property(x => x.ModifyDate).HasColumnName("MODIFYDATE").IsOptional();
            Property(x => x.CreateUserID).HasColumnName("CREATEUSERID").IsOptional().HasMaxLength(50);
            Property(x => x.CreateUser).HasColumnName("CREATEUSER").IsOptional().HasMaxLength(50);
            Property(x => x.ModifyUserID).HasColumnName("MODIFYUSERID").IsOptional().HasMaxLength(50);
            Property(x => x.ModifyUser).HasColumnName("MODIFYUSER").IsOptional().HasMaxLength(50);
            Property(x => x.OrgID).HasColumnName("ORGID").IsOptional().HasMaxLength(50);
            Property(x => x.CompanyID).HasColumnName("COMPANYID").IsOptional().HasMaxLength(50);
            Property(x => x.FlowPhase).HasColumnName("FLOWPHASE").IsOptional().HasMaxLength(50);
            Property(x => x.FlowInfo).HasColumnName("FLOWINFO").IsOptional().HasMaxLength(1073741823);
            Property(x => x.StepName).HasColumnName("STEPNAME").IsOptional().HasMaxLength(500);
            Property(x => x.Name).HasColumnName("NAME").IsOptional().HasMaxLength(200);
            Property(x => x.Code).HasColumnName("CODE").IsOptional().HasMaxLength(200);
            Property(x => x.Level).HasColumnName("LEVEL").IsOptional().HasMaxLength(200);
            Property(x => x.ParentID).HasColumnName("PARENTID").IsOptional().HasMaxLength(200);
            Property(x => x.FullID).HasColumnName("FULLID").IsOptional().HasMaxLength(200);
            Property(x => x.SortIndex).HasColumnName("SORTINDEX").IsOptional().HasMaxLength(200);
            Property(x => x.Description).HasColumnName("DESCRIPTION").IsOptional().HasMaxLength(500);
        }
    }

    // T_M_ConferenceApply
    internal partial class T_M_ConferenceApplyConfiguration : EntityTypeConfiguration<T_M_ConferenceApply>
    {
        public T_M_ConferenceApplyConfiguration()
        {
			ToTable("T_M_CONFERENCEAPPLY");
            HasKey(x => x.ID);

            Property(x => x.ID).HasColumnName("ID").IsRequired().HasMaxLength(50);
            Property(x => x.CreateDate).HasColumnName("CREATEDATE").IsOptional();
            Property(x => x.ModifyDate).HasColumnName("MODIFYDATE").IsOptional();
            Property(x => x.CreateUserID).HasColumnName("CREATEUSERID").IsOptional().HasMaxLength(50);
            Property(x => x.CreateUser).HasColumnName("CREATEUSER").IsOptional().HasMaxLength(50);
            Property(x => x.ModifyUserID).HasColumnName("MODIFYUSERID").IsOptional().HasMaxLength(50);
            Property(x => x.ModifyUser).HasColumnName("MODIFYUSER").IsOptional().HasMaxLength(50);
            Property(x => x.OrgID).HasColumnName("ORGID").IsOptional().HasMaxLength(50);
            Property(x => x.CompanyID).HasColumnName("COMPANYID").IsOptional().HasMaxLength(50);
            Property(x => x.FlowPhase).HasColumnName("FLOWPHASE").IsOptional().HasMaxLength(50);
            Property(x => x.FlowInfo).HasColumnName("FLOWINFO").IsOptional().HasMaxLength(1073741823);
            Property(x => x.StepName).HasColumnName("STEPNAME").IsOptional().HasMaxLength(500);
            Property(x => x.Title).HasColumnName("TITLE").IsOptional().HasMaxLength(200);
            Property(x => x.HostDept).HasColumnName("HOSTDEPT").IsOptional().HasMaxLength(200);
            Property(x => x.HostDeptName).HasColumnName("HOSTDEPTNAME").IsOptional().HasMaxLength(200);
            Property(x => x.ApplyUser).HasColumnName("APPLYUSER").IsOptional().HasMaxLength(200);
            Property(x => x.ApplyUserName).HasColumnName("APPLYUSERNAME").IsOptional().HasMaxLength(200);
            Property(x => x.ApplyDate).HasColumnName("APPLYDATE").IsOptional();
            Property(x => x.MeetingStart).HasColumnName("MEETINGSTART").IsOptional();
            Property(x => x.MeetingEnd).HasColumnName("MEETINGEND").IsOptional();
            Property(x => x.MeetingStartHour).HasColumnName("MEETINGSTARTHOUR").IsOptional().HasMaxLength(200);
            Property(x => x.MeetingEndHour).HasColumnName("MEETINGENDHOUR").IsOptional().HasMaxLength(200);
            Property(x => x.MeetingRoom).HasColumnName("MEETINGROOM").IsOptional().HasMaxLength(200);
            Property(x => x.MeetingRoomName).HasColumnName("MEETINGROOMNAME").IsOptional().HasMaxLength(200);
            Property(x => x.RoomAddress).HasColumnName("ROOMADDRESS").IsOptional().HasMaxLength(200);
            Property(x => x.Host).HasColumnName("HOST").IsOptional().HasMaxLength(200);
            Property(x => x.MainContent).HasColumnName("MAINCONTENT").IsOptional().HasMaxLength(500);
            Property(x => x.JoinUser).HasColumnName("JOINUSER").IsOptional().HasMaxLength(500);
            Property(x => x.JoinUserName).HasColumnName("JOINUSERNAME").IsOptional().HasMaxLength(500);
            Property(x => x.IsNeedBanner).HasColumnName("ISNEEDBANNER").IsOptional().HasMaxLength(200);
            Property(x => x.SelfTotal).HasColumnName("SELFTOTAL").IsOptional();
            Property(x => x.GuestTotal).HasColumnName("GUESTTOTAL").IsOptional();
            Property(x => x.SelfLeader).HasColumnName("SELFLEADER").IsOptional();
            Property(x => x.GuestLeader).HasColumnName("GUESTLEADER").IsOptional();
            Property(x => x.Remark).HasColumnName("REMARK").IsOptional().HasMaxLength(500);
            Property(x => x.Attachments).HasColumnName("ATTACHMENTS").IsOptional().HasMaxLength(500);
            Property(x => x.AuditorInfo).HasColumnName("AUDITORINFO").IsOptional();
            Property(x => x.MeetingAdmin).HasColumnName("MEETINGADMIN").IsOptional();
            Property(x => x.MeetingEndMin).HasColumnName("MEETINGENDMIN").IsOptional();
            Property(x => x.MeetingStartMin).HasColumnName("MEETINGSTARTMIN").IsOptional();
            Property(x => x.HostName).HasColumnName("HOSTNAME").IsOptional().HasMaxLength(200);
            Property(x => x.State).HasColumnName("STATE").IsOptional().HasMaxLength(200);
            Property(x => x.RoomCapacity).HasColumnName("ROOMCAPACITY").IsOptional().HasMaxLength(200);
            Property(x => x.IsTableCard).HasColumnName("ISTABLECARD").IsOptional().HasMaxLength(500);
            Property(x => x.IsVideoConference).HasColumnName("ISVIDEOCONFERENCE").IsOptional().HasMaxLength(500);
            Property(x => x.VideoVenue).HasColumnName("VIDEOVENUE").IsOptional().HasMaxLength(500);
            Property(x => x.OtherManager).HasColumnName("OTHERMANAGER").IsOptional().HasMaxLength(500);
            Property(x => x.Demand).HasColumnName("DEMAND").IsOptional().HasMaxLength(500);
            Property(x => x.ActualRoom).HasColumnName("ACTUALROOM").IsOptional().HasMaxLength(500);
        }
    }

    // T_M_ConferenceRegist
    internal partial class T_M_ConferenceRegistConfiguration : EntityTypeConfiguration<T_M_ConferenceRegist>
    {
        public T_M_ConferenceRegistConfiguration()
        {
			ToTable("T_M_CONFERENCEREGIST");
            HasKey(x => x.ID);

            Property(x => x.ID).HasColumnName("ID").IsRequired().HasMaxLength(50);
            Property(x => x.CreateDate).HasColumnName("CREATEDATE").IsOptional();
            Property(x => x.ModifyDate).HasColumnName("MODIFYDATE").IsOptional();
            Property(x => x.CreateUserID).HasColumnName("CREATEUSERID").IsOptional().HasMaxLength(50);
            Property(x => x.CreateUser).HasColumnName("CREATEUSER").IsOptional().HasMaxLength(50);
            Property(x => x.ModifyUserID).HasColumnName("MODIFYUSERID").IsOptional().HasMaxLength(50);
            Property(x => x.ModifyUser).HasColumnName("MODIFYUSER").IsOptional().HasMaxLength(50);
            Property(x => x.OrgID).HasColumnName("ORGID").IsOptional().HasMaxLength(50);
            Property(x => x.PrjID).HasColumnName("PRJID").IsOptional().HasMaxLength(50);
            Property(x => x.FlowPhase).HasColumnName("FLOWPHASE").IsOptional().HasMaxLength(50);
            Property(x => x.StepName).HasColumnName("STEPNAME").IsOptional().HasMaxLength(500);
            Property(x => x.MeetApplyID).HasColumnName("MEETAPPLYID").IsOptional().HasMaxLength(50);
            Property(x => x.MeetApplyIDName).HasColumnName("MEETAPPLYIDNAME").IsOptional().HasMaxLength(50);
            Property(x => x.HostDeptID).HasColumnName("HOSTDEPTID").IsOptional().HasMaxLength(50);
            Property(x => x.HostDeptIDName).HasColumnName("HOSTDEPTIDNAME").IsOptional().HasMaxLength(50);
            Property(x => x.ApplyUserID).HasColumnName("APPLYUSERID").IsOptional().HasMaxLength(50);
            Property(x => x.ApplyUserIDName).HasColumnName("APPLYUSERIDNAME").IsOptional().HasMaxLength(50);
            Property(x => x.PlanMeetingDate).HasColumnName("PLANMEETINGDATE").IsOptional();
            Property(x => x.PlanMeetingPlace).HasColumnName("PLANMEETINGPLACE").IsOptional().HasMaxLength(50);
            Property(x => x.RegistDate).HasColumnName("REGISTDATE").IsOptional();
            Property(x => x.RegistUserID).HasColumnName("REGISTUSERID").IsOptional().HasMaxLength(50);
            Property(x => x.RegistUserIDName).HasColumnName("REGISTUSERIDNAME").IsOptional().HasMaxLength(50);
            Property(x => x.PlanJoinUserID).HasColumnName("PLANJOINUSERID").IsOptional();
            Property(x => x.PlanJoinUserIDName).HasColumnName("PLANJOINUSERIDNAME").IsOptional();
            Property(x => x.MeetingStartDate).HasColumnName("MEETINGSTARTDATE").IsOptional();
            Property(x => x.MeetingEndDate).HasColumnName("MEETINGENDDATE").IsOptional();
            Property(x => x.MettingPlace).HasColumnName("METTINGPLACE").IsOptional().HasMaxLength(200);
            Property(x => x.JoinUserID).HasColumnName("JOINUSERID").IsOptional();
            Property(x => x.JoinUserIDName).HasColumnName("JOINUSERIDNAME").IsOptional();
            Property(x => x.MeetCost).HasColumnName("MEETCOST").IsOptional();
            Property(x => x.Attachment).HasColumnName("ATTACHMENT").IsOptional().HasMaxLength(500);
        }
    }

    // T_M_ConferenceRoom
    internal partial class T_M_ConferenceRoomConfiguration : EntityTypeConfiguration<T_M_ConferenceRoom>
    {
        public T_M_ConferenceRoomConfiguration()
        {
			ToTable("T_M_CONFERENCEROOM");
            HasKey(x => x.ID);

            Property(x => x.ID).HasColumnName("ID").IsRequired().HasMaxLength(50);
            Property(x => x.CreateDate).HasColumnName("CREATEDATE").IsOptional();
            Property(x => x.ModifyDate).HasColumnName("MODIFYDATE").IsOptional();
            Property(x => x.CreateUserID).HasColumnName("CREATEUSERID").IsOptional().HasMaxLength(50);
            Property(x => x.CreateUser).HasColumnName("CREATEUSER").IsOptional().HasMaxLength(50);
            Property(x => x.ModifyUserID).HasColumnName("MODIFYUSERID").IsOptional().HasMaxLength(50);
            Property(x => x.ModifyUser).HasColumnName("MODIFYUSER").IsOptional().HasMaxLength(50);
            Property(x => x.OrgID).HasColumnName("ORGID").IsOptional().HasMaxLength(50);
            Property(x => x.PrjID).HasColumnName("PRJID").IsOptional().HasMaxLength(50);
            Property(x => x.FlowPhase).HasColumnName("FLOWPHASE").IsOptional().HasMaxLength(50);
            Property(x => x.StepName).HasColumnName("STEPNAME").IsOptional().HasMaxLength(500);
            Property(x => x.RoomName).HasColumnName("ROOMNAME").IsOptional().HasMaxLength(50);
            Property(x => x.LinkName).HasColumnName("LINKNAME").IsOptional().HasMaxLength(50);
            Property(x => x.Capacity).HasColumnName("CAPACITY").IsOptional();
            Property(x => x.ManageDeptID).HasColumnName("MANAGEDEPTID").IsOptional().HasMaxLength(50);
            Property(x => x.ManageDeptIDName).HasColumnName("MANAGEDEPTIDNAME").IsOptional().HasMaxLength(50);
            Property(x => x.RoomAddress).HasColumnName("ROOMADDRESS").IsOptional().HasMaxLength(200);
            Property(x => x.Configuredevice).HasColumnName("CONFIGUREDEVICE").IsOptional();
        }
    }

    // T_M_ConferenceSummary
    internal partial class T_M_ConferenceSummaryConfiguration : EntityTypeConfiguration<T_M_ConferenceSummary>
    {
        public T_M_ConferenceSummaryConfiguration()
        {
			ToTable("T_M_CONFERENCESUMMARY");
            HasKey(x => x.ID);

            Property(x => x.ID).HasColumnName("ID").IsRequired().HasMaxLength(50);
            Property(x => x.CreateDate).HasColumnName("CREATEDATE").IsOptional();
            Property(x => x.ModifyDate).HasColumnName("MODIFYDATE").IsOptional();
            Property(x => x.CreateUserID).HasColumnName("CREATEUSERID").IsOptional().HasMaxLength(50);
            Property(x => x.CreateUser).HasColumnName("CREATEUSER").IsOptional().HasMaxLength(50);
            Property(x => x.ModifyUserID).HasColumnName("MODIFYUSERID").IsOptional().HasMaxLength(50);
            Property(x => x.ModifyUser).HasColumnName("MODIFYUSER").IsOptional().HasMaxLength(50);
            Property(x => x.OrgID).HasColumnName("ORGID").IsOptional().HasMaxLength(50);
            Property(x => x.PrjID).HasColumnName("PRJID").IsOptional().HasMaxLength(50);
            Property(x => x.FlowPhase).HasColumnName("FLOWPHASE").IsOptional().HasMaxLength(50);
            Property(x => x.StepName).HasColumnName("STEPNAME").IsOptional().HasMaxLength(500);
            Property(x => x.Title).HasColumnName("TITLE").IsOptional().HasMaxLength(200);
            Property(x => x.TitleName).HasColumnName("TITLENAME").IsOptional().HasMaxLength(2000);
            Property(x => x.JoinUserID).HasColumnName("JOINUSERID").IsOptional();
            Property(x => x.JoinUserIDName).HasColumnName("JOINUSERIDNAME").IsOptional();
            Property(x => x.HostDepID).HasColumnName("HOSTDEPID").IsOptional().HasMaxLength(50);
            Property(x => x.HostDepIDName).HasColumnName("HOSTDEPIDNAME").IsOptional().HasMaxLength(50);
            Property(x => x.HostUserID).HasColumnName("HOSTUSERID").IsOptional().HasMaxLength(50);
            Property(x => x.HostUserIDName).HasColumnName("HOSTUSERIDNAME").IsOptional().HasMaxLength(50);
            Property(x => x.MeetingStart).HasColumnName("MEETINGSTART").IsOptional();
            Property(x => x.RecordUserID).HasColumnName("RECORDUSERID").IsOptional().HasMaxLength(50);
            Property(x => x.RecordUserIDName).HasColumnName("RECORDUSERIDNAME").IsOptional().HasMaxLength(50);
            Property(x => x.MeetingSummary).HasColumnName("MEETINGSUMMARY").IsOptional().HasMaxLength(500);
            Property(x => x.AboutInfomation).HasColumnName("ABOUTINFOMATION").IsOptional().HasMaxLength(500);
            Property(x => x.IsNeedSigned).HasColumnName("ISNEEDSIGNED").IsOptional().HasMaxLength(50);
            Property(x => x.ApproveUserIDs).HasColumnName("APPROVEUSERIDS").IsOptional().HasMaxLength(50);
            Property(x => x.ApproveUserIDsName).HasColumnName("APPROVEUSERIDSNAME").IsOptional().HasMaxLength(50);
            Property(x => x.RatifyUserIDs).HasColumnName("RATIFYUSERIDS").IsOptional().HasMaxLength(50);
            Property(x => x.RatifyUserIDsName).HasColumnName("RATIFYUSERIDSNAME").IsOptional().HasMaxLength(50);
            Property(x => x.MainContent).HasColumnName("MAINCONTENT").IsOptional().HasMaxLength(1073741823);
            Property(x => x.DetailContent).HasColumnName("DETAILCONTENT").IsOptional();
            Property(x => x.CountersignederComment).HasColumnName("COUNTERSIGNEDERCOMMENT").IsOptional();
            Property(x => x.ApprovalerComment).HasColumnName("APPROVALERCOMMENT").IsOptional();
            Property(x => x.LeaveUserID).HasColumnName("LEAVEUSERID").IsOptional().HasMaxLength(500);
            Property(x => x.LeaveUserIDName).HasColumnName("LEAVEUSERIDNAME").IsOptional().HasMaxLength(500);
            Property(x => x.MeetingType).HasColumnName("MEETINGTYPE").IsOptional().HasMaxLength(500);
            Property(x => x.liexiren).HasColumnName("LIEXIREN").IsOptional().HasMaxLength(500);
            Property(x => x.MainContentAttachment).HasColumnName("MAINCONTENTATTACHMENT").IsOptional().HasMaxLength(500);
            Property(x => x.MeetingSummaryAttachment).HasColumnName("MEETINGSUMMARYATTACHMENT").IsOptional().HasMaxLength(500);
            Property(x => x.ComprehensiveLeader).HasColumnName("COMPREHENSIVELEADER").IsOptional();
            Property(x => x.GeneralManager).HasColumnName("GENERALMANAGER").IsOptional();
            Property(x => x.VPUpLeader).HasColumnName("VPUPLEADER").IsOptional();
        }
    }

    // T_M_ConferenceSummary_MainContent
    internal partial class T_M_ConferenceSummary_MainContentConfiguration : EntityTypeConfiguration<T_M_ConferenceSummary_MainContent>
    {
        public T_M_ConferenceSummary_MainContentConfiguration()
        {
			ToTable("T_M_CONFERENCESUMMARY_MAINCONTENT");
            HasKey(x => x.ID);

            Property(x => x.ID).HasColumnName("ID").IsRequired().HasMaxLength(50);
            Property(x => x.T_M_ConferenceSummaryID).HasColumnName("T_M_CONFERENCESUMMARYID").IsOptional().HasMaxLength(50);
            Property(x => x.SortIndex).HasColumnName("SORTINDEX").IsOptional();
            Property(x => x.IsReleased).HasColumnName("ISRELEASED").IsOptional().HasMaxLength(1);
            Property(x => x.TANR).HasColumnName("TANR").IsOptional().HasMaxLength(200);
            Property(x => x.TAR).HasColumnName("TAR").IsOptional().HasMaxLength(200);
            Property(x => x.TABM).HasColumnName("TABM").IsOptional().HasMaxLength(200);
            Property(x => x.JYNR).HasColumnName("JYNR").IsOptional().HasMaxLength(200);
            Property(x => x.CBRHBM).HasColumnName("CBRHBM").IsOptional().HasMaxLength(200);
            Property(x => x.TARName).HasColumnName("TARNAME").IsOptional().HasMaxLength(200);
            Property(x => x.TABMName).HasColumnName("TABMNAME").IsOptional().HasMaxLength(200);
            Property(x => x.CBRHBMName).HasColumnName("CBRHBMNAME").IsOptional().HasMaxLength(200);
            Property(x => x.UndertakerDept).HasColumnName("UNDERTAKERDEPT").IsOptional().HasMaxLength(200);
            Property(x => x.UndertakerDeptName).HasColumnName("UNDERTAKERDEPTNAME").IsOptional().HasMaxLength(200);

            // Foreign keys
            HasOptional(a => a.T_M_ConferenceSummary).WithMany(b => b.T_M_ConferenceSummary_MainContent).HasForeignKey(c => c.T_M_ConferenceSummaryID); // FK_T_M_ConferenceSummary_MainContent_T_M_ConferenceSummary
        }
    }

    // T_M_OuterConference
    internal partial class T_M_OuterConferenceConfiguration : EntityTypeConfiguration<T_M_OuterConference>
    {
        public T_M_OuterConferenceConfiguration()
        {
			ToTable("T_M_OUTERCONFERENCE");
            HasKey(x => x.ID);

            Property(x => x.ID).HasColumnName("ID").IsRequired().HasMaxLength(50);
            Property(x => x.CreateDate).HasColumnName("CREATEDATE").IsOptional();
            Property(x => x.ModifyDate).HasColumnName("MODIFYDATE").IsOptional();
            Property(x => x.CreateUserID).HasColumnName("CREATEUSERID").IsOptional().HasMaxLength(50);
            Property(x => x.CreateUser).HasColumnName("CREATEUSER").IsOptional().HasMaxLength(50);
            Property(x => x.ModifyUserID).HasColumnName("MODIFYUSERID").IsOptional().HasMaxLength(50);
            Property(x => x.ModifyUser).HasColumnName("MODIFYUSER").IsOptional().HasMaxLength(50);
            Property(x => x.OrgID).HasColumnName("ORGID").IsOptional().HasMaxLength(50);
            Property(x => x.PrjID).HasColumnName("PRJID").IsOptional().HasMaxLength(50);
            Property(x => x.FlowPhase).HasColumnName("FLOWPHASE").IsOptional().HasMaxLength(50);
            Property(x => x.StepName).HasColumnName("STEPNAME").IsOptional().HasMaxLength(500);
            Property(x => x.MeetingName).HasColumnName("MEETINGNAME").IsOptional().HasMaxLength(200);
            Property(x => x.MeetingDate).HasColumnName("MEETINGDATE").IsOptional();
            Property(x => x.MeetingPlace).HasColumnName("MEETINGPLACE").IsOptional().HasMaxLength(200);
            Property(x => x.MeetingOrganizers).HasColumnName("MEETINGORGANIZERS").IsOptional().HasMaxLength(200);
            Property(x => x.MeetingDeptName).HasColumnName("MEETINGDEPTNAME").IsOptional().HasMaxLength(50);
            Property(x => x.MeetingDeptNameName).HasColumnName("MEETINGDEPTNAMENAME").IsOptional().HasMaxLength(2000);
            Property(x => x.JoinUserNames).HasColumnName("JOINUSERNAMES").IsOptional();
            Property(x => x.CostGrid).HasColumnName("COSTGRID").IsOptional();
            Property(x => x.TotalMoney).HasColumnName("TOTALMONEY").IsOptional().HasPrecision(18,2);
            Property(x => x.ApplyUserComment).HasColumnName("APPLYUSERCOMMENT").IsOptional();
            Property(x => x.DeptLeaderComment).HasColumnName("DEPTLEADERCOMMENT").IsOptional();
            Property(x => x.FinancialAccountingComment).HasColumnName("FINANCIALACCOUNTINGCOMMENT").IsOptional();
            Property(x => x.FinancialLeaderComment).HasColumnName("FINANCIALLEADERCOMMENT").IsOptional();
            Property(x => x.DepartLeaderComment).HasColumnName("DEPARTLEADERCOMMENT").IsOptional();
            Property(x => x.GeneralManagerComment).HasColumnName("GENERALMANAGERCOMMENT").IsOptional();
            Property(x => x.BorrowMoney).HasColumnName("BORROWMONEY").IsOptional().HasPrecision(18,2);
            Property(x => x.BorrowMoneyDate).HasColumnName("BORROWMONEYDATE").IsOptional();
            Property(x => x.ReimbursedMoney).HasColumnName("REIMBURSEDMONEY").IsOptional().HasPrecision(18,2);
            Property(x => x.ReimbursedMoneyDate).HasColumnName("REIMBURSEDMONEYDATE").IsOptional();
        }
    }

    // T_M_OuterConference_CostGrid
    internal partial class T_M_OuterConference_CostGridConfiguration : EntityTypeConfiguration<T_M_OuterConference_CostGrid>
    {
        public T_M_OuterConference_CostGridConfiguration()
        {
			ToTable("T_M_OUTERCONFERENCE_COSTGRID");
            HasKey(x => x.ID);

            Property(x => x.ID).HasColumnName("ID").IsRequired().HasMaxLength(50);
            Property(x => x.T_M_OuterConferenceID).HasColumnName("T_M_OUTERCONFERENCEID").IsOptional().HasMaxLength(50);
            Property(x => x.SortIndex).HasColumnName("SORTINDEX").IsOptional();
            Property(x => x.IsReleased).HasColumnName("ISRELEASED").IsOptional().HasMaxLength(1);
            Property(x => x.Project).HasColumnName("PROJECT").IsOptional().HasMaxLength(50);
            Property(x => x.Price).HasColumnName("PRICE").IsOptional();
            Property(x => x.Amount).HasColumnName("AMOUNT").IsOptional();
            Property(x => x.Subtotal).HasColumnName("SUBTOTAL").IsOptional();
            Property(x => x.Remarks).HasColumnName("REMARKS").IsOptional().HasMaxLength(200);

            // Foreign keys
            HasOptional(a => a.T_M_OuterConference).WithMany(b => b.T_M_OuterConference_CostGrid).HasForeignKey(c => c.T_M_OuterConferenceID); // FK_T_MOuterConference_MeetingCostList_T_MOuterConference
        }
    }

    // T_Patent_DeclarationApproval
    internal partial class T_Patent_DeclarationApprovalConfiguration : EntityTypeConfiguration<T_Patent_DeclarationApproval>
    {
        public T_Patent_DeclarationApprovalConfiguration()
        {
			ToTable("T_PATENT_DECLARATIONAPPROVAL");
            HasKey(x => x.ID);

            Property(x => x.ID).HasColumnName("ID").IsRequired().HasMaxLength(50);
            Property(x => x.CreateDate).HasColumnName("CREATEDATE").IsOptional();
            Property(x => x.ModifyDate).HasColumnName("MODIFYDATE").IsOptional();
            Property(x => x.CreateUserID).HasColumnName("CREATEUSERID").IsOptional().HasMaxLength(50);
            Property(x => x.CreateUser).HasColumnName("CREATEUSER").IsOptional().HasMaxLength(50);
            Property(x => x.ModifyUserID).HasColumnName("MODIFYUSERID").IsOptional().HasMaxLength(50);
            Property(x => x.ModifyUser).HasColumnName("MODIFYUSER").IsOptional().HasMaxLength(50);
            Property(x => x.OrgID).HasColumnName("ORGID").IsOptional().HasMaxLength(50);
            Property(x => x.CompanyID).HasColumnName("COMPANYID").IsOptional().HasMaxLength(50);
            Property(x => x.FlowPhase).HasColumnName("FLOWPHASE").IsOptional().HasMaxLength(50);
            Property(x => x.FlowInfo).HasColumnName("FLOWINFO").IsOptional().HasMaxLength(1073741823);
            Property(x => x.StepName).HasColumnName("STEPNAME").IsOptional().HasMaxLength(500);
            Property(x => x.DeclareYear).HasColumnName("DECLAREYEAR").IsOptional().HasMaxLength(200);
            Property(x => x.DeclareDate).HasColumnName("DECLAREDATE").IsOptional();
            Property(x => x.Declarant).HasColumnName("DECLARANT").IsOptional().HasMaxLength(200);
            Property(x => x.DeclarantName).HasColumnName("DECLARANTNAME").IsOptional().HasMaxLength(200);
            Property(x => x.DeclareDepartment).HasColumnName("DECLAREDEPARTMENT").IsOptional().HasMaxLength(200);
            Property(x => x.DeclareDepartmentName).HasColumnName("DECLAREDEPARTMENTNAME").IsOptional().HasMaxLength(200);
            Property(x => x.DeclareCategory).HasColumnName("DECLARECATEGORY").IsOptional().HasMaxLength(200);
            Property(x => x.DeclareLocation).HasColumnName("DECLARELOCATION").IsOptional().HasMaxLength(200);
            Property(x => x.DeclarePatentName).HasColumnName("DECLAREPATENTNAME").IsOptional().HasMaxLength(200);
            Property(x => x.Inventor).HasColumnName("INVENTOR").IsOptional().HasMaxLength(200);
            Property(x => x.InventorName).HasColumnName("INVENTORNAME").IsOptional().HasMaxLength(200);
            Property(x => x.PatentNumber).HasColumnName("PATENTNUMBER").IsOptional().HasMaxLength(200);
            Property(x => x.DepartmentAttachment).HasColumnName("DEPARTMENTATTACHMENT").IsOptional().HasMaxLength(500);
            Property(x => x.DeclareAttachment).HasColumnName("DECLAREATTACHMENT").IsOptional().HasMaxLength(500);
            Property(x => x.DeclareLeader).HasColumnName("DECLARELEADER").IsOptional();
            Property(x => x.TechnologyDepartment).HasColumnName("TECHNOLOGYDEPARTMENT").IsOptional();
            Property(x => x.TechnologyMinister).HasColumnName("TECHNOLOGYMINISTER").IsOptional();
            Property(x => x.ChiefEngineer).HasColumnName("CHIEFENGINEER").IsOptional();
        }
    }

    // T_Patent_Manager
    internal partial class T_Patent_ManagerConfiguration : EntityTypeConfiguration<T_Patent_Manager>
    {
        public T_Patent_ManagerConfiguration()
        {
			ToTable("T_PATENT_MANAGER");
            HasKey(x => x.ID);

            Property(x => x.ID).HasColumnName("ID").IsRequired().HasMaxLength(50);
            Property(x => x.CreateDate).HasColumnName("CREATEDATE").IsOptional();
            Property(x => x.ModifyDate).HasColumnName("MODIFYDATE").IsOptional();
            Property(x => x.CreateUserID).HasColumnName("CREATEUSERID").IsOptional().HasMaxLength(50);
            Property(x => x.CreateUser).HasColumnName("CREATEUSER").IsOptional().HasMaxLength(50);
            Property(x => x.ModifyUserID).HasColumnName("MODIFYUSERID").IsOptional().HasMaxLength(50);
            Property(x => x.ModifyUser).HasColumnName("MODIFYUSER").IsOptional().HasMaxLength(50);
            Property(x => x.OrgID).HasColumnName("ORGID").IsOptional().HasMaxLength(50);
            Property(x => x.CompanyID).HasColumnName("COMPANYID").IsOptional().HasMaxLength(50);
            Property(x => x.FlowPhase).HasColumnName("FLOWPHASE").IsOptional().HasMaxLength(50);
            Property(x => x.FlowInfo).HasColumnName("FLOWINFO").IsOptional().HasMaxLength(1073741823);
            Property(x => x.StepName).HasColumnName("STEPNAME").IsOptional().HasMaxLength(500);
            Property(x => x.PatentName).HasColumnName("PATENTNAME").IsOptional().HasMaxLength(200);
            Property(x => x.DeclareDate).HasColumnName("DECLAREDATE").IsOptional();
            Property(x => x.ImpowerDate).HasColumnName("IMPOWERDATE").IsOptional();
            Property(x => x.PatentCategory).HasColumnName("PATENTCATEGORY").IsOptional().HasMaxLength(200);
            Property(x => x.PatentNumber).HasColumnName("PATENTNUMBER").IsOptional().HasMaxLength(200);
            Property(x => x.Inventor).HasColumnName("INVENTOR").IsOptional().HasMaxLength(200);
            Property(x => x.InventorName).HasColumnName("INVENTORNAME").IsOptional().HasMaxLength(200);
            Property(x => x.Patentee).HasColumnName("PATENTEE").IsOptional().HasMaxLength(200);
            Property(x => x.PatenteeName).HasColumnName("PATENTEENAME").IsOptional().HasMaxLength(200);
            Property(x => x.PatentDepartment).HasColumnName("PATENTDEPARTMENT").IsOptional().HasMaxLength(200);
            Property(x => x.PatentDepartmentName).HasColumnName("PATENTDEPARTMENTNAME").IsOptional().HasMaxLength(200);
            Property(x => x.PatentDeadLine).HasColumnName("PATENTDEADLINE").IsOptional();
            Property(x => x.Attachment).HasColumnName("ATTACHMENT").IsOptional().HasMaxLength(500);
        }
    }

    // T_Patent_Plan
    internal partial class T_Patent_PlanConfiguration : EntityTypeConfiguration<T_Patent_Plan>
    {
        public T_Patent_PlanConfiguration()
        {
			ToTable("T_PATENT_PLAN");
            HasKey(x => x.ID);

            Property(x => x.ID).HasColumnName("ID").IsRequired().HasMaxLength(50);
            Property(x => x.CreateDate).HasColumnName("CREATEDATE").IsOptional();
            Property(x => x.ModifyDate).HasColumnName("MODIFYDATE").IsOptional();
            Property(x => x.CreateUserID).HasColumnName("CREATEUSERID").IsOptional().HasMaxLength(50);
            Property(x => x.CreateUser).HasColumnName("CREATEUSER").IsOptional().HasMaxLength(50);
            Property(x => x.ModifyUserID).HasColumnName("MODIFYUSERID").IsOptional().HasMaxLength(50);
            Property(x => x.ModifyUser).HasColumnName("MODIFYUSER").IsOptional().HasMaxLength(50);
            Property(x => x.OrgID).HasColumnName("ORGID").IsOptional().HasMaxLength(50);
            Property(x => x.CompanyID).HasColumnName("COMPANYID").IsOptional().HasMaxLength(50);
            Property(x => x.FlowPhase).HasColumnName("FLOWPHASE").IsOptional().HasMaxLength(50);
            Property(x => x.FlowInfo).HasColumnName("FLOWINFO").IsOptional().HasMaxLength(1073741823);
            Property(x => x.StepName).HasColumnName("STEPNAME").IsOptional().HasMaxLength(500);
            Property(x => x.DeclareYear).HasColumnName("DECLAREYEAR").IsOptional().HasMaxLength(200);
            Property(x => x.DeclareDate).HasColumnName("DECLAREDATE").IsOptional();
            Property(x => x.CommitDepartment).HasColumnName("COMMITDEPARTMENT").IsOptional().HasMaxLength(200);
            Property(x => x.CommitDepartmentName).HasColumnName("COMMITDEPARTMENTNAME").IsOptional().HasMaxLength(200);
            Property(x => x.TechnicalDirector).HasColumnName("TECHNICALDIRECTOR").IsOptional().HasMaxLength(200);
            Property(x => x.Count).HasColumnName("COUNT").IsOptional().HasMaxLength(200);
            Property(x => x.Remark).HasColumnName("REMARK").IsOptional().HasMaxLength(200);
            Property(x => x.PatentPlan).HasColumnName("PATENTPLAN").IsOptional().HasMaxLength(1073741823);
            Property(x => x.DepartmentalLeader).HasColumnName("DEPARTMENTALLEADER").IsOptional();
            Property(x => x.TechnologyDepartmentLeader).HasColumnName("TECHNOLOGYDEPARTMENTLEADER").IsOptional();
            Property(x => x.TechnicalDirectorName).HasColumnName("TECHNICALDIRECTORNAME").IsOptional().HasMaxLength(200);
            Property(x => x.VersionNumber).HasColumnName("VERSIONNUMBER").IsOptional().HasMaxLength(200);
            Property(x => x.RelateID).HasColumnName("RELATEID").IsOptional().HasMaxLength(200);
        }
    }

    // T_Patent_Plan_PatentPlan
    internal partial class T_Patent_Plan_PatentPlanConfiguration : EntityTypeConfiguration<T_Patent_Plan_PatentPlan>
    {
        public T_Patent_Plan_PatentPlanConfiguration()
        {
			ToTable("T_PATENT_PLAN_PATENTPLAN");
            HasKey(x => x.ID);

            Property(x => x.ID).HasColumnName("ID").IsRequired().HasMaxLength(50);
            Property(x => x.T_Patent_PlanID).HasColumnName("T_PATENT_PLANID").IsOptional().HasMaxLength(50);
            Property(x => x.SortIndex).HasColumnName("SORTINDEX").IsOptional();
            Property(x => x.IsReleased).HasColumnName("ISRELEASED").IsOptional().HasMaxLength(1);
            Property(x => x.PatentName).HasColumnName("PATENTNAME").IsOptional().HasMaxLength(200);
            Property(x => x.PatentType).HasColumnName("PATENTTYPE").IsOptional().HasMaxLength(200);
            Property(x => x.Inventor).HasColumnName("INVENTOR").IsOptional().HasMaxLength(200);
            Property(x => x.InventorName).HasColumnName("INVENTORNAME").IsOptional().HasMaxLength(200);
            Property(x => x.DeclareDate).HasColumnName("DECLAREDATE").IsOptional();
            Property(x => x.DeclareLocation).HasColumnName("DECLARELOCATION").IsOptional().HasMaxLength(200);
            Property(x => x.DeclareRemark).HasColumnName("DECLAREREMARK").IsOptional().HasMaxLength(200);

            // Foreign keys
            HasOptional(a => a.T_Patent_Plan).WithMany(b => b.T_Patent_Plan_PatentPlan).HasForeignKey(c => c.T_Patent_PlanID); // FK_T_Patent_Plan_PatentPlan_T_Patent_Plan
        }
    }

    // T_ProjectApproval
    internal partial class T_ProjectApprovalConfiguration : EntityTypeConfiguration<T_ProjectApproval>
    {
        public T_ProjectApprovalConfiguration()
        {
			ToTable("T_PROJECTAPPROVAL");
            HasKey(x => x.ID);

            Property(x => x.ID).HasColumnName("ID").IsRequired().HasMaxLength(50);
            Property(x => x.CreateDate).HasColumnName("CREATEDATE").IsOptional();
            Property(x => x.ModifyDate).HasColumnName("MODIFYDATE").IsOptional();
            Property(x => x.CreateUserID).HasColumnName("CREATEUSERID").IsOptional().HasMaxLength(50);
            Property(x => x.CreateUser).HasColumnName("CREATEUSER").IsOptional().HasMaxLength(50);
            Property(x => x.ModifyUserID).HasColumnName("MODIFYUSERID").IsOptional().HasMaxLength(50);
            Property(x => x.ModifyUser).HasColumnName("MODIFYUSER").IsOptional().HasMaxLength(50);
            Property(x => x.OrgID).HasColumnName("ORGID").IsOptional().HasMaxLength(50);
            Property(x => x.CompanyID).HasColumnName("COMPANYID").IsOptional().HasMaxLength(50);
            Property(x => x.FlowPhase).HasColumnName("FLOWPHASE").IsOptional().HasMaxLength(50);
            Property(x => x.FlowInfo).HasColumnName("FLOWINFO").IsOptional().HasMaxLength(1073741823);
            Property(x => x.StepName).HasColumnName("STEPNAME").IsOptional().HasMaxLength(500);
            Property(x => x.ApprovalYear).HasColumnName("APPROVALYEAR").IsOptional().HasMaxLength(50);
            Property(x => x.ApprovalDate).HasColumnName("APPROVALDATE").IsOptional();
            Property(x => x.ApprovalPerson).HasColumnName("APPROVALPERSON").IsOptional().HasMaxLength(50);
            Property(x => x.Department).HasColumnName("DEPARTMENT").IsOptional().HasMaxLength(50);
            Property(x => x.ProjectName).HasColumnName("PROJECTNAME").IsOptional().HasMaxLength(200);
            Property(x => x.ProjectNumber).HasColumnName("PROJECTNUMBER").IsOptional().HasMaxLength(200);
            Property(x => x.ProjectCategory).HasColumnName("PROJECTCATEGORY").IsOptional().HasMaxLength(50);
            Property(x => x.ProjectLevel).HasColumnName("PROJECTLEVEL").IsOptional().HasMaxLength(50);
            Property(x => x.ProjectLeader).HasColumnName("PROJECTLEADER").IsOptional().HasMaxLength(50);
            Property(x => x.ProjectStatus).HasColumnName("PROJECTSTATUS").IsOptional().HasMaxLength(50);
            Property(x => x.PresentRequire).HasColumnName("PRESENTREQUIRE").IsOptional().HasMaxLength(200);
            Property(x => x.ProjectGrade).HasColumnName("PROJECTGRADE").IsOptional().HasMaxLength(200);
            Property(x => x.ProjectScore).HasColumnName("PROJECTSCORE").IsOptional().HasMaxLength(200);
            Property(x => x.ConfirmGrade).HasColumnName("CONFIRMGRADE").IsOptional().HasMaxLength(50);
            Property(x => x.ConfirmScore).HasColumnName("CONFIRMSCORE").IsOptional().HasMaxLength(200);
            Property(x => x.Target).HasColumnName("TARGET").IsOptional().HasMaxLength(200);
            Property(x => x.ApplyCost).HasColumnName("APPLYCOST").IsOptional().HasMaxLength(200);
            Property(x => x.StartTime).HasColumnName("STARTTIME").IsOptional();
            Property(x => x.PredictFinshTime).HasColumnName("PREDICTFINSHTIME").IsOptional();
            Property(x => x.ProjectContent).HasColumnName("PROJECTCONTENT").IsOptional().HasMaxLength(500);
            Property(x => x.ProjectProblem).HasColumnName("PROJECTPROBLEM").IsOptional().HasMaxLength(500);
            Property(x => x.ProjectResult).HasColumnName("PROJECTRESULT").IsOptional().HasMaxLength(500);
            Property(x => x.ExternalProject).HasColumnName("EXTERNALPROJECT").IsOptional().HasMaxLength(200);
            Property(x => x.InsideBasalProject).HasColumnName("INSIDEBASALPROJECT").IsOptional().HasMaxLength(200);
            Property(x => x.InsidePromoteProject).HasColumnName("INSIDEPROMOTEPROJECT").IsOptional().HasMaxLength(200);
            Property(x => x.StagePlan).HasColumnName("STAGEPLAN").IsOptional().HasMaxLength(500);
            Property(x => x.ApplyMaterial).HasColumnName("APPLYMATERIAL").IsOptional().HasMaxLength(500);
            Property(x => x.JoinDepartment).HasColumnName("JOINDEPARTMENT").IsOptional().HasMaxLength(200);
            Property(x => x.DepartmentResponsibily).HasColumnName("DEPARTMENTRESPONSIBILY").IsOptional().HasMaxLength(500);
            Property(x => x.TechnicalCommitteeExpert).HasColumnName("TECHNICALCOMMITTEEEXPERT").IsOptional();
            Property(x => x.EngineeringDeparment).HasColumnName("ENGINEERINGDEPARMENT").IsOptional();
            Property(x => x.LeaderOpinion).HasColumnName("LEADEROPINION").IsOptional();
        }
    }

    // T_ProtectionArticle_Ledger
    internal partial class T_ProtectionArticle_LedgerConfiguration : EntityTypeConfiguration<T_ProtectionArticle_Ledger>
    {
        public T_ProtectionArticle_LedgerConfiguration()
        {
			ToTable("T_PROTECTIONARTICLE_LEDGER");
            HasKey(x => x.ID);

            Property(x => x.ID).HasColumnName("ID").IsRequired().HasMaxLength(50);
            Property(x => x.CreateDate).HasColumnName("CREATEDATE").IsOptional();
            Property(x => x.ModifyDate).HasColumnName("MODIFYDATE").IsOptional();
            Property(x => x.CreateUserID).HasColumnName("CREATEUSERID").IsOptional().HasMaxLength(50);
            Property(x => x.CreateUser).HasColumnName("CREATEUSER").IsOptional().HasMaxLength(50);
            Property(x => x.ModifyUserID).HasColumnName("MODIFYUSERID").IsOptional().HasMaxLength(50);
            Property(x => x.ModifyUser).HasColumnName("MODIFYUSER").IsOptional().HasMaxLength(50);
            Property(x => x.OrgID).HasColumnName("ORGID").IsOptional().HasMaxLength(50);
            Property(x => x.CompanyID).HasColumnName("COMPANYID").IsOptional().HasMaxLength(50);
            Property(x => x.FlowPhase).HasColumnName("FLOWPHASE").IsOptional().HasMaxLength(50);
            Property(x => x.FlowInfo).HasColumnName("FLOWINFO").IsOptional().HasMaxLength(1073741823);
            Property(x => x.StepName).HasColumnName("STEPNAME").IsOptional().HasMaxLength(500);
            Property(x => x.Registrant).HasColumnName("REGISTRANT").IsOptional().HasMaxLength(200);
            Property(x => x.RegistrantName).HasColumnName("REGISTRANTNAME").IsOptional().HasMaxLength(200);
            Property(x => x.RegisterDate).HasColumnName("REGISTERDATE").IsOptional();
            Property(x => x.SafetyHatPrice).HasColumnName("SAFETYHATPRICE").IsOptional().HasMaxLength(200);
            Property(x => x.SafetyShoesPrice).HasColumnName("SAFETYSHOESPRICE").IsOptional().HasMaxLength(200);
            Property(x => x.SafetyHatQuantity).HasColumnName("SAFETYHATQUANTITY").IsOptional().HasMaxLength(200);
            Property(x => x.SafetyShoesQuantity).HasColumnName("SAFETYSHOESQUANTITY").IsOptional().HasMaxLength(200);
            Property(x => x.Size35Quantity).HasColumnName("SIZE35QUANTITY").IsOptional().HasMaxLength(200);
            Property(x => x.Size36Quantity).HasColumnName("SIZE36QUANTITY").IsOptional().HasMaxLength(200);
            Property(x => x.Size37Quantity).HasColumnName("SIZE37QUANTITY").IsOptional().HasMaxLength(200);
            Property(x => x.Size38Quantity).HasColumnName("SIZE38QUANTITY").IsOptional().HasMaxLength(200);
            Property(x => x.Size39Quantity).HasColumnName("SIZE39QUANTITY").IsOptional().HasMaxLength(200);
            Property(x => x.Size40Quantity).HasColumnName("SIZE40QUANTITY").IsOptional().HasMaxLength(200);
            Property(x => x.Size41Quantity).HasColumnName("SIZE41QUANTITY").IsOptional().HasMaxLength(200);
            Property(x => x.Size42Quantity).HasColumnName("SIZE42QUANTITY").IsOptional().HasMaxLength(200);
            Property(x => x.Size43Quantity).HasColumnName("SIZE43QUANTITY").IsOptional().HasMaxLength(200);
            Property(x => x.Size44Quantity).HasColumnName("SIZE44QUANTITY").IsOptional().HasMaxLength(200);
            Property(x => x.Size45Quantity).HasColumnName("SIZE45QUANTITY").IsOptional().HasMaxLength(200);
            Property(x => x.Size46Quantity).HasColumnName("SIZE46QUANTITY").IsOptional().HasMaxLength(200);
        }
    }

    // T_ProtectionArticle_Receive
    internal partial class T_ProtectionArticle_ReceiveConfiguration : EntityTypeConfiguration<T_ProtectionArticle_Receive>
    {
        public T_ProtectionArticle_ReceiveConfiguration()
        {
			ToTable("T_PROTECTIONARTICLE_RECEIVE");
            HasKey(x => x.ID);

            Property(x => x.ID).HasColumnName("ID").IsRequired().HasMaxLength(50);
            Property(x => x.CreateDate).HasColumnName("CREATEDATE").IsOptional();
            Property(x => x.ModifyDate).HasColumnName("MODIFYDATE").IsOptional();
            Property(x => x.CreateUserID).HasColumnName("CREATEUSERID").IsOptional().HasMaxLength(50);
            Property(x => x.CreateUser).HasColumnName("CREATEUSER").IsOptional().HasMaxLength(50);
            Property(x => x.ModifyUserID).HasColumnName("MODIFYUSERID").IsOptional().HasMaxLength(50);
            Property(x => x.ModifyUser).HasColumnName("MODIFYUSER").IsOptional().HasMaxLength(50);
            Property(x => x.OrgID).HasColumnName("ORGID").IsOptional().HasMaxLength(50);
            Property(x => x.CompanyID).HasColumnName("COMPANYID").IsOptional().HasMaxLength(50);
            Property(x => x.FlowPhase).HasColumnName("FLOWPHASE").IsOptional().HasMaxLength(50);
            Property(x => x.FlowInfo).HasColumnName("FLOWINFO").IsOptional().HasMaxLength(1073741823);
            Property(x => x.StepName).HasColumnName("STEPNAME").IsOptional().HasMaxLength(500);
            Property(x => x.Registrant).HasColumnName("REGISTRANT").IsOptional().HasMaxLength(200);
            Property(x => x.RegistrantName).HasColumnName("REGISTRANTNAME").IsOptional().HasMaxLength(200);
            Property(x => x.RegistrantDept).HasColumnName("REGISTRANTDEPT").IsOptional().HasMaxLength(200);
            Property(x => x.RegistrantDeptName).HasColumnName("REGISTRANTDEPTNAME").IsOptional().HasMaxLength(200);
            Property(x => x.RegisterDate).HasColumnName("REGISTERDATE").IsOptional();
            Property(x => x.Location).HasColumnName("LOCATION").IsOptional().HasMaxLength(200);
            Property(x => x.Project).HasColumnName("PROJECT").IsOptional().HasMaxLength(200);
            Property(x => x.ProjectName).HasColumnName("PROJECTNAME").IsOptional().HasMaxLength(200);
            Property(x => x.Customer).HasColumnName("CUSTOMER").IsOptional().HasMaxLength(200);
            Property(x => x.CustomerName).HasColumnName("CUSTOMERNAME").IsOptional().HasMaxLength(200);
            Property(x => x.SafetyhatReceiveQuantity).HasColumnName("SAFETYHATRECEIVEQUANTITY").IsOptional().HasMaxLength(200);
            Property(x => x.SafetyShoesReceive).HasColumnName("SAFETYSHOESRECEIVE").IsOptional().HasMaxLength(200);
            Property(x => x.SafetyHatPrice).HasColumnName("SAFETYHATPRICE").IsOptional().HasMaxLength(200);
            Property(x => x.SafetyShoesPrice).HasColumnName("SAFETYSHOESPRICE").IsOptional().HasMaxLength(200);
            Property(x => x.SafetyHatTotalPrice).HasColumnName("SAFETYHATTOTALPRICE").IsOptional().HasMaxLength(200);
            Property(x => x.SafetyShoesTotalPrice).HasColumnName("SAFETYSHOESTOTALPRICE").IsOptional().HasMaxLength(200);
            Property(x => x.TotalPrice).HasColumnName("TOTALPRICE").IsOptional().HasMaxLength(200);
            Property(x => x.Remark).HasColumnName("REMARK").IsOptional().HasMaxLength(500);
            Property(x => x.Attachments).HasColumnName("ATTACHMENTS").IsOptional().HasMaxLength(500);
            Property(x => x.SafetyShoesDetail).HasColumnName("SAFETYSHOESDETAIL").IsOptional().HasMaxLength(1073741823);
            Property(x => x.DeptLeader).HasColumnName("DEPTLEADER").IsOptional();
            Property(x => x.ContractingDept).HasColumnName("CONTRACTINGDEPT").IsOptional();
            Property(x => x.SafetyShoesReceiveQuantity).HasColumnName("SAFETYSHOESRECEIVEQUANTITY").IsOptional().HasMaxLength(200);
        }
    }

    // T_ProtectionArticle_Receive_SafetyShoesDetail
    internal partial class T_ProtectionArticle_Receive_SafetyShoesDetailConfiguration : EntityTypeConfiguration<T_ProtectionArticle_Receive_SafetyShoesDetail>
    {
        public T_ProtectionArticle_Receive_SafetyShoesDetailConfiguration()
        {
			ToTable("T_PROTECTIONARTICLE_RECEIVE_SAFETYSHOESDETAIL");
            HasKey(x => x.ID);

            Property(x => x.ID).HasColumnName("ID").IsRequired().HasMaxLength(50);
            Property(x => x.T_ProtectionArticle_ReceiveID).HasColumnName("T_PROTECTIONARTICLE_RECEIVEID").IsOptional().HasMaxLength(50);
            Property(x => x.SortIndex).HasColumnName("SORTINDEX").IsOptional();
            Property(x => x.IsReleased).HasColumnName("ISRELEASED").IsOptional().HasMaxLength(1);
            Property(x => x.Size35).HasColumnName("SIZE35").IsOptional().HasMaxLength(200);
            Property(x => x.Size36).HasColumnName("SIZE36").IsOptional().HasMaxLength(200);
            Property(x => x.Size37).HasColumnName("SIZE37").IsOptional().HasMaxLength(200);
            Property(x => x.Size38).HasColumnName("SIZE38").IsOptional().HasMaxLength(200);
            Property(x => x.Size39).HasColumnName("SIZE39").IsOptional().HasMaxLength(200);
            Property(x => x.Size40).HasColumnName("SIZE40").IsOptional().HasMaxLength(200);
            Property(x => x.Size41).HasColumnName("SIZE41").IsOptional().HasMaxLength(200);
            Property(x => x.Size42).HasColumnName("SIZE42").IsOptional().HasMaxLength(200);
            Property(x => x.Size43).HasColumnName("SIZE43").IsOptional().HasMaxLength(200);
            Property(x => x.Size44).HasColumnName("SIZE44").IsOptional().HasMaxLength(200);
            Property(x => x.Size45).HasColumnName("SIZE45").IsOptional().HasMaxLength(200);
            Property(x => x.Size46).HasColumnName("SIZE46").IsOptional().HasMaxLength(200);

            // Foreign keys
            HasOptional(a => a.T_ProtectionArticle_Receive).WithMany(b => b.T_ProtectionArticle_Receive_SafetyShoesDetail).HasForeignKey(c => c.T_ProtectionArticle_ReceiveID); // FK_T_ProtectionArticle_Receive_SafetyShoesDetail_T_ProtectionArticle_Receive
        }
    }

    // T_ProtectionArticle_Register
    internal partial class T_ProtectionArticle_RegisterConfiguration : EntityTypeConfiguration<T_ProtectionArticle_Register>
    {
        public T_ProtectionArticle_RegisterConfiguration()
        {
			ToTable("T_PROTECTIONARTICLE_REGISTER");
            HasKey(x => x.ID);

            Property(x => x.ID).HasColumnName("ID").IsRequired().HasMaxLength(50);
            Property(x => x.CreateDate).HasColumnName("CREATEDATE").IsOptional();
            Property(x => x.ModifyDate).HasColumnName("MODIFYDATE").IsOptional();
            Property(x => x.CreateUserID).HasColumnName("CREATEUSERID").IsOptional().HasMaxLength(50);
            Property(x => x.CreateUser).HasColumnName("CREATEUSER").IsOptional().HasMaxLength(50);
            Property(x => x.ModifyUserID).HasColumnName("MODIFYUSERID").IsOptional().HasMaxLength(50);
            Property(x => x.ModifyUser).HasColumnName("MODIFYUSER").IsOptional().HasMaxLength(50);
            Property(x => x.OrgID).HasColumnName("ORGID").IsOptional().HasMaxLength(50);
            Property(x => x.CompanyID).HasColumnName("COMPANYID").IsOptional().HasMaxLength(50);
            Property(x => x.FlowPhase).HasColumnName("FLOWPHASE").IsOptional().HasMaxLength(50);
            Property(x => x.FlowInfo).HasColumnName("FLOWINFO").IsOptional().HasMaxLength(1073741823);
            Property(x => x.StepName).HasColumnName("STEPNAME").IsOptional().HasMaxLength(500);
            Property(x => x.Registrant).HasColumnName("REGISTRANT").IsOptional().HasMaxLength(200);
            Property(x => x.RegistrantName).HasColumnName("REGISTRANTNAME").IsOptional().HasMaxLength(200);
            Property(x => x.RegistantDept).HasColumnName("REGISTANTDEPT").IsOptional().HasMaxLength(200);
            Property(x => x.RegisterDate).HasColumnName("REGISTERDATE").IsOptional();
            Property(x => x.PurchaseDate).HasColumnName("PURCHASEDATE").IsOptional();
            Property(x => x.Remark).HasColumnName("REMARK").IsOptional().HasMaxLength(500);
            Property(x => x.Attachments).HasColumnName("ATTACHMENTS").IsOptional().HasMaxLength(500);
            Property(x => x.SafetyHatQuantity).HasColumnName("SAFETYHATQUANTITY").IsOptional().HasMaxLength(200);
            Property(x => x.SafetyShoeQuantity).HasColumnName("SAFETYSHOEQUANTITY").IsOptional().HasMaxLength(200);
            Property(x => x.SafetyShoeDetail).HasColumnName("SAFETYSHOEDETAIL").IsOptional().HasMaxLength(1073741823);
            Property(x => x.Audit).HasColumnName("AUDIT").IsOptional();
            Property(x => x.RegistantDeptName).HasColumnName("REGISTANTDEPTNAME").IsOptional().HasMaxLength(200);
            Property(x => x.SafetyShoesQuantity).HasColumnName("SAFETYSHOESQUANTITY").IsOptional().HasMaxLength(200);
        }
    }

    // T_ProtectionArticle_Register_SafetyShoeDetail
    internal partial class T_ProtectionArticle_Register_SafetyShoeDetailConfiguration : EntityTypeConfiguration<T_ProtectionArticle_Register_SafetyShoeDetail>
    {
        public T_ProtectionArticle_Register_SafetyShoeDetailConfiguration()
        {
			ToTable("T_PROTECTIONARTICLE_REGISTER_SAFETYSHOEDETAIL");
            HasKey(x => x.ID);

            Property(x => x.ID).HasColumnName("ID").IsRequired().HasMaxLength(50);
            Property(x => x.T_ProtectionArticle_RegisterID).HasColumnName("T_PROTECTIONARTICLE_REGISTERID").IsOptional().HasMaxLength(50);
            Property(x => x.SortIndex).HasColumnName("SORTINDEX").IsOptional();
            Property(x => x.IsReleased).HasColumnName("ISRELEASED").IsOptional().HasMaxLength(1);
            Property(x => x.Size35).HasColumnName("SIZE35").IsOptional().HasMaxLength(200);
            Property(x => x.Size36).HasColumnName("SIZE36").IsOptional().HasMaxLength(200);
            Property(x => x.Size37).HasColumnName("SIZE37").IsOptional().HasMaxLength(200);
            Property(x => x.Size38).HasColumnName("SIZE38").IsOptional().HasMaxLength(200);
            Property(x => x.Size39).HasColumnName("SIZE39").IsOptional().HasMaxLength(200);
            Property(x => x.Size40).HasColumnName("SIZE40").IsOptional().HasMaxLength(200);
            Property(x => x.Size41).HasColumnName("SIZE41").IsOptional().HasMaxLength(200);
            Property(x => x.Size42).HasColumnName("SIZE42").IsOptional().HasMaxLength(200);
            Property(x => x.Size43).HasColumnName("SIZE43").IsOptional().HasMaxLength(200);
            Property(x => x.Size44).HasColumnName("SIZE44").IsOptional().HasMaxLength(200);
            Property(x => x.Size45).HasColumnName("SIZE45").IsOptional().HasMaxLength(200);
            Property(x => x.Size46).HasColumnName("SIZE46").IsOptional().HasMaxLength(200);
            Property(x => x.TotalQuantity).HasColumnName("TOTALQUANTITY").IsOptional().HasMaxLength(200);

            // Foreign keys
            HasOptional(a => a.T_ProtectionArticle_Register).WithMany(b => b.T_ProtectionArticle_Register_SafetyShoeDetail).HasForeignKey(c => c.T_ProtectionArticle_RegisterID); // FK_T_ProtectionArticle_Register_SafetyShoeDetail_T_ProtectionArticle_Register
        }
    }

    // T_PurchaseProject_Acceptance
    internal partial class T_PurchaseProject_AcceptanceConfiguration : EntityTypeConfiguration<T_PurchaseProject_Acceptance>
    {
        public T_PurchaseProject_AcceptanceConfiguration()
        {
			ToTable("T_PURCHASEPROJECT_ACCEPTANCE");
            HasKey(x => x.ID);

            Property(x => x.ID).HasColumnName("ID").IsRequired().HasMaxLength(50);
            Property(x => x.CreateDate).HasColumnName("CREATEDATE").IsOptional();
            Property(x => x.ModifyDate).HasColumnName("MODIFYDATE").IsOptional();
            Property(x => x.CreateUserID).HasColumnName("CREATEUSERID").IsOptional().HasMaxLength(50);
            Property(x => x.CreateUser).HasColumnName("CREATEUSER").IsOptional().HasMaxLength(50);
            Property(x => x.ModifyUserID).HasColumnName("MODIFYUSERID").IsOptional().HasMaxLength(50);
            Property(x => x.ModifyUser).HasColumnName("MODIFYUSER").IsOptional().HasMaxLength(50);
            Property(x => x.OrgID).HasColumnName("ORGID").IsOptional().HasMaxLength(50);
            Property(x => x.CompanyID).HasColumnName("COMPANYID").IsOptional().HasMaxLength(50);
            Property(x => x.FlowPhase).HasColumnName("FLOWPHASE").IsOptional().HasMaxLength(50);
            Property(x => x.FlowInfo).HasColumnName("FLOWINFO").IsOptional().HasMaxLength(1073741823);
            Property(x => x.StepName).HasColumnName("STEPNAME").IsOptional().HasMaxLength(500);
            Property(x => x.Applicant).HasColumnName("APPLICANT").IsOptional().HasMaxLength(200);
            Property(x => x.ApplicantName).HasColumnName("APPLICANTNAME").IsOptional().HasMaxLength(200);
            Property(x => x.ApplyDate).HasColumnName("APPLYDATE").IsOptional();
            Property(x => x.Project).HasColumnName("PROJECT").IsOptional().HasMaxLength(200);
            Property(x => x.ProjectName).HasColumnName("PROJECTNAME").IsOptional().HasMaxLength(200);
            Property(x => x.ProjectType).HasColumnName("PROJECTTYPE").IsOptional().HasMaxLength(200);
            Property(x => x.ProjectNumber).HasColumnName("PROJECTNUMBER").IsOptional().HasMaxLength(200);
            Property(x => x.ProjectContractNumber).HasColumnName("PROJECTCONTRACTNUMBER").IsOptional().HasMaxLength(200);
            Property(x => x.BusinessSupervisorName).HasColumnName("BUSINESSSUPERVISORNAME").IsOptional().HasMaxLength(200);
            Property(x => x.DeptDeputyName).HasColumnName("DEPTDEPUTYNAME").IsOptional().HasMaxLength(200);
            Property(x => x.StartDate).HasColumnName("STARTDATE").IsOptional();
            Property(x => x.EndDate).HasColumnName("ENDDATE").IsOptional();
            Property(x => x.ActualStartDate).HasColumnName("ACTUALSTARTDATE").IsOptional();
            Property(x => x.ActualEndDate).HasColumnName("ACTUALENDDATE").IsOptional();
            Property(x => x.Acceptor).HasColumnName("ACCEPTOR").IsOptional().HasMaxLength(200);
            Property(x => x.AcceptorName).HasColumnName("ACCEPTORNAME").IsOptional().HasMaxLength(200);
            Property(x => x.AcceptanceDate).HasColumnName("ACCEPTANCEDATE").IsOptional();
            Property(x => x.AcceptanceCategory).HasColumnName("ACCEPTANCECATEGORY").IsOptional().HasMaxLength(200);
            Property(x => x.ArrivalList).HasColumnName("ARRIVALLIST").IsOptional().HasMaxLength(500);
            Property(x => x.AcceptanceForm).HasColumnName("ACCEPTANCEFORM").IsOptional().HasMaxLength(500);
            Property(x => x.CompletedPic).HasColumnName("COMPLETEDPIC").IsOptional().HasMaxLength(500);
            Property(x => x.CompletedDoc).HasColumnName("COMPLETEDDOC").IsOptional().HasMaxLength(500);
            Property(x => x.DeptDeputy).HasColumnName("DEPTDEPUTY").IsOptional();
            Property(x => x.Deputies).HasColumnName("DEPUTIES").IsOptional();
            Property(x => x.CompanyLeader).HasColumnName("COMPANYLEADER").IsOptional();
        }
    }

    // T_PurchaseProject_ApprovalApply
    internal partial class T_PurchaseProject_ApprovalApplyConfiguration : EntityTypeConfiguration<T_PurchaseProject_ApprovalApply>
    {
        public T_PurchaseProject_ApprovalApplyConfiguration()
        {
			ToTable("T_PURCHASEPROJECT_APPROVALAPPLY");
            HasKey(x => x.ID);

            Property(x => x.ID).HasColumnName("ID").IsRequired().HasMaxLength(50);
            Property(x => x.CreateDate).HasColumnName("CREATEDATE").IsOptional();
            Property(x => x.ModifyDate).HasColumnName("MODIFYDATE").IsOptional();
            Property(x => x.CreateUserID).HasColumnName("CREATEUSERID").IsOptional().HasMaxLength(50);
            Property(x => x.CreateUser).HasColumnName("CREATEUSER").IsOptional().HasMaxLength(50);
            Property(x => x.ModifyUserID).HasColumnName("MODIFYUSERID").IsOptional().HasMaxLength(50);
            Property(x => x.ModifyUser).HasColumnName("MODIFYUSER").IsOptional().HasMaxLength(50);
            Property(x => x.OrgID).HasColumnName("ORGID").IsOptional().HasMaxLength(50);
            Property(x => x.CompanyID).HasColumnName("COMPANYID").IsOptional().HasMaxLength(50);
            Property(x => x.FlowPhase).HasColumnName("FLOWPHASE").IsOptional().HasMaxLength(50);
            Property(x => x.FlowInfo).HasColumnName("FLOWINFO").IsOptional().HasMaxLength(1073741823);
            Property(x => x.StepName).HasColumnName("STEPNAME").IsOptional().HasMaxLength(500);
            Property(x => x.Applicant).HasColumnName("APPLICANT").IsOptional().HasMaxLength(200);
            Property(x => x.ApplicantName).HasColumnName("APPLICANTNAME").IsOptional().HasMaxLength(200);
            Property(x => x.ApplyDate).HasColumnName("APPLYDATE").IsOptional();
            Property(x => x.ApplyYear).HasColumnName("APPLYYEAR").IsOptional().HasMaxLength(200);
            Property(x => x.ProjectList).HasColumnName("PROJECTLIST").IsOptional().HasMaxLength(1073741823);
            Property(x => x.Attachments).HasColumnName("ATTACHMENTS").IsOptional().HasMaxLength(500);
            Property(x => x.InformationLeader).HasColumnName("INFORMATIONLEADER").IsOptional();
            Property(x => x.CompanyLeader).HasColumnName("COMPANYLEADER").IsOptional();
        }
    }

    // T_PurchaseProject_ApprovalApply_ProjectList
    internal partial class T_PurchaseProject_ApprovalApply_ProjectListConfiguration : EntityTypeConfiguration<T_PurchaseProject_ApprovalApply_ProjectList>
    {
        public T_PurchaseProject_ApprovalApply_ProjectListConfiguration()
        {
			ToTable("T_PURCHASEPROJECT_APPROVALAPPLY_PROJECTLIST");
            HasKey(x => x.ID);

            Property(x => x.ID).HasColumnName("ID").IsRequired().HasMaxLength(50);
            Property(x => x.T_PurchaseProject_ApprovalApplyID).HasColumnName("T_PURCHASEPROJECT_APPROVALAPPLYID").IsOptional().HasMaxLength(50);
            Property(x => x.SortIndex).HasColumnName("SORTINDEX").IsOptional();
            Property(x => x.IsReleased).HasColumnName("ISRELEASED").IsOptional().HasMaxLength(1);
            Property(x => x.ProjectName).HasColumnName("PROJECTNAME").IsOptional().HasMaxLength(200);
            Property(x => x.ProjectType).HasColumnName("PROJECTTYPE").IsOptional().HasMaxLength(200);
            Property(x => x.ProjectNumber).HasColumnName("PROJECTNUMBER").IsOptional().HasMaxLength(200);
            Property(x => x.ApplyReason).HasColumnName("APPLYREASON").IsOptional().HasMaxLength(200);
            Property(x => x.ProjectDesc).HasColumnName("PROJECTDESC").IsOptional().HasMaxLength(200);
            Property(x => x.Budget).HasColumnName("BUDGET").IsOptional().HasMaxLength(200);
            Property(x => x.StartDate).HasColumnName("STARTDATE").IsOptional();
            Property(x => x.EndDate).HasColumnName("ENDDATE").IsOptional();
            Property(x => x.BusinessSupervisor).HasColumnName("BUSINESSSUPERVISOR").IsOptional().HasMaxLength(200);
            Property(x => x.BusinessSupervisorName).HasColumnName("BUSINESSSUPERVISORNAME").IsOptional().HasMaxLength(200);
            Property(x => x.DeptDeputy).HasColumnName("DEPTDEPUTY").IsOptional().HasMaxLength(200);
            Property(x => x.DeptDeputyName).HasColumnName("DEPTDEPUTYNAME").IsOptional().HasMaxLength(200);
            Property(x => x.DeptDuties).HasColumnName("DEPTDUTIES").IsOptional().HasMaxLength(200);
            Property(x => x.CompanyLeader).HasColumnName("COMPANYLEADER").IsOptional().HasMaxLength(200);
            Property(x => x.ProjectStatus).HasColumnName("PROJECTSTATUS").IsOptional().HasMaxLength(200);

            // Foreign keys
            HasOptional(a => a.T_PurchaseProject_ApprovalApply).WithMany(b => b.T_PurchaseProject_ApprovalApply_ProjectList).HasForeignKey(c => c.T_PurchaseProject_ApprovalApplyID); // FK_T_PurchaseProject_ApprovalApply_ProjectList_T_PurchaseProject_ApprovalApply
        }
    }

    // T_PurchaseProject_StateChange
    internal partial class T_PurchaseProject_StateChangeConfiguration : EntityTypeConfiguration<T_PurchaseProject_StateChange>
    {
        public T_PurchaseProject_StateChangeConfiguration()
        {
			ToTable("T_PURCHASEPROJECT_STATECHANGE");
            HasKey(x => x.ID);

            Property(x => x.ID).HasColumnName("ID").IsRequired().HasMaxLength(50);
            Property(x => x.CreateDate).HasColumnName("CREATEDATE").IsOptional();
            Property(x => x.ModifyDate).HasColumnName("MODIFYDATE").IsOptional();
            Property(x => x.CreateUserID).HasColumnName("CREATEUSERID").IsOptional().HasMaxLength(50);
            Property(x => x.CreateUser).HasColumnName("CREATEUSER").IsOptional().HasMaxLength(50);
            Property(x => x.ModifyUserID).HasColumnName("MODIFYUSERID").IsOptional().HasMaxLength(50);
            Property(x => x.ModifyUser).HasColumnName("MODIFYUSER").IsOptional().HasMaxLength(50);
            Property(x => x.OrgID).HasColumnName("ORGID").IsOptional().HasMaxLength(50);
            Property(x => x.CompanyID).HasColumnName("COMPANYID").IsOptional().HasMaxLength(50);
            Property(x => x.FlowPhase).HasColumnName("FLOWPHASE").IsOptional().HasMaxLength(50);
            Property(x => x.FlowInfo).HasColumnName("FLOWINFO").IsOptional().HasMaxLength(1073741823);
            Property(x => x.StepName).HasColumnName("STEPNAME").IsOptional().HasMaxLength(500);
            Property(x => x.Applicant).HasColumnName("APPLICANT").IsOptional().HasMaxLength(200);
            Property(x => x.ApplicantName).HasColumnName("APPLICANTNAME").IsOptional().HasMaxLength(200);
            Property(x => x.ApplyDate).HasColumnName("APPLYDATE").IsOptional();
            Property(x => x.Project).HasColumnName("PROJECT").IsOptional().HasMaxLength(200);
            Property(x => x.ProjectName).HasColumnName("PROJECTNAME").IsOptional().HasMaxLength(200);
            Property(x => x.ProjectType).HasColumnName("PROJECTTYPE").IsOptional().HasMaxLength(200);
            Property(x => x.ProjectNumber).HasColumnName("PROJECTNUMBER").IsOptional().HasMaxLength(200);
            Property(x => x.ProjectContract).HasColumnName("PROJECTCONTRACT").IsOptional().HasMaxLength(200);
            Property(x => x.BusinessSupervisorName).HasColumnName("BUSINESSSUPERVISORNAME").IsOptional().HasMaxLength(200);
            Property(x => x.DeptDeputyName).HasColumnName("DEPTDEPUTYNAME").IsOptional().HasMaxLength(200);
            Property(x => x.ChangeReason).HasColumnName("CHANGEREASON").IsOptional().HasMaxLength(200);
            Property(x => x.ProjectStatus).HasColumnName("PROJECTSTATUS").IsOptional().HasMaxLength(200);
            Property(x => x.ChangedState).HasColumnName("CHANGEDSTATE").IsOptional().HasMaxLength(200);
            Property(x => x.StartDate).HasColumnName("STARTDATE").IsOptional();
            Property(x => x.EndDate).HasColumnName("ENDDATE").IsOptional();
            Property(x => x.DelayStartDate).HasColumnName("DELAYSTARTDATE").IsOptional();
            Property(x => x.DelayEndDate).HasColumnName("DELAYENDDATE").IsOptional();
            Property(x => x.ResonDesc).HasColumnName("RESONDESC").IsOptional().HasMaxLength(500);
            Property(x => x.ContractContent).HasColumnName("CONTRACTCONTENT").IsOptional().HasMaxLength(200);
            Property(x => x.Attachments).HasColumnName("ATTACHMENTS").IsOptional().HasMaxLength(500);
            Property(x => x.InformationCenterB).HasColumnName("INFORMATIONCENTERB").IsOptional();
            Property(x => x.InformationCenterA).HasColumnName("INFORMATIONCENTERA").IsOptional();
            Property(x => x.CompanyLeader).HasColumnName("COMPANYLEADER").IsOptional().HasMaxLength(200);
        }
    }

    // T_RiskList_TaskBreakdown
    internal partial class T_RiskList_TaskBreakdownConfiguration : EntityTypeConfiguration<T_RiskList_TaskBreakdown>
    {
        public T_RiskList_TaskBreakdownConfiguration()
        {
			ToTable("T_RISKLIST_TASKBREAKDOWN");
            HasKey(x => x.ID);

            Property(x => x.ID).HasColumnName("ID").IsRequired().HasMaxLength(50);
            Property(x => x.CreateDate).HasColumnName("CREATEDATE").IsOptional();
            Property(x => x.ModifyDate).HasColumnName("MODIFYDATE").IsOptional();
            Property(x => x.CreateUserID).HasColumnName("CREATEUSERID").IsOptional().HasMaxLength(50);
            Property(x => x.CreateUser).HasColumnName("CREATEUSER").IsOptional().HasMaxLength(50);
            Property(x => x.ModifyUserID).HasColumnName("MODIFYUSERID").IsOptional().HasMaxLength(50);
            Property(x => x.ModifyUser).HasColumnName("MODIFYUSER").IsOptional().HasMaxLength(50);
            Property(x => x.OrgID).HasColumnName("ORGID").IsOptional().HasMaxLength(50);
            Property(x => x.CompanyID).HasColumnName("COMPANYID").IsOptional().HasMaxLength(50);
            Property(x => x.FlowPhase).HasColumnName("FLOWPHASE").IsOptional().HasMaxLength(50);
            Property(x => x.FlowInfo).HasColumnName("FLOWINFO").IsOptional().HasMaxLength(1073741823);
            Property(x => x.StepName).HasColumnName("STEPNAME").IsOptional().HasMaxLength(500);
            Property(x => x.CompilingPerson).HasColumnName("COMPILINGPERSON").IsOptional().HasMaxLength(200);
            Property(x => x.CompilingPersonName).HasColumnName("COMPILINGPERSONNAME").IsOptional().HasMaxLength(200);
            Property(x => x.DateOfEstablishment).HasColumnName("DATEOFESTABLISHMENT").IsOptional();
            Property(x => x.AssignmentYear).HasColumnName("ASSIGNMENTYEAR").IsOptional().HasMaxLength(200);
            Property(x => x.TotalTask).HasColumnName("TOTALTASK").IsOptional().HasPrecision(18,4);
            Property(x => x.TaskBreakdownDescription).HasColumnName("TASKBREAKDOWNDESCRIPTION").IsOptional().HasMaxLength(500);
            Property(x => x.TaskBreakdownFile).HasColumnName("TASKBREAKDOWNFILE").IsOptional().HasMaxLength(500);
            Property(x => x.OpinionsOfLeadersOfLegalAuditDepartment).HasColumnName("OPINIONSOFLEADERSOFLEGALAUDITDEPARTMENT").IsOptional();
            Property(x => x.OpinionsOfRiskManagementCommittee).HasColumnName("OPINIONSOFRISKMANAGEMENTCOMMITTEE").IsOptional();
            Property(x => x.RiskManagementCommitteeMember).HasColumnName("RISKMANAGEMENTCOMMITTEEMEMBER").IsOptional().HasMaxLength(500);
            Property(x => x.RiskManagementCommitteeMemberName).HasColumnName("RISKMANAGEMENTCOMMITTEEMEMBERNAME").IsOptional().HasMaxLength(500);
            Property(x => x.TaskBreakdownSheet).HasColumnName("TASKBREAKDOWNSHEET").IsOptional().HasMaxLength(1073741823);
        }
    }

    // T_RiskList_TaskBreakdown_TaskBreakdownSheet
    internal partial class T_RiskList_TaskBreakdown_TaskBreakdownSheetConfiguration : EntityTypeConfiguration<T_RiskList_TaskBreakdown_TaskBreakdownSheet>
    {
        public T_RiskList_TaskBreakdown_TaskBreakdownSheetConfiguration()
        {
			ToTable("T_RISKLIST_TASKBREAKDOWN_TASKBREAKDOWNSHEET");
            HasKey(x => x.ID);

            Property(x => x.ID).HasColumnName("ID").IsRequired().HasMaxLength(50);
            Property(x => x.T_RiskList_TaskBreakdownID).HasColumnName("T_RISKLIST_TASKBREAKDOWNID").IsOptional().HasMaxLength(50);
            Property(x => x.SortIndex).HasColumnName("SORTINDEX").IsOptional();
            Property(x => x.IsReleased).HasColumnName("ISRELEASED").IsOptional().HasMaxLength(1);
            Property(x => x.RiskItem).HasColumnName("RISKITEM").IsOptional().HasMaxLength(200);
            Property(x => x.RiskDescription).HasColumnName("RISKDESCRIPTION").IsOptional().HasMaxLength(200);
            Property(x => x.RiskControlObjectives).HasColumnName("RISKCONTROLOBJECTIVES").IsOptional().HasMaxLength(200);
            Property(x => x.TaskNumber).HasColumnName("TASKNUMBER").IsOptional().HasMaxLength(200);
            Property(x => x.TaskContent).HasColumnName("TASKCONTENT").IsOptional().HasMaxLength(200);
            Property(x => x.MissionRequirements).HasColumnName("MISSIONREQUIREMENTS").IsOptional().HasMaxLength(200);
            Property(x => x.TaskExecutionDepartment).HasColumnName("TASKEXECUTIONDEPARTMENT").IsOptional().HasMaxLength(200);
            Property(x => x.TaskExecutionDepartmentName).HasColumnName("TASKEXECUTIONDEPARTMENTNAME").IsOptional().HasMaxLength(200);
            Property(x => x.Other).HasColumnName("OTHER").IsOptional().HasMaxLength(200);

            // Foreign keys
            HasOptional(a => a.T_RiskList_TaskBreakdown).WithMany(b => b.T_RiskList_TaskBreakdown_TaskBreakdownSheet).HasForeignKey(c => c.T_RiskList_TaskBreakdownID); // FK_T_RiskList_TaskBreakdown_TaskBreakdownSheet_T_RiskList_TaskBreakdown
        }
    }

    // T_RiskList_TaskCompletionReport
    internal partial class T_RiskList_TaskCompletionReportConfiguration : EntityTypeConfiguration<T_RiskList_TaskCompletionReport>
    {
        public T_RiskList_TaskCompletionReportConfiguration()
        {
			ToTable("T_RISKLIST_TASKCOMPLETIONREPORT");
            HasKey(x => x.ID);

            Property(x => x.ID).HasColumnName("ID").IsRequired().HasMaxLength(50);
            Property(x => x.CreateDate).HasColumnName("CREATEDATE").IsOptional();
            Property(x => x.ModifyDate).HasColumnName("MODIFYDATE").IsOptional();
            Property(x => x.CreateUserID).HasColumnName("CREATEUSERID").IsOptional().HasMaxLength(50);
            Property(x => x.CreateUser).HasColumnName("CREATEUSER").IsOptional().HasMaxLength(50);
            Property(x => x.ModifyUserID).HasColumnName("MODIFYUSERID").IsOptional().HasMaxLength(50);
            Property(x => x.ModifyUser).HasColumnName("MODIFYUSER").IsOptional().HasMaxLength(50);
            Property(x => x.OrgID).HasColumnName("ORGID").IsOptional().HasMaxLength(50);
            Property(x => x.CompanyID).HasColumnName("COMPANYID").IsOptional().HasMaxLength(50);
            Property(x => x.FlowPhase).HasColumnName("FLOWPHASE").IsOptional().HasMaxLength(50);
            Property(x => x.FlowInfo).HasColumnName("FLOWINFO").IsOptional().HasMaxLength(1073741823);
            Property(x => x.StepName).HasColumnName("STEPNAME").IsOptional().HasMaxLength(500);
            Property(x => x.TaskNumber).HasColumnName("TASKNUMBER").IsOptional().HasMaxLength(200);
            Property(x => x.ExecutiveBranch).HasColumnName("EXECUTIVEBRANCH").IsOptional().HasMaxLength(200);
            Property(x => x.ExecutiveBranchName).HasColumnName("EXECUTIVEBRANCHNAME").IsOptional().HasMaxLength(200);
            Property(x => x.PersonLiable).HasColumnName("PERSONLIABLE").IsOptional().HasMaxLength(200);
            Property(x => x.PersonLiableName).HasColumnName("PERSONLIABLENAME").IsOptional().HasMaxLength(200);
            Property(x => x.RiskItem).HasColumnName("RISKITEM").IsOptional().HasMaxLength(200);
            Property(x => x.RiskDescription).HasColumnName("RISKDESCRIPTION").IsOptional().HasMaxLength(200);
            Property(x => x.TaskContent).HasColumnName("TASKCONTENT").IsOptional().HasMaxLength(500);
            Property(x => x.MissionRequirements).HasColumnName("MISSIONREQUIREMENTS").IsOptional().HasMaxLength(500);
            Property(x => x.ImplementationSituation).HasColumnName("IMPLEMENTATIONSITUATION").IsOptional().HasMaxLength(500);
            Property(x => x.SuggestionsAndSuggestions).HasColumnName("SUGGESTIONSANDSUGGESTIONS").IsOptional().HasMaxLength(500);
            Property(x => x.TaskOwnerSignature).HasColumnName("TASKOWNERSIGNATURE").IsOptional();
            Property(x => x.CompletionStatus).HasColumnName("COMPLETIONSTATUS").IsOptional().HasMaxLength(200);
            Property(x => x.ExplanationOrReason).HasColumnName("EXPLANATIONORREASON").IsOptional().HasMaxLength(500);
            Property(x => x.SignatureOfExecutiveDepartmentLeader).HasColumnName("SIGNATUREOFEXECUTIVEDEPARTMENTLEADER").IsOptional();
            Property(x => x.TaskEvaluation).HasColumnName("TASKEVALUATION").IsOptional().HasMaxLength(500);
            Property(x => x.RiskManagementOfficeSignature).HasColumnName("RISKMANAGEMENTOFFICESIGNATURE").IsOptional();
            Property(x => x.RiskManagementSign).HasColumnName("RISKMANAGEMENTSIGN").IsOptional().HasMaxLength(200);
            Property(x => x.RiskManagementSignName).HasColumnName("RISKMANAGEMENTSIGNNAME").IsOptional().HasMaxLength(200);
        }
    }

    // T_RM_ReimbursementForm
    internal partial class T_RM_ReimbursementFormConfiguration : EntityTypeConfiguration<T_RM_ReimbursementForm>
    {
        public T_RM_ReimbursementFormConfiguration()
        {
			ToTable("T_RM_REIMBURSEMENTFORM");
            HasKey(x => x.ID);

            Property(x => x.ID).HasColumnName("ID").IsRequired().HasMaxLength(50);
            Property(x => x.CreateDate).HasColumnName("CREATEDATE").IsOptional();
            Property(x => x.ModifyDate).HasColumnName("MODIFYDATE").IsOptional();
            Property(x => x.CreateUserID).HasColumnName("CREATEUSERID").IsOptional().HasMaxLength(50);
            Property(x => x.CreateUser).HasColumnName("CREATEUSER").IsOptional().HasMaxLength(50);
            Property(x => x.ModifyUserID).HasColumnName("MODIFYUSERID").IsOptional().HasMaxLength(50);
            Property(x => x.ModifyUser).HasColumnName("MODIFYUSER").IsOptional().HasMaxLength(50);
            Property(x => x.OrgID).HasColumnName("ORGID").IsOptional().HasMaxLength(50);
            Property(x => x.CompanyID).HasColumnName("COMPANYID").IsOptional().HasMaxLength(50);
            Property(x => x.FlowPhase).HasColumnName("FLOWPHASE").IsOptional().HasMaxLength(50);
            Property(x => x.FlowInfo).HasColumnName("FLOWINFO").IsOptional().HasMaxLength(1073741823);
            Property(x => x.StepName).HasColumnName("STEPNAME").IsOptional().HasMaxLength(500);
            Property(x => x.SerialNumber).HasColumnName("SERIALNUMBER").IsOptional().HasMaxLength(200);
            Property(x => x.CreateUserDept).HasColumnName("CREATEUSERDEPT").IsOptional().HasMaxLength(200);
            Property(x => x.CreateUserDeptName).HasColumnName("CREATEUSERDEPTNAME").IsOptional().HasMaxLength(200);
            Property(x => x.ReimbursementDate).HasColumnName("REIMBURSEMENTDATE").IsOptional();
            Property(x => x.Advertiser).HasColumnName("ADVERTISER").IsOptional().HasMaxLength(50);
            Property(x => x.AdvertiserName).HasColumnName("ADVERTISERNAME").IsOptional().HasMaxLength(50);
            Property(x => x.AdvertiserDept).HasColumnName("ADVERTISERDEPT").IsOptional().HasMaxLength(200);
            Property(x => x.AdvertiserDeptName).HasColumnName("ADVERTISERDEPTNAME").IsOptional().HasMaxLength(200);
            Property(x => x.CreateUserPhone).HasColumnName("CREATEUSERPHONE").IsOptional().HasMaxLength(200);
            Property(x => x.CapsReimbursementAmount).HasColumnName("CAPSREIMBURSEMENTAMOUNT").IsOptional().HasMaxLength(200);
            Property(x => x.ThisReversalAmount).HasColumnName("THISREVERSALAMOUNT").IsOptional().HasPrecision(18,2);
            Property(x => x.RefundAmount).HasColumnName("REFUNDAMOUNT").IsOptional().HasPrecision(18,2);
            Property(x => x.ReimbursementSite).HasColumnName("REIMBURSEMENTSITE").IsOptional().HasMaxLength(200);
            Property(x => x.AccountName).HasColumnName("ACCOUNTNAME").IsOptional().HasMaxLength(200);
            Property(x => x.OpenBank).HasColumnName("OPENBANK").IsOptional().HasMaxLength(200);
            Property(x => x.CardNumber).HasColumnName("CARDNUMBER").IsOptional().HasMaxLength(200);
            Property(x => x.Enclosure).HasColumnName("ENCLOSURE").IsOptional().HasMaxLength(500);
            Property(x => x.Details).HasColumnName("DETAILS").IsOptional().HasMaxLength(1073741823);
            Property(x => x.LoanInfo).HasColumnName("LOANINFO").IsOptional().HasMaxLength(1073741823);
            Property(x => x.ProjectName).HasColumnName("PROJECTNAME").IsOptional().HasMaxLength(200);
            Property(x => x.ProjectNameName).HasColumnName("PROJECTNAMENAME").IsOptional().HasMaxLength(200);
            Property(x => x.CustomerName).HasColumnName("CUSTOMERNAME").IsOptional().HasMaxLength(200);
            Property(x => x.CustomerNameName).HasColumnName("CUSTOMERNAMENAME").IsOptional().HasMaxLength(200);
            Property(x => x.ProjectCode).HasColumnName("PROJECTCODE").IsOptional().HasMaxLength(50);
            Property(x => x.ContractCode).HasColumnName("CONTRACTCODE").IsOptional().HasMaxLength(50);
            Property(x => x.SQRQZYJ).HasColumnName("SQRQZYJ").IsOptional();
            Property(x => x.ZYSCQZYJ).HasColumnName("ZYSCQZYJ").IsOptional();
            Property(x => x.BMZZQZYJ).HasColumnName("BMZZQZYJ").IsOptional();
            Property(x => x.ZGLDQZYJ).HasColumnName("ZGLDQZYJ").IsOptional();
            Property(x => x.ZJLSPQZYJ).HasColumnName("ZJLSPQZYJ").IsOptional();
            Property(x => x.CWBFZRQZYJ).HasColumnName("CWBFZRQZYJ").IsOptional();
            Property(x => x.CWBLQZYJ).HasColumnName("CWBLQZYJ").IsOptional();
            Property(x => x.ReimbursementFormCode).HasColumnName("REIMBURSEMENTFORMCODE").IsOptional().HasMaxLength(200);
            Property(x => x.IsBranchReimbursement).HasColumnName("ISBRANCHREIMBURSEMENT").IsOptional().HasMaxLength(200);
            Property(x => x.FlowEndDate).HasColumnName("FLOWENDDATE").IsOptional();
            Property(x => x.TaskNature).HasColumnName("TASKNATURE").IsOptional().HasMaxLength(200);
            Property(x => x.ExpenseDateEnd).HasColumnName("EXPENSEDATEEND").IsOptional();
            Property(x => x.ExpenseDateStart).HasColumnName("EXPENSEDATESTART").IsOptional();
            Property(x => x.SubtotalDays).HasColumnName("SUBTOTALDAYS").IsOptional();
            Property(x => x.GNFYJTF).HasColumnName("GNFYJTF").IsOptional().HasMaxLength(1073741823);
            Property(x => x.GNZSBZY).HasColumnName("GNZSBZY").IsOptional().HasPrecision(18,2);
            Property(x => x.GNYPZSTS).HasColumnName("GNYPZSTS").IsOptional();
            Property(x => x.GNMRZFS).HasColumnName("GNMRZFS").IsOptional().HasPrecision(18,2);
            Property(x => x.GNZSFHJY).HasColumnName("GNZSFHJY").IsOptional().HasPrecision(18,2);
            Property(x => x.GNYPZSFYY).HasColumnName("GNYPZSFYY").IsOptional().HasPrecision(18,2);
            Property(x => x.GNWPZSTS).HasColumnName("GNWPZSTS").IsOptional();
            Property(x => x.GNYPZSJYJLY).HasColumnName("GNYPZSJYJLY").IsOptional().HasPrecision(18,2);
            Property(x => x.GNWPZSJLBZY).HasColumnName("GNWPZSJLBZY").IsOptional().HasPrecision(18,2);
            Property(x => x.EWZBTS).HasColumnName("EWZBTS").IsOptional();
            Property(x => x.GNWPZSJYJLY).HasColumnName("GNWPZSJYJLY").IsOptional().HasPrecision(18,2);
            Property(x => x.SNJTBZY).HasColumnName("SNJTBZY").IsOptional().HasPrecision(18,2);
            Property(x => x.SJSNJTFJEY).HasColumnName("SJSNJTFJEY").IsOptional().HasPrecision(18,2);
            Property(x => x.SNJTFJEY).HasColumnName("SNJTFJEY").IsOptional().HasPrecision(18,2);
            Property(x => x.ActualPhoneFee).HasColumnName("ACTUALPHONEFEE").IsOptional().HasPrecision(18,2);
            Property(x => x.ConfirmPhoneFee).HasColumnName("CONFIRMPHONEFEE").IsOptional().HasPrecision(18,2);
            Property(x => x.PostSubsidyStandard).HasColumnName("POSTSUBSIDYSTANDARD").IsOptional().HasPrecision(18,2);
            Property(x => x.TotalPostSubsidyAmount).HasColumnName("TOTALPOSTSUBSIDYAMOUNT").IsOptional().HasPrecision(18,2);
            Property(x => x.HSBTBZY).HasColumnName("HSBTBZY").IsOptional().HasPrecision(18,2);
            Property(x => x.HSBTY).HasColumnName("HSBTY").IsOptional().HasPrecision(18,2);
            Property(x => x.QTBTY).HasColumnName("QTBTY").IsOptional().HasPrecision(18,2);
            Property(x => x.OtherFee).HasColumnName("OTHERFEE").IsOptional().HasMaxLength(1073741823);
            Property(x => x.ExpenseScourse).HasColumnName("EXPENSESCOURSE").IsOptional().HasMaxLength(200);
            Property(x => x.PayReason).HasColumnName("PAYREASON").IsOptional().HasMaxLength(500);
            Property(x => x.Remark).HasColumnName("REMARK").IsOptional().HasMaxLength(500);
            Property(x => x.ProjectLeader).HasColumnName("PROJECTLEADER").IsOptional().HasMaxLength(200);
            Property(x => x.ProjectLeaderName).HasColumnName("PROJECTLEADERNAME").IsOptional().HasMaxLength(200);
            Property(x => x.RLZYBBLQZYJ).HasColumnName("RLZYBBLQZYJ").IsOptional();
            Property(x => x.RLZYBBCQZYJ).HasColumnName("RLZYBBCQZYJ").IsOptional();
            Property(x => x.ExpenseSite).HasColumnName("EXPENSESITE").IsOptional().HasMaxLength(200);
            Property(x => x.ProjectType).HasColumnName("PROJECTTYPE").IsOptional().HasMaxLength(200);
            Property(x => x.Employeelevel).HasColumnName("EMPLOYEELEVEL").IsOptional().HasMaxLength(200);
            Property(x => x.PersonPost).HasColumnName("PERSONPOST").IsOptional().HasMaxLength(200);
            Property(x => x.ReimbursementAmount).HasColumnName("REIMBURSEMENTAMOUNT").IsOptional().HasPrecision(18,2);
            Property(x => x.BXRYBXCLFRQ).HasColumnName("BXRYBXCLFRQ").IsOptional().HasMaxLength(1073741823);
            Property(x => x.ReimbursementEffectiveDateStart).HasColumnName("REIMBURSEMENTEFFECTIVEDATESTART").IsOptional();
            Property(x => x.ReimbursementEffectiveDateEnd).HasColumnName("REIMBURSEMENTEFFECTIVEDATEEND").IsOptional();
        }
    }

    // T_RM_ReimbursementForm_BXRYBXCLFRQ
    internal partial class T_RM_ReimbursementForm_BXRYBXCLFRQConfiguration : EntityTypeConfiguration<T_RM_ReimbursementForm_BXRYBXCLFRQ>
    {
        public T_RM_ReimbursementForm_BXRYBXCLFRQConfiguration()
        {
			ToTable("T_RM_REIMBURSEMENTFORM_BXRYBXCLFRQ");
            HasKey(x => x.ID);

            Property(x => x.ID).HasColumnName("ID").IsRequired().HasMaxLength(50);
            Property(x => x.T_RM_ReimbursementFormID).HasColumnName("T_RM_REIMBURSEMENTFORMID").IsOptional().HasMaxLength(50);
            Property(x => x.SortIndex).HasColumnName("SORTINDEX").IsOptional();
            Property(x => x.IsReleased).HasColumnName("ISRELEASED").IsOptional().HasMaxLength(1);
            Property(x => x.Advertiser).HasColumnName("ADVERTISER").IsOptional().HasMaxLength(50);
            Property(x => x.AdvertiserName).HasColumnName("ADVERTISERNAME").IsOptional().HasMaxLength(50);
            Property(x => x.StartingDate).HasColumnName("STARTINGDATE").IsOptional();
            Property(x => x.ArrivedDate).HasColumnName("ARRIVEDDATE").IsOptional();
            Property(x => x.ReimbursementFormCode).HasColumnName("REIMBURSEMENTFORMCODE").IsOptional().HasMaxLength(200);

            // Foreign keys
            HasOptional(a => a.T_RM_ReimbursementForm).WithMany(b => b.T_RM_ReimbursementForm_BXRYBXCLFRQ).HasForeignKey(c => c.T_RM_ReimbursementFormID); // FK_T_RM_ReimbursementForm_BXRYBXCLFRQ_T_RM_ReimbursementForm
        }
    }

    // T_RM_ReimbursementForm_Details
    internal partial class T_RM_ReimbursementForm_DetailsConfiguration : EntityTypeConfiguration<T_RM_ReimbursementForm_Details>
    {
        public T_RM_ReimbursementForm_DetailsConfiguration()
        {
			ToTable("T_RM_REIMBURSEMENTFORM_DETAILS");
            HasKey(x => x.ID);

            Property(x => x.ID).HasColumnName("ID").IsRequired().HasMaxLength(50);
            Property(x => x.T_RM_ReimbursementFormID).HasColumnName("T_RM_REIMBURSEMENTFORMID").IsOptional().HasMaxLength(50);
            Property(x => x.SortIndex).HasColumnName("SORTINDEX").IsOptional();
            Property(x => x.IsReleased).HasColumnName("ISRELEASED").IsOptional().HasMaxLength(1);
            Property(x => x.TwoExpenseScourse).HasColumnName("TWOEXPENSESCOURSE").IsOptional().HasMaxLength(200);
            Property(x => x.ExpenseDate).HasColumnName("EXPENSEDATE").IsOptional();
            Property(x => x.CostAmount).HasColumnName("COSTAMOUNT").IsOptional().HasPrecision(18,2);
            Property(x => x.ExpenseSite).HasColumnName("EXPENSESITE").IsOptional().HasMaxLength(200);
            Property(x => x.Reason).HasColumnName("REASON").IsOptional().HasMaxLength(500);

            // Foreign keys
            HasOptional(a => a.T_RM_ReimbursementForm).WithMany(b => b.T_RM_ReimbursementForm_Details).HasForeignKey(c => c.T_RM_ReimbursementFormID); // FK_T_RM_ReimbursementForm_Details_T_RM_ReimbursementForm
        }
    }

    // T_RM_ReimbursementForm_GNFYJTF
    internal partial class T_RM_ReimbursementForm_GNFYJTFConfiguration : EntityTypeConfiguration<T_RM_ReimbursementForm_GNFYJTF>
    {
        public T_RM_ReimbursementForm_GNFYJTFConfiguration()
        {
			ToTable("T_RM_REIMBURSEMENTFORM_GNFYJTF");
            HasKey(x => x.ID);

            Property(x => x.ID).HasColumnName("ID").IsRequired().HasMaxLength(50);
            Property(x => x.T_RM_ReimbursementFormID).HasColumnName("T_RM_REIMBURSEMENTFORMID").IsOptional().HasMaxLength(50);
            Property(x => x.SortIndex).HasColumnName("SORTINDEX").IsOptional();
            Property(x => x.IsReleased).HasColumnName("ISRELEASED").IsOptional().HasMaxLength(1);
            Property(x => x.StartingDate).HasColumnName("STARTINGDATE").IsOptional();
            Property(x => x.ArrivedDate).HasColumnName("ARRIVEDDATE").IsOptional();
            Property(x => x.Transportation).HasColumnName("TRANSPORTATION").IsOptional().HasMaxLength(200);
            Property(x => x.StartingPlace).HasColumnName("STARTINGPLACE").IsOptional().HasMaxLength(200);
            Property(x => x.ArrivedPlace).HasColumnName("ARRIVEDPLACE").IsOptional().HasMaxLength(200);
            Property(x => x.TransportationFee).HasColumnName("TRANSPORTATIONFEE").IsOptional().HasPrecision(18,2);
            Property(x => x.ConfirmTransportationFee).HasColumnName("CONFIRMTRANSPORTATIONFEE").IsOptional().HasPrecision(18,2);
            Property(x => x.SavingSubsidy).HasColumnName("SAVINGSUBSIDY").IsOptional().HasPrecision(18,2);

            // Foreign keys
            HasOptional(a => a.T_RM_ReimbursementForm).WithMany(b => b.T_RM_ReimbursementForm_GNFYJTF).HasForeignKey(c => c.T_RM_ReimbursementFormID); // FK_T_RM_ReimbursementForm_GNFYJTF_T_RM_ReimbursementForm
        }
    }

    // T_RM_ReimbursementForm_LoanInfo
    internal partial class T_RM_ReimbursementForm_LoanInfoConfiguration : EntityTypeConfiguration<T_RM_ReimbursementForm_LoanInfo>
    {
        public T_RM_ReimbursementForm_LoanInfoConfiguration()
        {
			ToTable("T_RM_REIMBURSEMENTFORM_LOANINFO");
            HasKey(x => x.ID);

            Property(x => x.ID).HasColumnName("ID").IsRequired().HasMaxLength(50);
            Property(x => x.T_RM_ReimbursementFormID).HasColumnName("T_RM_REIMBURSEMENTFORMID").IsOptional().HasMaxLength(50);
            Property(x => x.SortIndex).HasColumnName("SORTINDEX").IsOptional();
            Property(x => x.IsReleased).HasColumnName("ISRELEASED").IsOptional().HasMaxLength(1);
            Property(x => x.LoanApplyID).HasColumnName("LOANAPPLYID").IsOptional().HasMaxLength(50);
            Property(x => x.BorrowFormNumber).HasColumnName("BORROWFORMNUMBER").IsOptional().HasMaxLength(50);
            Property(x => x.BorrowDate).HasColumnName("BORROWDATE").IsOptional();
            Property(x => x.ActualLoanAmount).HasColumnName("ACTUALLOANAMOUNT").IsOptional().HasPrecision(18,2);
            Property(x => x.AmountRepaid).HasColumnName("AMOUNTREPAID").IsOptional().HasPrecision(18,2);
            Property(x => x.NoRepayAmount).HasColumnName("NOREPAYAMOUNT").IsOptional().HasPrecision(18,2);
            Property(x => x.ThisReversalAmount).HasColumnName("THISREVERSALAMOUNT").IsOptional().HasPrecision(18,2);
            Property(x => x.LoanReason).HasColumnName("LOANREASON").IsOptional().HasMaxLength(500);

            // Foreign keys
            HasOptional(a => a.T_RM_ReimbursementForm).WithMany(b => b.T_RM_ReimbursementForm_LoanInfo).HasForeignKey(c => c.T_RM_ReimbursementFormID); // FK_T_RM_ReimbursementForm_LoanInfo_T_RM_ReimbursementForm
        }
    }

    // T_RM_ReimbursementForm_OtherFee
    internal partial class T_RM_ReimbursementForm_OtherFeeConfiguration : EntityTypeConfiguration<T_RM_ReimbursementForm_OtherFee>
    {
        public T_RM_ReimbursementForm_OtherFeeConfiguration()
        {
			ToTable("T_RM_REIMBURSEMENTFORM_OTHERFEE");
            HasKey(x => x.ID);

            Property(x => x.ID).HasColumnName("ID").IsRequired().HasMaxLength(50);
            Property(x => x.T_RM_ReimbursementFormID).HasColumnName("T_RM_REIMBURSEMENTFORMID").IsOptional().HasMaxLength(50);
            Property(x => x.SortIndex).HasColumnName("SORTINDEX").IsOptional();
            Property(x => x.IsReleased).HasColumnName("ISRELEASED").IsOptional().HasMaxLength(1);
            Property(x => x.CostCategory).HasColumnName("COSTCATEGORY").IsOptional().HasMaxLength(200);
            Property(x => x.CostAmount).HasColumnName("COSTAMOUNT").IsOptional().HasPrecision(18,2);
            Property(x => x.Remark).HasColumnName("REMARK").IsOptional().HasMaxLength(200);

            // Foreign keys
            HasOptional(a => a.T_RM_ReimbursementForm).WithMany(b => b.T_RM_ReimbursementForm_OtherFee).HasForeignKey(c => c.T_RM_ReimbursementFormID); // FK_T_RM_ReimbursementForm_OtherFee_T_RM_ReimbursementForm
        }
    }

    // T_SceneMark_Dictionaries
    internal partial class T_SceneMark_DictionariesConfiguration : EntityTypeConfiguration<T_SceneMark_Dictionaries>
    {
        public T_SceneMark_DictionariesConfiguration()
        {
			ToTable("T_SCENEMARK_DICTIONARIES");
            HasKey(x => x.ID);

            Property(x => x.ID).HasColumnName("ID").IsRequired().HasMaxLength(50);
            Property(x => x.CreateDate).HasColumnName("CREATEDATE").IsOptional();
            Property(x => x.ModifyDate).HasColumnName("MODIFYDATE").IsOptional();
            Property(x => x.CreateUserID).HasColumnName("CREATEUSERID").IsOptional().HasMaxLength(50);
            Property(x => x.CreateUser).HasColumnName("CREATEUSER").IsOptional().HasMaxLength(50);
            Property(x => x.ModifyUserID).HasColumnName("MODIFYUSERID").IsOptional().HasMaxLength(50);
            Property(x => x.ModifyUser).HasColumnName("MODIFYUSER").IsOptional().HasMaxLength(50);
            Property(x => x.OrgID).HasColumnName("ORGID").IsOptional().HasMaxLength(50);
            Property(x => x.CompanyID).HasColumnName("COMPANYID").IsOptional().HasMaxLength(50);
            Property(x => x.FlowPhase).HasColumnName("FLOWPHASE").IsOptional().HasMaxLength(50);
            Property(x => x.FlowInfo).HasColumnName("FLOWINFO").IsOptional().HasMaxLength(1073741823);
            Property(x => x.StepName).HasColumnName("STEPNAME").IsOptional().HasMaxLength(500);
            Property(x => x.Name).HasColumnName("NAME").IsOptional().HasMaxLength(200);
            Property(x => x.Specifications).HasColumnName("SPECIFICATIONS").IsOptional().HasMaxLength(200);
            Property(x => x.Level).HasColumnName("LEVEL").IsOptional().HasMaxLength(200);
            Property(x => x.UnitPrice).HasColumnName("UNITPRICE").IsOptional().HasMaxLength(200);
            Property(x => x.Usefulness).HasColumnName("USEFULNESS").IsOptional().HasMaxLength(200);
            Property(x => x.Description).HasColumnName("DESCRIPTION").IsOptional().HasMaxLength(500);
            Property(x => x.Attachments).HasColumnName("ATTACHMENTS").IsOptional().HasMaxLength(500);
            Property(x => x.PicDemo).HasColumnName("PICDEMO").IsOptional().HasMaxLength(2147483647);
            Property(x => x.StockQuantity).HasColumnName("STOCKQUANTITY").IsOptional().HasMaxLength(200);
        }
    }

    // T_SceneMark_Entry
    internal partial class T_SceneMark_EntryConfiguration : EntityTypeConfiguration<T_SceneMark_Entry>
    {
        public T_SceneMark_EntryConfiguration()
        {
			ToTable("T_SCENEMARK_ENTRY");
            HasKey(x => x.ID);

            Property(x => x.ID).HasColumnName("ID").IsRequired().HasMaxLength(50);
            Property(x => x.CreateDate).HasColumnName("CREATEDATE").IsOptional();
            Property(x => x.ModifyDate).HasColumnName("MODIFYDATE").IsOptional();
            Property(x => x.CreateUserID).HasColumnName("CREATEUSERID").IsOptional().HasMaxLength(50);
            Property(x => x.CreateUser).HasColumnName("CREATEUSER").IsOptional().HasMaxLength(50);
            Property(x => x.ModifyUserID).HasColumnName("MODIFYUSERID").IsOptional().HasMaxLength(50);
            Property(x => x.ModifyUser).HasColumnName("MODIFYUSER").IsOptional().HasMaxLength(50);
            Property(x => x.OrgID).HasColumnName("ORGID").IsOptional().HasMaxLength(50);
            Property(x => x.CompanyID).HasColumnName("COMPANYID").IsOptional().HasMaxLength(50);
            Property(x => x.FlowPhase).HasColumnName("FLOWPHASE").IsOptional().HasMaxLength(50);
            Property(x => x.FlowInfo).HasColumnName("FLOWINFO").IsOptional().HasMaxLength(1073741823);
            Property(x => x.StepName).HasColumnName("STEPNAME").IsOptional().HasMaxLength(500);
            Property(x => x.Registrant).HasColumnName("REGISTRANT").IsOptional().HasMaxLength(200);
            Property(x => x.RegistrantName).HasColumnName("REGISTRANTNAME").IsOptional().HasMaxLength(200);
            Property(x => x.RegistrantDept).HasColumnName("REGISTRANTDEPT").IsOptional().HasMaxLength(200);
            Property(x => x.RegistrantDeptName).HasColumnName("REGISTRANTDEPTNAME").IsOptional().HasMaxLength(200);
            Property(x => x.RegisterDate).HasColumnName("REGISTERDATE").IsOptional();
            Property(x => x.PurchaseDate).HasColumnName("PURCHASEDATE").IsOptional();
            Property(x => x.EntryQuantity).HasColumnName("ENTRYQUANTITY").IsOptional().HasMaxLength(200);
            Property(x => x.Remark).HasColumnName("REMARK").IsOptional().HasMaxLength(500);
            Property(x => x.Attachments).HasColumnName("ATTACHMENTS").IsOptional().HasMaxLength(500);
            Property(x => x.EntryDetail).HasColumnName("ENTRYDETAIL").IsOptional().HasMaxLength(1073741823);
            Property(x => x.Audit).HasColumnName("AUDIT").IsOptional();
            Property(x => x.EntryTotalQuantity).HasColumnName("ENTRYTOTALQUANTITY").IsOptional().HasMaxLength(200);
        }
    }

    // T_SceneMark_Entry_EntryDetail
    internal partial class T_SceneMark_Entry_EntryDetailConfiguration : EntityTypeConfiguration<T_SceneMark_Entry_EntryDetail>
    {
        public T_SceneMark_Entry_EntryDetailConfiguration()
        {
			ToTable("T_SCENEMARK_ENTRY_ENTRYDETAIL");
            HasKey(x => x.ID);

            Property(x => x.ID).HasColumnName("ID").IsRequired().HasMaxLength(50);
            Property(x => x.T_SceneMark_EntryID).HasColumnName("T_SCENEMARK_ENTRYID").IsOptional().HasMaxLength(50);
            Property(x => x.SortIndex).HasColumnName("SORTINDEX").IsOptional();
            Property(x => x.IsReleased).HasColumnName("ISRELEASED").IsOptional().HasMaxLength(1);
            Property(x => x.Name).HasColumnName("NAME").IsOptional().HasMaxLength(200);
            Property(x => x.Specifications).HasColumnName("SPECIFICATIONS").IsOptional().HasMaxLength(200);
            Property(x => x.Level).HasColumnName("LEVEL").IsOptional().HasMaxLength(200);
            Property(x => x.UnitPrice).HasColumnName("UNITPRICE").IsOptional().HasMaxLength(200);
            Property(x => x.StockQuantity).HasColumnName("STOCKQUANTITY").IsOptional().HasMaxLength(200);
            Property(x => x.EntryQuantity).HasColumnName("ENTRYQUANTITY").IsOptional().HasMaxLength(200);
            Property(x => x.DictID).HasColumnName("DICTID").IsOptional().HasMaxLength(200);

            // Foreign keys
            HasOptional(a => a.T_SceneMark_Entry).WithMany(b => b.T_SceneMark_Entry_EntryDetail).HasForeignKey(c => c.T_SceneMark_EntryID); // FK_T_SceneMark_Entry_EntryDetail_T_SceneMark_Entry
        }
    }

    // T_SceneMark_Receive
    internal partial class T_SceneMark_ReceiveConfiguration : EntityTypeConfiguration<T_SceneMark_Receive>
    {
        public T_SceneMark_ReceiveConfiguration()
        {
			ToTable("T_SCENEMARK_RECEIVE");
            HasKey(x => x.ID);

            Property(x => x.ID).HasColumnName("ID").IsRequired().HasMaxLength(50);
            Property(x => x.CreateDate).HasColumnName("CREATEDATE").IsOptional();
            Property(x => x.ModifyDate).HasColumnName("MODIFYDATE").IsOptional();
            Property(x => x.CreateUserID).HasColumnName("CREATEUSERID").IsOptional().HasMaxLength(50);
            Property(x => x.CreateUser).HasColumnName("CREATEUSER").IsOptional().HasMaxLength(50);
            Property(x => x.ModifyUserID).HasColumnName("MODIFYUSERID").IsOptional().HasMaxLength(50);
            Property(x => x.ModifyUser).HasColumnName("MODIFYUSER").IsOptional().HasMaxLength(50);
            Property(x => x.OrgID).HasColumnName("ORGID").IsOptional().HasMaxLength(50);
            Property(x => x.CompanyID).HasColumnName("COMPANYID").IsOptional().HasMaxLength(50);
            Property(x => x.FlowPhase).HasColumnName("FLOWPHASE").IsOptional().HasMaxLength(50);
            Property(x => x.FlowInfo).HasColumnName("FLOWINFO").IsOptional().HasMaxLength(1073741823);
            Property(x => x.StepName).HasColumnName("STEPNAME").IsOptional().HasMaxLength(500);
            Property(x => x.Claimant).HasColumnName("CLAIMANT").IsOptional().HasMaxLength(200);
            Property(x => x.ClaimantName).HasColumnName("CLAIMANTNAME").IsOptional().HasMaxLength(200);
            Property(x => x.ClaimantDept).HasColumnName("CLAIMANTDEPT").IsOptional().HasMaxLength(200);
            Property(x => x.ClaimantDeptName).HasColumnName("CLAIMANTDEPTNAME").IsOptional().HasMaxLength(200);
            Property(x => x.ClaimantDate).HasColumnName("CLAIMANTDATE").IsOptional();
            Property(x => x.Location).HasColumnName("LOCATION").IsOptional().HasMaxLength(200);
            Property(x => x.ProjectName).HasColumnName("PROJECTNAME").IsOptional().HasMaxLength(200);
            Property(x => x.ProjectNameName).HasColumnName("PROJECTNAMENAME").IsOptional().HasMaxLength(200);
            Property(x => x.Customer).HasColumnName("CUSTOMER").IsOptional().HasMaxLength(200);
            Property(x => x.CustomerName).HasColumnName("CUSTOMERNAME").IsOptional().HasMaxLength(200);
            Property(x => x.TotalCount).HasColumnName("TOTALCOUNT").IsOptional().HasMaxLength(200);
            Property(x => x.TotalAmount).HasColumnName("TOTALAMOUNT").IsOptional().HasMaxLength(200);
            Property(x => x.Remark).HasColumnName("REMARK").IsOptional().HasMaxLength(500);
            Property(x => x.Attachments).HasColumnName("ATTACHMENTS").IsOptional().HasMaxLength(500);
            Property(x => x.ReceiveDetail).HasColumnName("RECEIVEDETAIL").IsOptional().HasMaxLength(1073741823);
            Property(x => x.DeptLeader).HasColumnName("DEPTLEADER").IsOptional();
            Property(x => x.ContractingDept).HasColumnName("CONTRACTINGDEPT").IsOptional();
        }
    }

    // T_SceneMark_Receive_ReceiveDetail
    internal partial class T_SceneMark_Receive_ReceiveDetailConfiguration : EntityTypeConfiguration<T_SceneMark_Receive_ReceiveDetail>
    {
        public T_SceneMark_Receive_ReceiveDetailConfiguration()
        {
			ToTable("T_SCENEMARK_RECEIVE_RECEIVEDETAIL");
            HasKey(x => x.ID);

            Property(x => x.ID).HasColumnName("ID").IsRequired().HasMaxLength(50);
            Property(x => x.T_SceneMark_ReceiveID).HasColumnName("T_SCENEMARK_RECEIVEID").IsOptional().HasMaxLength(50);
            Property(x => x.SortIndex).HasColumnName("SORTINDEX").IsOptional();
            Property(x => x.IsReleased).HasColumnName("ISRELEASED").IsOptional().HasMaxLength(1);
            Property(x => x.DictID).HasColumnName("DICTID").IsOptional().HasMaxLength(200);
            Property(x => x.Name).HasColumnName("NAME").IsOptional().HasMaxLength(200);
            Property(x => x.Specifications).HasColumnName("SPECIFICATIONS").IsOptional().HasMaxLength(200);
            Property(x => x.Level).HasColumnName("LEVEL").IsOptional().HasMaxLength(200);
            Property(x => x.UnitPrice).HasColumnName("UNITPRICE").IsOptional().HasMaxLength(200);
            Property(x => x.StockQuantity).HasColumnName("STOCKQUANTITY").IsOptional().HasMaxLength(200);
            Property(x => x.ReceiveQuantity).HasColumnName("RECEIVEQUANTITY").IsOptional().HasMaxLength(200);
            Property(x => x.TotalAmount).HasColumnName("TOTALAMOUNT").IsOptional().HasMaxLength(200);

            // Foreign keys
            HasOptional(a => a.T_SceneMark_Receive).WithMany(b => b.T_SceneMark_Receive_ReceiveDetail).HasForeignKey(c => c.T_SceneMark_ReceiveID); // FK_T_SceneMark_Receive_ReceiveDetail_T_SceneMark_Receive
        }
    }

    // T_sds
    internal partial class T_sdsConfiguration : EntityTypeConfiguration<T_sds>
    {
        public T_sdsConfiguration()
        {
			ToTable("T_SDS");
            HasKey(x => x.ID);

            Property(x => x.ID).HasColumnName("ID").IsRequired().HasMaxLength(50);
            Property(x => x.CreateDate).HasColumnName("CREATEDATE").IsOptional();
            Property(x => x.ModifyDate).HasColumnName("MODIFYDATE").IsOptional();
            Property(x => x.CreateUserID).HasColumnName("CREATEUSERID").IsOptional().HasMaxLength(50);
            Property(x => x.CreateUser).HasColumnName("CREATEUSER").IsOptional().HasMaxLength(50);
            Property(x => x.ModifyUserID).HasColumnName("MODIFYUSERID").IsOptional().HasMaxLength(50);
            Property(x => x.ModifyUser).HasColumnName("MODIFYUSER").IsOptional().HasMaxLength(50);
            Property(x => x.OrgID).HasColumnName("ORGID").IsOptional().HasMaxLength(50);
            Property(x => x.CompanyID).HasColumnName("COMPANYID").IsOptional().HasMaxLength(50);
            Property(x => x.FlowPhase).HasColumnName("FLOWPHASE").IsOptional().HasMaxLength(50);
            Property(x => x.FlowInfo).HasColumnName("FLOWINFO").IsOptional().HasMaxLength(1073741823);
            Property(x => x.StepName).HasColumnName("STEPNAME").IsOptional().HasMaxLength(500);
            Property(x => x.SQR).HasColumnName("SQR").IsOptional().HasMaxLength(200);
            Property(x => x.SQRName).HasColumnName("SQRNAME").IsOptional().HasMaxLength(200);
            Property(x => x.SQBM).HasColumnName("SQBM").IsOptional().HasMaxLength(200);
            Property(x => x.SQBMName).HasColumnName("SQBMNAME").IsOptional().HasMaxLength(200);
            Property(x => x.ZL).HasColumnName("ZL").IsOptional().HasMaxLength(200);
            Property(x => x.XGWJ).HasColumnName("XGWJ").IsOptional().HasMaxLength(500);
            Property(x => x.YYSX).HasColumnName("YYSX").IsOptional().HasMaxLength(1073741823);
        }
    }

    // T_sds_YYSX
    internal partial class T_sds_YYSXConfiguration : EntityTypeConfiguration<T_sds_YYSX>
    {
        public T_sds_YYSXConfiguration()
        {
			ToTable("T_SDS_YYSX");
            HasKey(x => x.ID);

            Property(x => x.ID).HasColumnName("ID").IsRequired().HasMaxLength(50);
            Property(x => x.T_sdsID).HasColumnName("T_SDSID").IsOptional().HasMaxLength(50);
            Property(x => x.SortIndex).HasColumnName("SORTINDEX").IsOptional();
            Property(x => x.IsReleased).HasColumnName("ISRELEASED").IsOptional().HasMaxLength(1);
            Property(x => x.YYR).HasColumnName("YYR").IsOptional().HasMaxLength(200);
            Property(x => x.YYRName).HasColumnName("YYRNAME").IsOptional().HasMaxLength(200);
            Property(x => x.YYBM).HasColumnName("YYBM").IsOptional().HasMaxLength(200);
            Property(x => x.YYBMName).HasColumnName("YYBMNAME").IsOptional().HasMaxLength(200);
            Property(x => x.FJ).HasColumnName("FJ").IsOptional().HasMaxLength(200);
            Property(x => x.FJName).HasColumnName("FJNAME").IsOptional().HasMaxLength(200);

            // Foreign keys
            HasOptional(a => a.T_sds).WithMany(b => b.T_sds_YYSX).HasForeignKey(c => c.T_sdsID); // FK_T_sds_YYSX_T_sds
        }
    }

    // T_Seal_Apply
    internal partial class T_Seal_ApplyConfiguration : EntityTypeConfiguration<T_Seal_Apply>
    {
        public T_Seal_ApplyConfiguration()
        {
			ToTable("T_SEAL_APPLY");
            HasKey(x => x.ID);

            Property(x => x.ID).HasColumnName("ID").IsRequired().HasMaxLength(50);
            Property(x => x.CreateDate).HasColumnName("CREATEDATE").IsOptional();
            Property(x => x.ModifyDate).HasColumnName("MODIFYDATE").IsOptional();
            Property(x => x.CreateUserID).HasColumnName("CREATEUSERID").IsOptional().HasMaxLength(50);
            Property(x => x.CreateUser).HasColumnName("CREATEUSER").IsOptional().HasMaxLength(50);
            Property(x => x.ModifyUserID).HasColumnName("MODIFYUSERID").IsOptional().HasMaxLength(50);
            Property(x => x.ModifyUser).HasColumnName("MODIFYUSER").IsOptional().HasMaxLength(50);
            Property(x => x.OrgID).HasColumnName("ORGID").IsOptional().HasMaxLength(50);
            Property(x => x.PrjID).HasColumnName("PRJID").IsOptional().HasMaxLength(50);
            Property(x => x.FlowPhase).HasColumnName("FLOWPHASE").IsOptional().HasMaxLength(50);
            Property(x => x.StepName).HasColumnName("STEPNAME").IsOptional().HasMaxLength(500);
            Property(x => x.DeptID).HasColumnName("DEPTID").IsOptional().HasMaxLength(50);
            Property(x => x.DeptIDName).HasColumnName("DEPTIDNAME").IsOptional().HasMaxLength(50);
            Property(x => x.ApplyUserID).HasColumnName("APPLYUSERID").IsOptional().HasMaxLength(200);
            Property(x => x.ApplyUserIDName).HasColumnName("APPLYUSERIDNAME").IsOptional().HasMaxLength(200);
            Property(x => x.ApplyReason).HasColumnName("APPLYREASON").IsOptional().HasMaxLength(500);
            Property(x => x.SealType).HasColumnName("SEALTYPE").IsOptional().HasMaxLength(50);
            Property(x => x.SealInfoID).HasColumnName("SEALINFOID").IsOptional().HasMaxLength(500);
            Property(x => x.SealInfoIDName).HasColumnName("SEALINFOIDNAME").IsOptional().HasMaxLength(2000);
            Property(x => x.SealNumber).HasColumnName("SEALNUMBER").IsOptional();
            Property(x => x.ApplyDate).HasColumnName("APPLYDATE").IsOptional();
            Property(x => x.DeptLeaderComment).HasColumnName("DEPTLEADERCOMMENT").IsOptional();
            Property(x => x.ApplyDeptDepartLeaderComment).HasColumnName("APPLYDEPTDEPARTLEADERCOMMENT").IsOptional();
            Property(x => x.FJCS).HasColumnName("FJCS").IsOptional().HasMaxLength(200);
            Property(x => x.Detail).HasColumnName("DETAIL").IsOptional();
            Property(x => x.DFJ).HasColumnName("DFJ").IsOptional().HasMaxLength(200);
            Property(x => x.SerialNumber).HasColumnName("SERIALNUMBER").IsOptional().HasMaxLength(200);
            Property(x => x.KBPZ).HasColumnName("KBPZ").IsOptional().HasMaxLength(500);
            Property(x => x.XXNR).HasColumnName("XXNR").IsOptional();
            Property(x => x.ZNBMFZR).HasColumnName("ZNBMFZR").IsOptional();
            Property(x => x.XGRYYJ).HasColumnName("XGRYYJ").IsOptional();
            Property(x => x.TCSJ).HasColumnName("TCSJ").IsOptional();
            Property(x => x.ZL).HasColumnName("ZL").IsOptional().HasMaxLength(200);
            Property(x => x.BMFZR).HasColumnName("BMFZR").IsOptional().HasMaxLength(200);
            Property(x => x.BMFZRName).HasColumnName("BMFZRNAME").IsOptional().HasMaxLength(200);
            Property(x => x.YYFS).HasColumnName("YYFS").IsOptional().HasPrecision(18,2);
            Property(x => x.DXMJ).HasColumnName("DXMJ").IsOptional().HasMaxLength(200);
            Property(x => x.test).HasColumnName("TEST").IsOptional().HasMaxLength(1073741823);
            Property(x => x.Attachment2).HasColumnName("ATTACHMENT2").IsOptional().HasMaxLength(500);
        }
    }

    // T_Seal_Apply_Detail
    internal partial class T_Seal_Apply_DetailConfiguration : EntityTypeConfiguration<T_Seal_Apply_Detail>
    {
        public T_Seal_Apply_DetailConfiguration()
        {
			ToTable("T_SEAL_APPLY_DETAIL");
            HasKey(x => x.ID);

            Property(x => x.ID).HasColumnName("ID").IsRequired().HasMaxLength(50);
            Property(x => x.T_Seal_ApplyID).HasColumnName("T_SEAL_APPLYID").IsOptional().HasMaxLength(50);
            Property(x => x.SortIndex).HasColumnName("SORTINDEX").IsOptional();
            Property(x => x.IsReleased).HasColumnName("ISRELEASED").IsOptional().HasMaxLength(1);
            Property(x => x.SealCode).HasColumnName("SEALCODE").IsOptional().HasMaxLength(200);
            Property(x => x.SealName).HasColumnName("SEALNAME").IsOptional().HasMaxLength(200);
            Property(x => x.SealType).HasColumnName("SEALTYPE").IsOptional().HasMaxLength(200);
            Property(x => x.DeptIDName).HasColumnName("DEPTIDNAME").IsOptional().HasMaxLength(200);
            Property(x => x.KeeperIDName).HasColumnName("KEEPERIDNAME").IsOptional().HasMaxLength(200);
            Property(x => x.SealID).HasColumnName("SEALID").IsOptional().HasMaxLength(200);
            Property(x => x.SealNumber).HasColumnName("SEALNUMBER").IsOptional();
            Property(x => x.KeeperID).HasColumnName("KEEPERID").IsOptional().HasMaxLength(200);
            Property(x => x.SealDate).HasColumnName("SEALDATE").IsOptional();
            Property(x => x.SealFJ).HasColumnName("SEALFJ").IsOptional().HasMaxLength(200);
            Property(x => x.SealFJName).HasColumnName("SEALFJNAME").IsOptional().HasMaxLength(200);

            // Foreign keys
            HasOptional(a => a.T_Seal_Apply).WithMany(b => b.T_Seal_Apply_Detail).HasForeignKey(c => c.T_Seal_ApplyID); // FK_T_Seal_Apply_Detail_T_Seal_Apply
        }
    }

    // T_Seal_Borrow
    internal partial class T_Seal_BorrowConfiguration : EntityTypeConfiguration<T_Seal_Borrow>
    {
        public T_Seal_BorrowConfiguration()
        {
			ToTable("T_SEAL_BORROW");
            HasKey(x => x.ID);

            Property(x => x.ID).HasColumnName("ID").IsRequired().HasMaxLength(50);
            Property(x => x.CreateDate).HasColumnName("CREATEDATE").IsOptional();
            Property(x => x.ModifyDate).HasColumnName("MODIFYDATE").IsOptional();
            Property(x => x.CreateUserID).HasColumnName("CREATEUSERID").IsOptional().HasMaxLength(50);
            Property(x => x.CreateUser).HasColumnName("CREATEUSER").IsOptional().HasMaxLength(50);
            Property(x => x.ModifyUserID).HasColumnName("MODIFYUSERID").IsOptional().HasMaxLength(50);
            Property(x => x.ModifyUser).HasColumnName("MODIFYUSER").IsOptional().HasMaxLength(50);
            Property(x => x.OrgID).HasColumnName("ORGID").IsOptional().HasMaxLength(50);
            Property(x => x.PrjID).HasColumnName("PRJID").IsOptional().HasMaxLength(50);
            Property(x => x.FlowPhase).HasColumnName("FLOWPHASE").IsOptional().HasMaxLength(50);
            Property(x => x.StepName).HasColumnName("STEPNAME").IsOptional().HasMaxLength(500);
            Property(x => x.DeptID).HasColumnName("DEPTID").IsOptional().HasMaxLength(50);
            Property(x => x.DeptIDName).HasColumnName("DEPTIDNAME").IsOptional().HasMaxLength(50);
            Property(x => x.ApplyUserID).HasColumnName("APPLYUSERID").IsOptional().HasMaxLength(50);
            Property(x => x.ApplyUserIDName).HasColumnName("APPLYUSERIDNAME").IsOptional().HasMaxLength(50);
            Property(x => x.BorrowRange).HasColumnName("BORROWRANGE").IsOptional().HasMaxLength(200);
            Property(x => x.ApplyReason).HasColumnName("APPLYREASON").IsOptional().HasMaxLength(2000);
            Property(x => x.BorrowStartDate).HasColumnName("BORROWSTARTDATE").IsOptional();
            Property(x => x.BorrowEndDate).HasColumnName("BORROWENDDATE").IsOptional();
            Property(x => x.FileName).HasColumnName("FILENAME").IsOptional().HasMaxLength(50);
            Property(x => x.UseSealPaperNumber).HasColumnName("USESEALPAPERNUMBER").IsOptional();
            Property(x => x.ApplyDate).HasColumnName("APPLYDATE").IsOptional();
            Property(x => x.DeptLeaderComment).HasColumnName("DEPTLEADERCOMMENT").IsOptional();
            Property(x => x.GeneralManagerWorkDeptComment).HasColumnName("GENERALMANAGERWORKDEPTCOMMENT").IsOptional();
            Property(x => x.DepartLeaderComment).HasColumnName("DEPARTLEADERCOMMENT").IsOptional();
            Property(x => x.GeneralManagerComment).HasColumnName("GENERALMANAGERCOMMENT").IsOptional();
            Property(x => x.Seal).HasColumnName("SEAL").IsOptional().HasMaxLength(200);
            Property(x => x.SealName).HasColumnName("SEALNAME").IsOptional().HasMaxLength(200);
            Property(x => x.SealType).HasColumnName("SEALTYPE").IsOptional().HasMaxLength(200);
            Property(x => x.BorrowState).HasColumnName("BORROWSTATE").IsOptional().HasMaxLength(200);
            Property(x => x.ReturnDate).HasColumnName("RETURNDATE").IsOptional();
            Property(x => x.Detail).HasColumnName("DETAIL").IsOptional().HasMaxLength(1073741823);
            Property(x => x.SealFullName).HasColumnName("SEALFULLNAME").IsOptional().HasMaxLength(200);
            Property(x => x.SealFullNameName).HasColumnName("SEALFULLNAMENAME").IsOptional().HasMaxLength(200);
            Property(x => x.ProductContractDeptSign).HasColumnName("PRODUCTCONTRACTDEPTSIGN").IsOptional();
            Property(x => x.ManagerLeader).HasColumnName("MANAGERLEADER").IsOptional();
            Property(x => x.ComprehensiveDept).HasColumnName("COMPREHENSIVEDEPT").IsOptional();
        }
    }

    // T_Seal_Borrow_Detail
    internal partial class T_Seal_Borrow_DetailConfiguration : EntityTypeConfiguration<T_Seal_Borrow_Detail>
    {
        public T_Seal_Borrow_DetailConfiguration()
        {
			ToTable("T_SEAL_BORROW_DETAIL");
            HasKey(x => x.ID);

            Property(x => x.ID).HasColumnName("ID").IsRequired().HasMaxLength(50);
            Property(x => x.T_Seal_BorrowID).HasColumnName("T_SEAL_BORROWID").IsOptional().HasMaxLength(50);
            Property(x => x.SortIndex).HasColumnName("SORTINDEX").IsOptional();
            Property(x => x.IsReleased).HasColumnName("ISRELEASED").IsOptional().HasMaxLength(1);
            Property(x => x.SealCode).HasColumnName("SEALCODE").IsOptional().HasMaxLength(200);
            Property(x => x.SealName).HasColumnName("SEALNAME").IsOptional().HasMaxLength(200);
            Property(x => x.SealType).HasColumnName("SEALTYPE").IsOptional().HasMaxLength(200);
            Property(x => x.SealNumber).HasColumnName("SEALNUMBER").IsOptional();
            Property(x => x.DeptIDName).HasColumnName("DEPTIDNAME").IsOptional().HasMaxLength(200);
            Property(x => x.KeeperIDName).HasColumnName("KEEPERIDNAME").IsOptional().HasMaxLength(200);
            Property(x => x.SealID).HasColumnName("SEALID").IsOptional().HasMaxLength(200);

            // Foreign keys
            HasOptional(a => a.T_Seal_Borrow).WithMany(b => b.T_Seal_Borrow_Detail).HasForeignKey(c => c.T_Seal_BorrowID); // FK_T_Seal_Borrow_Detail_T_Seal_Borrow
        }
    }

    // T_Seal_Change
    internal partial class T_Seal_ChangeConfiguration : EntityTypeConfiguration<T_Seal_Change>
    {
        public T_Seal_ChangeConfiguration()
        {
			ToTable("T_SEAL_CHANGE");
            HasKey(x => x.ID);

            Property(x => x.ID).HasColumnName("ID").IsRequired().HasMaxLength(50);
            Property(x => x.CreateDate).HasColumnName("CREATEDATE").IsOptional();
            Property(x => x.ModifyDate).HasColumnName("MODIFYDATE").IsOptional();
            Property(x => x.CreateUserID).HasColumnName("CREATEUSERID").IsOptional().HasMaxLength(50);
            Property(x => x.CreateUser).HasColumnName("CREATEUSER").IsOptional().HasMaxLength(50);
            Property(x => x.ModifyUserID).HasColumnName("MODIFYUSERID").IsOptional().HasMaxLength(50);
            Property(x => x.ModifyUser).HasColumnName("MODIFYUSER").IsOptional().HasMaxLength(50);
            Property(x => x.OrgID).HasColumnName("ORGID").IsOptional().HasMaxLength(50);
            Property(x => x.PrjID).HasColumnName("PRJID").IsOptional().HasMaxLength(50);
            Property(x => x.FlowPhase).HasColumnName("FLOWPHASE").IsOptional().HasMaxLength(50);
            Property(x => x.StepName).HasColumnName("STEPNAME").IsOptional().HasMaxLength(500);
            Property(x => x.DeptID).HasColumnName("DEPTID").IsOptional().HasMaxLength(50);
            Property(x => x.DeptIDName).HasColumnName("DEPTIDNAME").IsOptional().HasMaxLength(2000);
            Property(x => x.ApplyUserID).HasColumnName("APPLYUSERID").IsOptional().HasMaxLength(50);
            Property(x => x.ApplyUserIDName).HasColumnName("APPLYUSERIDNAME").IsOptional().HasMaxLength(2000);
            Property(x => x.ApplyReason).HasColumnName("APPLYREASON").IsOptional().HasMaxLength(500);
            Property(x => x.SealID).HasColumnName("SEALID").IsOptional().HasMaxLength(500);
            Property(x => x.SealIDName).HasColumnName("SEALIDNAME").IsOptional().HasMaxLength(2000);
            Property(x => x.SealStyle).HasColumnName("SEALSTYLE").IsOptional().HasMaxLength(500);
            Property(x => x.SealNumber).HasColumnName("SEALNUMBER").IsOptional();
            Property(x => x.ApplyDate).HasColumnName("APPLYDATE").IsOptional();
            Property(x => x.SealCost).HasColumnName("SEALCOST").IsOptional().HasPrecision(18,2);
            Property(x => x.TotalCost).HasColumnName("TOTALCOST").IsOptional().HasPrecision(18,2);
            Property(x => x.CompleteDate).HasColumnName("COMPLETEDATE").IsOptional();
            Property(x => x.CompletePersonID).HasColumnName("COMPLETEPERSONID").IsOptional().HasMaxLength(50);
            Property(x => x.CompletePersonIDName).HasColumnName("COMPLETEPERSONIDNAME").IsOptional().HasMaxLength(50);
            Property(x => x.DeptLeaderComment).HasColumnName("DEPTLEADERCOMMENT").IsOptional();
            Property(x => x.ApprovalPersonComment).HasColumnName("APPROVALPERSONCOMMENT").IsOptional();
            Property(x => x.SealKind).HasColumnName("SEALKIND").IsOptional().HasMaxLength(500);
            Property(x => x.Customer).HasColumnName("CUSTOMER").IsOptional().HasMaxLength(200);
            Property(x => x.Project).HasColumnName("PROJECT").IsOptional().HasMaxLength(500);
            Property(x => x.ProjectName).HasColumnName("PROJECTNAME").IsOptional().HasMaxLength(500);
            Property(x => x.ProjectNo).HasColumnName("PROJECTNO").IsOptional().HasMaxLength(500);
            Property(x => x.ContractNo).HasColumnName("CONTRACTNO").IsOptional().HasMaxLength(500);
            Property(x => x.UsePos).HasColumnName("USEPOS").IsOptional().HasMaxLength(500);
            Property(x => x.SealUse).HasColumnName("SEALUSE").IsOptional().HasMaxLength(500);
            Property(x => x.UseRange).HasColumnName("USERANGE").IsOptional().HasMaxLength(500);
            Property(x => x.ProContractorSign).HasColumnName("PROCONTRACTORSIGN").IsOptional().HasMaxLength(500);
            Property(x => x.CompanyLeaderSign).HasColumnName("COMPANYLEADERSIGN").IsOptional().HasMaxLength(500);
            Property(x => x.Seal).HasColumnName("SEAL").IsOptional().HasMaxLength(200);
            Property(x => x.CustomerName).HasColumnName("CUSTOMERNAME").IsOptional().HasMaxLength(200);
            Property(x => x.SealStatus).HasColumnName("SEALSTATUS").IsOptional().HasMaxLength(200);
        }
    }

    // T_Seal_Repeal
    internal partial class T_Seal_RepealConfiguration : EntityTypeConfiguration<T_Seal_Repeal>
    {
        public T_Seal_RepealConfiguration()
        {
			ToTable("T_SEAL_REPEAL");
            HasKey(x => x.ID);

            Property(x => x.ID).HasColumnName("ID").IsRequired().HasMaxLength(50);
            Property(x => x.CreateDate).HasColumnName("CREATEDATE").IsOptional();
            Property(x => x.ModifyDate).HasColumnName("MODIFYDATE").IsOptional();
            Property(x => x.CreateUserID).HasColumnName("CREATEUSERID").IsOptional().HasMaxLength(50);
            Property(x => x.CreateUser).HasColumnName("CREATEUSER").IsOptional().HasMaxLength(50);
            Property(x => x.ModifyUserID).HasColumnName("MODIFYUSERID").IsOptional().HasMaxLength(50);
            Property(x => x.ModifyUser).HasColumnName("MODIFYUSER").IsOptional().HasMaxLength(50);
            Property(x => x.OrgID).HasColumnName("ORGID").IsOptional().HasMaxLength(50);
            Property(x => x.PrjID).HasColumnName("PRJID").IsOptional().HasMaxLength(50);
            Property(x => x.FlowPhase).HasColumnName("FLOWPHASE").IsOptional().HasMaxLength(50);
            Property(x => x.StepName).HasColumnName("STEPNAME").IsOptional().HasMaxLength(500);
            Property(x => x.DeptID).HasColumnName("DEPTID").IsOptional().HasMaxLength(50);
            Property(x => x.DeptIDName).HasColumnName("DEPTIDNAME").IsOptional().HasMaxLength(2000);
            Property(x => x.ApplyUserID).HasColumnName("APPLYUSERID").IsOptional().HasMaxLength(50);
            Property(x => x.ApplyUserIDName).HasColumnName("APPLYUSERIDNAME").IsOptional().HasMaxLength(2000);
            Property(x => x.SealInfoID).HasColumnName("SEALINFOID").IsOptional().HasMaxLength(200);
            Property(x => x.SealInfoIDName).HasColumnName("SEALINFOIDNAME").IsOptional().HasMaxLength(2000);
            Property(x => x.SealCode).HasColumnName("SEALCODE").IsOptional().HasMaxLength(200);
            Property(x => x.RepealReason).HasColumnName("REPEALREASON").IsOptional().HasMaxLength(500);
            Property(x => x.RepealDate).HasColumnName("REPEALDATE").IsOptional();
            Property(x => x.DeptLeaderComment).HasColumnName("DEPTLEADERCOMMENT").IsOptional();
            Property(x => x.GeneralManagerWorkDeptComment).HasColumnName("GENERALMANAGERWORKDEPTCOMMENT").IsOptional();
            Property(x => x.ApplyDeptDepartLeaderComment).HasColumnName("APPLYDEPTDEPARTLEADERCOMMENT").IsOptional();
            Property(x => x.GeneralManagerComment).HasColumnName("GENERALMANAGERCOMMENT").IsOptional();
            Property(x => x.ChairmanComment).HasColumnName("CHAIRMANCOMMENT").IsOptional();
        }
    }

    // T_Seal_SealInfo
    internal partial class T_Seal_SealInfoConfiguration : EntityTypeConfiguration<T_Seal_SealInfo>
    {
        public T_Seal_SealInfoConfiguration()
        {
			ToTable("T_SEAL_SEALINFO");
            HasKey(x => x.ID);

            Property(x => x.ID).HasColumnName("ID").IsRequired().HasMaxLength(50);
            Property(x => x.CreateDate).HasColumnName("CREATEDATE").IsOptional();
            Property(x => x.ModifyDate).HasColumnName("MODIFYDATE").IsOptional();
            Property(x => x.CreateUserID).HasColumnName("CREATEUSERID").IsOptional().HasMaxLength(50);
            Property(x => x.CreateUser).HasColumnName("CREATEUSER").IsOptional().HasMaxLength(50);
            Property(x => x.ModifyUserID).HasColumnName("MODIFYUSERID").IsOptional().HasMaxLength(50);
            Property(x => x.ModifyUser).HasColumnName("MODIFYUSER").IsOptional().HasMaxLength(50);
            Property(x => x.OrgID).HasColumnName("ORGID").IsOptional().HasMaxLength(50);
            Property(x => x.PrjID).HasColumnName("PRJID").IsOptional().HasMaxLength(50);
            Property(x => x.FlowPhase).HasColumnName("FLOWPHASE").IsOptional().HasMaxLength(50);
            Property(x => x.StepName).HasColumnName("STEPNAME").IsOptional().HasMaxLength(500);
            Property(x => x.SealCode).HasColumnName("SEALCODE").IsOptional().HasMaxLength(50);
            Property(x => x.SealName).HasColumnName("SEALNAME").IsOptional().HasMaxLength(50);
            Property(x => x.SealType).HasColumnName("SEALTYPE").IsOptional().HasMaxLength(50);
            Property(x => x.StartTime).HasColumnName("STARTTIME").IsOptional();
            Property(x => x.DeptID).HasColumnName("DEPTID").IsOptional().HasMaxLength(50);
            Property(x => x.DeptIDName).HasColumnName("DEPTIDNAME").IsOptional().HasMaxLength(50);
            Property(x => x.KeeperID).HasColumnName("KEEPERID").IsOptional().HasMaxLength(50);
            Property(x => x.KeeperIDName).HasColumnName("KEEPERIDNAME").IsOptional().HasMaxLength(50);
            Property(x => x.Application).HasColumnName("APPLICATION").IsOptional().HasMaxLength(500);
            Property(x => x.Remark).HasColumnName("REMARK").IsOptional().HasMaxLength(500);
            Property(x => x.Attachment).HasColumnName("ATTACHMENT").IsOptional().HasMaxLength(500);
            Property(x => x.State).HasColumnName("STATE").IsOptional().HasMaxLength(50);
            Property(x => x.Borrower).HasColumnName("BORROWER").IsOptional().HasMaxLength(200);
            Property(x => x.BorrowerName).HasColumnName("BORROWERNAME").IsOptional().HasMaxLength(200);
            Property(x => x.BorrowDate).HasColumnName("BORROWDATE").IsOptional();
            Property(x => x.Attachment2).HasColumnName("ATTACHMENT2").IsOptional().HasMaxLength(500);
        }
    }

    // T_Seal_Transfer
    internal partial class T_Seal_TransferConfiguration : EntityTypeConfiguration<T_Seal_Transfer>
    {
        public T_Seal_TransferConfiguration()
        {
			ToTable("T_SEAL_TRANSFER");
            HasKey(x => x.ID);

            Property(x => x.ID).HasColumnName("ID").IsRequired().HasMaxLength(50);
            Property(x => x.CreateDate).HasColumnName("CREATEDATE").IsOptional();
            Property(x => x.ModifyDate).HasColumnName("MODIFYDATE").IsOptional();
            Property(x => x.CreateUserID).HasColumnName("CREATEUSERID").IsOptional().HasMaxLength(50);
            Property(x => x.CreateUser).HasColumnName("CREATEUSER").IsOptional().HasMaxLength(50);
            Property(x => x.ModifyUserID).HasColumnName("MODIFYUSERID").IsOptional().HasMaxLength(50);
            Property(x => x.ModifyUser).HasColumnName("MODIFYUSER").IsOptional().HasMaxLength(50);
            Property(x => x.OrgID).HasColumnName("ORGID").IsOptional().HasMaxLength(50);
            Property(x => x.PrjID).HasColumnName("PRJID").IsOptional().HasMaxLength(50);
            Property(x => x.FlowPhase).HasColumnName("FLOWPHASE").IsOptional().HasMaxLength(50);
            Property(x => x.StepName).HasColumnName("STEPNAME").IsOptional().HasMaxLength(500);
            Property(x => x.SealInfoID).HasColumnName("SEALINFOID").IsOptional().HasMaxLength(200);
            Property(x => x.SealInfoIDName).HasColumnName("SEALINFOIDNAME").IsOptional().HasMaxLength(2000);
            Property(x => x.SealCode).HasColumnName("SEALCODE").IsOptional().HasMaxLength(200);
            Property(x => x.TransferReason).HasColumnName("TRANSFERREASON").IsOptional().HasMaxLength(500);
            Property(x => x.SealModel).HasColumnName("SEALMODEL").IsOptional().HasMaxLength(500);
            Property(x => x.ReceivePersonID).HasColumnName("RECEIVEPERSONID").IsOptional().HasMaxLength(50);
            Property(x => x.ReceivePersonIDName).HasColumnName("RECEIVEPERSONIDNAME").IsOptional().HasMaxLength(2000);
            Property(x => x.TransferPersonID).HasColumnName("TRANSFERPERSONID").IsOptional().HasMaxLength(50);
            Property(x => x.TransferPersonIDName).HasColumnName("TRANSFERPERSONIDNAME").IsOptional().HasMaxLength(2000);
        }
    }

    // T_SoftwareArticle_InstallationAcceptance
    internal partial class T_SoftwareArticle_InstallationAcceptanceConfiguration : EntityTypeConfiguration<T_SoftwareArticle_InstallationAcceptance>
    {
        public T_SoftwareArticle_InstallationAcceptanceConfiguration()
        {
			ToTable("T_SOFTWAREARTICLE_INSTALLATIONACCEPTANCE");
            HasKey(x => x.ID);

            Property(x => x.ID).HasColumnName("ID").IsRequired().HasMaxLength(50);
            Property(x => x.CreateDate).HasColumnName("CREATEDATE").IsOptional();
            Property(x => x.ModifyDate).HasColumnName("MODIFYDATE").IsOptional();
            Property(x => x.CreateUserID).HasColumnName("CREATEUSERID").IsOptional().HasMaxLength(50);
            Property(x => x.CreateUser).HasColumnName("CREATEUSER").IsOptional().HasMaxLength(50);
            Property(x => x.ModifyUserID).HasColumnName("MODIFYUSERID").IsOptional().HasMaxLength(50);
            Property(x => x.ModifyUser).HasColumnName("MODIFYUSER").IsOptional().HasMaxLength(50);
            Property(x => x.OrgID).HasColumnName("ORGID").IsOptional().HasMaxLength(50);
            Property(x => x.CompanyID).HasColumnName("COMPANYID").IsOptional().HasMaxLength(50);
            Property(x => x.FlowPhase).HasColumnName("FLOWPHASE").IsOptional().HasMaxLength(50);
            Property(x => x.FlowInfo).HasColumnName("FLOWINFO").IsOptional().HasMaxLength(1073741823);
            Property(x => x.StepName).HasColumnName("STEPNAME").IsOptional().HasMaxLength(500);
            Property(x => x.Registrant).HasColumnName("REGISTRANT").IsOptional().HasMaxLength(200);
            Property(x => x.RegistrantName).HasColumnName("REGISTRANTNAME").IsOptional().HasMaxLength(200);
            Property(x => x.RegistrantDate).HasColumnName("REGISTRANTDATE").IsOptional();
            Property(x => x.AcceptanceSoft).HasColumnName("ACCEPTANCESOFT").IsOptional().HasMaxLength(200);
            Property(x => x.AcceptanceSoftName).HasColumnName("ACCEPTANCESOFTNAME").IsOptional().HasMaxLength(200);
            Property(x => x.SoftwareDevelopers).HasColumnName("SOFTWAREDEVELOPERS").IsOptional().HasMaxLength(200);
            Property(x => x.SoftwareSupplier).HasColumnName("SOFTWARESUPPLIER").IsOptional().HasMaxLength(200);
            Property(x => x.InstallFinishDate).HasColumnName("INSTALLFINISHDATE").IsOptional();
            Property(x => x.InstallPerson).HasColumnName("INSTALLPERSON").IsOptional().HasMaxLength(200);
            Property(x => x.ContactWay).HasColumnName("CONTACTWAY").IsOptional().HasMaxLength(200);
            Property(x => x.MaintenanceServer).HasColumnName("MAINTENANCESERVER").IsOptional().HasMaxLength(200);
            Property(x => x.Acceptor).HasColumnName("ACCEPTOR").IsOptional().HasMaxLength(200);
            Property(x => x.AcceptorName).HasColumnName("ACCEPTORNAME").IsOptional().HasMaxLength(200);
            Property(x => x.AcceptanceDate).HasColumnName("ACCEPTANCEDATE").IsOptional();
            Property(x => x.Remark).HasColumnName("REMARK").IsOptional().HasMaxLength(500);
            Property(x => x.Attachments).HasColumnName("ATTACHMENTS").IsOptional().HasMaxLength(500);
            Property(x => x.DeptLeader).HasColumnName("DEPTLEADER").IsOptional();
            Property(x => x.SoftwareSupervisor).HasColumnName("SOFTWARESUPERVISOR").IsOptional();
            Property(x => x.InformationCenter).HasColumnName("INFORMATIONCENTER").IsOptional();
        }
    }

    // T_SoftwareArticle_ProcurementApproval
    internal partial class T_SoftwareArticle_ProcurementApprovalConfiguration : EntityTypeConfiguration<T_SoftwareArticle_ProcurementApproval>
    {
        public T_SoftwareArticle_ProcurementApprovalConfiguration()
        {
			ToTable("T_SOFTWAREARTICLE_PROCUREMENTAPPROVAL");
            HasKey(x => x.ID);

            Property(x => x.ID).HasColumnName("ID").IsRequired().HasMaxLength(50);
            Property(x => x.CreateDate).HasColumnName("CREATEDATE").IsOptional();
            Property(x => x.ModifyDate).HasColumnName("MODIFYDATE").IsOptional();
            Property(x => x.CreateUserID).HasColumnName("CREATEUSERID").IsOptional().HasMaxLength(50);
            Property(x => x.CreateUser).HasColumnName("CREATEUSER").IsOptional().HasMaxLength(50);
            Property(x => x.ModifyUserID).HasColumnName("MODIFYUSERID").IsOptional().HasMaxLength(50);
            Property(x => x.ModifyUser).HasColumnName("MODIFYUSER").IsOptional().HasMaxLength(50);
            Property(x => x.OrgID).HasColumnName("ORGID").IsOptional().HasMaxLength(50);
            Property(x => x.CompanyID).HasColumnName("COMPANYID").IsOptional().HasMaxLength(50);
            Property(x => x.FlowPhase).HasColumnName("FLOWPHASE").IsOptional().HasMaxLength(50);
            Property(x => x.FlowInfo).HasColumnName("FLOWINFO").IsOptional().HasMaxLength(1073741823);
            Property(x => x.StepName).HasColumnName("STEPNAME").IsOptional().HasMaxLength(500);
            Property(x => x.Registrant).HasColumnName("REGISTRANT").IsOptional().HasMaxLength(200);
            Property(x => x.RegistrantName).HasColumnName("REGISTRANTNAME").IsOptional().HasMaxLength(200);
            Property(x => x.RegistrantDept).HasColumnName("REGISTRANTDEPT").IsOptional().HasMaxLength(200);
            Property(x => x.RegistrantDeptName).HasColumnName("REGISTRANTDEPTNAME").IsOptional().HasMaxLength(200);
            Property(x => x.RegistrantDate).HasColumnName("REGISTRANTDATE").IsOptional();
            Property(x => x.ContractNumber).HasColumnName("CONTRACTNUMBER").IsOptional().HasMaxLength(200);
            Property(x => x.ContractName).HasColumnName("CONTRACTNAME").IsOptional().HasMaxLength(200);
            Property(x => x.ContractCategory).HasColumnName("CONTRACTCATEGORY").IsOptional().HasMaxLength(200);
            Property(x => x.SealType).HasColumnName("SEALTYPE").IsOptional().HasMaxLength(200);
            Property(x => x.StartDate).HasColumnName("STARTDATE").IsOptional();
            Property(x => x.EndDate).HasColumnName("ENDDATE").IsOptional().HasMaxLength(200);
            Property(x => x.IsCheck).HasColumnName("ISCHECK").IsOptional().HasMaxLength(200);
            Property(x => x.ProjectNumber).HasColumnName("PROJECTNUMBER").IsOptional().HasMaxLength(200);
            Property(x => x.Project).HasColumnName("PROJECT").IsOptional().HasMaxLength(200);
            Property(x => x.ProjectName).HasColumnName("PROJECTNAME").IsOptional().HasMaxLength(200);
            Property(x => x.SoftwareName).HasColumnName("SOFTWARENAME").IsOptional().HasMaxLength(200);
            Property(x => x.SoftwareDevelopers).HasColumnName("SOFTWAREDEVELOPERS").IsOptional().HasMaxLength(200);
            Property(x => x.Supplier).HasColumnName("SUPPLIER").IsOptional().HasMaxLength(200);
            Property(x => x.SupplierName).HasColumnName("SUPPLIERNAME").IsOptional().HasMaxLength(200);
            Property(x => x.PurchaseReason).HasColumnName("PURCHASEREASON").IsOptional().HasMaxLength(200);
            Property(x => x.Version).HasColumnName("VERSION").IsOptional().HasMaxLength(200);
            Property(x => x.PurchasePoint).HasColumnName("PURCHASEPOINT").IsOptional().HasMaxLength(200);
            Property(x => x.PurchasePrice).HasColumnName("PURCHASEPRICE").IsOptional().HasMaxLength(200);
            Property(x => x.OperationPrice).HasColumnName("OPERATIONPRICE").IsOptional().HasMaxLength(200);
            Property(x => x.ImplementationPrice).HasColumnName("IMPLEMENTATIONPRICE").IsOptional().HasMaxLength(200);
            Property(x => x.TotalPrice).HasColumnName("TOTALPRICE").IsOptional().HasMaxLength(200);
            Property(x => x.Remark).HasColumnName("REMARK").IsOptional().HasMaxLength(200);
            Property(x => x.Attachments).HasColumnName("ATTACHMENTS").IsOptional().HasMaxLength(500);
            Property(x => x.UseDetail).HasColumnName("USEDETAIL").IsOptional().HasMaxLength(1073741823);
            Property(x => x.SupplierDetail).HasColumnName("SUPPLIERDETAIL").IsOptional().HasMaxLength(1073741823);
            Property(x => x.PaymentDetail).HasColumnName("PAYMENTDETAIL").IsOptional().HasMaxLength(1073741823);
            Property(x => x.DeptLeader).HasColumnName("DEPTLEADER").IsOptional();
            Property(x => x.InformationCenter).HasColumnName("INFORMATIONCENTER").IsOptional();
            Property(x => x.CompanyLeader).HasColumnName("COMPANYLEADER").IsOptional();
            Property(x => x.PurchaseQuantity).HasColumnName("PURCHASEQUANTITY").IsOptional().HasMaxLength(200);
        }
    }

    // T_SoftwareArticle_ProcurementApproval_PaymentDetail
    internal partial class T_SoftwareArticle_ProcurementApproval_PaymentDetailConfiguration : EntityTypeConfiguration<T_SoftwareArticle_ProcurementApproval_PaymentDetail>
    {
        public T_SoftwareArticle_ProcurementApproval_PaymentDetailConfiguration()
        {
			ToTable("T_SOFTWAREARTICLE_PROCUREMENTAPPROVAL_PAYMENTDETAIL");
            HasKey(x => x.ID);

            Property(x => x.ID).HasColumnName("ID").IsRequired().HasMaxLength(50);
            Property(x => x.T_SoftwareArticle_ProcurementApprovalID).HasColumnName("T_SOFTWAREARTICLE_PROCUREMENTAPPROVALID").IsOptional().HasMaxLength(50);
            Property(x => x.SortIndex).HasColumnName("SORTINDEX").IsOptional();
            Property(x => x.IsReleased).HasColumnName("ISRELEASED").IsOptional().HasMaxLength(1);
            Property(x => x.PaymentDate).HasColumnName("PAYMENTDATE").IsOptional();
            Property(x => x.PaymentPrice).HasColumnName("PAYMENTPRICE").IsOptional().HasMaxLength(200);
            Property(x => x.PaymentCondition).HasColumnName("PAYMENTCONDITION").IsOptional().HasMaxLength(200);
            Property(x => x.PaymentProportion).HasColumnName("PAYMENTPROPORTION").IsOptional().HasMaxLength(200);

            // Foreign keys
            HasOptional(a => a.T_SoftwareArticle_ProcurementApproval).WithMany(b => b.T_SoftwareArticle_ProcurementApproval_PaymentDetail).HasForeignKey(c => c.T_SoftwareArticle_ProcurementApprovalID); // FK_T_SoftwareArticle_ProcurementApproval_PaymentDetail_T_SoftwareArticle_ProcurementApproval
        }
    }

    // T_SoftwareArticle_ProcurementApproval_SupplierDetail
    internal partial class T_SoftwareArticle_ProcurementApproval_SupplierDetailConfiguration : EntityTypeConfiguration<T_SoftwareArticle_ProcurementApproval_SupplierDetail>
    {
        public T_SoftwareArticle_ProcurementApproval_SupplierDetailConfiguration()
        {
			ToTable("T_SOFTWAREARTICLE_PROCUREMENTAPPROVAL_SUPPLIERDETAIL");
            HasKey(x => x.ID);

            Property(x => x.ID).HasColumnName("ID").IsRequired().HasMaxLength(50);
            Property(x => x.T_SoftwareArticle_ProcurementApprovalID).HasColumnName("T_SOFTWAREARTICLE_PROCUREMENTAPPROVALID").IsOptional().HasMaxLength(50);
            Property(x => x.SortIndex).HasColumnName("SORTINDEX").IsOptional();
            Property(x => x.IsReleased).HasColumnName("ISRELEASED").IsOptional().HasMaxLength(1);
            Property(x => x.Recommend).HasColumnName("RECOMMEND").IsOptional().HasMaxLength(200);
            Property(x => x.Supplier).HasColumnName("SUPPLIER").IsOptional().HasMaxLength(200);
            Property(x => x.SupplierName).HasColumnName("SUPPLIERNAME").IsOptional().HasMaxLength(200);
            Property(x => x.Module).HasColumnName("MODULE").IsOptional().HasMaxLength(200);
            Property(x => x.UnitPrice).HasColumnName("UNITPRICE").IsOptional().HasMaxLength(200);
            Property(x => x.DiscountPrice).HasColumnName("DISCOUNTPRICE").IsOptional().HasMaxLength(200);
            Property(x => x.PurchasePrice).HasColumnName("PURCHASEPRICE").IsOptional().HasMaxLength(200);
            Property(x => x.Ability).HasColumnName("ABILITY").IsOptional().HasMaxLength(200);
            Property(x => x.ServiceLevel).HasColumnName("SERVICELEVEL").IsOptional().HasMaxLength(200);
            Property(x => x.TestProcess).HasColumnName("TESTPROCESS").IsOptional().HasMaxLength(200);

            // Foreign keys
            HasOptional(a => a.T_SoftwareArticle_ProcurementApproval).WithMany(b => b.T_SoftwareArticle_ProcurementApproval_SupplierDetail).HasForeignKey(c => c.T_SoftwareArticle_ProcurementApprovalID); // FK_T_SoftwareArticle_ProcurementApproval_SupplierDetail_T_SoftwareArticle_ProcurementApproval
        }
    }

    // T_SoftwareArticle_ProcurementApproval_UseDetail
    internal partial class T_SoftwareArticle_ProcurementApproval_UseDetailConfiguration : EntityTypeConfiguration<T_SoftwareArticle_ProcurementApproval_UseDetail>
    {
        public T_SoftwareArticle_ProcurementApproval_UseDetailConfiguration()
        {
			ToTable("T_SOFTWAREARTICLE_PROCUREMENTAPPROVAL_USEDETAIL");
            HasKey(x => x.ID);

            Property(x => x.ID).HasColumnName("ID").IsRequired().HasMaxLength(50);
            Property(x => x.T_SoftwareArticle_ProcurementApprovalID).HasColumnName("T_SOFTWAREARTICLE_PROCUREMENTAPPROVALID").IsOptional().HasMaxLength(50);
            Property(x => x.SortIndex).HasColumnName("SORTINDEX").IsOptional();
            Property(x => x.IsReleased).HasColumnName("ISRELEASED").IsOptional().HasMaxLength(1);
            Property(x => x.Dept).HasColumnName("DEPT").IsOptional().HasMaxLength(200);
            Property(x => x.DeptName).HasColumnName("DEPTNAME").IsOptional().HasMaxLength(200);
            Property(x => x.Quantity).HasColumnName("QUANTITY").IsOptional().HasMaxLength(200);
            Property(x => x.Price).HasColumnName("PRICE").IsOptional().HasMaxLength(200);
            Property(x => x.Remark).HasColumnName("REMARK").IsOptional().HasMaxLength(200);

            // Foreign keys
            HasOptional(a => a.T_SoftwareArticle_ProcurementApproval).WithMany(b => b.T_SoftwareArticle_ProcurementApproval_UseDetail).HasForeignKey(c => c.T_SoftwareArticle_ProcurementApprovalID); // FK_T_SoftwareArticle_ProcurementApproval_UseDetail_T_SoftwareArticle_ProcurementApproval
        }
    }

    // T_SoftwareArticle_ProcurementDemand
    internal partial class T_SoftwareArticle_ProcurementDemandConfiguration : EntityTypeConfiguration<T_SoftwareArticle_ProcurementDemand>
    {
        public T_SoftwareArticle_ProcurementDemandConfiguration()
        {
			ToTable("T_SOFTWAREARTICLE_PROCUREMENTDEMAND");
            HasKey(x => x.ID);

            Property(x => x.ID).HasColumnName("ID").IsRequired().HasMaxLength(50);
            Property(x => x.CreateDate).HasColumnName("CREATEDATE").IsOptional();
            Property(x => x.ModifyDate).HasColumnName("MODIFYDATE").IsOptional();
            Property(x => x.CreateUserID).HasColumnName("CREATEUSERID").IsOptional().HasMaxLength(50);
            Property(x => x.CreateUser).HasColumnName("CREATEUSER").IsOptional().HasMaxLength(50);
            Property(x => x.ModifyUserID).HasColumnName("MODIFYUSERID").IsOptional().HasMaxLength(50);
            Property(x => x.ModifyUser).HasColumnName("MODIFYUSER").IsOptional().HasMaxLength(50);
            Property(x => x.OrgID).HasColumnName("ORGID").IsOptional().HasMaxLength(50);
            Property(x => x.CompanyID).HasColumnName("COMPANYID").IsOptional().HasMaxLength(50);
            Property(x => x.FlowPhase).HasColumnName("FLOWPHASE").IsOptional().HasMaxLength(50);
            Property(x => x.FlowInfo).HasColumnName("FLOWINFO").IsOptional().HasMaxLength(1073741823);
            Property(x => x.StepName).HasColumnName("STEPNAME").IsOptional().HasMaxLength(500);
            Property(x => x.Registrant).HasColumnName("REGISTRANT").IsOptional().HasMaxLength(200);
            Property(x => x.RegistrantName).HasColumnName("REGISTRANTNAME").IsOptional().HasMaxLength(200);
            Property(x => x.RegistrantDept).HasColumnName("REGISTRANTDEPT").IsOptional().HasMaxLength(200);
            Property(x => x.RegistrantDeptName).HasColumnName("REGISTRANTDEPTNAME").IsOptional().HasMaxLength(200);
            Property(x => x.RegistrantYear).HasColumnName("REGISTRANTYEAR").IsOptional();
            Property(x => x.RegistrantDate).HasColumnName("REGISTRANTDATE").IsOptional();
            Property(x => x.PurchasingReason).HasColumnName("PURCHASINGREASON").IsOptional().HasMaxLength(200);
            Property(x => x.Attachments).HasColumnName("ATTACHMENTS").IsOptional().HasMaxLength(500);
            Property(x => x.PurchaseDetail).HasColumnName("PURCHASEDETAIL").IsOptional().HasMaxLength(1073741823);
            Property(x => x.ComprehensiveOpinion).HasColumnName("COMPREHENSIVEOPINION").IsOptional().HasMaxLength(500);
            Property(x => x.DeptLeader).HasColumnName("DEPTLEADER").IsOptional();
            Property(x => x.InformationCenter).HasColumnName("INFORMATIONCENTER").IsOptional();
            Property(x => x.CompanyLeader).HasColumnName("COMPANYLEADER").IsOptional();
        }
    }

    // T_SoftwareArticle_ProcurementDemand_PurchaseDetail
    internal partial class T_SoftwareArticle_ProcurementDemand_PurchaseDetailConfiguration : EntityTypeConfiguration<T_SoftwareArticle_ProcurementDemand_PurchaseDetail>
    {
        public T_SoftwareArticle_ProcurementDemand_PurchaseDetailConfiguration()
        {
			ToTable("T_SOFTWAREARTICLE_PROCUREMENTDEMAND_PURCHASEDETAIL");
            HasKey(x => x.ID);

            Property(x => x.ID).HasColumnName("ID").IsRequired().HasMaxLength(50);
            Property(x => x.T_SoftwareArticle_ProcurementDemandID).HasColumnName("T_SOFTWAREARTICLE_PROCUREMENTDEMANDID").IsOptional().HasMaxLength(50);
            Property(x => x.SortIndex).HasColumnName("SORTINDEX").IsOptional();
            Property(x => x.IsReleased).HasColumnName("ISRELEASED").IsOptional().HasMaxLength(1);
            Property(x => x.SoftwareName).HasColumnName("SOFTWARENAME").IsOptional().HasMaxLength(200);
            Property(x => x.Supplier).HasColumnName("SUPPLIER").IsOptional().HasMaxLength(200);
            Property(x => x.SupplierName).HasColumnName("SUPPLIERNAME").IsOptional().HasMaxLength(200);
            Property(x => x.Version).HasColumnName("VERSION").IsOptional().HasMaxLength(200);
            Property(x => x.Quantity).HasColumnName("QUANTITY").IsOptional().HasMaxLength(200);
            Property(x => x.AuthorizationMode).HasColumnName("AUTHORIZATIONMODE").IsOptional().HasMaxLength(200);
            Property(x => x.PurchasePrice).HasColumnName("PURCHASEPRICE").IsOptional().HasMaxLength(200);
            Property(x => x.PurchaseDate).HasColumnName("PURCHASEDATE").IsOptional().HasMaxLength(200);
            Property(x => x.Remark).HasColumnName("REMARK").IsOptional().HasMaxLength(200);

            // Foreign keys
            HasOptional(a => a.T_SoftwareArticle_ProcurementDemand).WithMany(b => b.T_SoftwareArticle_ProcurementDemand_PurchaseDetail).HasForeignKey(c => c.T_SoftwareArticle_ProcurementDemandID); // FK_T_SoftwareArticle_ProcurementDemand_PurchaseDetail_T_SoftwareArticle_ProcurementDemand
        }
    }

    // T_SoftwareArticle_ReceiveApply
    internal partial class T_SoftwareArticle_ReceiveApplyConfiguration : EntityTypeConfiguration<T_SoftwareArticle_ReceiveApply>
    {
        public T_SoftwareArticle_ReceiveApplyConfiguration()
        {
			ToTable("T_SOFTWAREARTICLE_RECEIVEAPPLY");
            HasKey(x => x.ID);

            Property(x => x.ID).HasColumnName("ID").IsRequired().HasMaxLength(50);
            Property(x => x.CreateDate).HasColumnName("CREATEDATE").IsOptional();
            Property(x => x.ModifyDate).HasColumnName("MODIFYDATE").IsOptional();
            Property(x => x.CreateUserID).HasColumnName("CREATEUSERID").IsOptional().HasMaxLength(50);
            Property(x => x.CreateUser).HasColumnName("CREATEUSER").IsOptional().HasMaxLength(50);
            Property(x => x.ModifyUserID).HasColumnName("MODIFYUSERID").IsOptional().HasMaxLength(50);
            Property(x => x.ModifyUser).HasColumnName("MODIFYUSER").IsOptional().HasMaxLength(50);
            Property(x => x.OrgID).HasColumnName("ORGID").IsOptional().HasMaxLength(50);
            Property(x => x.CompanyID).HasColumnName("COMPANYID").IsOptional().HasMaxLength(50);
            Property(x => x.FlowPhase).HasColumnName("FLOWPHASE").IsOptional().HasMaxLength(50);
            Property(x => x.FlowInfo).HasColumnName("FLOWINFO").IsOptional().HasMaxLength(1073741823);
            Property(x => x.StepName).HasColumnName("STEPNAME").IsOptional().HasMaxLength(500);
            Property(x => x.Registrant).HasColumnName("REGISTRANT").IsOptional().HasMaxLength(200);
            Property(x => x.RegistrantName).HasColumnName("REGISTRANTNAME").IsOptional().HasMaxLength(200);
            Property(x => x.RegistrantDept).HasColumnName("REGISTRANTDEPT").IsOptional().HasMaxLength(200);
            Property(x => x.RegistrantDeptName).HasColumnName("REGISTRANTDEPTNAME").IsOptional().HasMaxLength(200);
            Property(x => x.RegistrantDate).HasColumnName("REGISTRANTDATE").IsOptional();
            Property(x => x.Location).HasColumnName("LOCATION").IsOptional().HasMaxLength(200);
            Property(x => x.Reason).HasColumnName("REASON").IsOptional().HasMaxLength(500);
            Property(x => x.Attachments).HasColumnName("ATTACHMENTS").IsOptional().HasMaxLength(500);
            Property(x => x.ReceiveDetail).HasColumnName("RECEIVEDETAIL").IsOptional().HasMaxLength(1073741823);
            Property(x => x.DeptLeader).HasColumnName("DEPTLEADER").IsOptional();
            Property(x => x.InformationCenter).HasColumnName("INFORMATIONCENTER").IsOptional();
            Property(x => x.CompanyLeader).HasColumnName("COMPANYLEADER").IsOptional();
        }
    }

    // T_SoftwareArticle_ReceiveApply_ReceiveDetail
    internal partial class T_SoftwareArticle_ReceiveApply_ReceiveDetailConfiguration : EntityTypeConfiguration<T_SoftwareArticle_ReceiveApply_ReceiveDetail>
    {
        public T_SoftwareArticle_ReceiveApply_ReceiveDetailConfiguration()
        {
			ToTable("T_SOFTWAREARTICLE_RECEIVEAPPLY_RECEIVEDETAIL");
            HasKey(x => x.ID);

            Property(x => x.ID).HasColumnName("ID").IsRequired().HasMaxLength(50);
            Property(x => x.T_SoftwareArticle_ReceiveApplyID).HasColumnName("T_SOFTWAREARTICLE_RECEIVEAPPLYID").IsOptional().HasMaxLength(50);
            Property(x => x.SortIndex).HasColumnName("SORTINDEX").IsOptional();
            Property(x => x.IsReleased).HasColumnName("ISRELEASED").IsOptional().HasMaxLength(1);
            Property(x => x.SoftwareName).HasColumnName("SOFTWARENAME").IsOptional().HasMaxLength(200);
            Property(x => x.SoftwareDevelopers).HasColumnName("SOFTWAREDEVELOPERS").IsOptional().HasMaxLength(200);
            Property(x => x.SoftwareVersion).HasColumnName("SOFTWAREVERSION").IsOptional().HasMaxLength(200);
            Property(x => x.ReceiveQuantity).HasColumnName("RECEIVEQUANTITY").IsOptional().HasMaxLength(200);
            Property(x => x.AuthorizationCode).HasColumnName("AUTHORIZATIONCODE").IsOptional().HasMaxLength(200);

            // Foreign keys
            HasOptional(a => a.T_SoftwareArticle_ReceiveApply).WithMany(b => b.T_SoftwareArticle_ReceiveApply_ReceiveDetail).HasForeignKey(c => c.T_SoftwareArticle_ReceiveApplyID); // FK_T_SoftwareArticle_ReceiveApply_ReceiveDetail_T_SoftwareArticle_ReceiveApply
        }
    }

    // T_Standardengineer_Standardichecklist
    internal partial class T_Standardengineer_StandardichecklistConfiguration : EntityTypeConfiguration<T_Standardengineer_Standardichecklist>
    {
        public T_Standardengineer_StandardichecklistConfiguration()
        {
			ToTable("T_STANDARDENGINEER_STANDARDICHECKLIST");
            HasKey(x => x.ID);

            Property(x => x.ID).HasColumnName("ID").IsRequired().HasMaxLength(50);
            Property(x => x.CreateDate).HasColumnName("CREATEDATE").IsOptional();
            Property(x => x.ModifyDate).HasColumnName("MODIFYDATE").IsOptional();
            Property(x => x.CreateUserID).HasColumnName("CREATEUSERID").IsOptional().HasMaxLength(50);
            Property(x => x.CreateUser).HasColumnName("CREATEUSER").IsOptional().HasMaxLength(50);
            Property(x => x.ModifyUserID).HasColumnName("MODIFYUSERID").IsOptional().HasMaxLength(50);
            Property(x => x.ModifyUser).HasColumnName("MODIFYUSER").IsOptional().HasMaxLength(50);
            Property(x => x.OrgID).HasColumnName("ORGID").IsOptional().HasMaxLength(50);
            Property(x => x.CompanyID).HasColumnName("COMPANYID").IsOptional().HasMaxLength(50);
            Property(x => x.FlowPhase).HasColumnName("FLOWPHASE").IsOptional().HasMaxLength(50);
            Property(x => x.FlowInfo).HasColumnName("FLOWINFO").IsOptional().HasMaxLength(1073741823);
            Property(x => x.StepName).HasColumnName("STEPNAME").IsOptional().HasMaxLength(500);
            Property(x => x.Comparer).HasColumnName("COMPARER").IsOptional().HasMaxLength(200);
            Property(x => x.Date).HasColumnName("DATE").IsOptional();
            Property(x => x.Professional).HasColumnName("PROFESSIONAL").IsOptional().HasMaxLength(200);
            Property(x => x.Dept).HasColumnName("DEPT").IsOptional().HasMaxLength(200);
            Property(x => x.Standardposition).HasColumnName("STANDARDPOSITION").IsOptional().HasMaxLength(200);
            Property(x => x.Versionnumber).HasColumnName("VERSIONNUMBER").IsOptional().HasMaxLength(200);
            Property(x => x.Remark).HasColumnName("REMARK").IsOptional().HasMaxLength(200);
            Property(x => x.Content).HasColumnName("CONTENT").IsOptional().HasMaxLength(1073741823);
            Property(x => x.ComparerName).HasColumnName("COMPARERNAME").IsOptional().HasMaxLength(200);
            Property(x => x.DeptName).HasColumnName("DEPTNAME").IsOptional().HasMaxLength(200);
        }
    }

    // T_Standardengineer_Standardichecklist_Content
    internal partial class T_Standardengineer_Standardichecklist_ContentConfiguration : EntityTypeConfiguration<T_Standardengineer_Standardichecklist_Content>
    {
        public T_Standardengineer_Standardichecklist_ContentConfiguration()
        {
			ToTable("T_STANDARDENGINEER_STANDARDICHECKLIST_CONTENT");
            HasKey(x => x.ID);

            Property(x => x.ID).HasColumnName("ID").IsRequired().HasMaxLength(50);
            Property(x => x.T_Standardengineer_StandardichecklistID).HasColumnName("T_STANDARDENGINEER_STANDARDICHECKLISTID").IsOptional().HasMaxLength(50);
            Property(x => x.SortIndex).HasColumnName("SORTINDEX").IsOptional();
            Property(x => x.IsReleased).HasColumnName("ISRELEASED").IsOptional().HasMaxLength(1);
            Property(x => x.Require).HasColumnName("REQUIRE").IsOptional().HasMaxLength(200);
            Property(x => x.Standardname).HasColumnName("STANDARDNAME").IsOptional().HasMaxLength(200);
            Property(x => x.Remark).HasColumnName("REMARK").IsOptional().HasMaxLength(200);
            Property(x => x.Number).HasColumnName("NUMBER").IsOptional().HasMaxLength(200);

            // Foreign keys
            HasOptional(a => a.T_Standardengineer_Standardichecklist).WithMany(b => b.T_Standardengineer_Standardichecklist_Content).HasForeignKey(c => c.T_Standardengineer_StandardichecklistID); // FK_T_Standardengineer_Standardichecklist_Content_T_Standardengineer_Standardichecklist
        }
    }

    // T_Standardengineer_Standardpeoplemanage
    internal partial class T_Standardengineer_StandardpeoplemanageConfiguration : EntityTypeConfiguration<T_Standardengineer_Standardpeoplemanage>
    {
        public T_Standardengineer_StandardpeoplemanageConfiguration()
        {
			ToTable("T_STANDARDENGINEER_STANDARDPEOPLEMANAGE");
            HasKey(x => x.ID);

            Property(x => x.ID).HasColumnName("ID").IsRequired().HasMaxLength(50);
            Property(x => x.CreateDate).HasColumnName("CREATEDATE").IsOptional();
            Property(x => x.ModifyDate).HasColumnName("MODIFYDATE").IsOptional();
            Property(x => x.CreateUserID).HasColumnName("CREATEUSERID").IsOptional().HasMaxLength(50);
            Property(x => x.CreateUser).HasColumnName("CREATEUSER").IsOptional().HasMaxLength(50);
            Property(x => x.ModifyUserID).HasColumnName("MODIFYUSERID").IsOptional().HasMaxLength(50);
            Property(x => x.ModifyUser).HasColumnName("MODIFYUSER").IsOptional().HasMaxLength(50);
            Property(x => x.OrgID).HasColumnName("ORGID").IsOptional().HasMaxLength(50);
            Property(x => x.CompanyID).HasColumnName("COMPANYID").IsOptional().HasMaxLength(50);
            Property(x => x.FlowPhase).HasColumnName("FLOWPHASE").IsOptional().HasMaxLength(50);
            Property(x => x.FlowInfo).HasColumnName("FLOWINFO").IsOptional().HasMaxLength(1073741823);
            Property(x => x.StepName).HasColumnName("STEPNAME").IsOptional().HasMaxLength(500);
            Property(x => x.Fillname).HasColumnName("FILLNAME").IsOptional().HasMaxLength(200);
            Property(x => x.Filldate).HasColumnName("FILLDATE").IsOptional();
            Property(x => x.Standardpeoplename).HasColumnName("STANDARDPEOPLENAME").IsOptional().HasMaxLength(200);
            Property(x => x.StandardpeoplenameName).HasColumnName("STANDARDPEOPLENAMENAME").IsOptional().HasMaxLength(200);
            Property(x => x.Dept).HasColumnName("DEPT").IsOptional().HasMaxLength(200);
            Property(x => x.DeptName).HasColumnName("DEPTNAME").IsOptional().HasMaxLength(200);
            Property(x => x.Professional).HasColumnName("PROFESSIONAL").IsOptional().HasMaxLength(200);
            Property(x => x.Standardposition).HasColumnName("STANDARDPOSITION").IsOptional().HasMaxLength(200);
            Property(x => x.Remark).HasColumnName("REMARK").IsOptional().HasMaxLength(500);
            Property(x => x.FillnameName).HasColumnName("FILLNAMENAME").IsOptional().HasMaxLength(200);
        }
    }

    // T_Technicalcommittee_Examandapprovalform
    internal partial class T_Technicalcommittee_ExamandapprovalformConfiguration : EntityTypeConfiguration<T_Technicalcommittee_Examandapprovalform>
    {
        public T_Technicalcommittee_ExamandapprovalformConfiguration()
        {
			ToTable("T_TECHNICALCOMMITTEE_EXAMANDAPPROVALFORM");
            HasKey(x => x.ID);

            Property(x => x.ID).HasColumnName("ID").IsRequired().HasMaxLength(50);
            Property(x => x.CreateDate).HasColumnName("CREATEDATE").IsOptional();
            Property(x => x.ModifyDate).HasColumnName("MODIFYDATE").IsOptional();
            Property(x => x.CreateUserID).HasColumnName("CREATEUSERID").IsOptional().HasMaxLength(50);
            Property(x => x.CreateUser).HasColumnName("CREATEUSER").IsOptional().HasMaxLength(50);
            Property(x => x.ModifyUserID).HasColumnName("MODIFYUSERID").IsOptional().HasMaxLength(50);
            Property(x => x.ModifyUser).HasColumnName("MODIFYUSER").IsOptional().HasMaxLength(50);
            Property(x => x.OrgID).HasColumnName("ORGID").IsOptional().HasMaxLength(50);
            Property(x => x.CompanyID).HasColumnName("COMPANYID").IsOptional().HasMaxLength(50);
            Property(x => x.FlowPhase).HasColumnName("FLOWPHASE").IsOptional().HasMaxLength(50);
            Property(x => x.FlowInfo).HasColumnName("FLOWINFO").IsOptional().HasMaxLength(1073741823);
            Property(x => x.StepName).HasColumnName("STEPNAME").IsOptional().HasMaxLength(500);
            Property(x => x.Assessyear).HasColumnName("ASSESSYEAR").IsOptional().HasMaxLength(200);
            Property(x => x.Assessdate).HasColumnName("ASSESSDATE").IsOptional();
            Property(x => x.Assessdept).HasColumnName("ASSESSDEPT").IsOptional().HasMaxLength(200);
            Property(x => x.Assessobject).HasColumnName("ASSESSOBJECT").IsOptional().HasMaxLength(200);
            Property(x => x.AssessobjectName).HasColumnName("ASSESSOBJECTNAME").IsOptional().HasMaxLength(200);
            Property(x => x.Remark).HasColumnName("REMARK").IsOptional().HasMaxLength(500);
            Property(x => x.Assessattach).HasColumnName("ASSESSATTACH").IsOptional().HasMaxLength(500);
            Property(x => x.Technicalsign).HasColumnName("TECHNICALSIGN").IsOptional().HasMaxLength(200);
            Property(x => x.Leadersign).HasColumnName("LEADERSIGN").IsOptional().HasMaxLength(200);
        }
    }

    // T_Technicalcommittee_Examinationandapprovalform
    internal partial class T_Technicalcommittee_ExaminationandapprovalformConfiguration : EntityTypeConfiguration<T_Technicalcommittee_Examinationandapprovalform>
    {
        public T_Technicalcommittee_ExaminationandapprovalformConfiguration()
        {
			ToTable("T_TECHNICALCOMMITTEE_EXAMINATIONANDAPPROVALFORM");
            HasKey(x => x.ID);

            Property(x => x.ID).HasColumnName("ID").IsRequired().HasMaxLength(50);
            Property(x => x.CreateDate).HasColumnName("CREATEDATE").IsOptional();
            Property(x => x.ModifyDate).HasColumnName("MODIFYDATE").IsOptional();
            Property(x => x.CreateUserID).HasColumnName("CREATEUSERID").IsOptional().HasMaxLength(50);
            Property(x => x.CreateUser).HasColumnName("CREATEUSER").IsOptional().HasMaxLength(50);
            Property(x => x.ModifyUserID).HasColumnName("MODIFYUSERID").IsOptional().HasMaxLength(50);
            Property(x => x.ModifyUser).HasColumnName("MODIFYUSER").IsOptional().HasMaxLength(50);
            Property(x => x.OrgID).HasColumnName("ORGID").IsOptional().HasMaxLength(50);
            Property(x => x.CompanyID).HasColumnName("COMPANYID").IsOptional().HasMaxLength(50);
            Property(x => x.FlowPhase).HasColumnName("FLOWPHASE").IsOptional().HasMaxLength(50);
            Property(x => x.FlowInfo).HasColumnName("FLOWINFO").IsOptional().HasMaxLength(1073741823);
            Property(x => x.StepName).HasColumnName("STEPNAME").IsOptional().HasMaxLength(500);
            Property(x => x.Assessyear).HasColumnName("ASSESSYEAR").IsOptional().HasMaxLength(200);
            Property(x => x.Assessdate).HasColumnName("ASSESSDATE").IsOptional();
            Property(x => x.Assessdept).HasColumnName("ASSESSDEPT").IsOptional().HasMaxLength(200);
            Property(x => x.Assessobject).HasColumnName("ASSESSOBJECT").IsOptional().HasMaxLength(200);
            Property(x => x.AssessobjectName).HasColumnName("ASSESSOBJECTNAME").IsOptional().HasMaxLength(200);
            Property(x => x.Remark).HasColumnName("REMARK").IsOptional().HasMaxLength(500);
            Property(x => x.Assessattach).HasColumnName("ASSESSATTACH").IsOptional().HasMaxLength(500);
            Property(x => x.Technicalsign).HasColumnName("TECHNICALSIGN").IsOptional().HasMaxLength(200);
            Property(x => x.Leadersign).HasColumnName("LEADERSIGN").IsOptional().HasMaxLength(200);
        }
    }

    // T_Technicalcommittee_Technicalperson
    internal partial class T_Technicalcommittee_TechnicalpersonConfiguration : EntityTypeConfiguration<T_Technicalcommittee_Technicalperson>
    {
        public T_Technicalcommittee_TechnicalpersonConfiguration()
        {
			ToTable("T_TECHNICALCOMMITTEE_TECHNICALPERSON");
            HasKey(x => x.ID);

            Property(x => x.ID).HasColumnName("ID").IsRequired().HasMaxLength(50);
            Property(x => x.CreateDate).HasColumnName("CREATEDATE").IsOptional();
            Property(x => x.ModifyDate).HasColumnName("MODIFYDATE").IsOptional();
            Property(x => x.CreateUserID).HasColumnName("CREATEUSERID").IsOptional().HasMaxLength(50);
            Property(x => x.CreateUser).HasColumnName("CREATEUSER").IsOptional().HasMaxLength(50);
            Property(x => x.ModifyUserID).HasColumnName("MODIFYUSERID").IsOptional().HasMaxLength(50);
            Property(x => x.ModifyUser).HasColumnName("MODIFYUSER").IsOptional().HasMaxLength(50);
            Property(x => x.OrgID).HasColumnName("ORGID").IsOptional().HasMaxLength(50);
            Property(x => x.CompanyID).HasColumnName("COMPANYID").IsOptional().HasMaxLength(50);
            Property(x => x.FlowPhase).HasColumnName("FLOWPHASE").IsOptional().HasMaxLength(50);
            Property(x => x.FlowInfo).HasColumnName("FLOWINFO").IsOptional().HasMaxLength(1073741823);
            Property(x => x.StepName).HasColumnName("STEPNAME").IsOptional().HasMaxLength(500);
            Property(x => x.Fillname).HasColumnName("FILLNAME").IsOptional().HasMaxLength(200);
            Property(x => x.Filldate).HasColumnName("FILLDATE").IsOptional();
            Property(x => x.Name).HasColumnName("NAME").IsOptional().HasMaxLength(200);
            Property(x => x.NameName).HasColumnName("NAMENAME").IsOptional().HasMaxLength(200);
            Property(x => x.Dept).HasColumnName("DEPT").IsOptional().HasMaxLength(200);
            Property(x => x.Professional).HasColumnName("PROFESSIONAL").IsOptional().HasMaxLength(200);
            Property(x => x.Position).HasColumnName("POSITION").IsOptional().HasMaxLength(200);
            Property(x => x.Remark).HasColumnName("REMARK").IsOptional().HasMaxLength(500);
            Property(x => x.FillnameName).HasColumnName("FILLNAMENAME").IsOptional().HasMaxLength(200);
        }
    }

    // T_Technicalcommittee_trainingrecord
    internal partial class T_Technicalcommittee_trainingrecordConfiguration : EntityTypeConfiguration<T_Technicalcommittee_trainingrecord>
    {
        public T_Technicalcommittee_trainingrecordConfiguration()
        {
			ToTable("T_TECHNICALCOMMITTEE_TRAININGRECORD");
            HasKey(x => x.ID);

            Property(x => x.ID).HasColumnName("ID").IsRequired().HasMaxLength(50);
            Property(x => x.CreateDate).HasColumnName("CREATEDATE").IsOptional();
            Property(x => x.ModifyDate).HasColumnName("MODIFYDATE").IsOptional();
            Property(x => x.CreateUserID).HasColumnName("CREATEUSERID").IsOptional().HasMaxLength(50);
            Property(x => x.CreateUser).HasColumnName("CREATEUSER").IsOptional().HasMaxLength(50);
            Property(x => x.ModifyUserID).HasColumnName("MODIFYUSERID").IsOptional().HasMaxLength(50);
            Property(x => x.ModifyUser).HasColumnName("MODIFYUSER").IsOptional().HasMaxLength(50);
            Property(x => x.OrgID).HasColumnName("ORGID").IsOptional().HasMaxLength(50);
            Property(x => x.CompanyID).HasColumnName("COMPANYID").IsOptional().HasMaxLength(50);
            Property(x => x.FlowPhase).HasColumnName("FLOWPHASE").IsOptional().HasMaxLength(50);
            Property(x => x.FlowInfo).HasColumnName("FLOWINFO").IsOptional().HasMaxLength(1073741823);
            Property(x => x.StepName).HasColumnName("STEPNAME").IsOptional().HasMaxLength(500);
            Property(x => x.Trainyear).HasColumnName("TRAINYEAR").IsOptional().HasMaxLength(200);
            Property(x => x.Filldate).HasColumnName("FILLDATE").IsOptional();
            Property(x => x.Starttime).HasColumnName("STARTTIME").IsOptional();
            Property(x => x.Endtime).HasColumnName("ENDTIME").IsOptional();
            Property(x => x.Trainsponsor).HasColumnName("TRAINSPONSOR").IsOptional().HasMaxLength(200);
            Property(x => x.Trainsite).HasColumnName("TRAINSITE").IsOptional().HasMaxLength(200);
            Property(x => x.Trainparticipants).HasColumnName("TRAINPARTICIPANTS").IsOptional().HasMaxLength(1073741823);
            Property(x => x.Remark).HasColumnName("REMARK").IsOptional().HasMaxLength(200);
            Property(x => x.Attachment).HasColumnName("ATTACHMENT").IsOptional().HasMaxLength(200);
            Property(x => x.Technicalsign).HasColumnName("TECHNICALSIGN").IsOptional();
            Property(x => x.Leadersign).HasColumnName("LEADERSIGN").IsOptional();
        }
    }

    // T_Technicalcommittee_trainingrecord_Trainparticipants
    internal partial class T_Technicalcommittee_trainingrecord_TrainparticipantsConfiguration : EntityTypeConfiguration<T_Technicalcommittee_trainingrecord_Trainparticipants>
    {
        public T_Technicalcommittee_trainingrecord_TrainparticipantsConfiguration()
        {
			ToTable("T_TECHNICALCOMMITTEE_TRAININGRECORD_TRAINPARTICIPANTS");
            HasKey(x => x.ID);

            Property(x => x.ID).HasColumnName("ID").IsRequired().HasMaxLength(50);
            Property(x => x.T_Technicalcommittee_trainingrecordID).HasColumnName("T_TECHNICALCOMMITTEE_TRAININGRECORDID").IsOptional().HasMaxLength(50);
            Property(x => x.SortIndex).HasColumnName("SORTINDEX").IsOptional();
            Property(x => x.IsReleased).HasColumnName("ISRELEASED").IsOptional().HasMaxLength(1);
            Property(x => x.Name).HasColumnName("NAME").IsOptional().HasMaxLength(200);
            Property(x => x.NameName).HasColumnName("NAMENAME").IsOptional().HasMaxLength(200);
            Property(x => x.Dept).HasColumnName("DEPT").IsOptional().HasMaxLength(200);
            Property(x => x.Professional).HasColumnName("PROFESSIONAL").IsOptional().HasMaxLength(200);
            Property(x => x.Remark).HasColumnName("REMARK").IsOptional().HasMaxLength(200);
            Property(x => x.DeptName).HasColumnName("DEPTNAME").IsOptional().HasMaxLength(200);

            // Foreign keys
            HasOptional(a => a.T_Technicalcommittee_trainingrecord).WithMany(b => b.T_Technicalcommittee_trainingrecord_Trainparticipants).HasForeignKey(c => c.T_Technicalcommittee_trainingrecordID); // FK_T_Technicalcommittee_trainingrecord_Trainparticipants_T_Technicalcommittee_trainingrecord
        }
    }

    // T_Technicalcommittee_Youthexamform
    internal partial class T_Technicalcommittee_YouthexamformConfiguration : EntityTypeConfiguration<T_Technicalcommittee_Youthexamform>
    {
        public T_Technicalcommittee_YouthexamformConfiguration()
        {
			ToTable("T_TECHNICALCOMMITTEE_YOUTHEXAMFORM");
            HasKey(x => x.ID);

            Property(x => x.ID).HasColumnName("ID").IsRequired().HasMaxLength(50);
            Property(x => x.CreateDate).HasColumnName("CREATEDATE").IsOptional();
            Property(x => x.ModifyDate).HasColumnName("MODIFYDATE").IsOptional();
            Property(x => x.CreateUserID).HasColumnName("CREATEUSERID").IsOptional().HasMaxLength(50);
            Property(x => x.CreateUser).HasColumnName("CREATEUSER").IsOptional().HasMaxLength(50);
            Property(x => x.ModifyUserID).HasColumnName("MODIFYUSERID").IsOptional().HasMaxLength(50);
            Property(x => x.ModifyUser).HasColumnName("MODIFYUSER").IsOptional().HasMaxLength(50);
            Property(x => x.OrgID).HasColumnName("ORGID").IsOptional().HasMaxLength(50);
            Property(x => x.CompanyID).HasColumnName("COMPANYID").IsOptional().HasMaxLength(50);
            Property(x => x.FlowPhase).HasColumnName("FLOWPHASE").IsOptional().HasMaxLength(50);
            Property(x => x.FlowInfo).HasColumnName("FLOWINFO").IsOptional().HasMaxLength(1073741823);
            Property(x => x.StepName).HasColumnName("STEPNAME").IsOptional().HasMaxLength(500);
            Property(x => x.Assessyear).HasColumnName("ASSESSYEAR").IsOptional().HasMaxLength(200);
            Property(x => x.Assessdate).HasColumnName("ASSESSDATE").IsOptional();
            Property(x => x.Assessdept).HasColumnName("ASSESSDEPT").IsOptional().HasMaxLength(200);
            Property(x => x.Assessobject).HasColumnName("ASSESSOBJECT").IsOptional().HasMaxLength(200);
            Property(x => x.AssessobjectName).HasColumnName("ASSESSOBJECTNAME").IsOptional().HasMaxLength(200);
            Property(x => x.Remark).HasColumnName("REMARK").IsOptional().HasMaxLength(500);
            Property(x => x.Assessattach).HasColumnName("ASSESSATTACH").IsOptional().HasMaxLength(500);
            Property(x => x.Technicalsign).HasColumnName("TECHNICALSIGN").IsOptional().HasMaxLength(200);
            Property(x => x.Leadersign).HasColumnName("LEADERSIGN").IsOptional().HasMaxLength(200);
        }
    }

    // T_Technology_Attachment
    internal partial class T_Technology_AttachmentConfiguration : EntityTypeConfiguration<T_Technology_Attachment>
    {
        public T_Technology_AttachmentConfiguration()
        {
			ToTable("T_TECHNOLOGY_ATTACHMENT");
            HasKey(x => x.ID);

            Property(x => x.ID).HasColumnName("ID").IsRequired().HasMaxLength(50);
            Property(x => x.CreateDate).HasColumnName("CREATEDATE").IsOptional();
            Property(x => x.ModifyDate).HasColumnName("MODIFYDATE").IsOptional();
            Property(x => x.CreateUserID).HasColumnName("CREATEUSERID").IsOptional().HasMaxLength(50);
            Property(x => x.CreateUser).HasColumnName("CREATEUSER").IsOptional().HasMaxLength(50);
            Property(x => x.ModifyUserID).HasColumnName("MODIFYUSERID").IsOptional().HasMaxLength(50);
            Property(x => x.ModifyUser).HasColumnName("MODIFYUSER").IsOptional().HasMaxLength(50);
            Property(x => x.OrgID).HasColumnName("ORGID").IsOptional().HasMaxLength(50);
            Property(x => x.CompanyID).HasColumnName("COMPANYID").IsOptional().HasMaxLength(50);
            Property(x => x.FlowPhase).HasColumnName("FLOWPHASE").IsOptional().HasMaxLength(50);
            Property(x => x.FlowInfo).HasColumnName("FLOWINFO").IsOptional().HasMaxLength(1073741823);
            Property(x => x.StepName).HasColumnName("STEPNAME").IsOptional().HasMaxLength(500);
            Property(x => x.Attachments).HasColumnName("ATTACHMENTS").IsOptional().HasMaxLength(500);
        }
    }

    // T_Technology_ContractApproval
    internal partial class T_Technology_ContractApprovalConfiguration : EntityTypeConfiguration<T_Technology_ContractApproval>
    {
        public T_Technology_ContractApprovalConfiguration()
        {
			ToTable("T_TECHNOLOGY_CONTRACTAPPROVAL");
            HasKey(x => x.ID);

            Property(x => x.ID).HasColumnName("ID").IsRequired().HasMaxLength(50);
            Property(x => x.CreateDate).HasColumnName("CREATEDATE").IsOptional();
            Property(x => x.ModifyDate).HasColumnName("MODIFYDATE").IsOptional();
            Property(x => x.CreateUserID).HasColumnName("CREATEUSERID").IsOptional().HasMaxLength(50);
            Property(x => x.CreateUser).HasColumnName("CREATEUSER").IsOptional().HasMaxLength(50);
            Property(x => x.ModifyUserID).HasColumnName("MODIFYUSERID").IsOptional().HasMaxLength(50);
            Property(x => x.ModifyUser).HasColumnName("MODIFYUSER").IsOptional().HasMaxLength(50);
            Property(x => x.OrgID).HasColumnName("ORGID").IsOptional().HasMaxLength(50);
            Property(x => x.CompanyID).HasColumnName("COMPANYID").IsOptional().HasMaxLength(50);
            Property(x => x.FlowPhase).HasColumnName("FLOWPHASE").IsOptional().HasMaxLength(50);
            Property(x => x.FlowInfo).HasColumnName("FLOWINFO").IsOptional().HasMaxLength(1073741823);
            Property(x => x.StepName).HasColumnName("STEPNAME").IsOptional().HasMaxLength(500);
            Property(x => x.Projectname).HasColumnName("PROJECTNAME").IsOptional().HasMaxLength(200);
            Property(x => x.Projectnumber).HasColumnName("PROJECTNUMBER").IsOptional().HasMaxLength(200);
            Property(x => x.Projectleader).HasColumnName("PROJECTLEADER").IsOptional().HasMaxLength(200);
            Property(x => x.ProjectleaderName).HasColumnName("PROJECTLEADERNAME").IsOptional().HasMaxLength(200);
            Property(x => x.Subjectlevel).HasColumnName("SUBJECTLEVEL").IsOptional().HasMaxLength(200);
            Property(x => x.ProjectCost).HasColumnName("PROJECTCOST").IsOptional().HasMaxLength(200);
            Property(x => x.Declarant).HasColumnName("DECLARANT").IsOptional().HasMaxLength(200);
            Property(x => x.DeclarantName).HasColumnName("DECLARANTNAME").IsOptional().HasMaxLength(200);
            Property(x => x.Declaredate).HasColumnName("DECLAREDATE").IsOptional();
            Property(x => x.ContractName).HasColumnName("CONTRACTNAME").IsOptional().HasMaxLength(200);
            Property(x => x.ContractNumber).HasColumnName("CONTRACTNUMBER").IsOptional().HasMaxLength(200);
            Property(x => x.ContractCost).HasColumnName("CONTRACTCOST").IsOptional().HasMaxLength(200);
            Property(x => x.ContractSignDate).HasColumnName("CONTRACTSIGNDATE").IsOptional();
            Property(x => x.ContractUnit).HasColumnName("CONTRACTUNIT").IsOptional().HasMaxLength(200);
            Property(x => x.ContractContent).HasColumnName("CONTRACTCONTENT").IsOptional().HasMaxLength(500);
            Property(x => x.ContractAttachment).HasColumnName("CONTRACTATTACHMENT").IsOptional().HasMaxLength(500);
            Property(x => x.Remark).HasColumnName("REMARK").IsOptional().HasMaxLength(500);
            Property(x => x.PaymentPlan).HasColumnName("PAYMENTPLAN").IsOptional().HasMaxLength(1073741823);
            Property(x => x.Technicalsign).HasColumnName("TECHNICALSIGN").IsOptional();
            Property(x => x.Lawyersign).HasColumnName("LAWYERSIGN").IsOptional();
            Property(x => x.Leadersign).HasColumnName("LEADERSIGN").IsOptional();
            Property(x => x.ProjectFunds).HasColumnName("PROJECTFUNDS").IsOptional().HasMaxLength(200);
            Property(x => x.ProjectID).HasColumnName("PROJECTID").IsOptional().HasMaxLength(200);
        }
    }

    // T_Technology_ContractApproval_PaymentPlan
    internal partial class T_Technology_ContractApproval_PaymentPlanConfiguration : EntityTypeConfiguration<T_Technology_ContractApproval_PaymentPlan>
    {
        public T_Technology_ContractApproval_PaymentPlanConfiguration()
        {
			ToTable("T_TECHNOLOGY_CONTRACTAPPROVAL_PAYMENTPLAN");
            HasKey(x => x.ID);

            Property(x => x.ID).HasColumnName("ID").IsRequired().HasMaxLength(50);
            Property(x => x.T_Technology_ContractApprovalID).HasColumnName("T_TECHNOLOGY_CONTRACTAPPROVALID").IsOptional().HasMaxLength(50);
            Property(x => x.SortIndex).HasColumnName("SORTINDEX").IsOptional();
            Property(x => x.IsReleased).HasColumnName("ISRELEASED").IsOptional().HasMaxLength(1);
            Property(x => x.PaymentCondition).HasColumnName("PAYMENTCONDITION").IsOptional().HasMaxLength(200);
            Property(x => x.PaymentDate).HasColumnName("PAYMENTDATE").IsOptional();
            Property(x => x.PaymentAmount).HasColumnName("PAYMENTAMOUNT").IsOptional().HasMaxLength(200);

            // Foreign keys
            HasOptional(a => a.T_Technology_ContractApproval).WithMany(b => b.T_Technology_ContractApproval_PaymentPlan).HasForeignKey(c => c.T_Technology_ContractApprovalID); // FK_T_Technology_ContractApproval_PaymentPlan_T_Technology_ContractApproval
        }
    }

    // T_Technology_CostPlan
    internal partial class T_Technology_CostPlanConfiguration : EntityTypeConfiguration<T_Technology_CostPlan>
    {
        public T_Technology_CostPlanConfiguration()
        {
			ToTable("T_TECHNOLOGY_COSTPLAN");
            HasKey(x => x.ID);

            Property(x => x.ID).HasColumnName("ID").IsRequired().HasMaxLength(50);
            Property(x => x.CreateDate).HasColumnName("CREATEDATE").IsOptional();
            Property(x => x.ModifyDate).HasColumnName("MODIFYDATE").IsOptional();
            Property(x => x.CreateUserID).HasColumnName("CREATEUSERID").IsOptional().HasMaxLength(50);
            Property(x => x.CreateUser).HasColumnName("CREATEUSER").IsOptional().HasMaxLength(50);
            Property(x => x.ModifyUserID).HasColumnName("MODIFYUSERID").IsOptional().HasMaxLength(50);
            Property(x => x.ModifyUser).HasColumnName("MODIFYUSER").IsOptional().HasMaxLength(50);
            Property(x => x.OrgID).HasColumnName("ORGID").IsOptional().HasMaxLength(50);
            Property(x => x.CompanyID).HasColumnName("COMPANYID").IsOptional().HasMaxLength(50);
            Property(x => x.FlowPhase).HasColumnName("FLOWPHASE").IsOptional().HasMaxLength(50);
            Property(x => x.FlowInfo).HasColumnName("FLOWINFO").IsOptional().HasMaxLength(1073741823);
            Property(x => x.StepName).HasColumnName("STEPNAME").IsOptional().HasMaxLength(500);
            Property(x => x.Projectname).HasColumnName("PROJECTNAME").IsOptional().HasMaxLength(200);
            Property(x => x.Projectnumber).HasColumnName("PROJECTNUMBER").IsOptional().HasMaxLength(200);
            Property(x => x.Projectleader).HasColumnName("PROJECTLEADER").IsOptional().HasMaxLength(200);
            Property(x => x.ProjectleaderName).HasColumnName("PROJECTLEADERNAME").IsOptional().HasMaxLength(200);
            Property(x => x.ProjectFunds).HasColumnName("PROJECTFUNDS").IsOptional().HasMaxLength(200);
            Property(x => x.TotalCost).HasColumnName("TOTALCOST").IsOptional().HasMaxLength(200);
            Property(x => x.Declarant).HasColumnName("DECLARANT").IsOptional().HasMaxLength(200);
            Property(x => x.DeclarantName).HasColumnName("DECLARANTNAME").IsOptional().HasMaxLength(200);
            Property(x => x.Declaredate).HasColumnName("DECLAREDATE").IsOptional();
            Property(x => x.CostPlan).HasColumnName("COSTPLAN").IsOptional().HasMaxLength(200);
            Property(x => x.ProjectCostPlan).HasColumnName("PROJECTCOSTPLAN").IsOptional().HasMaxLength(500);
            Property(x => x.TechnologyGroup).HasColumnName("TECHNOLOGYGROUP").IsOptional().HasMaxLength(1073741823);
            Property(x => x.Expertsign).HasColumnName("EXPERTSIGN").IsOptional().HasMaxLength(500);
            Property(x => x.Technicalsign).HasColumnName("TECHNICALSIGN").IsOptional();
            Property(x => x.Lawyersign).HasColumnName("LAWYERSIGN").IsOptional();
            Property(x => x.Leadersign).HasColumnName("LEADERSIGN").IsOptional();
            Property(x => x.ProjectID).HasColumnName("PROJECTID").IsOptional().HasMaxLength(200);
            Property(x => x.Technicalexpert).HasColumnName("TECHNICALEXPERT").IsOptional().HasMaxLength(1073741823);
            Property(x => x.TechnicalCommitteeIDS).HasColumnName("TECHNICALCOMMITTEEIDS").IsOptional().HasMaxLength(200);
        }
    }

    // T_Technology_CostPlan_Technicalexpert
    internal partial class T_Technology_CostPlan_TechnicalexpertConfiguration : EntityTypeConfiguration<T_Technology_CostPlan_Technicalexpert>
    {
        public T_Technology_CostPlan_TechnicalexpertConfiguration()
        {
			ToTable("T_TECHNOLOGY_COSTPLAN_TECHNICALEXPERT");
            HasKey(x => x.ID);

            Property(x => x.ID).HasColumnName("ID").IsRequired().HasMaxLength(50);
            Property(x => x.T_Technology_CostPlanID).HasColumnName("T_TECHNOLOGY_COSTPLANID").IsOptional().HasMaxLength(50);
            Property(x => x.SortIndex).HasColumnName("SORTINDEX").IsOptional();
            Property(x => x.IsReleased).HasColumnName("ISRELEASED").IsOptional().HasMaxLength(1);
            Property(x => x.TechnicalCommittee).HasColumnName("TECHNICALCOMMITTEE").IsOptional().HasMaxLength(200);
            Property(x => x.TechnicalCommitteeDirector).HasColumnName("TECHNICALCOMMITTEEDIRECTOR").IsOptional().HasMaxLength(200);
            Property(x => x.TechnicalCommitteeName).HasColumnName("TECHNICALCOMMITTEENAME").IsOptional().HasMaxLength(200);
            Property(x => x.TechnicalCommitteeDirectorName).HasColumnName("TECHNICALCOMMITTEEDIRECTORNAME").IsOptional().HasMaxLength(200);

            // Foreign keys
            HasOptional(a => a.T_Technology_CostPlan).WithMany(b => b.T_Technology_CostPlan_Technicalexpert).HasForeignKey(c => c.T_Technology_CostPlanID); // FK_T_Technology_CostPlan_Technicalexpert_T_Technology_CostPlan
        }
    }

    // T_Technology_CostPlan_TechnologyGroup
    internal partial class T_Technology_CostPlan_TechnologyGroupConfiguration : EntityTypeConfiguration<T_Technology_CostPlan_TechnologyGroup>
    {
        public T_Technology_CostPlan_TechnologyGroupConfiguration()
        {
			ToTable("T_TECHNOLOGY_COSTPLAN_TECHNOLOGYGROUP");
            HasKey(x => x.ID);

            Property(x => x.ID).HasColumnName("ID").IsRequired().HasMaxLength(50);
            Property(x => x.T_Technology_CostPlanID).HasColumnName("T_TECHNOLOGY_COSTPLANID").IsOptional().HasMaxLength(50);
            Property(x => x.SortIndex).HasColumnName("SORTINDEX").IsOptional();
            Property(x => x.IsReleased).HasColumnName("ISRELEASED").IsOptional().HasMaxLength(1);
            Property(x => x.Technicalcommittee).HasColumnName("TECHNICALCOMMITTEE").IsOptional().HasMaxLength(200);
            Property(x => x.Technicalcommitteedirector).HasColumnName("TECHNICALCOMMITTEEDIRECTOR").IsOptional().HasMaxLength(200);

            // Foreign keys
            HasOptional(a => a.T_Technology_CostPlan).WithMany(b => b.T_Technology_CostPlan_TechnologyGroup).HasForeignKey(c => c.T_Technology_CostPlanID); // FK_T_Technology_CostPlan_TechnologyGroup_T_Technology_CostPlan
        }
    }

    // T_Technology_CostPlanAttachment
    internal partial class T_Technology_CostPlanAttachmentConfiguration : EntityTypeConfiguration<T_Technology_CostPlanAttachment>
    {
        public T_Technology_CostPlanAttachmentConfiguration()
        {
			ToTable("T_TECHNOLOGY_COSTPLANATTACHMENT");
            HasKey(x => x.ID);

            Property(x => x.ID).HasColumnName("ID").IsRequired().HasMaxLength(50);
            Property(x => x.CreateDate).HasColumnName("CREATEDATE").IsOptional();
            Property(x => x.ModifyDate).HasColumnName("MODIFYDATE").IsOptional();
            Property(x => x.CreateUserID).HasColumnName("CREATEUSERID").IsOptional().HasMaxLength(50);
            Property(x => x.CreateUser).HasColumnName("CREATEUSER").IsOptional().HasMaxLength(50);
            Property(x => x.ModifyUserID).HasColumnName("MODIFYUSERID").IsOptional().HasMaxLength(50);
            Property(x => x.ModifyUser).HasColumnName("MODIFYUSER").IsOptional().HasMaxLength(50);
            Property(x => x.OrgID).HasColumnName("ORGID").IsOptional().HasMaxLength(50);
            Property(x => x.CompanyID).HasColumnName("COMPANYID").IsOptional().HasMaxLength(50);
            Property(x => x.FlowPhase).HasColumnName("FLOWPHASE").IsOptional().HasMaxLength(50);
            Property(x => x.FlowInfo).HasColumnName("FLOWINFO").IsOptional().HasMaxLength(1073741823);
            Property(x => x.StepName).HasColumnName("STEPNAME").IsOptional().HasMaxLength(500);
            Property(x => x.CostPlanAttachment).HasColumnName("COSTPLANATTACHMENT").IsOptional().HasMaxLength(200);
        }
    }

    // T_Technology_ExpertReview
    internal partial class T_Technology_ExpertReviewConfiguration : EntityTypeConfiguration<T_Technology_ExpertReview>
    {
        public T_Technology_ExpertReviewConfiguration()
        {
			ToTable("T_TECHNOLOGY_EXPERTREVIEW");
            HasKey(x => x.ID);

            Property(x => x.ID).HasColumnName("ID").IsRequired().HasMaxLength(50);
            Property(x => x.CreateDate).HasColumnName("CREATEDATE").IsOptional();
            Property(x => x.ModifyDate).HasColumnName("MODIFYDATE").IsOptional();
            Property(x => x.CreateUserID).HasColumnName("CREATEUSERID").IsOptional().HasMaxLength(50);
            Property(x => x.CreateUser).HasColumnName("CREATEUSER").IsOptional().HasMaxLength(50);
            Property(x => x.ModifyUserID).HasColumnName("MODIFYUSERID").IsOptional().HasMaxLength(50);
            Property(x => x.ModifyUser).HasColumnName("MODIFYUSER").IsOptional().HasMaxLength(50);
            Property(x => x.OrgID).HasColumnName("ORGID").IsOptional().HasMaxLength(50);
            Property(x => x.CompanyID).HasColumnName("COMPANYID").IsOptional().HasMaxLength(50);
            Property(x => x.FlowPhase).HasColumnName("FLOWPHASE").IsOptional().HasMaxLength(50);
            Property(x => x.FlowInfo).HasColumnName("FLOWINFO").IsOptional().HasMaxLength(1073741823);
            Property(x => x.StepName).HasColumnName("STEPNAME").IsOptional().HasMaxLength(500);
            Property(x => x.Projectname).HasColumnName("PROJECTNAME").IsOptional().HasMaxLength(200);
            Property(x => x.Declareyear).HasColumnName("DECLAREYEAR").IsOptional().HasMaxLength(200);
            Property(x => x.Responsibledept).HasColumnName("RESPONSIBLEDEPT").IsOptional().HasMaxLength(200);
            Property(x => x.ResponsibledeptName).HasColumnName("RESPONSIBLEDEPTNAME").IsOptional().HasMaxLength(200);
            Property(x => x.Projectnumber).HasColumnName("PROJECTNUMBER").IsOptional().HasMaxLength(200);
            Property(x => x.Projectclass).HasColumnName("PROJECTCLASS").IsOptional().HasMaxLength(200);
            Property(x => x.Projectleader).HasColumnName("PROJECTLEADER").IsOptional().HasMaxLength(200);
            Property(x => x.ProjectleaderName).HasColumnName("PROJECTLEADERNAME").IsOptional().HasMaxLength(200);
            Property(x => x.Confirmscore).HasColumnName("CONFIRMSCORE").IsOptional().HasMaxLength(200);
            Property(x => x.Starttime).HasColumnName("STARTTIME").IsOptional();
            Property(x => x.Estimatedtime).HasColumnName("ESTIMATEDTIME").IsOptional();
            Property(x => x.ProjectFunds).HasColumnName("PROJECTFUNDS").IsOptional().HasMaxLength(200);
            Property(x => x.Declarant).HasColumnName("DECLARANT").IsOptional().HasMaxLength(200);
            Property(x => x.DeclarantName).HasColumnName("DECLARANTNAME").IsOptional().HasMaxLength(200);
            Property(x => x.Declaredate).HasColumnName("DECLAREDATE").IsOptional();
            Property(x => x.ExpertPanel).HasColumnName("EXPERTPANEL").IsOptional().HasMaxLength(200);
            Property(x => x.ExpertView).HasColumnName("EXPERTVIEW").IsOptional().HasMaxLength(200);
            Property(x => x.Attachment1).HasColumnName("ATTACHMENT1").IsOptional().HasMaxLength(200);
            Property(x => x.Attachment2).HasColumnName("ATTACHMENT2").IsOptional().HasMaxLength(200);
            Property(x => x.Attachment3).HasColumnName("ATTACHMENT3").IsOptional().HasMaxLength(500);
            Property(x => x.OtherAttachment).HasColumnName("OTHERATTACHMENT").IsOptional().HasMaxLength(500);
            Property(x => x.DownLoadAttachment).HasColumnName("DOWNLOADATTACHMENT").IsOptional().HasMaxLength(500);
            Property(x => x.Technicalsign).HasColumnName("TECHNICALSIGN").IsOptional();
            Property(x => x.Lawyersign).HasColumnName("LAWYERSIGN").IsOptional();
            Property(x => x.Leadersign).HasColumnName("LEADERSIGN").IsOptional();
            Property(x => x.ProjectID).HasColumnName("PROJECTID").IsOptional().HasMaxLength(200);
        }
    }

    // T_Technology_PaymentApply
    internal partial class T_Technology_PaymentApplyConfiguration : EntityTypeConfiguration<T_Technology_PaymentApply>
    {
        public T_Technology_PaymentApplyConfiguration()
        {
			ToTable("T_TECHNOLOGY_PAYMENTAPPLY");
            HasKey(x => x.ID);

            Property(x => x.ID).HasColumnName("ID").IsRequired().HasMaxLength(50);
            Property(x => x.CreateDate).HasColumnName("CREATEDATE").IsOptional();
            Property(x => x.ModifyDate).HasColumnName("MODIFYDATE").IsOptional();
            Property(x => x.CreateUserID).HasColumnName("CREATEUSERID").IsOptional().HasMaxLength(50);
            Property(x => x.CreateUser).HasColumnName("CREATEUSER").IsOptional().HasMaxLength(50);
            Property(x => x.ModifyUserID).HasColumnName("MODIFYUSERID").IsOptional().HasMaxLength(50);
            Property(x => x.ModifyUser).HasColumnName("MODIFYUSER").IsOptional().HasMaxLength(50);
            Property(x => x.OrgID).HasColumnName("ORGID").IsOptional().HasMaxLength(50);
            Property(x => x.CompanyID).HasColumnName("COMPANYID").IsOptional().HasMaxLength(50);
            Property(x => x.FlowPhase).HasColumnName("FLOWPHASE").IsOptional().HasMaxLength(50);
            Property(x => x.FlowInfo).HasColumnName("FLOWINFO").IsOptional().HasMaxLength(1073741823);
            Property(x => x.StepName).HasColumnName("STEPNAME").IsOptional().HasMaxLength(500);
            Property(x => x.Projectname).HasColumnName("PROJECTNAME").IsOptional().HasMaxLength(200);
            Property(x => x.Projectnumber).HasColumnName("PROJECTNUMBER").IsOptional().HasMaxLength(200);
            Property(x => x.Projectleader).HasColumnName("PROJECTLEADER").IsOptional().HasMaxLength(200);
            Property(x => x.ProjectleaderName).HasColumnName("PROJECTLEADERNAME").IsOptional().HasMaxLength(200);
            Property(x => x.Subjectlevel).HasColumnName("SUBJECTLEVEL").IsOptional().HasMaxLength(200);
            Property(x => x.ProjectFunds).HasColumnName("PROJECTFUNDS").IsOptional().HasMaxLength(200);
            Property(x => x.Declarant).HasColumnName("DECLARANT").IsOptional().HasMaxLength(200);
            Property(x => x.DeclarantName).HasColumnName("DECLARANTNAME").IsOptional().HasMaxLength(200);
            Property(x => x.Declaredate).HasColumnName("DECLAREDATE").IsOptional();
            Property(x => x.ContractCost).HasColumnName("CONTRACTCOST").IsOptional().HasMaxLength(200);
            Property(x => x.ContractNumber).HasColumnName("CONTRACTNUMBER").IsOptional().HasMaxLength(200);
            Property(x => x.ContractContent).HasColumnName("CONTRACTCONTENT").IsOptional().HasMaxLength(200);
            Property(x => x.PaymentPlan).HasColumnName("PAYMENTPLAN").IsOptional().HasMaxLength(1073741823);
            Property(x => x.PaymentWay).HasColumnName("PAYMENTWAY").IsOptional().HasMaxLength(200);
            Property(x => x.PaymentLocation).HasColumnName("PAYMENTLOCATION").IsOptional().HasMaxLength(200);
            Property(x => x.TallyMethods).HasColumnName("TALLYMETHODS").IsOptional().HasMaxLength(200);
            Property(x => x.PaymentAmount).HasColumnName("PAYMENTAMOUNT").IsOptional().HasMaxLength(200);
            Property(x => x.TallyAmount).HasColumnName("TALLYAMOUNT").IsOptional().HasMaxLength(200);
            Property(x => x.PaymentCerdential).HasColumnName("PAYMENTCERDENTIAL").IsOptional().HasMaxLength(200);
            Property(x => x.PaymentCount).HasColumnName("PAYMENTCOUNT").IsOptional().HasMaxLength(200);
            Property(x => x.PaymentPaid).HasColumnName("PAYMENTPAID").IsOptional().HasMaxLength(200);
            Property(x => x.SurplusAmount).HasColumnName("SURPLUSAMOUNT").IsOptional().HasMaxLength(200);
            Property(x => x.PaymentUnit).HasColumnName("PAYMENTUNIT").IsOptional().HasMaxLength(200);
            Property(x => x.PaymentUnitBank).HasColumnName("PAYMENTUNITBANK").IsOptional().HasMaxLength(200);
            Property(x => x.PaymentUnitAccount).HasColumnName("PAYMENTUNITACCOUNT").IsOptional().HasMaxLength(200);
            Property(x => x.GeneralInvoice).HasColumnName("GENERALINVOICE").IsOptional().HasMaxLength(200);
            Property(x => x.VATInvoice).HasColumnName("VATINVOICE").IsOptional().HasMaxLength(200);
            Property(x => x.OnSiteInvoice).HasColumnName("ONSITEINVOICE").IsOptional().HasMaxLength(200);
            Property(x => x.Receipt).HasColumnName("RECEIPT").IsOptional().HasMaxLength(200);
            Property(x => x.Remark).HasColumnName("REMARK").IsOptional().HasMaxLength(500);
            Property(x => x.Technicalsign).HasColumnName("TECHNICALSIGN").IsOptional();
            Property(x => x.Lawyersign).HasColumnName("LAWYERSIGN").IsOptional();
            Property(x => x.Leadersign).HasColumnName("LEADERSIGN").IsOptional();
            Property(x => x.Managersign).HasColumnName("MANAGERSIGN").IsOptional();
            Property(x => x.Financesign).HasColumnName("FINANCESIGN").IsOptional();
            Property(x => x.ContractName).HasColumnName("CONTRACTNAME").IsOptional().HasMaxLength(200);
            Property(x => x.ProjectID).HasColumnName("PROJECTID").IsOptional().HasMaxLength(200);
        }
    }

    // T_Technology_PaymentApply_PaymentPlan
    internal partial class T_Technology_PaymentApply_PaymentPlanConfiguration : EntityTypeConfiguration<T_Technology_PaymentApply_PaymentPlan>
    {
        public T_Technology_PaymentApply_PaymentPlanConfiguration()
        {
			ToTable("T_TECHNOLOGY_PAYMENTAPPLY_PAYMENTPLAN");
            HasKey(x => x.ID);

            Property(x => x.ID).HasColumnName("ID").IsRequired().HasMaxLength(50);
            Property(x => x.T_Technology_PaymentApplyID).HasColumnName("T_TECHNOLOGY_PAYMENTAPPLYID").IsOptional().HasMaxLength(50);
            Property(x => x.SortIndex).HasColumnName("SORTINDEX").IsOptional();
            Property(x => x.IsReleased).HasColumnName("ISRELEASED").IsOptional().HasMaxLength(1);
            Property(x => x.PaymentCondition).HasColumnName("PAYMENTCONDITION").IsOptional().HasMaxLength(200);
            Property(x => x.PaymentDate).HasColumnName("PAYMENTDATE").IsOptional();
            Property(x => x.PaymentAmount).HasColumnName("PAYMENTAMOUNT").IsOptional().HasMaxLength(200);

            // Foreign keys
            HasOptional(a => a.T_Technology_PaymentApply).WithMany(b => b.T_Technology_PaymentApply_PaymentPlan).HasForeignKey(c => c.T_Technology_PaymentApplyID); // FK_T_Technology_PaymentApply_PaymentPlan_T_Technology_PaymentApply
        }
    }

    // T_Technology_PersonnelPlacement
    internal partial class T_Technology_PersonnelPlacementConfiguration : EntityTypeConfiguration<T_Technology_PersonnelPlacement>
    {
        public T_Technology_PersonnelPlacementConfiguration()
        {
			ToTable("T_TECHNOLOGY_PERSONNELPLACEMENT");
            HasKey(x => x.ID);

            Property(x => x.ID).HasColumnName("ID").IsRequired().HasMaxLength(50);
            Property(x => x.CreateDate).HasColumnName("CREATEDATE").IsOptional();
            Property(x => x.ModifyDate).HasColumnName("MODIFYDATE").IsOptional();
            Property(x => x.CreateUserID).HasColumnName("CREATEUSERID").IsOptional().HasMaxLength(50);
            Property(x => x.CreateUser).HasColumnName("CREATEUSER").IsOptional().HasMaxLength(50);
            Property(x => x.ModifyUserID).HasColumnName("MODIFYUSERID").IsOptional().HasMaxLength(50);
            Property(x => x.ModifyUser).HasColumnName("MODIFYUSER").IsOptional().HasMaxLength(50);
            Property(x => x.OrgID).HasColumnName("ORGID").IsOptional().HasMaxLength(50);
            Property(x => x.CompanyID).HasColumnName("COMPANYID").IsOptional().HasMaxLength(50);
            Property(x => x.FlowPhase).HasColumnName("FLOWPHASE").IsOptional().HasMaxLength(50);
            Property(x => x.FlowInfo).HasColumnName("FLOWINFO").IsOptional().HasMaxLength(1073741823);
            Property(x => x.StepName).HasColumnName("STEPNAME").IsOptional().HasMaxLength(500);
            Property(x => x.Projectname).HasColumnName("PROJECTNAME").IsOptional().HasMaxLength(200);
            Property(x => x.Declareyear).HasColumnName("DECLAREYEAR").IsOptional().HasMaxLength(200);
            Property(x => x.Responsibledept).HasColumnName("RESPONSIBLEDEPT").IsOptional().HasMaxLength(200);
            Property(x => x.ResponsibledeptName).HasColumnName("RESPONSIBLEDEPTNAME").IsOptional().HasMaxLength(200);
            Property(x => x.Projectnumber).HasColumnName("PROJECTNUMBER").IsOptional().HasMaxLength(200);
            Property(x => x.Projectclass).HasColumnName("PROJECTCLASS").IsOptional().HasMaxLength(200);
            Property(x => x.Projectlevel).HasColumnName("PROJECTLEVEL").IsOptional().HasMaxLength(200);
            Property(x => x.Projectleader).HasColumnName("PROJECTLEADER").IsOptional().HasMaxLength(200);
            Property(x => x.ProjectleaderName).HasColumnName("PROJECTLEADERNAME").IsOptional().HasMaxLength(200);
            Property(x => x.Subjectstatus).HasColumnName("SUBJECTSTATUS").IsOptional().HasMaxLength(200);
            Property(x => x.Nowneed).HasColumnName("NOWNEED").IsOptional().HasMaxLength(200);
            Property(x => x.Subjectlevel).HasColumnName("SUBJECTLEVEL").IsOptional().HasMaxLength(200);
            Property(x => x.Subjectscore).HasColumnName("SUBJECTSCORE").IsOptional().HasMaxLength(200);
            Property(x => x.Confirmlevel).HasColumnName("CONFIRMLEVEL").IsOptional().HasMaxLength(200);
            Property(x => x.Confirmscore).HasColumnName("CONFIRMSCORE").IsOptional().HasMaxLength(200);
            Property(x => x.Target).HasColumnName("TARGET").IsOptional().HasMaxLength(200);
            Property(x => x.Applyfee).HasColumnName("APPLYFEE").IsOptional().HasMaxLength(200);
            Property(x => x.Starttime).HasColumnName("STARTTIME").IsOptional();
            Property(x => x.Estimatedtime).HasColumnName("ESTIMATEDTIME").IsOptional();
            Property(x => x.PersonnelPlacementTime).HasColumnName("PERSONNELPLACEMENTTIME").IsOptional();
            Property(x => x.PersonnelPlacementPerson).HasColumnName("PERSONNELPLACEMENTPERSON").IsOptional().HasMaxLength(50);
            Property(x => x.PlacementCount).HasColumnName("PLACEMENTCOUNT").IsOptional();
            Property(x => x.PlacementDetail).HasColumnName("PLACEMENTDETAIL").IsOptional().HasMaxLength(1073741823);
            Property(x => x.Technicalsign).HasColumnName("TECHNICALSIGN").IsOptional();
            Property(x => x.Leadersign).HasColumnName("LEADERSIGN").IsOptional();
            Property(x => x.ProjectID).HasColumnName("PROJECTID").IsOptional().HasMaxLength(200);
            Property(x => x.PersonnelPlacementPersonName).HasColumnName("PERSONNELPLACEMENTPERSONNAME").IsOptional().HasMaxLength(50);
        }
    }

    // T_Technology_PersonnelPlacement_PlacementDetail
    internal partial class T_Technology_PersonnelPlacement_PlacementDetailConfiguration : EntityTypeConfiguration<T_Technology_PersonnelPlacement_PlacementDetail>
    {
        public T_Technology_PersonnelPlacement_PlacementDetailConfiguration()
        {
			ToTable("T_TECHNOLOGY_PERSONNELPLACEMENT_PLACEMENTDETAIL");
            HasKey(x => x.ID);

            Property(x => x.ID).HasColumnName("ID").IsRequired().HasMaxLength(50);
            Property(x => x.T_Technology_PersonnelPlacementID).HasColumnName("T_TECHNOLOGY_PERSONNELPLACEMENTID").IsOptional().HasMaxLength(50);
            Property(x => x.SortIndex).HasColumnName("SORTINDEX").IsOptional();
            Property(x => x.IsReleased).HasColumnName("ISRELEASED").IsOptional().HasMaxLength(1);
            Property(x => x.PersonName).HasColumnName("PERSONNAME").IsOptional().HasMaxLength(200);
            Property(x => x.Profession).HasColumnName("PROFESSION").IsOptional().HasMaxLength(50);
            Property(x => x.Department).HasColumnName("DEPARTMENT").IsOptional().HasMaxLength(50);
            Property(x => x.Remark).HasColumnName("REMARK").IsOptional().HasMaxLength(1073741823);
            Property(x => x.Person).HasColumnName("PERSON").IsOptional().HasMaxLength(200);

            // Foreign keys
            HasOptional(a => a.T_Technology_PersonnelPlacement).WithMany(b => b.T_Technology_PersonnelPlacement_PlacementDetail).HasForeignKey(c => c.T_Technology_PersonnelPlacementID); // FK_T_Technology_PersonnelPlacement_PlacementDetail_T_Technology_PersonnelPlacement
        }
    }

    // T_Technology_Projectapplicationform
    internal partial class T_Technology_ProjectapplicationformConfiguration : EntityTypeConfiguration<T_Technology_Projectapplicationform>
    {
        public T_Technology_ProjectapplicationformConfiguration()
        {
			ToTable("T_TECHNOLOGY_PROJECTAPPLICATIONFORM");
            HasKey(x => x.ID);

            Property(x => x.ID).HasColumnName("ID").IsRequired().HasMaxLength(50);
            Property(x => x.CreateDate).HasColumnName("CREATEDATE").IsOptional();
            Property(x => x.ModifyDate).HasColumnName("MODIFYDATE").IsOptional();
            Property(x => x.CreateUserID).HasColumnName("CREATEUSERID").IsOptional().HasMaxLength(50);
            Property(x => x.CreateUser).HasColumnName("CREATEUSER").IsOptional().HasMaxLength(50);
            Property(x => x.ModifyUserID).HasColumnName("MODIFYUSERID").IsOptional().HasMaxLength(50);
            Property(x => x.ModifyUser).HasColumnName("MODIFYUSER").IsOptional().HasMaxLength(50);
            Property(x => x.OrgID).HasColumnName("ORGID").IsOptional().HasMaxLength(50);
            Property(x => x.CompanyID).HasColumnName("COMPANYID").IsOptional().HasMaxLength(50);
            Property(x => x.FlowPhase).HasColumnName("FLOWPHASE").IsOptional().HasMaxLength(50);
            Property(x => x.FlowInfo).HasColumnName("FLOWINFO").IsOptional().HasMaxLength(1073741823);
            Property(x => x.StepName).HasColumnName("STEPNAME").IsOptional().HasMaxLength(500);
            Property(x => x.Declareyear).HasColumnName("DECLAREYEAR").IsOptional().HasMaxLength(200);
            Property(x => x.Declaredate).HasColumnName("DECLAREDATE").IsOptional();
            Property(x => x.Declarant).HasColumnName("DECLARANT").IsOptional().HasMaxLength(200);
            Property(x => x.DeclarantName).HasColumnName("DECLARANTNAME").IsOptional().HasMaxLength(200);
            Property(x => x.Responsibledept).HasColumnName("RESPONSIBLEDEPT").IsOptional().HasMaxLength(200);
            Property(x => x.ResponsibledeptName).HasColumnName("RESPONSIBLEDEPTNAME").IsOptional().HasMaxLength(200);
            Property(x => x.Projectname).HasColumnName("PROJECTNAME").IsOptional().HasMaxLength(200);
            Property(x => x.Projectnumber).HasColumnName("PROJECTNUMBER").IsOptional().HasMaxLength(200);
            Property(x => x.Projectclass).HasColumnName("PROJECTCLASS").IsOptional().HasMaxLength(200);
            Property(x => x.Projectlevel).HasColumnName("PROJECTLEVEL").IsOptional().HasMaxLength(200);
            Property(x => x.Projectleader).HasColumnName("PROJECTLEADER").IsOptional().HasMaxLength(200);
            Property(x => x.ProjectleaderName).HasColumnName("PROJECTLEADERNAME").IsOptional().HasMaxLength(200);
            Property(x => x.Subjectstatus).HasColumnName("SUBJECTSTATUS").IsOptional().HasMaxLength(200);
            Property(x => x.Nowneed).HasColumnName("NOWNEED").IsOptional().HasMaxLength(200);
            Property(x => x.Subjectlevel).HasColumnName("SUBJECTLEVEL").IsOptional().HasMaxLength(200);
            Property(x => x.Subjectscore).HasColumnName("SUBJECTSCORE").IsOptional().HasPrecision(18,4);
            Property(x => x.Confirmlevel).HasColumnName("CONFIRMLEVEL").IsOptional().HasMaxLength(200);
            Property(x => x.Confirmscore).HasColumnName("CONFIRMSCORE").IsOptional().HasPrecision(18,4);
            Property(x => x.Target).HasColumnName("TARGET").IsOptional().HasMaxLength(200);
            Property(x => x.Applyfee).HasColumnName("APPLYFEE").IsOptional().HasPrecision(18,4);
            Property(x => x.Starttime).HasColumnName("STARTTIME").IsOptional();
            Property(x => x.Estimatedtime).HasColumnName("ESTIMATEDTIME").IsOptional();
            Property(x => x.Subjectcontent).HasColumnName("SUBJECTCONTENT").IsOptional().HasMaxLength(500);
            Property(x => x.Difficulty).HasColumnName("DIFFICULTY").IsOptional().HasMaxLength(500);
            Property(x => x.Resultsform).HasColumnName("RESULTSFORM").IsOptional().HasMaxLength(500);
            Property(x => x.Externalsubject).HasColumnName("EXTERNALSUBJECT").IsOptional().HasMaxLength(200);
            Property(x => x.Foundationtopics).HasColumnName("FOUNDATIONTOPICS").IsOptional().HasMaxLength(200);
            Property(x => x.Promotetopics).HasColumnName("PROMOTETOPICS").IsOptional().HasMaxLength(200);
            Property(x => x.Stageschedule).HasColumnName("STAGESCHEDULE").IsOptional().HasMaxLength(500);
            Property(x => x.Filing).HasColumnName("FILING").IsOptional().HasMaxLength(500);
            Property(x => x.Participatedept).HasColumnName("PARTICIPATEDEPT").IsOptional().HasMaxLength(200);
            Property(x => x.ParticipatedeptName).HasColumnName("PARTICIPATEDEPTNAME").IsOptional().HasMaxLength(200);
            Property(x => x.cooperationcontent).HasColumnName("COOPERATIONCONTENT").IsOptional().HasMaxLength(500);
            Property(x => x.Technicalexpert).HasColumnName("TECHNICALEXPERT").IsOptional().HasMaxLength(1073741823);
            Property(x => x.Technicalcommitteeexpert).HasColumnName("TECHNICALCOMMITTEEEXPERT").IsOptional();
            Property(x => x.Technicalsign).HasColumnName("TECHNICALSIGN").IsOptional();
            Property(x => x.Leadersign).HasColumnName("LEADERSIGN").IsOptional();
            Property(x => x.TechnicalCommitteeIDS).HasColumnName("TECHNICALCOMMITTEEIDS").IsOptional().HasMaxLength(200);
        }
    }

    // T_Technology_Projectapplicationform_Technicalexpert
    internal partial class T_Technology_Projectapplicationform_TechnicalexpertConfiguration : EntityTypeConfiguration<T_Technology_Projectapplicationform_Technicalexpert>
    {
        public T_Technology_Projectapplicationform_TechnicalexpertConfiguration()
        {
			ToTable("T_TECHNOLOGY_PROJECTAPPLICATIONFORM_TECHNICALEXPERT");
            HasKey(x => x.ID);

            Property(x => x.ID).HasColumnName("ID").IsRequired().HasMaxLength(50);
            Property(x => x.T_Technology_ProjectapplicationformID).HasColumnName("T_TECHNOLOGY_PROJECTAPPLICATIONFORMID").IsOptional().HasMaxLength(50);
            Property(x => x.SortIndex).HasColumnName("SORTINDEX").IsOptional();
            Property(x => x.IsReleased).HasColumnName("ISRELEASED").IsOptional().HasMaxLength(1);
            Property(x => x.TechnicalCommittee).HasColumnName("TECHNICALCOMMITTEE").IsOptional().HasMaxLength(200);
            Property(x => x.TechnicalCommitteeName).HasColumnName("TECHNICALCOMMITTEENAME").IsOptional().HasMaxLength(200);
            Property(x => x.TechnicalCommitteeDirector).HasColumnName("TECHNICALCOMMITTEEDIRECTOR").IsOptional().HasMaxLength(200);
            Property(x => x.TechnicalCommitteeDirectorName).HasColumnName("TECHNICALCOMMITTEEDIRECTORNAME").IsOptional().HasMaxLength(200);
            Property(x => x.Remark).HasColumnName("REMARK").IsOptional().HasMaxLength(200);

            // Foreign keys
            HasOptional(a => a.T_Technology_Projectapplicationform).WithMany(b => b.T_Technology_Projectapplicationform_Technicalexpert).HasForeignKey(c => c.T_Technology_ProjectapplicationformID); // FK_T_Technology_Projectapplicationform_Technicalexpert_T_Technology_Projectapplicationform
        }
    }

    // T_Technology_ProjectDelayApply
    internal partial class T_Technology_ProjectDelayApplyConfiguration : EntityTypeConfiguration<T_Technology_ProjectDelayApply>
    {
        public T_Technology_ProjectDelayApplyConfiguration()
        {
			ToTable("T_TECHNOLOGY_PROJECTDELAYAPPLY");
            HasKey(x => x.ID);

            Property(x => x.ID).HasColumnName("ID").IsRequired().HasMaxLength(50);
            Property(x => x.CreateDate).HasColumnName("CREATEDATE").IsOptional();
            Property(x => x.ModifyDate).HasColumnName("MODIFYDATE").IsOptional();
            Property(x => x.CreateUserID).HasColumnName("CREATEUSERID").IsOptional().HasMaxLength(50);
            Property(x => x.CreateUser).HasColumnName("CREATEUSER").IsOptional().HasMaxLength(50);
            Property(x => x.ModifyUserID).HasColumnName("MODIFYUSERID").IsOptional().HasMaxLength(50);
            Property(x => x.ModifyUser).HasColumnName("MODIFYUSER").IsOptional().HasMaxLength(50);
            Property(x => x.OrgID).HasColumnName("ORGID").IsOptional().HasMaxLength(50);
            Property(x => x.CompanyID).HasColumnName("COMPANYID").IsOptional().HasMaxLength(50);
            Property(x => x.FlowPhase).HasColumnName("FLOWPHASE").IsOptional().HasMaxLength(50);
            Property(x => x.FlowInfo).HasColumnName("FLOWINFO").IsOptional().HasMaxLength(1073741823);
            Property(x => x.StepName).HasColumnName("STEPNAME").IsOptional().HasMaxLength(500);
            Property(x => x.Projectname).HasColumnName("PROJECTNAME").IsOptional().HasMaxLength(200);
            Property(x => x.Declareyear).HasColumnName("DECLAREYEAR").IsOptional().HasMaxLength(200);
            Property(x => x.Responsibledept).HasColumnName("RESPONSIBLEDEPT").IsOptional().HasMaxLength(200);
            Property(x => x.ResponsibledeptName).HasColumnName("RESPONSIBLEDEPTNAME").IsOptional().HasMaxLength(200);
            Property(x => x.Projectnumber).HasColumnName("PROJECTNUMBER").IsOptional().HasMaxLength(200);
            Property(x => x.Projectclass).HasColumnName("PROJECTCLASS").IsOptional().HasMaxLength(200);
            Property(x => x.Projectleader).HasColumnName("PROJECTLEADER").IsOptional().HasMaxLength(200);
            Property(x => x.ProjectleaderName).HasColumnName("PROJECTLEADERNAME").IsOptional().HasMaxLength(200);
            Property(x => x.Confirmscore).HasColumnName("CONFIRMSCORE").IsOptional().HasMaxLength(200);
            Property(x => x.Starttime).HasColumnName("STARTTIME").IsOptional();
            Property(x => x.Estimatedtime).HasColumnName("ESTIMATEDTIME").IsOptional();
            Property(x => x.Apply).HasColumnName("APPLY").IsOptional().HasMaxLength(200);
            Property(x => x.Declaredate).HasColumnName("DECLAREDATE").IsOptional();
            Property(x => x.ActualStartDate).HasColumnName("ACTUALSTARTDATE").IsOptional();
            Property(x => x.DelayFinishDate).HasColumnName("DELAYFINISHDATE").IsOptional();
            Property(x => x.Reason).HasColumnName("REASON").IsOptional().HasMaxLength(500);
            Property(x => x.FillPerson).HasColumnName("FILLPERSON").IsOptional().HasMaxLength(200);
            Property(x => x.FillPersonName).HasColumnName("FILLPERSONNAME").IsOptional().HasMaxLength(200);
            Property(x => x.FillingDate).HasColumnName("FILLINGDATE").IsOptional();
            Property(x => x.Technicalsign).HasColumnName("TECHNICALSIGN").IsOptional();
            Property(x => x.Leadersign).HasColumnName("LEADERSIGN").IsOptional();
            Property(x => x.ProjectID).HasColumnName("PROJECTID").IsOptional().HasMaxLength(200);
        }
    }

    // T_Technology_ProjectProgress
    internal partial class T_Technology_ProjectProgressConfiguration : EntityTypeConfiguration<T_Technology_ProjectProgress>
    {
        public T_Technology_ProjectProgressConfiguration()
        {
			ToTable("T_TECHNOLOGY_PROJECTPROGRESS");
            HasKey(x => x.ID);

            Property(x => x.ID).HasColumnName("ID").IsRequired().HasMaxLength(50);
            Property(x => x.CreateDate).HasColumnName("CREATEDATE").IsOptional();
            Property(x => x.ModifyDate).HasColumnName("MODIFYDATE").IsOptional();
            Property(x => x.CreateUserID).HasColumnName("CREATEUSERID").IsOptional().HasMaxLength(50);
            Property(x => x.CreateUser).HasColumnName("CREATEUSER").IsOptional().HasMaxLength(50);
            Property(x => x.ModifyUserID).HasColumnName("MODIFYUSERID").IsOptional().HasMaxLength(50);
            Property(x => x.ModifyUser).HasColumnName("MODIFYUSER").IsOptional().HasMaxLength(50);
            Property(x => x.OrgID).HasColumnName("ORGID").IsOptional().HasMaxLength(50);
            Property(x => x.CompanyID).HasColumnName("COMPANYID").IsOptional().HasMaxLength(50);
            Property(x => x.FlowPhase).HasColumnName("FLOWPHASE").IsOptional().HasMaxLength(50);
            Property(x => x.FlowInfo).HasColumnName("FLOWINFO").IsOptional().HasMaxLength(1073741823);
            Property(x => x.StepName).HasColumnName("STEPNAME").IsOptional().HasMaxLength(500);
            Property(x => x.Projectname).HasColumnName("PROJECTNAME").IsOptional().HasMaxLength(200);
            Property(x => x.Declareyear).HasColumnName("DECLAREYEAR").IsOptional().HasMaxLength(200);
            Property(x => x.Responsibledept).HasColumnName("RESPONSIBLEDEPT").IsOptional().HasMaxLength(200);
            Property(x => x.ResponsibledeptName).HasColumnName("RESPONSIBLEDEPTNAME").IsOptional().HasMaxLength(200);
            Property(x => x.Projectnumber).HasColumnName("PROJECTNUMBER").IsOptional().HasMaxLength(200);
            Property(x => x.Projectleader).HasColumnName("PROJECTLEADER").IsOptional().HasMaxLength(200);
            Property(x => x.ProjectleaderName).HasColumnName("PROJECTLEADERNAME").IsOptional().HasMaxLength(200);
            Property(x => x.Confirmlevel).HasColumnName("CONFIRMLEVEL").IsOptional().HasMaxLength(200);
            Property(x => x.Confirmscore).HasColumnName("CONFIRMSCORE").IsOptional().HasMaxLength(200);
            Property(x => x.Starttime).HasColumnName("STARTTIME").IsOptional();
            Property(x => x.Estimatedtime).HasColumnName("ESTIMATEDTIME").IsOptional();
            Property(x => x.SignPerson).HasColumnName("SIGNPERSON").IsOptional().HasMaxLength(50);
            Property(x => x.SignTime).HasColumnName("SIGNTIME").IsOptional();
            Property(x => x.Version).HasColumnName("VERSION").IsOptional();
            Property(x => x.PlanDetail).HasColumnName("PLANDETAIL").IsOptional().HasMaxLength(1073741823);
            Property(x => x.Technicalsign).HasColumnName("TECHNICALSIGN").IsOptional();
            Property(x => x.Leadersign).HasColumnName("LEADERSIGN").IsOptional();
            Property(x => x.ProjectID).HasColumnName("PROJECTID").IsOptional().HasMaxLength(200);
            Property(x => x.VersionNumber).HasColumnName("VERSIONNUMBER").IsOptional().HasMaxLength(200);
            Property(x => x.RelateID).HasColumnName("RELATEID").IsOptional().HasMaxLength(200);
        }
    }

    // T_Technology_ProjectProgress_PlanDetail
    internal partial class T_Technology_ProjectProgress_PlanDetailConfiguration : EntityTypeConfiguration<T_Technology_ProjectProgress_PlanDetail>
    {
        public T_Technology_ProjectProgress_PlanDetailConfiguration()
        {
			ToTable("T_TECHNOLOGY_PROJECTPROGRESS_PLANDETAIL");
            HasKey(x => x.ID);

            Property(x => x.ID).HasColumnName("ID").IsRequired().HasMaxLength(50);
            Property(x => x.T_Technology_ProjectProgressID).HasColumnName("T_TECHNOLOGY_PROJECTPROGRESSID").IsOptional().HasMaxLength(50);
            Property(x => x.SortIndex).HasColumnName("SORTINDEX").IsOptional();
            Property(x => x.IsReleased).HasColumnName("ISRELEASED").IsOptional().HasMaxLength(1);
            Property(x => x.PlanTime).HasColumnName("PLANTIME").IsOptional();
            Property(x => x.Major).HasColumnName("MAJOR").IsOptional().HasMaxLength(200);
            Property(x => x.WorkContent).HasColumnName("WORKCONTENT").IsOptional().HasMaxLength(200);
            Property(x => x.Category).HasColumnName("CATEGORY").IsOptional().HasMaxLength(200);
            Property(x => x.Remark).HasColumnName("REMARK").IsOptional().HasMaxLength(200);

            // Foreign keys
            HasOptional(a => a.T_Technology_ProjectProgress).WithMany(b => b.T_Technology_ProjectProgress_PlanDetail).HasForeignKey(c => c.T_Technology_ProjectProgressID); // FK_T_Technology_ProjectProgress_PlanDetail_T_Technology_ProjectProgress
        }
    }

    // T_Technology_ResultCommit
    internal partial class T_Technology_ResultCommitConfiguration : EntityTypeConfiguration<T_Technology_ResultCommit>
    {
        public T_Technology_ResultCommitConfiguration()
        {
			ToTable("T_TECHNOLOGY_RESULTCOMMIT");
            HasKey(x => x.ID);

            Property(x => x.ID).HasColumnName("ID").IsRequired().HasMaxLength(50);
            Property(x => x.CreateDate).HasColumnName("CREATEDATE").IsOptional();
            Property(x => x.ModifyDate).HasColumnName("MODIFYDATE").IsOptional();
            Property(x => x.CreateUserID).HasColumnName("CREATEUSERID").IsOptional().HasMaxLength(50);
            Property(x => x.CreateUser).HasColumnName("CREATEUSER").IsOptional().HasMaxLength(50);
            Property(x => x.ModifyUserID).HasColumnName("MODIFYUSERID").IsOptional().HasMaxLength(50);
            Property(x => x.ModifyUser).HasColumnName("MODIFYUSER").IsOptional().HasMaxLength(50);
            Property(x => x.OrgID).HasColumnName("ORGID").IsOptional().HasMaxLength(50);
            Property(x => x.CompanyID).HasColumnName("COMPANYID").IsOptional().HasMaxLength(50);
            Property(x => x.FlowPhase).HasColumnName("FLOWPHASE").IsOptional().HasMaxLength(50);
            Property(x => x.FlowInfo).HasColumnName("FLOWINFO").IsOptional().HasMaxLength(1073741823);
            Property(x => x.StepName).HasColumnName("STEPNAME").IsOptional().HasMaxLength(500);
            Property(x => x.Projectname).HasColumnName("PROJECTNAME").IsOptional().HasMaxLength(200);
            Property(x => x.Projectnumber).HasColumnName("PROJECTNUMBER").IsOptional().HasMaxLength(200);
            Property(x => x.Projectleader).HasColumnName("PROJECTLEADER").IsOptional().HasMaxLength(200);
            Property(x => x.ProjectleaderName).HasColumnName("PROJECTLEADERNAME").IsOptional().HasMaxLength(200);
            Property(x => x.Subjectlevel).HasColumnName("SUBJECTLEVEL").IsOptional().HasMaxLength(200);
            Property(x => x.Projectlevel).HasColumnName("PROJECTLEVEL").IsOptional().HasMaxLength(200);
            Property(x => x.ProjectFunds).HasColumnName("PROJECTFUNDS").IsOptional().HasMaxLength(200);
            Property(x => x.ActualExpenditure).HasColumnName("ACTUALEXPENDITURE").IsOptional().HasMaxLength(200);
            Property(x => x.StartTime).HasColumnName("STARTTIME").IsOptional();
            Property(x => x.ActualFinishedTime).HasColumnName("ACTUALFINISHEDTIME").IsOptional();
            Property(x => x.Declarant).HasColumnName("DECLARANT").IsOptional().HasMaxLength(200);
            Property(x => x.DeclareTime).HasColumnName("DECLARETIME").IsOptional();
            Property(x => x.ResultAttachment).HasColumnName("RESULTATTACHMENT").IsOptional().HasMaxLength(500);
            Property(x => x.DepartmentLeader).HasColumnName("DEPARTMENTLEADER").IsOptional().HasMaxLength(200);
            Property(x => x.Technicalsign).HasColumnName("TECHNICALSIGN").IsOptional();
            Property(x => x.Leadersign).HasColumnName("LEADERSIGN").IsOptional();
            Property(x => x.ProjectID).HasColumnName("PROJECTID").IsOptional().HasMaxLength(200);
            Property(x => x.DeclarantName).HasColumnName("DECLARANTNAME").IsOptional().HasMaxLength(200);
        }
    }

    // T_TM_ApplicationFormOfChinaIDCard
    internal partial class T_TM_ApplicationFormOfChinaIDCardConfiguration : EntityTypeConfiguration<T_TM_ApplicationFormOfChinaIDCard>
    {
        public T_TM_ApplicationFormOfChinaIDCardConfiguration()
        {
			ToTable("T_TM_APPLICATIONFORMOFCHINAIDCARD");
            HasKey(x => x.ID);

            Property(x => x.ID).HasColumnName("ID").IsRequired().HasMaxLength(50);
            Property(x => x.CreateDate).HasColumnName("CREATEDATE").IsOptional();
            Property(x => x.ModifyDate).HasColumnName("MODIFYDATE").IsOptional();
            Property(x => x.CreateUserID).HasColumnName("CREATEUSERID").IsOptional().HasMaxLength(50);
            Property(x => x.CreateUser).HasColumnName("CREATEUSER").IsOptional().HasMaxLength(50);
            Property(x => x.ModifyUserID).HasColumnName("MODIFYUSERID").IsOptional().HasMaxLength(50);
            Property(x => x.ModifyUser).HasColumnName("MODIFYUSER").IsOptional().HasMaxLength(50);
            Property(x => x.OrgID).HasColumnName("ORGID").IsOptional().HasMaxLength(50);
            Property(x => x.CompanyID).HasColumnName("COMPANYID").IsOptional().HasMaxLength(50);
            Property(x => x.FlowPhase).HasColumnName("FLOWPHASE").IsOptional().HasMaxLength(50);
            Property(x => x.FlowInfo).HasColumnName("FLOWINFO").IsOptional().HasMaxLength(1073741823);
            Property(x => x.StepName).HasColumnName("STEPNAME").IsOptional().HasMaxLength(500);
            Property(x => x.NSRMC).HasColumnName("NSRMC").IsOptional().HasMaxLength(200);
            Property(x => x.NSRMCName).HasColumnName("NSRMCNAME").IsOptional().HasMaxLength(200);
            Property(x => x.YWMC).HasColumnName("YWMC").IsOptional().HasMaxLength(200);
            Property(x => x.NSRSBH).HasColumnName("NSRSBH").IsOptional().HasMaxLength(200);
            Property(x => x.ZCDJD).HasColumnName("ZCDJD").IsOptional().HasMaxLength(200);
            Property(x => x.TXDZ).HasColumnName("TXDZ").IsOptional().HasMaxLength(200);
            Property(x => x.SJGLJGSZD).HasColumnName("SJGLJGSZD").IsOptional().HasMaxLength(200);
            Property(x => x.LXDH).HasColumnName("LXDH").IsOptional().HasMaxLength(200);
            Property(x => x.ZGSWJGMC).HasColumnName("ZGSWJGMC").IsOptional().HasMaxLength(200);
            Property(x => x.ApplyYear).HasColumnName("APPLYYEAR").IsOptional().HasMaxLength(50);
            Property(x => x.DYDFGJ).HasColumnName("DYDFGJ").IsOptional().HasMaxLength(200);
            Property(x => x.DFNSRMCZW).HasColumnName("DFNSRMCZW").IsOptional().HasMaxLength(200);
            Property(x => x.DFNSRMCYW).HasColumnName("DFNSRMCYW").IsOptional().HasMaxLength(200);
            Property(x => x.DFNSRSBH).HasColumnName("DFNSRSBH").IsOptional().HasMaxLength(200);
            Property(x => x.NXSXDMC).HasColumnName("NXSXDMC").IsOptional().HasMaxLength(200);
            Property(x => x.NXSXDTK).HasColumnName("NXSXDTK").IsOptional().HasMaxLength(200);
            Property(x => x.NXSXDSRJE).HasColumnName("NXSXDSRJE").IsOptional().HasMaxLength(200);
            Property(x => x.YJJMSJE).HasColumnName("YJJMSJE").IsOptional().HasMaxLength(200);
            Property(x => x.NXSXDMCTwo).HasColumnName("NXSXDMCTWO").IsOptional().HasMaxLength(500);
            Property(x => x.NXSXDTKTwo).HasColumnName("NXSXDTKTWO").IsOptional().HasMaxLength(200);
            Property(x => x.NXSXDSRJETwo).HasColumnName("NXSXDSRJETWO").IsOptional().HasMaxLength(200);
            Property(x => x.YJJMSJETwo).HasColumnName("YJJMSJETWO").IsOptional().HasMaxLength(200);
            Property(x => x.XGFJ).HasColumnName("XGFJ").IsOptional().HasMaxLength(2000);
            Property(x => x.SQRQZ).HasColumnName("SQRQZ").IsOptional();
            Property(x => x.BMZZQZ).HasColumnName("BMZZQZ").IsOptional();
            Property(x => x.CWSWHJBAQZ).HasColumnName("CWSWHJBAQZ").IsOptional();
            Property(x => x.SQRJSQZ).HasColumnName("SQRJSQZ").IsOptional();
            Property(x => x.FlowEndDate).HasColumnName("FLOWENDDATE").IsOptional();
        }
    }

    // T_TM_CKTSZLSJ
    internal partial class T_TM_CKTSZLSJConfiguration : EntityTypeConfiguration<T_TM_CKTSZLSJ>
    {
        public T_TM_CKTSZLSJConfiguration()
        {
			ToTable("T_TM_CKTSZLSJ");
            HasKey(x => x.ID);

            Property(x => x.ID).HasColumnName("ID").IsRequired().HasMaxLength(50);
            Property(x => x.CreateDate).HasColumnName("CREATEDATE").IsOptional();
            Property(x => x.ModifyDate).HasColumnName("MODIFYDATE").IsOptional();
            Property(x => x.CreateUserID).HasColumnName("CREATEUSERID").IsOptional().HasMaxLength(50);
            Property(x => x.CreateUser).HasColumnName("CREATEUSER").IsOptional().HasMaxLength(50);
            Property(x => x.ModifyUserID).HasColumnName("MODIFYUSERID").IsOptional().HasMaxLength(50);
            Property(x => x.ModifyUser).HasColumnName("MODIFYUSER").IsOptional().HasMaxLength(50);
            Property(x => x.OrgID).HasColumnName("ORGID").IsOptional().HasMaxLength(50);
            Property(x => x.CompanyID).HasColumnName("COMPANYID").IsOptional().HasMaxLength(50);
            Property(x => x.FlowPhase).HasColumnName("FLOWPHASE").IsOptional().HasMaxLength(50);
            Property(x => x.FlowInfo).HasColumnName("FLOWINFO").IsOptional().HasMaxLength(1073741823);
            Property(x => x.StepName).HasColumnName("STEPNAME").IsOptional().HasMaxLength(500);
            Property(x => x.CreateUserDept).HasColumnName("CREATEUSERDEPT").IsOptional().HasMaxLength(200);
            Property(x => x.CreateUserDeptName).HasColumnName("CREATEUSERDEPTNAME").IsOptional().HasMaxLength(200);
            Property(x => x.CreateUserPhone).HasColumnName("CREATEUSERPHONE").IsOptional().HasMaxLength(50);
            Property(x => x.RelevantAttachments).HasColumnName("RELEVANTATTACHMENTS").IsOptional().HasMaxLength(2000);
            Property(x => x.Remark).HasColumnName("REMARK").IsOptional().HasMaxLength(2000);
            Property(x => x.SQRQZ).HasColumnName("SQRQZ").IsOptional();
            Property(x => x.BMFZQZ).HasColumnName("BMFZQZ").IsOptional();
            Property(x => x.CWSWHJJSQZ).HasColumnName("CWSWHJJSQZ").IsOptional();
            Property(x => x.FlowEndDate).HasColumnName("FLOWENDDATE").IsOptional();
        }
    }

    // T_TM_CrossRegionTaxReporting
    internal partial class T_TM_CrossRegionTaxReportingConfiguration : EntityTypeConfiguration<T_TM_CrossRegionTaxReporting>
    {
        public T_TM_CrossRegionTaxReportingConfiguration()
        {
			ToTable("T_TM_CROSSREGIONTAXREPORTING");
            HasKey(x => x.ID);

            Property(x => x.ID).HasColumnName("ID").IsRequired().HasMaxLength(50);
            Property(x => x.CreateDate).HasColumnName("CREATEDATE").IsOptional();
            Property(x => x.ModifyDate).HasColumnName("MODIFYDATE").IsOptional();
            Property(x => x.CreateUserID).HasColumnName("CREATEUSERID").IsOptional().HasMaxLength(50);
            Property(x => x.CreateUser).HasColumnName("CREATEUSER").IsOptional().HasMaxLength(50);
            Property(x => x.ModifyUserID).HasColumnName("MODIFYUSERID").IsOptional().HasMaxLength(50);
            Property(x => x.ModifyUser).HasColumnName("MODIFYUSER").IsOptional().HasMaxLength(50);
            Property(x => x.OrgID).HasColumnName("ORGID").IsOptional().HasMaxLength(50);
            Property(x => x.CompanyID).HasColumnName("COMPANYID").IsOptional().HasMaxLength(50);
            Property(x => x.FlowPhase).HasColumnName("FLOWPHASE").IsOptional().HasMaxLength(50);
            Property(x => x.FlowInfo).HasColumnName("FLOWINFO").IsOptional().HasMaxLength(1073741823);
            Property(x => x.StepName).HasColumnName("STEPNAME").IsOptional().HasMaxLength(500);
            Property(x => x.NSRMC).HasColumnName("NSRMC").IsOptional().HasMaxLength(200);
            Property(x => x.NSRMCName).HasColumnName("NSRMCNAME").IsOptional().HasMaxLength(200);
            Property(x => x.NSRSBH).HasColumnName("NSRSBH").IsOptional().HasMaxLength(200);
            Property(x => x.KQYSSSXLXR).HasColumnName("KQYSSSXLXR").IsOptional().HasMaxLength(50);
            Property(x => x.KQYSSSXLXRName).HasColumnName("KQYSSSXLXRNAME").IsOptional().HasMaxLength(50);
            Property(x => x.KQYSSSXLXRZJ).HasColumnName("KQYSSSXLXRZJ").IsOptional().HasMaxLength(200);
            Property(x => x.KQYSSSXLXRSJH).HasColumnName("KQYSSSXLXRSJH").IsOptional().HasMaxLength(200);
            Property(x => x.JBR).HasColumnName("JBR").IsOptional().HasMaxLength(50);
            Property(x => x.JBRName).HasColumnName("JBRNAME").IsOptional().HasMaxLength(50);
            Property(x => x.JBRZJ).HasColumnName("JBRZJ").IsOptional().HasMaxLength(200);
            Property(x => x.JBRSJ).HasColumnName("JBRSJ").IsOptional().HasMaxLength(200);
            Property(x => x.KQYJYDZ).HasColumnName("KQYJYDZ").IsOptional().HasMaxLength(200);
            Property(x => x.JYFS).HasColumnName("JYFS").IsOptional().HasMaxLength(50);
            Property(x => x.HTMC).HasColumnName("HTMC").IsOptional().HasMaxLength(500);
            Property(x => x.HTMCName).HasColumnName("HTMCNAME").IsOptional().HasMaxLength(500);
            Property(x => x.HTH).HasColumnName("HTH").IsOptional().HasMaxLength(200);
            Property(x => x.HTJE).HasColumnName("HTJE").IsOptional().HasMaxLength(200);
            Property(x => x.HTYXQQ).HasColumnName("HTYXQQ").IsOptional();
            Property(x => x.HTYXQZ).HasColumnName("HTYXQZ").IsOptional();
            Property(x => x.HTXDFMC).HasColumnName("HTXDFMC").IsOptional().HasMaxLength(200);
            Property(x => x.HTXDFNSRSBH).HasColumnName("HTXDFNSRSBH").IsOptional().HasMaxLength(200);
            Property(x => x.HTXGFJ).HasColumnName("HTXGFJ").IsOptional().HasMaxLength(500);
            Property(x => x.LQR).HasColumnName("LQR").IsOptional().HasMaxLength(50);
            Property(x => x.LQRName).HasColumnName("LQRNAME").IsOptional().HasMaxLength(50);
            Property(x => x.KQYSSSXBYGLBM).HasColumnName("KQYSSSXBYGLBM").IsOptional().HasMaxLength(200);
            Property(x => x.KQYSSSXBGBSC).HasColumnName("KQYSSSXBGBSC").IsOptional().HasMaxLength(500);
            Property(x => x.ZXFKB).HasColumnName("ZXFKB").IsOptional().HasMaxLength(500);
            Property(x => x.SQRQZ).HasColumnName("SQRQZ").IsOptional();
            Property(x => x.CWSWHJBAQZ).HasColumnName("CWSWHJBAQZ").IsOptional();
            Property(x => x.LQRQZ).HasColumnName("LQRQZ").IsOptional();
            Property(x => x.CWSWHJZXQZ).HasColumnName("CWSWHJZXQZ").IsOptional();
            Property(x => x.FlowEndDate).HasColumnName("FLOWENDDATE").IsOptional();
        }
    }

    // T_TM_ExternalPaymentApply
    internal partial class T_TM_ExternalPaymentApplyConfiguration : EntityTypeConfiguration<T_TM_ExternalPaymentApply>
    {
        public T_TM_ExternalPaymentApplyConfiguration()
        {
			ToTable("T_TM_EXTERNALPAYMENTAPPLY");
            HasKey(x => x.ID);

            Property(x => x.ID).HasColumnName("ID").IsRequired().HasMaxLength(50);
            Property(x => x.CreateDate).HasColumnName("CREATEDATE").IsOptional();
            Property(x => x.ModifyDate).HasColumnName("MODIFYDATE").IsOptional();
            Property(x => x.CreateUserID).HasColumnName("CREATEUSERID").IsOptional().HasMaxLength(50);
            Property(x => x.CreateUser).HasColumnName("CREATEUSER").IsOptional().HasMaxLength(50);
            Property(x => x.ModifyUserID).HasColumnName("MODIFYUSERID").IsOptional().HasMaxLength(50);
            Property(x => x.ModifyUser).HasColumnName("MODIFYUSER").IsOptional().HasMaxLength(50);
            Property(x => x.OrgID).HasColumnName("ORGID").IsOptional().HasMaxLength(50);
            Property(x => x.CompanyID).HasColumnName("COMPANYID").IsOptional().HasMaxLength(50);
            Property(x => x.FlowPhase).HasColumnName("FLOWPHASE").IsOptional().HasMaxLength(50);
            Property(x => x.FlowInfo).HasColumnName("FLOWINFO").IsOptional().HasMaxLength(1073741823);
            Property(x => x.StepName).HasColumnName("STEPNAME").IsOptional().HasMaxLength(500);
            Property(x => x.ContractID).HasColumnName("CONTRACTID").IsOptional().HasMaxLength(50);
            Property(x => x.RecordContract).HasColumnName("RECORDCONTRACT").IsOptional().HasMaxLength(50);
            Property(x => x.RecordContractName).HasColumnName("RECORDCONTRACTNAME").IsOptional().HasMaxLength(50);
            Property(x => x.ContractName).HasColumnName("CONTRACTNAME").IsOptional().HasMaxLength(200);
            Property(x => x.ContracttStartDate).HasColumnName("CONTRACTTSTARTDATE").IsOptional();
            Property(x => x.ContracttEndDate).HasColumnName("CONTRACTTENDDATE").IsOptional();
            Property(x => x.Curreny).HasColumnName("CURRENY").IsOptional().HasMaxLength(50);
            Property(x => x.ContractAmount).HasColumnName("CONTRACTAMOUNT").IsOptional().HasPrecision(18,6);
            Property(x => x.AlreadyPaymentAmount).HasColumnName("ALREADYPAYMENTAMOUNT").IsOptional().HasPrecision(18,6);
            Property(x => x.ThisTimePaymentAmount).HasColumnName("THISTIMEPAYMENTAMOUNT").IsOptional().HasPrecision(18,6);
            Property(x => x.PaymentDate).HasColumnName("PAYMENTDATE").IsOptional();
            Property(x => x.TaxpayerName).HasColumnName("TAXPAYERNAME").IsOptional().HasMaxLength(200);
            Property(x => x.TaxpayerIdentificationNumber).HasColumnName("TAXPAYERIDENTIFICATIONNUMBER").IsOptional().HasMaxLength(200);
            Property(x => x.TaxpayerAddress).HasColumnName("TAXPAYERADDRESS").IsOptional().HasMaxLength(200);
            Property(x => x.TaxpayerOpenBank).HasColumnName("TAXPAYEROPENBANK").IsOptional().HasMaxLength(200);
            Property(x => x.TaxpayerBankAccount).HasColumnName("TAXPAYERBANKACCOUNT").IsOptional().HasMaxLength(200);
            Property(x => x.ContactPerson).HasColumnName("CONTACTPERSON").IsOptional().HasMaxLength(50);
            Property(x => x.ContactPersonPhone).HasColumnName("CONTACTPERSONPHONE").IsOptional().HasMaxLength(50);
            Property(x => x.PayeeName).HasColumnName("PAYEENAME").IsOptional().HasMaxLength(200);
            Property(x => x.PayeeCountry).HasColumnName("PAYEECOUNTRY").IsOptional().HasMaxLength(200);
            Property(x => x.PayeeLocation).HasColumnName("PAYEELOCATION").IsOptional().HasMaxLength(200);
            Property(x => x.JWJGSFGL).HasColumnName("JWJGSFGL").IsOptional().HasMaxLength(200);
            Property(x => x.ContractorOpenBank).HasColumnName("CONTRACTOROPENBANK").IsOptional().HasMaxLength(200);
            Property(x => x.ContractorBankAccount).HasColumnName("CONTRACTORBANKACCOUNT").IsOptional().HasMaxLength(200);
            Property(x => x.SQRQZYJ).HasColumnName("SQRQZYJ").IsOptional();
            Property(x => x.BMZZQZYJ).HasColumnName("BMZZQZYJ").IsOptional();
            Property(x => x.CBGLBSWZGQZYJ).HasColumnName("CBGLBSWZGQZYJ").IsOptional();
            Property(x => x.CWBSWHJ).HasColumnName("CWBSWHJ").IsOptional();
            Property(x => x.FlowEndDate).HasColumnName("FLOWENDDATE").IsOptional();
            Property(x => x.TaxpayerOpenBankName).HasColumnName("TAXPAYEROPENBANKNAME").IsOptional().HasMaxLength(200);
        }
    }

    // T_TM_ForeignRelatedTaxContract
    internal partial class T_TM_ForeignRelatedTaxContractConfiguration : EntityTypeConfiguration<T_TM_ForeignRelatedTaxContract>
    {
        public T_TM_ForeignRelatedTaxContractConfiguration()
        {
			ToTable("T_TM_FOREIGNRELATEDTAXCONTRACT");
            HasKey(x => x.ID);

            Property(x => x.ID).HasColumnName("ID").IsRequired().HasMaxLength(50);
            Property(x => x.CreateDate).HasColumnName("CREATEDATE").IsOptional();
            Property(x => x.ModifyDate).HasColumnName("MODIFYDATE").IsOptional();
            Property(x => x.CreateUserID).HasColumnName("CREATEUSERID").IsOptional().HasMaxLength(50);
            Property(x => x.CreateUser).HasColumnName("CREATEUSER").IsOptional().HasMaxLength(50);
            Property(x => x.ModifyUserID).HasColumnName("MODIFYUSERID").IsOptional().HasMaxLength(50);
            Property(x => x.ModifyUser).HasColumnName("MODIFYUSER").IsOptional().HasMaxLength(50);
            Property(x => x.OrgID).HasColumnName("ORGID").IsOptional().HasMaxLength(50);
            Property(x => x.CompanyID).HasColumnName("COMPANYID").IsOptional().HasMaxLength(50);
            Property(x => x.FlowPhase).HasColumnName("FLOWPHASE").IsOptional().HasMaxLength(50);
            Property(x => x.FlowInfo).HasColumnName("FLOWINFO").IsOptional().HasMaxLength(1073741823);
            Property(x => x.StepName).HasColumnName("STEPNAME").IsOptional().HasMaxLength(500);
            Property(x => x.CreateUserDept).HasColumnName("CREATEUSERDEPT").IsOptional().HasMaxLength(200);
            Property(x => x.CreateUserDeptName).HasColumnName("CREATEUSERDEPTNAME").IsOptional().HasMaxLength(200);
            Property(x => x.ReportDate).HasColumnName("REPORTDATE").IsOptional();
            Property(x => x.TaxpayerName).HasColumnName("TAXPAYERNAME").IsOptional().HasMaxLength(200);
            Property(x => x.TaxpayerNameName).HasColumnName("TAXPAYERNAMENAME").IsOptional().HasMaxLength(200);
            Property(x => x.TaxpayerIdentificationNumber).HasColumnName("TAXPAYERIDENTIFICATIONNUMBER").IsOptional().HasMaxLength(200);
            Property(x => x.ContactPerson).HasColumnName("CONTACTPERSON").IsOptional().HasMaxLength(50);
            Property(x => x.ContactPersonPhone).HasColumnName("CONTACTPERSONPHONE").IsOptional().HasMaxLength(50);
            Property(x => x.ContractorName).HasColumnName("CONTRACTORNAME").IsOptional().HasMaxLength(200);
            Property(x => x.ContractorAddress).HasColumnName("CONTRACTORADDRESS").IsOptional().HasMaxLength(200);
            Property(x => x.ContractorOpenBank).HasColumnName("CONTRACTOROPENBANK").IsOptional().HasMaxLength(200);
            Property(x => x.ContractorBankAccount).HasColumnName("CONTRACTORBANKACCOUNT").IsOptional().HasMaxLength(200);
            Property(x => x.ContractorContactPerson).HasColumnName("CONTRACTORCONTACTPERSON").IsOptional().HasMaxLength(200);
            Property(x => x.ContractorContactPersonPhone).HasColumnName("CONTRACTORCONTACTPERSONPHONE").IsOptional().HasMaxLength(200);
            Property(x => x.AgentName).HasColumnName("AGENTNAME").IsOptional().HasMaxLength(200);
            Property(x => x.AgentContact).HasColumnName("AGENTCONTACT").IsOptional().HasMaxLength(200);
            Property(x => x.AgentContactPhone).HasColumnName("AGENTCONTACTPHONE").IsOptional().HasMaxLength(200);
            Property(x => x.AgentContactFax).HasColumnName("AGENTCONTACTFAX").IsOptional().HasMaxLength(200);
            Property(x => x.ProjectName).HasColumnName("PROJECTNAME").IsOptional().HasMaxLength(200);
            Property(x => x.ProjectType).HasColumnName("PROJECTTYPE").IsOptional().HasMaxLength(200);
            Property(x => x.OtherProjectType).HasColumnName("OTHERPROJECTTYPE").IsOptional().HasMaxLength(200);
            Property(x => x.ContractName).HasColumnName("CONTRACTNAME").IsOptional().HasMaxLength(200);
            Property(x => x.RecordContractCode).HasColumnName("RECORDCONTRACTCODE").IsOptional().HasMaxLength(200);
            Property(x => x.WorkLocation).HasColumnName("WORKLOCATION").IsOptional().HasMaxLength(200);
            Property(x => x.ZHZYHLWRS).HasColumnName("ZHZYHLWRS").IsOptional().HasMaxLength(200);
            Property(x => x.ContracttStartDate).HasColumnName("CONTRACTTSTARTDATE").IsOptional();
            Property(x => x.ContracttEndDate).HasColumnName("CONTRACTTENDDATE").IsOptional();
            Property(x => x.ContractSignDate).HasColumnName("CONTRACTSIGNDATE").IsOptional();
            Property(x => x.Currency).HasColumnName("CURRENCY").IsOptional().HasMaxLength(50);
            Property(x => x.ContractAmount).HasColumnName("CONTRACTAMOUNT").IsOptional().HasPrecision(18,6);
            Property(x => x.PaymentNumber).HasColumnName("PAYMENTNUMBER").IsOptional();
            Property(x => x.PayeeName).HasColumnName("PAYEENAME").IsOptional().HasMaxLength(200);
            Property(x => x.PayeeCountry).HasColumnName("PAYEECOUNTRY").IsOptional().HasMaxLength(200);
            Property(x => x.PayeeLocation).HasColumnName("PAYEELOCATION").IsOptional().HasMaxLength(200);
            Property(x => x.JWJGSFGL).HasColumnName("JWJGSFGL").IsOptional().HasMaxLength(50);
            Property(x => x.Bank).HasColumnName("BANK").IsOptional().HasMaxLength(200);
            Property(x => x.BankAccount).HasColumnName("BANKACCOUNT").IsOptional().HasMaxLength(200);
            Property(x => x.Applysign).HasColumnName("APPLYSIGN").IsOptional();
            Property(x => x.Deptheadsign).HasColumnName("DEPTHEADSIGN").IsOptional();
            Property(x => x.CBGLBSWZGQZYJ).HasColumnName("CBGLBSWZGQZYJ").IsOptional();
            Property(x => x.CWBSWHJ).HasColumnName("CWBSWHJ").IsOptional();
            Property(x => x.FlowEndDate).HasColumnName("FLOWENDDATE").IsOptional();
        }
    }

    // T_TM_TaxpayerInfo
    internal partial class T_TM_TaxpayerInfoConfiguration : EntityTypeConfiguration<T_TM_TaxpayerInfo>
    {
        public T_TM_TaxpayerInfoConfiguration()
        {
			ToTable("T_TM_TAXPAYERINFO");
            HasKey(x => x.ID);

            Property(x => x.ID).HasColumnName("ID").IsRequired().HasMaxLength(50);
            Property(x => x.CreateDate).HasColumnName("CREATEDATE").IsOptional();
            Property(x => x.ModifyDate).HasColumnName("MODIFYDATE").IsOptional();
            Property(x => x.CreateUserID).HasColumnName("CREATEUSERID").IsOptional().HasMaxLength(50);
            Property(x => x.CreateUser).HasColumnName("CREATEUSER").IsOptional().HasMaxLength(200);
            Property(x => x.ModifyUserID).HasColumnName("MODIFYUSERID").IsOptional().HasMaxLength(50);
            Property(x => x.ModifyUser).HasColumnName("MODIFYUSER").IsOptional().HasMaxLength(200);
            Property(x => x.OrgID).HasColumnName("ORGID").IsOptional().HasMaxLength(50);
            Property(x => x.CompanyID).HasColumnName("COMPANYID").IsOptional().HasMaxLength(50);
            Property(x => x.FlowPhase).HasColumnName("FLOWPHASE").IsOptional().HasMaxLength(50);
            Property(x => x.FlowInfo).HasColumnName("FLOWINFO").IsOptional().HasMaxLength(1073741823);
            Property(x => x.StepName).HasColumnName("STEPNAME").IsOptional().HasMaxLength(500);
            Property(x => x.Name).HasColumnName("NAME").IsOptional().HasMaxLength(200);
            Property(x => x.UnifiedSocialCreditCode).HasColumnName("UNIFIEDSOCIALCREDITCODE").IsOptional().HasMaxLength(200);
            Property(x => x.EName).HasColumnName("ENAME").IsOptional().HasMaxLength(200);
            Property(x => x.ContractPhone).HasColumnName("CONTRACTPHONE").IsOptional().HasMaxLength(200);
            Property(x => x.CompetentTaxAuthority).HasColumnName("COMPETENTTAXAUTHORITY").IsOptional().HasMaxLength(200);
            Property(x => x.RegisteredPlace).HasColumnName("REGISTEREDPLACE").IsOptional().HasMaxLength(200);
            Property(x => x.SJGLJGSZD).HasColumnName("SJGLJGSZD").IsOptional().HasMaxLength(200);
            Property(x => x.AddressOrResidence).HasColumnName("ADDRESSORRESIDENCE").IsOptional().HasMaxLength(200);
            Property(x => x.KQYSSSXLXR).HasColumnName("KQYSSSXLXR").IsOptional().HasMaxLength(200);
            Property(x => x.KQYSSSXLXRZJ).HasColumnName("KQYSSSXLXRZJ").IsOptional().HasMaxLength(200);
            Property(x => x.KQYSSSXLXRSJH).HasColumnName("KQYSSSXLXRSJH").IsOptional().HasMaxLength(200);
            Property(x => x.SWSSHTBALXR).HasColumnName("SWSSHTBALXR").IsOptional().HasMaxLength(200);
            Property(x => x.SWSSHTBALXRZJ).HasColumnName("SWSSHTBALXRZJ").IsOptional().HasMaxLength(200);
            Property(x => x.SWSSHTBALXRSJH).HasColumnName("SWSSHTBALXRSJH").IsOptional().HasMaxLength(200);
        }
    }

    // T_TravelRecord_Person
    internal partial class T_TravelRecord_PersonConfiguration : EntityTypeConfiguration<T_TravelRecord_Person>
    {
        public T_TravelRecord_PersonConfiguration()
        {
			ToTable("T_TRAVELRECORD_PERSON");
            HasKey(x => x.ID);

            Property(x => x.ID).HasColumnName("ID").IsRequired().HasMaxLength(50);
            Property(x => x.CreateDate).HasColumnName("CREATEDATE").IsOptional();
            Property(x => x.ModifyDate).HasColumnName("MODIFYDATE").IsOptional();
            Property(x => x.CreateUserID).HasColumnName("CREATEUSERID").IsOptional().HasMaxLength(50);
            Property(x => x.CreateUser).HasColumnName("CREATEUSER").IsOptional().HasMaxLength(50);
            Property(x => x.ModifyUserID).HasColumnName("MODIFYUSERID").IsOptional().HasMaxLength(50);
            Property(x => x.ModifyUser).HasColumnName("MODIFYUSER").IsOptional().HasMaxLength(50);
            Property(x => x.OrgID).HasColumnName("ORGID").IsOptional().HasMaxLength(50);
            Property(x => x.CompanyID).HasColumnName("COMPANYID").IsOptional().HasMaxLength(50);
            Property(x => x.FlowPhase).HasColumnName("FLOWPHASE").IsOptional().HasMaxLength(50);
            Property(x => x.FlowInfo).HasColumnName("FLOWINFO").IsOptional().HasMaxLength(1073741823);
            Property(x => x.StepName).HasColumnName("STEPNAME").IsOptional().HasMaxLength(500);
            Property(x => x.Evection).HasColumnName("EVECTION").IsOptional().HasMaxLength(200);
            Property(x => x.EvectionName).HasColumnName("EVECTIONNAME").IsOptional().HasMaxLength(200);
            Property(x => x.EvectionDept).HasColumnName("EVECTIONDEPT").IsOptional().HasMaxLength(200);
            Property(x => x.EvectionDeptName).HasColumnName("EVECTIONDEPTNAME").IsOptional().HasMaxLength(200);
            Property(x => x.ApplyDate).HasColumnName("APPLYDATE").IsOptional();
            Property(x => x.SerialNumber).HasColumnName("SERIALNUMBER").IsOptional().HasMaxLength(200);
            Property(x => x.Major).HasColumnName("MAJOR").IsOptional().HasMaxLength(200);
            Property(x => x.TaskNature).HasColumnName("TASKNATURE").IsOptional().HasMaxLength(200);
            Property(x => x.StartPoint).HasColumnName("STARTPOINT").IsOptional().HasMaxLength(200);
            Property(x => x.IsEvectionInEvection).HasColumnName("ISEVECTIONINEVECTION").IsOptional().HasMaxLength(200);
            Property(x => x.MainBusinessTripListNumber).HasColumnName("MAINBUSINESSTRIPLISTNUMBER").IsOptional().HasMaxLength(200);
            Property(x => x.EvectionDetail).HasColumnName("EVECTIONDETAIL").IsOptional().HasMaxLength(1073741823);
            Property(x => x.StartDate).HasColumnName("STARTDATE").IsOptional();
            Property(x => x.ExpectEndDate).HasColumnName("EXPECTENDDATE").IsOptional();
            Property(x => x.NoticeUser).HasColumnName("NOTICEUSER").IsOptional().HasMaxLength(200);
            Property(x => x.EvectionDays).HasColumnName("EVECTIONDAYS").IsOptional().HasMaxLength(200);
            Property(x => x.GoAbroadType).HasColumnName("GOABROADTYPE").IsOptional().HasMaxLength(200);
            Property(x => x.GoAbroadReason).HasColumnName("GOABROADREASON").IsOptional().HasMaxLength(500);
            Property(x => x.Attach).HasColumnName("ATTACH").IsOptional().HasMaxLength(500);
            Property(x => x.Customer).HasColumnName("CUSTOMER").IsOptional().HasMaxLength(200);
            Property(x => x.CustomerName).HasColumnName("CUSTOMERNAME").IsOptional().HasMaxLength(200);
            Property(x => x.Project).HasColumnName("PROJECT").IsOptional().HasMaxLength(200);
            Property(x => x.ProjectName).HasColumnName("PROJECTNAME").IsOptional().HasMaxLength(200);
            Property(x => x.ContactNo).HasColumnName("CONTACTNO").IsOptional().HasMaxLength(200);
            Property(x => x.ProjectNo).HasColumnName("PROJECTNO").IsOptional().HasMaxLength(200);
            Property(x => x.ProjectType).HasColumnName("PROJECTTYPE").IsOptional().HasMaxLength(200);
            Property(x => x.DeptLeaderSign).HasColumnName("DEPTLEADERSIGN").IsOptional();
            Property(x => x.ConferenceTrainingSign).HasColumnName("CONFERENCETRAININGSIGN").IsOptional();
            Property(x => x.ApproverSign).HasColumnName("APPROVERSIGN").IsOptional();
            Property(x => x.TechnicalManagementDepartmentSign).HasColumnName("TECHNICALMANAGEMENTDEPARTMENTSIGN").IsOptional();
            Property(x => x.ChiefEngineer).HasColumnName("CHIEFENGINEER").IsOptional();
            Property(x => x.NoticeUserName).HasColumnName("NOTICEUSERNAME").IsOptional().HasMaxLength(200);
            Property(x => x.IsSixSign).HasColumnName("ISSIXSIGN").IsOptional().HasMaxLength(200);
            Property(x => x.MainBusinessTripListNumberName).HasColumnName("MAINBUSINESSTRIPLISTNUMBERNAME").IsOptional().HasMaxLength(200);
        }
    }

    // T_TravelRecord_Person_EvectionDetail
    internal partial class T_TravelRecord_Person_EvectionDetailConfiguration : EntityTypeConfiguration<T_TravelRecord_Person_EvectionDetail>
    {
        public T_TravelRecord_Person_EvectionDetailConfiguration()
        {
			ToTable("T_TRAVELRECORD_PERSON_EVECTIONDETAIL");
            HasKey(x => x.ID);

            Property(x => x.ID).HasColumnName("ID").IsRequired().HasMaxLength(50);
            Property(x => x.T_TravelRecord_PersonID).HasColumnName("T_TRAVELRECORD_PERSONID").IsOptional().HasMaxLength(50);
            Property(x => x.SortIndex).HasColumnName("SORTINDEX").IsOptional();
            Property(x => x.IsReleased).HasColumnName("ISRELEASED").IsOptional().HasMaxLength(1);
            Property(x => x.Country).HasColumnName("COUNTRY").IsOptional().HasMaxLength(200);
            Property(x => x.Province).HasColumnName("PROVINCE").IsOptional().HasMaxLength(200);
            Property(x => x.City).HasColumnName("CITY").IsOptional().HasMaxLength(200);
            Property(x => x.Remark).HasColumnName("REMARK").IsOptional().HasMaxLength(200);

            // Foreign keys
            HasOptional(a => a.T_TravelRecord_Person).WithMany(b => b.T_TravelRecord_Person_EvectionDetail).HasForeignKey(c => c.T_TravelRecord_PersonID); // FK_T_TravelRecord_Person_EvectionDetail_T_TravelRecord_Person
        }
    }

    // T_TwoLevelReporting_CompletionReport
    internal partial class T_TwoLevelReporting_CompletionReportConfiguration : EntityTypeConfiguration<T_TwoLevelReporting_CompletionReport>
    {
        public T_TwoLevelReporting_CompletionReportConfiguration()
        {
			ToTable("T_TWOLEVELREPORTING_COMPLETIONREPORT");
            HasKey(x => x.ID);

            Property(x => x.ID).HasColumnName("ID").IsRequired().HasMaxLength(50);
            Property(x => x.CreateDate).HasColumnName("CREATEDATE").IsOptional();
            Property(x => x.ModifyDate).HasColumnName("MODIFYDATE").IsOptional();
            Property(x => x.CreateUserID).HasColumnName("CREATEUSERID").IsOptional().HasMaxLength(50);
            Property(x => x.CreateUser).HasColumnName("CREATEUSER").IsOptional().HasMaxLength(50);
            Property(x => x.ModifyUserID).HasColumnName("MODIFYUSERID").IsOptional().HasMaxLength(50);
            Property(x => x.ModifyUser).HasColumnName("MODIFYUSER").IsOptional().HasMaxLength(50);
            Property(x => x.OrgID).HasColumnName("ORGID").IsOptional().HasMaxLength(50);
            Property(x => x.CompanyID).HasColumnName("COMPANYID").IsOptional().HasMaxLength(50);
            Property(x => x.FlowPhase).HasColumnName("FLOWPHASE").IsOptional().HasMaxLength(50);
            Property(x => x.FlowInfo).HasColumnName("FLOWINFO").IsOptional().HasMaxLength(1073741823);
            Property(x => x.StepName).HasColumnName("STEPNAME").IsOptional().HasMaxLength(500);
            Property(x => x.Applicant).HasColumnName("APPLICANT").IsOptional().HasMaxLength(200);
            Property(x => x.ApplicantName).HasColumnName("APPLICANTNAME").IsOptional().HasMaxLength(200);
            Property(x => x.DateOfSubmission).HasColumnName("DATEOFSUBMISSION").IsOptional();
            Property(x => x.FilledBy).HasColumnName("FILLEDBY").IsOptional().HasMaxLength(200);
            Property(x => x.FilledByName).HasColumnName("FILLEDBYNAME").IsOptional().HasMaxLength(200);
            Property(x => x.CaseType).HasColumnName("CASETYPE").IsOptional().HasMaxLength(200);
            Property(x => x.CaseName).HasColumnName("CASENAME").IsOptional().HasMaxLength(200);
            Property(x => x.CaseNumber).HasColumnName("CASENUMBER").IsOptional().HasMaxLength(200);
            Property(x => x.TrialDate).HasColumnName("TRIALDATE").IsOptional();
            Property(x => x.PlaintiffOrOriginalApplicant).HasColumnName("PLAINTIFFORORIGINALAPPLICANT").IsOptional().HasMaxLength(200);
            Property(x => x.DefendantOrRespondent).HasColumnName("DEFENDANTORRESPONDENT").IsOptional().HasMaxLength(200);
            Property(x => x.IsThereAnIndependentClaim).HasColumnName("ISTHEREANINDEPENDENTCLAIM").IsOptional().HasMaxLength(200);
            Property(x => x.TrialProcedure).HasColumnName("TRIALPROCEDURE").IsOptional().HasMaxLength(200);
            Property(x => x.MembersOfTheArbitralTribunal).HasColumnName("MEMBERSOFTHEARBITRALTRIBUNAL").IsOptional().HasMaxLength(500);
            Property(x => x.TransferingUnit).HasColumnName("TRANSFERINGUNIT").IsOptional().HasMaxLength(200);
            Property(x => x.TransferingUnitName).HasColumnName("TRANSFERINGUNITNAME").IsOptional().HasMaxLength(200);
            Property(x => x.AmountOfTheSubjectMatterOfTheCase).HasColumnName("AMOUNTOFTHESUBJECTMATTEROFTHECASE").IsOptional().HasPrecision(18,4);
            Property(x => x.BriefIntroductionOfTheCase).HasColumnName("BRIEFINTRODUCTIONOFTHECASE").IsOptional().HasMaxLength(500);
            Property(x => x.ClosingMethod).HasColumnName("CLOSINGMETHOD").IsOptional().HasMaxLength(200);
            Property(x => x.MediationContent).HasColumnName("MEDIATIONCONTENT").IsOptional().HasMaxLength(500);
            Property(x => x.RefereeContent).HasColumnName("REFEREECONTENT").IsOptional().HasMaxLength(500);
            Property(x => x.ImplementationSituation).HasColumnName("IMPLEMENTATIONSITUATION").IsOptional().HasMaxLength(500);
            Property(x => x.OtherProblemsToBeExplainedOrNoted).HasColumnName("OTHERPROBLEMSTOBEEXPLAINEDORNOTED").IsOptional().HasMaxLength(500);
            Property(x => x.Subject).HasColumnName("SUBJECT").IsOptional().HasMaxLength(200);
        }
    }

    // T_TwoLevelReporting_LawActivity
    internal partial class T_TwoLevelReporting_LawActivityConfiguration : EntityTypeConfiguration<T_TwoLevelReporting_LawActivity>
    {
        public T_TwoLevelReporting_LawActivityConfiguration()
        {
			ToTable("T_TWOLEVELREPORTING_LAWACTIVITY");
            HasKey(x => x.ID);

            Property(x => x.ID).HasColumnName("ID").IsRequired().HasMaxLength(50);
            Property(x => x.CreateDate).HasColumnName("CREATEDATE").IsOptional();
            Property(x => x.ModifyDate).HasColumnName("MODIFYDATE").IsOptional();
            Property(x => x.CreateUserID).HasColumnName("CREATEUSERID").IsOptional().HasMaxLength(50);
            Property(x => x.CreateUser).HasColumnName("CREATEUSER").IsOptional().HasMaxLength(50);
            Property(x => x.ModifyUserID).HasColumnName("MODIFYUSERID").IsOptional().HasMaxLength(50);
            Property(x => x.ModifyUser).HasColumnName("MODIFYUSER").IsOptional().HasMaxLength(50);
            Property(x => x.OrgID).HasColumnName("ORGID").IsOptional().HasMaxLength(50);
            Property(x => x.CompanyID).HasColumnName("COMPANYID").IsOptional().HasMaxLength(50);
            Property(x => x.FlowPhase).HasColumnName("FLOWPHASE").IsOptional().HasMaxLength(50);
            Property(x => x.FlowInfo).HasColumnName("FLOWINFO").IsOptional().HasMaxLength(1073741823);
            Property(x => x.StepName).HasColumnName("STEPNAME").IsOptional().HasMaxLength(500);
            Property(x => x.SecondaryUnitName).HasColumnName("SECONDARYUNITNAME").IsOptional().HasMaxLength(200);
            Property(x => x.SecondaryUnitNameName).HasColumnName("SECONDARYUNITNAMENAME").IsOptional().HasMaxLength(200);
            Property(x => x.ReportingDate).HasColumnName("REPORTINGDATE").IsOptional();
            Property(x => x.ActivityTheme).HasColumnName("ACTIVITYTHEME").IsOptional().HasMaxLength(200);
            Property(x => x.ActivityForm).HasColumnName("ACTIVITYFORM").IsOptional().HasMaxLength(500);
            Property(x => x.ActivityTime).HasColumnName("ACTIVITYTIME").IsOptional();
            Property(x => x.ParticipantsAndInfluencersNumber).HasColumnName("PARTICIPANTSANDINFLUENCERSNUMBER").IsOptional().HasPrecision(18,4);
            Property(x => x.ActivitySituation).HasColumnName("ACTIVITYSITUATION").IsOptional().HasMaxLength(500);
            Property(x => x.ActivityEffectiveness).HasColumnName("ACTIVITYEFFECTIVENESS").IsOptional().HasMaxLength(500);
            Property(x => x.DeficienciesOrImprovements).HasColumnName("DEFICIENCIESORIMPROVEMENTS").IsOptional().HasMaxLength(500);
            Property(x => x.Remarks).HasColumnName("REMARKS").IsOptional().HasMaxLength(500);
            Property(x => x.Contacts).HasColumnName("CONTACTS").IsOptional().HasMaxLength(200);
            Property(x => x.ContactNumber).HasColumnName("CONTACTNUMBER").IsOptional().HasMaxLength(200);
            Property(x => x.EventOrganizer).HasColumnName("EVENTORGANIZER").IsOptional();
            Property(x => x.SecondaryUnitPersonInCharge).HasColumnName("SECONDARYUNITPERSONINCHARGE").IsOptional();
            Property(x => x.CorporateLegalDepartment).HasColumnName("CORPORATELEGALDEPARTMENT").IsOptional();
            Property(x => x.SecondaryUnitLeaderInCharge).HasColumnName("SECONDARYUNITLEADERINCHARGE").IsOptional();
        }
    }

    // T_TwoLevelReporting_NonLitigationDisputeRegist
    internal partial class T_TwoLevelReporting_NonLitigationDisputeRegistConfiguration : EntityTypeConfiguration<T_TwoLevelReporting_NonLitigationDisputeRegist>
    {
        public T_TwoLevelReporting_NonLitigationDisputeRegistConfiguration()
        {
			ToTable("T_TWOLEVELREPORTING_NONLITIGATIONDISPUTEREGIST");
            HasKey(x => x.ID);

            Property(x => x.ID).HasColumnName("ID").IsRequired().HasMaxLength(50);
            Property(x => x.CreateDate).HasColumnName("CREATEDATE").IsOptional();
            Property(x => x.ModifyDate).HasColumnName("MODIFYDATE").IsOptional();
            Property(x => x.CreateUserID).HasColumnName("CREATEUSERID").IsOptional().HasMaxLength(50);
            Property(x => x.CreateUser).HasColumnName("CREATEUSER").IsOptional().HasMaxLength(50);
            Property(x => x.ModifyUserID).HasColumnName("MODIFYUSERID").IsOptional().HasMaxLength(50);
            Property(x => x.ModifyUser).HasColumnName("MODIFYUSER").IsOptional().HasMaxLength(50);
            Property(x => x.OrgID).HasColumnName("ORGID").IsOptional().HasMaxLength(50);
            Property(x => x.CompanyID).HasColumnName("COMPANYID").IsOptional().HasMaxLength(50);
            Property(x => x.FlowPhase).HasColumnName("FLOWPHASE").IsOptional().HasMaxLength(50);
            Property(x => x.FlowInfo).HasColumnName("FLOWINFO").IsOptional().HasMaxLength(1073741823);
            Property(x => x.StepName).HasColumnName("STEPNAME").IsOptional().HasMaxLength(500);
            Property(x => x.CommunicationUnit).HasColumnName("COMMUNICATIONUNIT").IsOptional().HasMaxLength(200);
            Property(x => x.DateOfCommunication).HasColumnName("DATEOFCOMMUNICATION").IsOptional();
            Property(x => x.DocumentNumber).HasColumnName("DOCUMENTNUMBER").IsOptional().HasMaxLength(200);
            Property(x => x.ImportanceDegree).HasColumnName("IMPORTANCEDEGREE").IsOptional().HasMaxLength(200);
            Property(x => x.CategoriesOfCommunication).HasColumnName("CATEGORIESOFCOMMUNICATION").IsOptional().HasMaxLength(200);
            Property(x => x.NameOfCommunication).HasColumnName("NAMEOFCOMMUNICATION").IsOptional().HasMaxLength(200);
            Property(x => x.SubjectHeadings).HasColumnName("SUBJECTHEADINGS").IsOptional().HasMaxLength(200);
            Property(x => x.AppendixToTheCommunication).HasColumnName("APPENDIXTOTHECOMMUNICATION").IsOptional().HasMaxLength(500);
            Property(x => x.DisputeDescription).HasColumnName("DISPUTEDESCRIPTION").IsOptional().HasMaxLength(500);
            Property(x => x.NameOfProjectInvolved).HasColumnName("NAMEOFPROJECTINVOLVED").IsOptional().HasMaxLength(200);
            Property(x => x.TimeLimitRequirements).HasColumnName("TIMELIMITREQUIREMENTS").IsOptional().HasMaxLength(200);
            Property(x => x.ProjectLeader).HasColumnName("PROJECTLEADER").IsOptional().HasMaxLength(200);
            Property(x => x.ResponsibleDepartment).HasColumnName("RESPONSIBLEDEPARTMENT").IsOptional().HasMaxLength(200);
            Property(x => x.DepartmentHead).HasColumnName("DEPARTMENTHEAD").IsOptional().HasMaxLength(200);
            Property(x => x.ResponsiblePerson).HasColumnName("RESPONSIBLEPERSON").IsOptional().HasMaxLength(200);
            Property(x => x.HandlingMode).HasColumnName("HANDLINGMODE").IsOptional().HasMaxLength(500);
            Property(x => x.HandlingResult).HasColumnName("HANDLINGRESULT").IsOptional().HasMaxLength(500);
            Property(x => x.AttachmentOfHandlingResults).HasColumnName("ATTACHMENTOFHANDLINGRESULTS").IsOptional().HasMaxLength(500);
        }
    }

    // T_UseSealApply
    internal partial class T_UseSealApplyConfiguration : EntityTypeConfiguration<T_UseSealApply>
    {
        public T_UseSealApplyConfiguration()
        {
			ToTable("T_USESEALAPPLY");
            HasKey(x => x.ID);

            Property(x => x.ID).HasColumnName("ID").IsRequired().HasMaxLength(50);
            Property(x => x.CreateDate).HasColumnName("CREATEDATE").IsOptional();
            Property(x => x.ModifyDate).HasColumnName("MODIFYDATE").IsOptional();
            Property(x => x.CreateUserID).HasColumnName("CREATEUSERID").IsOptional().HasMaxLength(50);
            Property(x => x.CreateUser).HasColumnName("CREATEUSER").IsOptional().HasMaxLength(50);
            Property(x => x.ModifyUserID).HasColumnName("MODIFYUSERID").IsOptional().HasMaxLength(50);
            Property(x => x.ModifyUser).HasColumnName("MODIFYUSER").IsOptional().HasMaxLength(50);
            Property(x => x.OrgID).HasColumnName("ORGID").IsOptional().HasMaxLength(50);
            Property(x => x.CompanyID).HasColumnName("COMPANYID").IsOptional().HasMaxLength(50);
            Property(x => x.FlowPhase).HasColumnName("FLOWPHASE").IsOptional().HasMaxLength(50);
            Property(x => x.FlowInfo).HasColumnName("FLOWINFO").IsOptional().HasMaxLength(1073741823);
            Property(x => x.StepName).HasColumnName("STEPNAME").IsOptional().HasMaxLength(500);
            Property(x => x.FileName).HasColumnName("FILENAME").IsOptional().HasMaxLength(200);
            Property(x => x.ApplyUser).HasColumnName("APPLYUSER").IsOptional().HasMaxLength(200);
            Property(x => x.ApplyUserName).HasColumnName("APPLYUSERNAME").IsOptional().HasMaxLength(200);
            Property(x => x.ApplyDate).HasColumnName("APPLYDATE").IsOptional();
            Property(x => x.ApplyDept).HasColumnName("APPLYDEPT").IsOptional().HasMaxLength(200);
            Property(x => x.ApplyDeptName).HasColumnName("APPLYDEPTNAME").IsOptional().HasMaxLength(200);
            Property(x => x.Customer).HasColumnName("CUSTOMER").IsOptional().HasMaxLength(200);
            Property(x => x.CustomerName).HasColumnName("CUSTOMERNAME").IsOptional().HasMaxLength(200);
            Property(x => x.Project).HasColumnName("PROJECT").IsOptional().HasMaxLength(200);
            Property(x => x.ProjectName).HasColumnName("PROJECTNAME").IsOptional().HasMaxLength(200);
            Property(x => x.ProjectNo).HasColumnName("PROJECTNO").IsOptional().HasMaxLength(200);
            Property(x => x.ContractNo).HasColumnName("CONTRACTNO").IsOptional().HasMaxLength(200);
            Property(x => x.Seal).HasColumnName("SEAL").IsOptional().HasMaxLength(200);
            Property(x => x.SealName).HasColumnName("SEALNAME").IsOptional().HasMaxLength(200);
            Property(x => x.Pos).HasColumnName("POS").IsOptional().HasMaxLength(200);
            Property(x => x.Describe).HasColumnName("DESCRIBE").IsOptional().HasMaxLength(500);
            Property(x => x.PrintedFile).HasColumnName("PRINTEDFILE").IsOptional().HasMaxLength(500);
            Property(x => x.DeptLeader).HasColumnName("DEPTLEADER").IsOptional();
            Property(x => x.ProductContractDeptLeader).HasColumnName("PRODUCTCONTRACTDEPTLEADER").IsOptional();
            Property(x => x.ComprehensiveDeptLeader).HasColumnName("COMPREHENSIVEDEPTLEADER").IsOptional();
        }
    }

    // T_Win_AwardItem
    internal partial class T_Win_AwardItemConfiguration : EntityTypeConfiguration<T_Win_AwardItem>
    {
        public T_Win_AwardItemConfiguration()
        {
			ToTable("T_WIN_AWARDITEM");
            HasKey(x => x.ID);

            Property(x => x.ID).HasColumnName("ID").IsRequired().HasMaxLength(50);
            Property(x => x.CreateDate).HasColumnName("CREATEDATE").IsOptional();
            Property(x => x.ModifyDate).HasColumnName("MODIFYDATE").IsOptional();
            Property(x => x.CreateUserID).HasColumnName("CREATEUSERID").IsOptional().HasMaxLength(50);
            Property(x => x.CreateUser).HasColumnName("CREATEUSER").IsOptional().HasMaxLength(50);
            Property(x => x.ModifyUserID).HasColumnName("MODIFYUSERID").IsOptional().HasMaxLength(50);
            Property(x => x.ModifyUser).HasColumnName("MODIFYUSER").IsOptional().HasMaxLength(50);
            Property(x => x.OrgID).HasColumnName("ORGID").IsOptional().HasMaxLength(50);
            Property(x => x.CompanyID).HasColumnName("COMPANYID").IsOptional().HasMaxLength(50);
            Property(x => x.FlowPhase).HasColumnName("FLOWPHASE").IsOptional().HasMaxLength(50);
            Property(x => x.FlowInfo).HasColumnName("FLOWINFO").IsOptional().HasMaxLength(1073741823);
            Property(x => x.StepName).HasColumnName("STEPNAME").IsOptional().HasMaxLength(500);
            Property(x => x.DeclareYear).HasColumnName("DECLAREYEAR").IsOptional().HasMaxLength(200);
            Property(x => x.Declarant).HasColumnName("DECLARANT").IsOptional().HasMaxLength(200);
            Property(x => x.ItemDeclareDepartment).HasColumnName("ITEMDECLAREDEPARTMENT").IsOptional().HasMaxLength(200);
            Property(x => x.DeclareCategory).HasColumnName("DECLARECATEGORY").IsOptional().HasMaxLength(200);
            Property(x => x.DeclareLevel).HasColumnName("DECLARELEVEL").IsOptional().HasMaxLength(200);
            Property(x => x.ProjectNumber).HasColumnName("PROJECTNUMBER").IsOptional().HasMaxLength(200);
            Property(x => x.ProjectName).HasColumnName("PROJECTNAME").IsOptional().HasMaxLength(200);
            Property(x => x.ProjectStartDate).HasColumnName("PROJECTSTARTDATE").IsOptional();
            Property(x => x.ProjectEndDate).HasColumnName("PROJECTENDDATE").IsOptional();
            Property(x => x.IsCheck).HasColumnName("ISCHECK").IsOptional().HasMaxLength(200);
            Property(x => x.ProjectCheckDate).HasColumnName("PROJECTCHECKDATE").IsOptional();
            Property(x => x.InventionPatent).HasColumnName("INVENTIONPATENT").IsOptional().HasPrecision(18,4);
            Property(x => x.OtherInventionPatent).HasColumnName("OTHERINVENTIONPATENT").IsOptional().HasPrecision(18,4);
            Property(x => x.SCMIG).HasColumnName("SCMIG").IsOptional().HasMaxLength(200);
            Property(x => x.STMI).HasColumnName("STMI").IsOptional().HasMaxLength(200);
            Property(x => x.TSTPA).HasColumnName("TSTPA").IsOptional().HasMaxLength(200);
            Property(x => x.EDAMI).HasColumnName("EDAMI").IsOptional().HasMaxLength(200);
            Property(x => x.ECMI).HasColumnName("ECMI").IsOptional().HasMaxLength(200);
            Property(x => x.EAMI).HasColumnName("EAMI").IsOptional().HasMaxLength(200);
            Property(x => x.THEDMI).HasColumnName("THEDMI").IsOptional().HasMaxLength(200);
            Property(x => x.Attachment).HasColumnName("ATTACHMENT").IsOptional().HasMaxLength(500);
            Property(x => x.DeclareDepartLeader).HasColumnName("DECLAREDEPARTLEADER").IsOptional();
            Property(x => x.TechnologyDepartLeader).HasColumnName("TECHNOLOGYDEPARTLEADER").IsOptional();
            Property(x => x.TechnologyDepartMinister).HasColumnName("TECHNOLOGYDEPARTMINISTER").IsOptional();
            Property(x => x.ChiefEngineer).HasColumnName("CHIEFENGINEER").IsOptional();
            Property(x => x.DeclarantName).HasColumnName("DECLARANTNAME").IsOptional().HasMaxLength(200);
            Property(x => x.ItemDeclareDepartmentName).HasColumnName("ITEMDECLAREDEPARTMENTNAME").IsOptional().HasMaxLength(200);
            Property(x => x.ProjectNameName).HasColumnName("PROJECTNAMENAME").IsOptional().HasMaxLength(200);
        }
    }

    // T_Win_AwardManager
    internal partial class T_Win_AwardManagerConfiguration : EntityTypeConfiguration<T_Win_AwardManager>
    {
        public T_Win_AwardManagerConfiguration()
        {
			ToTable("T_WIN_AWARDMANAGER");
            HasKey(x => x.ID);

            Property(x => x.ID).HasColumnName("ID").IsRequired().HasMaxLength(50);
            Property(x => x.CreateDate).HasColumnName("CREATEDATE").IsOptional();
            Property(x => x.ModifyDate).HasColumnName("MODIFYDATE").IsOptional();
            Property(x => x.CreateUserID).HasColumnName("CREATEUSERID").IsOptional().HasMaxLength(50);
            Property(x => x.CreateUser).HasColumnName("CREATEUSER").IsOptional().HasMaxLength(50);
            Property(x => x.ModifyUserID).HasColumnName("MODIFYUSERID").IsOptional().HasMaxLength(50);
            Property(x => x.ModifyUser).HasColumnName("MODIFYUSER").IsOptional().HasMaxLength(50);
            Property(x => x.OrgID).HasColumnName("ORGID").IsOptional().HasMaxLength(50);
            Property(x => x.CompanyID).HasColumnName("COMPANYID").IsOptional().HasMaxLength(50);
            Property(x => x.FlowPhase).HasColumnName("FLOWPHASE").IsOptional().HasMaxLength(50);
            Property(x => x.FlowInfo).HasColumnName("FLOWINFO").IsOptional().HasMaxLength(1073741823);
            Property(x => x.StepName).HasColumnName("STEPNAME").IsOptional().HasMaxLength(500);
            Property(x => x.DeclareYear).HasColumnName("DECLAREYEAR").IsOptional().HasMaxLength(200);
            Property(x => x.DeclareDate).HasColumnName("DECLAREDATE").IsOptional();
            Property(x => x.ProjectName).HasColumnName("PROJECTNAME").IsOptional().HasMaxLength(200);
            Property(x => x.Declarant).HasColumnName("DECLARANT").IsOptional().HasMaxLength(200);
            Property(x => x.DeclareDepartment).HasColumnName("DECLAREDEPARTMENT").IsOptional().HasMaxLength(200);
            Property(x => x.DeclareCategory).HasColumnName("DECLARECATEGORY").IsOptional().HasMaxLength(200);
            Property(x => x.DeclareLevel).HasColumnName("DECLARELEVEL").IsOptional().HasMaxLength(200);
            Property(x => x.JoinDepartment).HasColumnName("JOINDEPARTMENT").IsOptional().HasMaxLength(200);
            Property(x => x.ProjectNumber).HasColumnName("PROJECTNUMBER").IsOptional().HasMaxLength(200);
            Property(x => x.ProjectStartDate).HasColumnName("PROJECTSTARTDATE").IsOptional().HasMaxLength(200);
            Property(x => x.ProjectEndDate).HasColumnName("PROJECTENDDATE").IsOptional().HasMaxLength(200);
            Property(x => x.ExpertCount).HasColumnName("EXPERTCOUNT").IsOptional().HasMaxLength(200);
            Property(x => x.AverageScore).HasColumnName("AVERAGESCORE").IsOptional().HasMaxLength(200);
            Property(x => x.HeightScore).HasColumnName("HEIGHTSCORE").IsOptional().HasMaxLength(200);
            Property(x => x.LowScore).HasColumnName("LOWSCORE").IsOptional().HasMaxLength(200);
            Property(x => x.AwardCategory).HasColumnName("AWARDCATEGORY").IsOptional().HasMaxLength(200);
            Property(x => x.AwardRecord).HasColumnName("AWARDRECORD").IsOptional().HasMaxLength(200);
            Property(x => x.JoinPerson).HasColumnName("JOINPERSON").IsOptional().HasMaxLength(1073741823);
        }
    }

    // T_Win_AwardManager_JoinPerson
    internal partial class T_Win_AwardManager_JoinPersonConfiguration : EntityTypeConfiguration<T_Win_AwardManager_JoinPerson>
    {
        public T_Win_AwardManager_JoinPersonConfiguration()
        {
			ToTable("T_WIN_AWARDMANAGER_JOINPERSON");
            HasKey(x => x.ID);

            Property(x => x.ID).HasColumnName("ID").IsRequired().HasMaxLength(50);
            Property(x => x.T_Win_AwardManagerID).HasColumnName("T_WIN_AWARDMANAGERID").IsOptional().HasMaxLength(50);
            Property(x => x.SortIndex).HasColumnName("SORTINDEX").IsOptional();
            Property(x => x.IsReleased).HasColumnName("ISRELEASED").IsOptional().HasMaxLength(1);
            Property(x => x.Name).HasColumnName("NAME").IsOptional().HasMaxLength(200);
            Property(x => x.Department).HasColumnName("DEPARTMENT").IsOptional().HasMaxLength(200);
            Property(x => x.Role).HasColumnName("ROLE").IsOptional().HasMaxLength(200);
            Property(x => x.Remark).HasColumnName("REMARK").IsOptional().HasMaxLength(200);

            // Foreign keys
            HasOptional(a => a.T_Win_AwardManager).WithMany(b => b.T_Win_AwardManager_JoinPerson).HasForeignKey(c => c.T_Win_AwardManagerID); // FK_T_Win_AwardManager_JoinPerson_T_Win_AwardManager
        }
    }

    // T_Win_CurrentYearExpert
    internal partial class T_Win_CurrentYearExpertConfiguration : EntityTypeConfiguration<T_Win_CurrentYearExpert>
    {
        public T_Win_CurrentYearExpertConfiguration()
        {
			ToTable("T_WIN_CURRENTYEAREXPERT");
            HasKey(x => x.ID);

            Property(x => x.ID).HasColumnName("ID").IsRequired().HasMaxLength(50);
            Property(x => x.CreateDate).HasColumnName("CREATEDATE").IsOptional();
            Property(x => x.ModifyDate).HasColumnName("MODIFYDATE").IsOptional();
            Property(x => x.CreateUserID).HasColumnName("CREATEUSERID").IsOptional().HasMaxLength(50);
            Property(x => x.CreateUser).HasColumnName("CREATEUSER").IsOptional().HasMaxLength(50);
            Property(x => x.ModifyUserID).HasColumnName("MODIFYUSERID").IsOptional().HasMaxLength(50);
            Property(x => x.ModifyUser).HasColumnName("MODIFYUSER").IsOptional().HasMaxLength(50);
            Property(x => x.OrgID).HasColumnName("ORGID").IsOptional().HasMaxLength(50);
            Property(x => x.CompanyID).HasColumnName("COMPANYID").IsOptional().HasMaxLength(50);
            Property(x => x.FlowPhase).HasColumnName("FLOWPHASE").IsOptional().HasMaxLength(50);
            Property(x => x.FlowInfo).HasColumnName("FLOWINFO").IsOptional().HasMaxLength(1073741823);
            Property(x => x.StepName).HasColumnName("STEPNAME").IsOptional().HasMaxLength(500);
            Property(x => x.Declarent).HasColumnName("DECLARENT").IsOptional().HasMaxLength(200);
            Property(x => x.DeclarentName).HasColumnName("DECLARENTNAME").IsOptional().HasMaxLength(200);
            Property(x => x.DeclarentDepartment).HasColumnName("DECLARENTDEPARTMENT").IsOptional().HasMaxLength(200);
            Property(x => x.DeclarentDepartmentName).HasColumnName("DECLARENTDEPARTMENTNAME").IsOptional().HasMaxLength(200);
            Property(x => x.CurrentYear).HasColumnName("CURRENTYEAR").IsOptional().HasMaxLength(200);
            Property(x => x.AppraisalMeeting).HasColumnName("APPRAISALMEETING").IsOptional();
            Property(x => x.CurrentYearExpert).HasColumnName("CURRENTYEAREXPERT").IsOptional().HasMaxLength(200);
            Property(x => x.CurrentYearExpertName).HasColumnName("CURRENTYEAREXPERTNAME").IsOptional().HasMaxLength(200);
            Property(x => x.Attachment).HasColumnName("ATTACHMENT").IsOptional().HasMaxLength(500);
            Property(x => x.Remark).HasColumnName("REMARK").IsOptional().HasMaxLength(500);
            Property(x => x.TechnologyDepartmentOpinion).HasColumnName("TECHNOLOGYDEPARTMENTOPINION").IsOptional();
            Property(x => x.ChiefEngineerOpinion).HasColumnName("CHIEFENGINEEROPINION").IsOptional();
        }
    }

    // T_Win_Declare
    internal partial class T_Win_DeclareConfiguration : EntityTypeConfiguration<T_Win_Declare>
    {
        public T_Win_DeclareConfiguration()
        {
			ToTable("T_WIN_DECLARE");
            HasKey(x => x.ID);

            Property(x => x.ID).HasColumnName("ID").IsRequired().HasMaxLength(50);
            Property(x => x.CreateDate).HasColumnName("CREATEDATE").IsOptional();
            Property(x => x.ModifyDate).HasColumnName("MODIFYDATE").IsOptional();
            Property(x => x.CreateUserID).HasColumnName("CREATEUSERID").IsOptional().HasMaxLength(50);
            Property(x => x.CreateUser).HasColumnName("CREATEUSER").IsOptional().HasMaxLength(50);
            Property(x => x.ModifyUserID).HasColumnName("MODIFYUSERID").IsOptional().HasMaxLength(50);
            Property(x => x.ModifyUser).HasColumnName("MODIFYUSER").IsOptional().HasMaxLength(50);
            Property(x => x.OrgID).HasColumnName("ORGID").IsOptional().HasMaxLength(50);
            Property(x => x.CompanyID).HasColumnName("COMPANYID").IsOptional().HasMaxLength(50);
            Property(x => x.FlowPhase).HasColumnName("FLOWPHASE").IsOptional().HasMaxLength(50);
            Property(x => x.FlowInfo).HasColumnName("FLOWINFO").IsOptional().HasMaxLength(1073741823);
            Property(x => x.StepName).HasColumnName("STEPNAME").IsOptional().HasMaxLength(500);
            Property(x => x.DeclareYear).HasColumnName("DECLAREYEAR").IsOptional().HasMaxLength(200);
            Property(x => x.DeclareDate).HasColumnName("DECLAREDATE").IsOptional();
            Property(x => x.Declarant).HasColumnName("DECLARANT").IsOptional().HasMaxLength(200);
            Property(x => x.DeclarantName).HasColumnName("DECLARANTNAME").IsOptional().HasMaxLength(200);
            Property(x => x.DeclareDepartment).HasColumnName("DECLAREDEPARTMENT").IsOptional().HasMaxLength(200);
            Property(x => x.DeclareDepartmentName).HasColumnName("DECLAREDEPARTMENTNAME").IsOptional().HasMaxLength(200);
            Property(x => x.DeclareCategory).HasColumnName("DECLARECATEGORY").IsOptional().HasMaxLength(200);
            Property(x => x.DeclareLevel).HasColumnName("DECLARELEVEL").IsOptional().HasMaxLength(200);
            Property(x => x.JoinDepartment).HasColumnName("JOINDEPARTMENT").IsOptional().HasMaxLength(200);
            Property(x => x.JoinDepartmentName).HasColumnName("JOINDEPARTMENTNAME").IsOptional().HasMaxLength(200);
            Property(x => x.ProjectNumber).HasColumnName("PROJECTNUMBER").IsOptional().HasMaxLength(200);
            Property(x => x.ProjectName).HasColumnName("PROJECTNAME").IsOptional().HasMaxLength(200);
            Property(x => x.ProjectStartDate).HasColumnName("PROJECTSTARTDATE").IsOptional();
            Property(x => x.ProjectEndDate).HasColumnName("PROJECTENDDATE").IsOptional();
            Property(x => x.IsCheck).HasColumnName("ISCHECK").IsOptional().HasMaxLength(200);
            Property(x => x.CheckDate).HasColumnName("CHECKDATE").IsOptional();
            Property(x => x.AuthorizedPatent).HasColumnName("AUTHORIZEDPATENT").IsOptional().HasPrecision(18,4);
            Property(x => x.AuthorizedOtherIP).HasColumnName("AUTHORIZEDOTHERIP").IsOptional().HasPrecision(18,4);
            Property(x => x.SPACMI).HasColumnName("SPACMI").IsOptional().HasMaxLength(200);
            Property(x => x.STAMI).HasColumnName("STAMI").IsOptional().HasMaxLength(200);
            Property(x => x.TSTA).HasColumnName("TSTA").IsOptional().HasMaxLength(200);
            Property(x => x.EDAMI).HasColumnName("EDAMI").IsOptional().HasMaxLength(200);
            Property(x => x.EGCPMAMI).HasColumnName("EGCPMAMI").IsOptional().HasMaxLength(200);
            Property(x => x.ECAMI).HasColumnName("ECAMI").IsOptional().HasMaxLength(200);
            Property(x => x.THCEEDA).HasColumnName("THCEEDA").IsOptional().HasMaxLength(200);
            Property(x => x.AwardAttachment).HasColumnName("AWARDATTACHMENT").IsOptional().HasMaxLength(500);
            Property(x => x.DeclareDepartmentLeader).HasColumnName("DECLAREDEPARTMENTLEADER").IsOptional();
            Property(x => x.TechnologyDepartmentOpinion).HasColumnName("TECHNOLOGYDEPARTMENTOPINION").IsOptional();
            Property(x => x.TechnologyMinisterOpinion).HasColumnName("TECHNOLOGYMINISTEROPINION").IsOptional();
            Property(x => x.ChiefEngineerOpinion).HasColumnName("CHIEFENGINEEROPINION").IsOptional();
        }
    }

    // T_Win_DeclareManager
    internal partial class T_Win_DeclareManagerConfiguration : EntityTypeConfiguration<T_Win_DeclareManager>
    {
        public T_Win_DeclareManagerConfiguration()
        {
			ToTable("T_WIN_DECLAREMANAGER");
            HasKey(x => x.ID);

            Property(x => x.ID).HasColumnName("ID").IsRequired().HasMaxLength(50);
            Property(x => x.CreateDate).HasColumnName("CREATEDATE").IsOptional();
            Property(x => x.ModifyDate).HasColumnName("MODIFYDATE").IsOptional();
            Property(x => x.CreateUserID).HasColumnName("CREATEUSERID").IsOptional().HasMaxLength(50);
            Property(x => x.CreateUser).HasColumnName("CREATEUSER").IsOptional().HasMaxLength(50);
            Property(x => x.ModifyUserID).HasColumnName("MODIFYUSERID").IsOptional().HasMaxLength(50);
            Property(x => x.ModifyUser).HasColumnName("MODIFYUSER").IsOptional().HasMaxLength(50);
            Property(x => x.OrgID).HasColumnName("ORGID").IsOptional().HasMaxLength(50);
            Property(x => x.CompanyID).HasColumnName("COMPANYID").IsOptional().HasMaxLength(50);
            Property(x => x.FlowPhase).HasColumnName("FLOWPHASE").IsOptional().HasMaxLength(50);
            Property(x => x.FlowInfo).HasColumnName("FLOWINFO").IsOptional().HasMaxLength(1073741823);
            Property(x => x.StepName).HasColumnName("STEPNAME").IsOptional().HasMaxLength(500);
            Property(x => x.DeclareYear).HasColumnName("DECLAREYEAR").IsOptional().HasMaxLength(200);
            Property(x => x.DeclareDate).HasColumnName("DECLAREDATE").IsOptional();
            Property(x => x.Declarant).HasColumnName("DECLARANT").IsOptional().HasMaxLength(200);
            Property(x => x.DeclarantName).HasColumnName("DECLARANTNAME").IsOptional().HasMaxLength(200);
            Property(x => x.DeclareDepartment).HasColumnName("DECLAREDEPARTMENT").IsOptional().HasMaxLength(200);
            Property(x => x.DeclareDepartmentName).HasColumnName("DECLAREDEPARTMENTNAME").IsOptional().HasMaxLength(200);
            Property(x => x.DeclareCategory).HasColumnName("DECLARECATEGORY").IsOptional().HasMaxLength(200);
            Property(x => x.DeclareLevel).HasColumnName("DECLARELEVEL").IsOptional().HasMaxLength(200);
            Property(x => x.JoinDepartment).HasColumnName("JOINDEPARTMENT").IsOptional().HasMaxLength(200);
            Property(x => x.JoinDepartmentName).HasColumnName("JOINDEPARTMENTNAME").IsOptional().HasMaxLength(200);
            Property(x => x.ProjectNumber).HasColumnName("PROJECTNUMBER").IsOptional().HasMaxLength(200);
            Property(x => x.ProjectName).HasColumnName("PROJECTNAME").IsOptional().HasMaxLength(200);
            Property(x => x.ProjectStartDate).HasColumnName("PROJECTSTARTDATE").IsOptional();
            Property(x => x.ProjectEndDate).HasColumnName("PROJECTENDDATE").IsOptional();
            Property(x => x.IsCheck).HasColumnName("ISCHECK").IsOptional().HasMaxLength(200);
            Property(x => x.CheckDate).HasColumnName("CHECKDATE").IsOptional();
            Property(x => x.AuthorizedPatent).HasColumnName("AUTHORIZEDPATENT").IsOptional().HasPrecision(18,4);
            Property(x => x.AuthorizedOtherIP).HasColumnName("AUTHORIZEDOTHERIP").IsOptional().HasPrecision(18,4);
            Property(x => x.SPACMI).HasColumnName("SPACMI").IsOptional().HasMaxLength(200);
            Property(x => x.STAMI).HasColumnName("STAMI").IsOptional().HasMaxLength(200);
            Property(x => x.TSTA).HasColumnName("TSTA").IsOptional().HasMaxLength(200);
            Property(x => x.EDAMI).HasColumnName("EDAMI").IsOptional().HasMaxLength(200);
            Property(x => x.EGCPMAMI).HasColumnName("EGCPMAMI").IsOptional().HasMaxLength(200);
            Property(x => x.ECAMI).HasColumnName("ECAMI").IsOptional().HasMaxLength(200);
            Property(x => x.THCEEDA).HasColumnName("THCEEDA").IsOptional().HasMaxLength(200);
            Property(x => x.AwardAttachment).HasColumnName("AWARDATTACHMENT").IsOptional().HasMaxLength(500);
            Property(x => x.DeclareDepartmentLeader).HasColumnName("DECLAREDEPARTMENTLEADER").IsOptional();
            Property(x => x.TechnologyDepartmentOpinion).HasColumnName("TECHNOLOGYDEPARTMENTOPINION").IsOptional();
            Property(x => x.TechnologyMinisterOpinion).HasColumnName("TECHNOLOGYMINISTEROPINION").IsOptional();
            Property(x => x.ChiefEngineerOpinion).HasColumnName("CHIEFENGINEEROPINION").IsOptional();
            Property(x => x.ProjectNameName).HasColumnName("PROJECTNAMENAME").IsOptional().HasMaxLength(200);
            Property(x => x.JoinPersons).HasColumnName("JOINPERSONS").IsOptional().HasMaxLength(1073741823);
        }
    }

    // T_Win_DeclareManager_JoinPersons
    internal partial class T_Win_DeclareManager_JoinPersonsConfiguration : EntityTypeConfiguration<T_Win_DeclareManager_JoinPersons>
    {
        public T_Win_DeclareManager_JoinPersonsConfiguration()
        {
			ToTable("T_WIN_DECLAREMANAGER_JOINPERSONS");
            HasKey(x => x.ID);

            Property(x => x.ID).HasColumnName("ID").IsRequired().HasMaxLength(50);
            Property(x => x.T_Win_DeclareManagerID).HasColumnName("T_WIN_DECLAREMANAGERID").IsOptional().HasMaxLength(50);
            Property(x => x.SortIndex).HasColumnName("SORTINDEX").IsOptional();
            Property(x => x.IsReleased).HasColumnName("ISRELEASED").IsOptional().HasMaxLength(1);
            Property(x => x.Person).HasColumnName("PERSON").IsOptional().HasMaxLength(200);
            Property(x => x.PersonName).HasColumnName("PERSONNAME").IsOptional().HasMaxLength(200);
            Property(x => x.Dept).HasColumnName("DEPT").IsOptional().HasMaxLength(200);
            Property(x => x.DeptName).HasColumnName("DEPTNAME").IsOptional().HasMaxLength(200);
            Property(x => x.ProjectRole).HasColumnName("PROJECTROLE").IsOptional().HasMaxLength(200);
            Property(x => x.Remark).HasColumnName("REMARK").IsOptional().HasMaxLength(200);

            // Foreign keys
            HasOptional(a => a.T_Win_DeclareManager).WithMany(b => b.T_Win_DeclareManager_JoinPersons).HasForeignKey(c => c.T_Win_DeclareManagerID); // FK_T_Win_DeclareManager_JoinPersons_T_Win_DeclareManager
        }
    }

    // T_Win_ExpertGrade
    internal partial class T_Win_ExpertGradeConfiguration : EntityTypeConfiguration<T_Win_ExpertGrade>
    {
        public T_Win_ExpertGradeConfiguration()
        {
			ToTable("T_WIN_EXPERTGRADE");
            HasKey(x => x.ID);

            Property(x => x.ID).HasColumnName("ID").IsRequired().HasMaxLength(50);
            Property(x => x.CreateDate).HasColumnName("CREATEDATE").IsOptional();
            Property(x => x.ModifyDate).HasColumnName("MODIFYDATE").IsOptional();
            Property(x => x.CreateUserID).HasColumnName("CREATEUSERID").IsOptional().HasMaxLength(50);
            Property(x => x.CreateUser).HasColumnName("CREATEUSER").IsOptional().HasMaxLength(50);
            Property(x => x.ModifyUserID).HasColumnName("MODIFYUSERID").IsOptional().HasMaxLength(50);
            Property(x => x.ModifyUser).HasColumnName("MODIFYUSER").IsOptional().HasMaxLength(50);
            Property(x => x.OrgID).HasColumnName("ORGID").IsOptional().HasMaxLength(50);
            Property(x => x.CompanyID).HasColumnName("COMPANYID").IsOptional().HasMaxLength(50);
            Property(x => x.FlowPhase).HasColumnName("FLOWPHASE").IsOptional().HasMaxLength(50);
            Property(x => x.FlowInfo).HasColumnName("FLOWINFO").IsOptional().HasMaxLength(1073741823);
            Property(x => x.StepName).HasColumnName("STEPNAME").IsOptional().HasMaxLength(500);
            Property(x => x.ExpertName).HasColumnName("EXPERTNAME").IsOptional().HasMaxLength(200);
            Property(x => x.ExpertNameName).HasColumnName("EXPERTNAMENAME").IsOptional().HasMaxLength(200);
            Property(x => x.ExpertDept).HasColumnName("EXPERTDEPT").IsOptional().HasMaxLength(200);
            Property(x => x.ExpertDeptName).HasColumnName("EXPERTDEPTNAME").IsOptional().HasMaxLength(200);
            Property(x => x.EvaluateYear).HasColumnName("EVALUATEYEAR").IsOptional().HasMaxLength(200);
            Property(x => x.ProjectCount).HasColumnName("PROJECTCOUNT").IsOptional().HasMaxLength(200);
            Property(x => x.EvaluationMeetingDate).HasColumnName("EVALUATIONMEETINGDATE").IsOptional();
            Property(x => x.GradeDesc).HasColumnName("GRADEDESC").IsOptional().HasMaxLength(200);
            Property(x => x.AwardItems).HasColumnName("AWARDITEMS").IsOptional().HasMaxLength(1073741823);
        }
    }

    // T_Win_ExpertGrade_AwardItems
    internal partial class T_Win_ExpertGrade_AwardItemsConfiguration : EntityTypeConfiguration<T_Win_ExpertGrade_AwardItems>
    {
        public T_Win_ExpertGrade_AwardItemsConfiguration()
        {
			ToTable("T_WIN_EXPERTGRADE_AWARDITEMS");
            HasKey(x => x.ID);

            Property(x => x.ID).HasColumnName("ID").IsRequired().HasMaxLength(50);
            Property(x => x.T_Win_ExpertGradeID).HasColumnName("T_WIN_EXPERTGRADEID").IsOptional().HasMaxLength(50);
            Property(x => x.SortIndex).HasColumnName("SORTINDEX").IsOptional();
            Property(x => x.IsReleased).HasColumnName("ISRELEASED").IsOptional().HasMaxLength(1);
            Property(x => x.Number).HasColumnName("NUMBER").IsOptional().HasMaxLength(200);
            Property(x => x.Category).HasColumnName("CATEGORY").IsOptional().HasMaxLength(200);
            Property(x => x.ProjectName).HasColumnName("PROJECTNAME").IsOptional().HasMaxLength(200);
            Property(x => x.ProjectNameName).HasColumnName("PROJECTNAMENAME").IsOptional().HasMaxLength(200);
            Property(x => x.Dept).HasColumnName("DEPT").IsOptional().HasMaxLength(200);
            Property(x => x.DeptName).HasColumnName("DEPTNAME").IsOptional().HasMaxLength(200);
            Property(x => x.Grade).HasColumnName("GRADE").IsOptional().HasMaxLength(200);
            Property(x => x.ProjectID).HasColumnName("PROJECTID").IsOptional().HasMaxLength(200);

            // Foreign keys
            HasOptional(a => a.T_Win_ExpertGrade).WithMany(b => b.T_Win_ExpertGrade_AwardItems).HasForeignKey(c => c.T_Win_ExpertGradeID); // FK_T_Win_ExpertGrade_AwardItems_T_Win_ExpertGrade
        }
    }

    // T_Win_ExpertManager
    internal partial class T_Win_ExpertManagerConfiguration : EntityTypeConfiguration<T_Win_ExpertManager>
    {
        public T_Win_ExpertManagerConfiguration()
        {
			ToTable("T_WIN_EXPERTMANAGER");
            HasKey(x => x.ID);

            Property(x => x.ID).HasColumnName("ID").IsRequired().HasMaxLength(50);
            Property(x => x.CreateDate).HasColumnName("CREATEDATE").IsOptional();
            Property(x => x.ModifyDate).HasColumnName("MODIFYDATE").IsOptional();
            Property(x => x.CreateUserID).HasColumnName("CREATEUSERID").IsOptional().HasMaxLength(50);
            Property(x => x.CreateUser).HasColumnName("CREATEUSER").IsOptional().HasMaxLength(50);
            Property(x => x.ModifyUserID).HasColumnName("MODIFYUSERID").IsOptional().HasMaxLength(50);
            Property(x => x.ModifyUser).HasColumnName("MODIFYUSER").IsOptional().HasMaxLength(50);
            Property(x => x.OrgID).HasColumnName("ORGID").IsOptional().HasMaxLength(50);
            Property(x => x.CompanyID).HasColumnName("COMPANYID").IsOptional().HasMaxLength(50);
            Property(x => x.FlowPhase).HasColumnName("FLOWPHASE").IsOptional().HasMaxLength(50);
            Property(x => x.FlowInfo).HasColumnName("FLOWINFO").IsOptional().HasMaxLength(1073741823);
            Property(x => x.StepName).HasColumnName("STEPNAME").IsOptional().HasMaxLength(500);
            Property(x => x.ExpertName).HasColumnName("EXPERTNAME").IsOptional().HasMaxLength(200);
            Property(x => x.ExpertDepartment).HasColumnName("EXPERTDEPARTMENT").IsOptional().HasMaxLength(200);
            Property(x => x.ExpertAge).HasColumnName("EXPERTAGE").IsOptional().HasMaxLength(200);
            Property(x => x.SpecializedField).HasColumnName("SPECIALIZEDFIELD").IsOptional().HasMaxLength(200);
            Property(x => x.Professional).HasColumnName("PROFESSIONAL").IsOptional().HasMaxLength(200);
            Property(x => x.Education).HasColumnName("EDUCATION").IsOptional().HasMaxLength(200);
            Property(x => x.AwardsCategory).HasColumnName("AWARDSCATEGORY").IsOptional().HasMaxLength(200);
            Property(x => x.Remark).HasColumnName("REMARK").IsOptional().HasMaxLength(200);
            Property(x => x.Experter).HasColumnName("EXPERTER").IsOptional().HasMaxLength(200);
            Property(x => x.ExperterName).HasColumnName("EXPERTERNAME").IsOptional().HasMaxLength(200);
            Property(x => x.ExpertDepartmentName).HasColumnName("EXPERTDEPARTMENTNAME").IsOptional().HasMaxLength(200);
        }
    }

    // T_Win_IndustryAwardDeclare
    internal partial class T_Win_IndustryAwardDeclareConfiguration : EntityTypeConfiguration<T_Win_IndustryAwardDeclare>
    {
        public T_Win_IndustryAwardDeclareConfiguration()
        {
			ToTable("T_WIN_INDUSTRYAWARDDECLARE");
            HasKey(x => x.ID);

            Property(x => x.ID).HasColumnName("ID").IsRequired().HasMaxLength(50);
            Property(x => x.CreateDate).HasColumnName("CREATEDATE").IsOptional();
            Property(x => x.ModifyDate).HasColumnName("MODIFYDATE").IsOptional();
            Property(x => x.CreateUserID).HasColumnName("CREATEUSERID").IsOptional().HasMaxLength(50);
            Property(x => x.CreateUser).HasColumnName("CREATEUSER").IsOptional().HasMaxLength(50);
            Property(x => x.ModifyUserID).HasColumnName("MODIFYUSERID").IsOptional().HasMaxLength(50);
            Property(x => x.ModifyUser).HasColumnName("MODIFYUSER").IsOptional().HasMaxLength(50);
            Property(x => x.OrgID).HasColumnName("ORGID").IsOptional().HasMaxLength(50);
            Property(x => x.CompanyID).HasColumnName("COMPANYID").IsOptional().HasMaxLength(50);
            Property(x => x.FlowPhase).HasColumnName("FLOWPHASE").IsOptional().HasMaxLength(50);
            Property(x => x.FlowInfo).HasColumnName("FLOWINFO").IsOptional().HasMaxLength(1073741823);
            Property(x => x.StepName).HasColumnName("STEPNAME").IsOptional().HasMaxLength(500);
            Property(x => x.DeclareProject).HasColumnName("DECLAREPROJECT").IsOptional().HasMaxLength(200);
            Property(x => x.DeclareProjectName).HasColumnName("DECLAREPROJECTNAME").IsOptional().HasMaxLength(200);
            Property(x => x.DeclareAward).HasColumnName("DECLAREAWARD").IsOptional().HasMaxLength(200);
            Property(x => x.DeclareAwardName).HasColumnName("DECLAREAWARDNAME").IsOptional().HasMaxLength(200);
            Property(x => x.Declarant).HasColumnName("DECLARANT").IsOptional().HasMaxLength(200);
            Property(x => x.DeclarantName).HasColumnName("DECLARANTNAME").IsOptional().HasMaxLength(200);
            Property(x => x.DeclareDepartment).HasColumnName("DECLAREDEPARTMENT").IsOptional().HasMaxLength(200);
            Property(x => x.DeclareDepartmentName).HasColumnName("DECLAREDEPARTMENTNAME").IsOptional().HasMaxLength(200);
            Property(x => x.DeclareYear).HasColumnName("DECLAREYEAR").IsOptional().HasMaxLength(200);
            Property(x => x.DeclareDate).HasColumnName("DECLAREDATE").IsOptional();
            Property(x => x.ProjectNumber).HasColumnName("PROJECTNUMBER").IsOptional().HasMaxLength(200);
            Property(x => x.JoinDepartment).HasColumnName("JOINDEPARTMENT").IsOptional().HasMaxLength(200);
            Property(x => x.JoinDepartmentName).HasColumnName("JOINDEPARTMENTNAME").IsOptional().HasMaxLength(200);
            Property(x => x.ProjectStartDate).HasColumnName("PROJECTSTARTDATE").IsOptional();
            Property(x => x.ProjectEndDate).HasColumnName("PROJECTENDDATE").IsOptional();
            Property(x => x.ProjectIsCheck).HasColumnName("PROJECTISCHECK").IsOptional().HasMaxLength(200);
            Property(x => x.ProjectCheckDate).HasColumnName("PROJECTCHECKDATE").IsOptional();
            Property(x => x.InventionPatent).HasColumnName("INVENTIONPATENT").IsOptional().HasMaxLength(200);
            Property(x => x.OtherInventionPatent).HasColumnName("OTHERINVENTIONPATENT").IsOptional().HasMaxLength(200);
            Property(x => x.ACTR).HasColumnName("ACTR").IsOptional().HasMaxLength(500);
            Property(x => x.AKCRA).HasColumnName("AKCRA").IsOptional().HasMaxLength(500);
            Property(x => x.DeclareAttachment).HasColumnName("DECLAREATTACHMENT").IsOptional().HasMaxLength(500);
            Property(x => x.JoinPerson).HasColumnName("JOINPERSON").IsOptional().HasMaxLength(1073741823);
            Property(x => x.DepartmentLeader).HasColumnName("DEPARTMENTLEADER").IsOptional();
            Property(x => x.TechnologyDepartmentleader).HasColumnName("TECHNOLOGYDEPARTMENTLEADER").IsOptional();
            Property(x => x.TechnologyDepartmentMinister).HasColumnName("TECHNOLOGYDEPARTMENTMINISTER").IsOptional();
            Property(x => x.ChiefEngineer).HasColumnName("CHIEFENGINEER").IsOptional();
        }
    }

    // T_Win_IndustryAwardDeclare_JoinPerson
    internal partial class T_Win_IndustryAwardDeclare_JoinPersonConfiguration : EntityTypeConfiguration<T_Win_IndustryAwardDeclare_JoinPerson>
    {
        public T_Win_IndustryAwardDeclare_JoinPersonConfiguration()
        {
			ToTable("T_WIN_INDUSTRYAWARDDECLARE_JOINPERSON");
            HasKey(x => x.ID);

            Property(x => x.ID).HasColumnName("ID").IsRequired().HasMaxLength(50);
            Property(x => x.T_Win_IndustryAwardDeclareID).HasColumnName("T_WIN_INDUSTRYAWARDDECLAREID").IsOptional().HasMaxLength(50);
            Property(x => x.SortIndex).HasColumnName("SORTINDEX").IsOptional();
            Property(x => x.IsReleased).HasColumnName("ISRELEASED").IsOptional().HasMaxLength(1);
            Property(x => x.Name).HasColumnName("NAME").IsOptional().HasMaxLength(200);
            Property(x => x.Department).HasColumnName("DEPARTMENT").IsOptional().HasMaxLength(200);
            Property(x => x.ProjectRole).HasColumnName("PROJECTROLE").IsOptional().HasMaxLength(200);
            Property(x => x.Remark).HasColumnName("REMARK").IsOptional().HasMaxLength(200);
            Property(x => x.NameName).HasColumnName("NAMENAME").IsOptional().HasMaxLength(200);
            Property(x => x.DepartmentName).HasColumnName("DEPARTMENTNAME").IsOptional().HasMaxLength(200);

            // Foreign keys
            HasOptional(a => a.T_Win_IndustryAwardDeclare).WithMany(b => b.T_Win_IndustryAwardDeclare_JoinPerson).HasForeignKey(c => c.T_Win_IndustryAwardDeclareID); // FK_T_Win_IndustryAwardDeclare_JoinPerson_T_Win_IndustryAwardDeclare
        }
    }

    // T_Win_IndustryAwardDemandRecord
    internal partial class T_Win_IndustryAwardDemandRecordConfiguration : EntityTypeConfiguration<T_Win_IndustryAwardDemandRecord>
    {
        public T_Win_IndustryAwardDemandRecordConfiguration()
        {
			ToTable("T_WIN_INDUSTRYAWARDDEMANDRECORD");
            HasKey(x => x.ID);

            Property(x => x.ID).HasColumnName("ID").IsRequired().HasMaxLength(50);
            Property(x => x.CreateDate).HasColumnName("CREATEDATE").IsOptional();
            Property(x => x.ModifyDate).HasColumnName("MODIFYDATE").IsOptional();
            Property(x => x.CreateUserID).HasColumnName("CREATEUSERID").IsOptional().HasMaxLength(50);
            Property(x => x.CreateUser).HasColumnName("CREATEUSER").IsOptional().HasMaxLength(50);
            Property(x => x.ModifyUserID).HasColumnName("MODIFYUSERID").IsOptional().HasMaxLength(50);
            Property(x => x.ModifyUser).HasColumnName("MODIFYUSER").IsOptional().HasMaxLength(50);
            Property(x => x.OrgID).HasColumnName("ORGID").IsOptional().HasMaxLength(50);
            Property(x => x.CompanyID).HasColumnName("COMPANYID").IsOptional().HasMaxLength(50);
            Property(x => x.FlowPhase).HasColumnName("FLOWPHASE").IsOptional().HasMaxLength(50);
            Property(x => x.FlowInfo).HasColumnName("FLOWINFO").IsOptional().HasMaxLength(1073741823);
            Property(x => x.StepName).HasColumnName("STEPNAME").IsOptional().HasMaxLength(500);
            Property(x => x.AwardName).HasColumnName("AWARDNAME").IsOptional().HasMaxLength(200);
            Property(x => x.AwardResultType).HasColumnName("AWARDRESULTTYPE").IsOptional().HasMaxLength(200);
            Property(x => x.SponsorUnit).HasColumnName("SPONSORUNIT").IsOptional().HasMaxLength(200);
            Property(x => x.Deadline).HasColumnName("DEADLINE").IsOptional().HasMaxLength(200);
            Property(x => x.WebSite).HasColumnName("WEBSITE").IsOptional().HasMaxLength(200);
            Property(x => x.ACTR).HasColumnName("ACTR").IsOptional().HasMaxLength(500);
            Property(x => x.AKCRA).HasColumnName("AKCRA").IsOptional().HasMaxLength(500);
            Property(x => x.Declarant).HasColumnName("DECLARANT").IsOptional().HasMaxLength(200);
            Property(x => x.DeclarantName).HasColumnName("DECLARANTNAME").IsOptional().HasMaxLength(200);
            Property(x => x.DeclareDate).HasColumnName("DECLAREDATE").IsOptional();
            Property(x => x.Remark).HasColumnName("REMARK").IsOptional().HasMaxLength(200);
        }
    }

    // T_Win_IndustryAwardManager
    internal partial class T_Win_IndustryAwardManagerConfiguration : EntityTypeConfiguration<T_Win_IndustryAwardManager>
    {
        public T_Win_IndustryAwardManagerConfiguration()
        {
			ToTable("T_WIN_INDUSTRYAWARDMANAGER");
            HasKey(x => x.ID);

            Property(x => x.ID).HasColumnName("ID").IsRequired().HasMaxLength(50);
            Property(x => x.CreateDate).HasColumnName("CREATEDATE").IsOptional();
            Property(x => x.ModifyDate).HasColumnName("MODIFYDATE").IsOptional();
            Property(x => x.CreateUserID).HasColumnName("CREATEUSERID").IsOptional().HasMaxLength(50);
            Property(x => x.CreateUser).HasColumnName("CREATEUSER").IsOptional().HasMaxLength(50);
            Property(x => x.ModifyUserID).HasColumnName("MODIFYUSERID").IsOptional().HasMaxLength(50);
            Property(x => x.ModifyUser).HasColumnName("MODIFYUSER").IsOptional().HasMaxLength(50);
            Property(x => x.OrgID).HasColumnName("ORGID").IsOptional().HasMaxLength(50);
            Property(x => x.CompanyID).HasColumnName("COMPANYID").IsOptional().HasMaxLength(50);
            Property(x => x.FlowPhase).HasColumnName("FLOWPHASE").IsOptional().HasMaxLength(50);
            Property(x => x.FlowInfo).HasColumnName("FLOWINFO").IsOptional().HasMaxLength(1073741823);
            Property(x => x.StepName).HasColumnName("STEPNAME").IsOptional().HasMaxLength(500);
            Property(x => x.AwardProjectName).HasColumnName("AWARDPROJECTNAME").IsOptional().HasMaxLength(200);
            Property(x => x.AwardName).HasColumnName("AWARDNAME").IsOptional().HasMaxLength(200);
            Property(x => x.AwardLevel).HasColumnName("AWARDLEVEL").IsOptional().HasMaxLength(200);
            Property(x => x.AwardDate).HasColumnName("AWARDDATE").IsOptional();
            Property(x => x.CertificateNumber).HasColumnName("CERTIFICATENUMBER").IsOptional().HasMaxLength(200);
            Property(x => x.AwardDelarant).HasColumnName("AWARDDELARANT").IsOptional().HasMaxLength(200);
            Property(x => x.AwardDelarantName).HasColumnName("AWARDDELARANTNAME").IsOptional().HasMaxLength(200);
            Property(x => x.AwardDeclareDepartment).HasColumnName("AWARDDECLAREDEPARTMENT").IsOptional().HasMaxLength(200);
            Property(x => x.AwardDeclareDepartmentName).HasColumnName("AWARDDECLAREDEPARTMENTNAME").IsOptional().HasMaxLength(200);
            Property(x => x.JoinPerson).HasColumnName("JOINPERSON").IsOptional().HasMaxLength(1073741823);
            Property(x => x.Declarant).HasColumnName("DECLARANT").IsOptional().HasMaxLength(200);
            Property(x => x.DeclarantName).HasColumnName("DECLARANTNAME").IsOptional().HasMaxLength(200);
            Property(x => x.DeclareDate).HasColumnName("DECLAREDATE").IsOptional();
            Property(x => x.AwardCertificate).HasColumnName("AWARDCERTIFICATE").IsOptional().HasMaxLength(500);
            Property(x => x.Attachment).HasColumnName("ATTACHMENT").IsOptional().HasMaxLength(500);
        }
    }

    // T_Win_IndustryAwardManager_JoinPerson
    internal partial class T_Win_IndustryAwardManager_JoinPersonConfiguration : EntityTypeConfiguration<T_Win_IndustryAwardManager_JoinPerson>
    {
        public T_Win_IndustryAwardManager_JoinPersonConfiguration()
        {
			ToTable("T_WIN_INDUSTRYAWARDMANAGER_JOINPERSON");
            HasKey(x => x.ID);

            Property(x => x.ID).HasColumnName("ID").IsRequired().HasMaxLength(50);
            Property(x => x.T_Win_IndustryAwardManagerID).HasColumnName("T_WIN_INDUSTRYAWARDMANAGERID").IsOptional().HasMaxLength(50);
            Property(x => x.SortIndex).HasColumnName("SORTINDEX").IsOptional();
            Property(x => x.IsReleased).HasColumnName("ISRELEASED").IsOptional().HasMaxLength(1);
            Property(x => x.Name).HasColumnName("NAME").IsOptional().HasMaxLength(200);
            Property(x => x.Department).HasColumnName("DEPARTMENT").IsOptional().HasMaxLength(200);
            Property(x => x.Role).HasColumnName("ROLE").IsOptional().HasMaxLength(200);
            Property(x => x.Remark).HasColumnName("REMARK").IsOptional().HasMaxLength(200);
            Property(x => x.NameName).HasColumnName("NAMENAME").IsOptional().HasMaxLength(200);
            Property(x => x.DepartmentName).HasColumnName("DEPARTMENTNAME").IsOptional().HasMaxLength(200);

            // Foreign keys
            HasOptional(a => a.T_Win_IndustryAwardManager).WithMany(b => b.T_Win_IndustryAwardManager_JoinPerson).HasForeignKey(c => c.T_Win_IndustryAwardManagerID); // FK_T_Win_IndustryAwardManager_JoinPerson_T_Win_IndustryAwardManager
        }
    }

    // T_Win_ProjectScore
    internal partial class T_Win_ProjectScoreConfiguration : EntityTypeConfiguration<T_Win_ProjectScore>
    {
        public T_Win_ProjectScoreConfiguration()
        {
			ToTable("T_WIN_PROJECTSCORE");
            HasKey(x => x.ID);

            Property(x => x.ID).HasColumnName("ID").IsRequired().HasMaxLength(50);
            Property(x => x.CreateDate).HasColumnName("CREATEDATE").IsOptional();
            Property(x => x.ModifyDate).HasColumnName("MODIFYDATE").IsOptional();
            Property(x => x.CreateUserID).HasColumnName("CREATEUSERID").IsOptional().HasMaxLength(50);
            Property(x => x.CreateUser).HasColumnName("CREATEUSER").IsOptional().HasMaxLength(50);
            Property(x => x.ModifyUserID).HasColumnName("MODIFYUSERID").IsOptional().HasMaxLength(50);
            Property(x => x.ModifyUser).HasColumnName("MODIFYUSER").IsOptional().HasMaxLength(50);
            Property(x => x.OrgID).HasColumnName("ORGID").IsOptional().HasMaxLength(50);
            Property(x => x.CompanyID).HasColumnName("COMPANYID").IsOptional().HasMaxLength(50);
            Property(x => x.FlowPhase).HasColumnName("FLOWPHASE").IsOptional().HasMaxLength(50);
            Property(x => x.FlowInfo).HasColumnName("FLOWINFO").IsOptional().HasMaxLength(1073741823);
            Property(x => x.StepName).HasColumnName("STEPNAME").IsOptional().HasMaxLength(500);
            Property(x => x.DeclareYear).HasColumnName("DECLAREYEAR").IsOptional().HasMaxLength(200);
            Property(x => x.Declarant).HasColumnName("DECLARANT").IsOptional().HasMaxLength(200);
            Property(x => x.DeclarantName).HasColumnName("DECLARANTNAME").IsOptional().HasMaxLength(200);
            Property(x => x.DeclareDepartment).HasColumnName("DECLAREDEPARTMENT").IsOptional().HasMaxLength(200);
            Property(x => x.DeclareDepartmentName).HasColumnName("DECLAREDEPARTMENTNAME").IsOptional().HasMaxLength(200);
            Property(x => x.ProjectNumber).HasColumnName("PROJECTNUMBER").IsOptional().HasMaxLength(200);
            Property(x => x.ProjectName).HasColumnName("PROJECTNAME").IsOptional().HasMaxLength(200);
            Property(x => x.DeclareCategory).HasColumnName("DECLARECATEGORY").IsOptional().HasMaxLength(200);
            Property(x => x.DeclareLevel).HasColumnName("DECLARELEVEL").IsOptional().HasMaxLength(200);
            Property(x => x.JoinDepartment).HasColumnName("JOINDEPARTMENT").IsOptional().HasMaxLength(200);
            Property(x => x.JoinDepartmentName).HasColumnName("JOINDEPARTMENTNAME").IsOptional().HasMaxLength(200);
            Property(x => x.ProjectStartDate).HasColumnName("PROJECTSTARTDATE").IsOptional();
            Property(x => x.ProjectEndDate).HasColumnName("PROJECTENDDATE").IsOptional();
            Property(x => x.IsCheck).HasColumnName("ISCHECK").IsOptional().HasMaxLength(200);
            Property(x => x.CheckDate).HasColumnName("CHECKDATE").IsOptional();
            Property(x => x.AuthorizedPatent).HasColumnName("AUTHORIZEDPATENT").IsOptional().HasPrecision(18,4);
            Property(x => x.AuthorizedOtherIP).HasColumnName("AUTHORIZEDOTHERIP").IsOptional().HasPrecision(18,4);
            Property(x => x.ExpertCount).HasColumnName("EXPERTCOUNT").IsOptional().HasMaxLength(200);
            Property(x => x.AverageScore).HasColumnName("AVERAGESCORE").IsOptional().HasMaxLength(200);
            Property(x => x.HightScore).HasColumnName("HIGHTSCORE").IsOptional().HasMaxLength(200);
            Property(x => x.LowScore).HasColumnName("LOWSCORE").IsOptional().HasMaxLength(200);
            Property(x => x.STAward).HasColumnName("STAWARD").IsOptional().HasMaxLength(200);
            Property(x => x.EEDAward).HasColumnName("EEDAWARD").IsOptional().HasMaxLength(200);
            Property(x => x.EPCPMAward).HasColumnName("EPCPMAWARD").IsOptional().HasMaxLength(200);
            Property(x => x.OCAAward).HasColumnName("OCAAWARD").IsOptional().HasMaxLength(200);
            Property(x => x.ExcellentSoftware).HasColumnName("EXCELLENTSOFTWARE").IsOptional().HasMaxLength(200);
            Property(x => x.EBIMCAward).HasColumnName("EBIMCAWARD").IsOptional().HasMaxLength(200);
            Property(x => x.AwardAttachment).HasColumnName("AWARDATTACHMENT").IsOptional().HasMaxLength(500);
            Property(x => x.ExpertDetail).HasColumnName("EXPERTDETAIL").IsOptional().HasMaxLength(1073741823);
            Property(x => x.ProjectID).HasColumnName("PROJECTID").IsOptional().HasMaxLength(200);
        }
    }

    // T_Win_ProjectScore_ExpertDetail
    internal partial class T_Win_ProjectScore_ExpertDetailConfiguration : EntityTypeConfiguration<T_Win_ProjectScore_ExpertDetail>
    {
        public T_Win_ProjectScore_ExpertDetailConfiguration()
        {
			ToTable("T_WIN_PROJECTSCORE_EXPERTDETAIL");
            HasKey(x => x.ID);

            Property(x => x.ID).HasColumnName("ID").IsRequired().HasMaxLength(50);
            Property(x => x.T_Win_ProjectScoreID).HasColumnName("T_WIN_PROJECTSCOREID").IsOptional().HasMaxLength(50);
            Property(x => x.SortIndex).HasColumnName("SORTINDEX").IsOptional();
            Property(x => x.IsReleased).HasColumnName("ISRELEASED").IsOptional().HasMaxLength(1);
            Property(x => x.ZJXM).HasColumnName("ZJXM").IsOptional().HasMaxLength(200);
            Property(x => x.ZJSZBM).HasColumnName("ZJSZBM").IsOptional().HasMaxLength(200);
            Property(x => x.ZJPF).HasColumnName("ZJPF").IsOptional().HasMaxLength(200);

            // Foreign keys
            HasOptional(a => a.T_Win_ProjectScore).WithMany(b => b.T_Win_ProjectScore_ExpertDetail).HasForeignKey(c => c.T_Win_ProjectScoreID); // FK_T_Win_ProjectScore_ExpertDetail_T_Win_ProjectScore
        }
    }

    // T_Win_Technicalinnovation
    internal partial class T_Win_TechnicalinnovationConfiguration : EntityTypeConfiguration<T_Win_Technicalinnovation>
    {
        public T_Win_TechnicalinnovationConfiguration()
        {
			ToTable("T_WIN_TECHNICALINNOVATION");
            HasKey(x => x.ID);

            Property(x => x.ID).HasColumnName("ID").IsRequired().HasMaxLength(50);
            Property(x => x.CreateDate).HasColumnName("CREATEDATE").IsOptional();
            Property(x => x.ModifyDate).HasColumnName("MODIFYDATE").IsOptional();
            Property(x => x.CreateUserID).HasColumnName("CREATEUSERID").IsOptional().HasMaxLength(50);
            Property(x => x.CreateUser).HasColumnName("CREATEUSER").IsOptional().HasMaxLength(50);
            Property(x => x.ModifyUserID).HasColumnName("MODIFYUSERID").IsOptional().HasMaxLength(50);
            Property(x => x.ModifyUser).HasColumnName("MODIFYUSER").IsOptional().HasMaxLength(50);
            Property(x => x.OrgID).HasColumnName("ORGID").IsOptional().HasMaxLength(50);
            Property(x => x.CompanyID).HasColumnName("COMPANYID").IsOptional().HasMaxLength(50);
            Property(x => x.FlowPhase).HasColumnName("FLOWPHASE").IsOptional().HasMaxLength(50);
            Property(x => x.FlowInfo).HasColumnName("FLOWINFO").IsOptional().HasMaxLength(1073741823);
            Property(x => x.StepName).HasColumnName("STEPNAME").IsOptional().HasMaxLength(500);
            Property(x => x.Declareproject).HasColumnName("DECLAREPROJECT").IsOptional().HasMaxLength(200);
            Property(x => x.Declarant).HasColumnName("DECLARANT").IsOptional().HasMaxLength(200);
            Property(x => x.Declaredept).HasColumnName("DECLAREDEPT").IsOptional().HasMaxLength(200);
            Property(x => x.Declarecategory).HasColumnName("DECLARECATEGORY").IsOptional().HasMaxLength(200);
            Property(x => x.Declarelevel).HasColumnName("DECLARELEVEL").IsOptional().HasMaxLength(200);
            Property(x => x.Dept).HasColumnName("DEPT").IsOptional().HasMaxLength(200);
            Property(x => x.Projectnumber).HasColumnName("PROJECTNUMBER").IsOptional().HasMaxLength(200);
            Property(x => x.Projectname).HasColumnName("PROJECTNAME").IsOptional().HasMaxLength(200);
            Property(x => x.Starttime).HasColumnName("STARTTIME").IsOptional().HasMaxLength(200);
            Property(x => x.Endtime).HasColumnName("ENDTIME").IsOptional().HasMaxLength(200);
            Property(x => x.Acceptornot).HasColumnName("ACCEPTORNOT").IsOptional().HasMaxLength(200);
            Property(x => x.Accepttime).HasColumnName("ACCEPTTIME").IsOptional().HasMaxLength(200);
            Property(x => x.Invention).HasColumnName("INVENTION").IsOptional().HasMaxLength(200);
            Property(x => x.Property).HasColumnName("PROPERTY").IsOptional().HasMaxLength(200);
            Property(x => x.Scienceaward).HasColumnName("SCIENCEAWARD").IsOptional().HasMaxLength(200);
            Property(x => x.Designaward).HasColumnName("DESIGNAWARD").IsOptional().HasMaxLength(200);
            Property(x => x.Managementaward).HasColumnName("MANAGEMENTAWARD").IsOptional().HasMaxLength(200);
            Property(x => x.Resultsaward).HasColumnName("RESULTSAWARD").IsOptional().HasMaxLength(200);
            Property(x => x.Softwareaward).HasColumnName("SOFTWAREAWARD").IsOptional().HasMaxLength(200);
            Property(x => x.Winmaterial).HasColumnName("WINMATERIAL").IsOptional().HasMaxLength(200);
            Property(x => x.Expertrating).HasColumnName("EXPERTRATING").IsOptional().HasMaxLength(1073741823);
            Property(x => x.Highestscore).HasColumnName("HIGHESTSCORE").IsOptional().HasMaxLength(200);
            Property(x => x.Lowestscore).HasColumnName("LOWESTSCORE").IsOptional().HasMaxLength(200);
            Property(x => x.Averagescore).HasColumnName("AVERAGESCORE").IsOptional().HasMaxLength(200);
            Property(x => x.Finalassess).HasColumnName("FINALASSESS").IsOptional().HasMaxLength(200);
            Property(x => x.Awardcategory).HasColumnName("AWARDCATEGORY").IsOptional().HasMaxLength(200);
            Property(x => x.Awardrating).HasColumnName("AWARDRATING").IsOptional().HasMaxLength(200);
            Property(x => x.Supervisorsign).HasColumnName("SUPERVISORSIGN").IsOptional();
            Property(x => x.Directorsign).HasColumnName("DIRECTORSIGN").IsOptional();
            Property(x => x.Engineersign).HasColumnName("ENGINEERSIGN").IsOptional();
        }
    }

    // T_Win_Technicalinnovation_Expertrating
    internal partial class T_Win_Technicalinnovation_ExpertratingConfiguration : EntityTypeConfiguration<T_Win_Technicalinnovation_Expertrating>
    {
        public T_Win_Technicalinnovation_ExpertratingConfiguration()
        {
			ToTable("T_WIN_TECHNICALINNOVATION_EXPERTRATING");
            HasKey(x => x.ID);

            Property(x => x.ID).HasColumnName("ID").IsRequired().HasMaxLength(50);
            Property(x => x.T_Win_TechnicalinnovationID).HasColumnName("T_WIN_TECHNICALINNOVATIONID").IsOptional().HasMaxLength(50);
            Property(x => x.SortIndex).HasColumnName("SORTINDEX").IsOptional();
            Property(x => x.IsReleased).HasColumnName("ISRELEASED").IsOptional().HasMaxLength(1);
            Property(x => x.Name).HasColumnName("NAME").IsOptional().HasMaxLength(200);
            Property(x => x.Dept).HasColumnName("DEPT").IsOptional().HasMaxLength(200);
            Property(x => x.Score).HasColumnName("SCORE").IsOptional().HasMaxLength(200);
            Property(x => x.State).HasColumnName("STATE").IsOptional().HasMaxLength(200);

            // Foreign keys
            HasOptional(a => a.T_Win_Technicalinnovation).WithMany(b => b.T_Win_Technicalinnovation_Expertrating).HasForeignKey(c => c.T_Win_TechnicalinnovationID); // FK_T_Win_Technicalinnovation_Expertrating_T_Win_Technicalinnovation
        }
    }

    // T_WorkClothes_Entry
    internal partial class T_WorkClothes_EntryConfiguration : EntityTypeConfiguration<T_WorkClothes_Entry>
    {
        public T_WorkClothes_EntryConfiguration()
        {
			ToTable("T_WORKCLOTHES_ENTRY");
            HasKey(x => x.ID);

            Property(x => x.ID).HasColumnName("ID").IsRequired().HasMaxLength(50);
            Property(x => x.CreateDate).HasColumnName("CREATEDATE").IsOptional();
            Property(x => x.ModifyDate).HasColumnName("MODIFYDATE").IsOptional();
            Property(x => x.CreateUserID).HasColumnName("CREATEUSERID").IsOptional().HasMaxLength(50);
            Property(x => x.CreateUser).HasColumnName("CREATEUSER").IsOptional().HasMaxLength(50);
            Property(x => x.ModifyUserID).HasColumnName("MODIFYUSERID").IsOptional().HasMaxLength(50);
            Property(x => x.ModifyUser).HasColumnName("MODIFYUSER").IsOptional().HasMaxLength(50);
            Property(x => x.OrgID).HasColumnName("ORGID").IsOptional().HasMaxLength(50);
            Property(x => x.CompanyID).HasColumnName("COMPANYID").IsOptional().HasMaxLength(50);
            Property(x => x.FlowPhase).HasColumnName("FLOWPHASE").IsOptional().HasMaxLength(50);
            Property(x => x.FlowInfo).HasColumnName("FLOWINFO").IsOptional().HasMaxLength(1073741823);
            Property(x => x.StepName).HasColumnName("STEPNAME").IsOptional().HasMaxLength(500);
            Property(x => x.Registrant).HasColumnName("REGISTRANT").IsOptional().HasMaxLength(200);
            Property(x => x.RegistrantName).HasColumnName("REGISTRANTNAME").IsOptional().HasMaxLength(200);
            Property(x => x.RegistrantDept).HasColumnName("REGISTRANTDEPT").IsOptional().HasMaxLength(200);
            Property(x => x.RegistrantDeptName).HasColumnName("REGISTRANTDEPTNAME").IsOptional().HasMaxLength(200);
            Property(x => x.RegisterDate).HasColumnName("REGISTERDATE").IsOptional();
            Property(x => x.PurchaseDate).HasColumnName("PURCHASEDATE").IsOptional();
            Property(x => x.TJTotalCount).HasColumnName("TJTOTALCOUNT").IsOptional().HasMaxLength(200);
            Property(x => x.LYTotalCount).HasColumnName("LYTOTALCOUNT").IsOptional().HasMaxLength(200);
            Property(x => x.Remark).HasColumnName("REMARK").IsOptional().HasMaxLength(500);
            Property(x => x.Attachments).HasColumnName("ATTACHMENTS").IsOptional().HasMaxLength(500);
            Property(x => x.WorkClothesDetail).HasColumnName("WORKCLOTHESDETAIL").IsOptional().HasMaxLength(1073741823);
            Property(x => x.Audit).HasColumnName("AUDIT").IsOptional();
        }
    }

    // T_WorkClothes_Entry_WorkClothesDetail
    internal partial class T_WorkClothes_Entry_WorkClothesDetailConfiguration : EntityTypeConfiguration<T_WorkClothes_Entry_WorkClothesDetail>
    {
        public T_WorkClothes_Entry_WorkClothesDetailConfiguration()
        {
			ToTable("T_WORKCLOTHES_ENTRY_WORKCLOTHESDETAIL");
            HasKey(x => x.ID);

            Property(x => x.ID).HasColumnName("ID").IsRequired().HasMaxLength(50);
            Property(x => x.T_WorkClothes_EntryID).HasColumnName("T_WORKCLOTHES_ENTRYID").IsOptional().HasMaxLength(50);
            Property(x => x.SortIndex).HasColumnName("SORTINDEX").IsOptional();
            Property(x => x.IsReleased).HasColumnName("ISRELEASED").IsOptional().HasMaxLength(1);
            Property(x => x.Category).HasColumnName("CATEGORY").IsOptional().HasMaxLength(200);
            Property(x => x.Size155Quantity).HasColumnName("SIZE155QUANTITY").IsOptional().HasMaxLength(200);
            Property(x => x.Size160Quantity).HasColumnName("SIZE160QUANTITY").IsOptional().HasMaxLength(200);
            Property(x => x.Size165Quantity).HasColumnName("SIZE165QUANTITY").IsOptional().HasMaxLength(200);
            Property(x => x.Size170Quantity).HasColumnName("SIZE170QUANTITY").IsOptional().HasMaxLength(200);
            Property(x => x.Size175Quantity).HasColumnName("SIZE175QUANTITY").IsOptional().HasMaxLength(200);
            Property(x => x.Size180Quantity).HasColumnName("SIZE180QUANTITY").IsOptional().HasMaxLength(200);
            Property(x => x.Size185Quantity).HasColumnName("SIZE185QUANTITY").IsOptional().HasMaxLength(200);
            Property(x => x.TotalQuantity).HasColumnName("TOTALQUANTITY").IsOptional().HasMaxLength(200);
            Property(x => x.Location).HasColumnName("LOCATION").IsOptional().HasMaxLength(200);

            // Foreign keys
            HasOptional(a => a.T_WorkClothes_Entry).WithMany(b => b.T_WorkClothes_Entry_WorkClothesDetail).HasForeignKey(c => c.T_WorkClothes_EntryID); // FK_T_WorkClothes_Entry_WorkClothesDetail_T_WorkClothes_Entry
        }
    }

    // T_WorkClothes_ManageReceive
    internal partial class T_WorkClothes_ManageReceiveConfiguration : EntityTypeConfiguration<T_WorkClothes_ManageReceive>
    {
        public T_WorkClothes_ManageReceiveConfiguration()
        {
			ToTable("T_WORKCLOTHES_MANAGERECEIVE");
            HasKey(x => x.ID);

            Property(x => x.ID).HasColumnName("ID").IsRequired().HasMaxLength(50);
            Property(x => x.CreateDate).HasColumnName("CREATEDATE").IsOptional();
            Property(x => x.ModifyDate).HasColumnName("MODIFYDATE").IsOptional();
            Property(x => x.CreateUserID).HasColumnName("CREATEUSERID").IsOptional().HasMaxLength(50);
            Property(x => x.CreateUser).HasColumnName("CREATEUSER").IsOptional().HasMaxLength(50);
            Property(x => x.ModifyUserID).HasColumnName("MODIFYUSERID").IsOptional().HasMaxLength(50);
            Property(x => x.ModifyUser).HasColumnName("MODIFYUSER").IsOptional().HasMaxLength(50);
            Property(x => x.OrgID).HasColumnName("ORGID").IsOptional().HasMaxLength(50);
            Property(x => x.CompanyID).HasColumnName("COMPANYID").IsOptional().HasMaxLength(50);
            Property(x => x.FlowPhase).HasColumnName("FLOWPHASE").IsOptional().HasMaxLength(50);
            Property(x => x.FlowInfo).HasColumnName("FLOWINFO").IsOptional().HasMaxLength(1073741823);
            Property(x => x.StepName).HasColumnName("STEPNAME").IsOptional().HasMaxLength(500);
            Property(x => x.Registrant).HasColumnName("REGISTRANT").IsOptional().HasMaxLength(200);
            Property(x => x.RegistrantName).HasColumnName("REGISTRANTNAME").IsOptional().HasMaxLength(200);
            Property(x => x.RegisterDept).HasColumnName("REGISTERDEPT").IsOptional().HasMaxLength(200);
            Property(x => x.RegisterDeptName).HasColumnName("REGISTERDEPTNAME").IsOptional().HasMaxLength(200);
            Property(x => x.RegisterDate).HasColumnName("REGISTERDATE").IsOptional();
            Property(x => x.Location).HasColumnName("LOCATION").IsOptional().HasMaxLength(200);
            Property(x => x.Project).HasColumnName("PROJECT").IsOptional().HasMaxLength(200);
            Property(x => x.ProjectName).HasColumnName("PROJECTNAME").IsOptional().HasMaxLength(200);
            Property(x => x.Customer).HasColumnName("CUSTOMER").IsOptional().HasMaxLength(200);
            Property(x => x.CustomerName).HasColumnName("CUSTOMERNAME").IsOptional().HasMaxLength(200);
            Property(x => x.ReceiveLocation).HasColumnName("RECEIVELOCATION").IsOptional().HasMaxLength(200);
            Property(x => x.Remark).HasColumnName("REMARK").IsOptional().HasMaxLength(500);
            Property(x => x.Attachments).HasColumnName("ATTACHMENTS").IsOptional().HasMaxLength(500);
            Property(x => x.ReceiveDetail).HasColumnName("RECEIVEDETAIL").IsOptional().HasMaxLength(1073741823);
            Property(x => x.DeptLeader).HasColumnName("DEPTLEADER").IsOptional();
            Property(x => x.ContractingDept).HasColumnName("CONTRACTINGDEPT").IsOptional();
        }
    }

    // T_WorkClothes_ManageReceive_ReceiveDetail
    internal partial class T_WorkClothes_ManageReceive_ReceiveDetailConfiguration : EntityTypeConfiguration<T_WorkClothes_ManageReceive_ReceiveDetail>
    {
        public T_WorkClothes_ManageReceive_ReceiveDetailConfiguration()
        {
			ToTable("T_WORKCLOTHES_MANAGERECEIVE_RECEIVEDETAIL");
            HasKey(x => x.ID);

            Property(x => x.ID).HasColumnName("ID").IsRequired().HasMaxLength(50);
            Property(x => x.T_WorkClothes_ManageReceiveID).HasColumnName("T_WORKCLOTHES_MANAGERECEIVEID").IsOptional().HasMaxLength(50);
            Property(x => x.SortIndex).HasColumnName("SORTINDEX").IsOptional();
            Property(x => x.IsReleased).HasColumnName("ISRELEASED").IsOptional().HasMaxLength(1);
            Property(x => x.Category).HasColumnName("CATEGORY").IsOptional().HasMaxLength(200);
            Property(x => x.Size155Quantity).HasColumnName("SIZE155QUANTITY").IsOptional().HasMaxLength(200);
            Property(x => x.Size160Quantity).HasColumnName("SIZE160QUANTITY").IsOptional().HasMaxLength(200);
            Property(x => x.Size165Quantity).HasColumnName("SIZE165QUANTITY").IsOptional().HasMaxLength(200);
            Property(x => x.Size170Quantity).HasColumnName("SIZE170QUANTITY").IsOptional().HasMaxLength(200);
            Property(x => x.Size175Quantity).HasColumnName("SIZE175QUANTITY").IsOptional().HasMaxLength(200);
            Property(x => x.Size180Quantity).HasColumnName("SIZE180QUANTITY").IsOptional().HasMaxLength(200);
            Property(x => x.Size185Quantity).HasColumnName("SIZE185QUANTITY").IsOptional().HasMaxLength(200);
            Property(x => x.TotalQuantity).HasColumnName("TOTALQUANTITY").IsOptional().HasMaxLength(200);
            Property(x => x.UnitPrice).HasColumnName("UNITPRICE").IsOptional().HasMaxLength(200);
            Property(x => x.TotalPrice).HasColumnName("TOTALPRICE").IsOptional().HasMaxLength(200);

            // Foreign keys
            HasOptional(a => a.T_WorkClothes_ManageReceive).WithMany(b => b.T_WorkClothes_ManageReceive_ReceiveDetail).HasForeignKey(c => c.T_WorkClothes_ManageReceiveID); // FK_T_WorkClothes_ManageReceive_ReceiveDetail_T_WorkClothes_ManageReceive
        }
    }

    // T_WorkClothes_Stock
    internal partial class T_WorkClothes_StockConfiguration : EntityTypeConfiguration<T_WorkClothes_Stock>
    {
        public T_WorkClothes_StockConfiguration()
        {
			ToTable("T_WORKCLOTHES_STOCK");
            HasKey(x => x.ID);

            Property(x => x.ID).HasColumnName("ID").IsRequired().HasMaxLength(50);
            Property(x => x.CreateDate).HasColumnName("CREATEDATE").IsOptional();
            Property(x => x.ModifyDate).HasColumnName("MODIFYDATE").IsOptional();
            Property(x => x.CreateUserID).HasColumnName("CREATEUSERID").IsOptional().HasMaxLength(50);
            Property(x => x.CreateUser).HasColumnName("CREATEUSER").IsOptional().HasMaxLength(50);
            Property(x => x.ModifyUserID).HasColumnName("MODIFYUSERID").IsOptional().HasMaxLength(50);
            Property(x => x.ModifyUser).HasColumnName("MODIFYUSER").IsOptional().HasMaxLength(50);
            Property(x => x.OrgID).HasColumnName("ORGID").IsOptional().HasMaxLength(50);
            Property(x => x.CompanyID).HasColumnName("COMPANYID").IsOptional().HasMaxLength(50);
            Property(x => x.FlowPhase).HasColumnName("FLOWPHASE").IsOptional().HasMaxLength(50);
            Property(x => x.FlowInfo).HasColumnName("FLOWINFO").IsOptional().HasMaxLength(1073741823);
            Property(x => x.StepName).HasColumnName("STEPNAME").IsOptional().HasMaxLength(500);
            Property(x => x.Registrant).HasColumnName("REGISTRANT").IsOptional().HasMaxLength(200);
            Property(x => x.RegistrantName).HasColumnName("REGISTRANTNAME").IsOptional().HasMaxLength(200);
            Property(x => x.RegisterDate).HasColumnName("REGISTERDATE").IsOptional();
            Property(x => x.ManageSummerPrice).HasColumnName("MANAGESUMMERPRICE").IsOptional().HasMaxLength(200);
            Property(x => x.ManageAutumnPrice).HasColumnName("MANAGEAUTUMNPRICE").IsOptional().HasMaxLength(200);
            Property(x => x.ManageWinterPrice).HasColumnName("MANAGEWINTERPRICE").IsOptional().HasMaxLength(200);
            Property(x => x.WorkerSummerPrice).HasColumnName("WORKERSUMMERPRICE").IsOptional().HasMaxLength(200);
            Property(x => x.WorkerAutumnPrice).HasColumnName("WORKERAUTUMNPRICE").IsOptional().HasMaxLength(200);
            Property(x => x.ClothesDetail).HasColumnName("CLOTHESDETAIL").IsOptional().HasMaxLength(1073741823);
        }
    }

    // T_WorkClothes_Stock_ClothesDetail
    internal partial class T_WorkClothes_Stock_ClothesDetailConfiguration : EntityTypeConfiguration<T_WorkClothes_Stock_ClothesDetail>
    {
        public T_WorkClothes_Stock_ClothesDetailConfiguration()
        {
			ToTable("T_WORKCLOTHES_STOCK_CLOTHESDETAIL");
            HasKey(x => x.ID);

            Property(x => x.ID).HasColumnName("ID").IsRequired().HasMaxLength(50);
            Property(x => x.T_WorkClothes_StockID).HasColumnName("T_WORKCLOTHES_STOCKID").IsOptional().HasMaxLength(50);
            Property(x => x.SortIndex).HasColumnName("SORTINDEX").IsOptional();
            Property(x => x.IsReleased).HasColumnName("ISRELEASED").IsOptional().HasMaxLength(1);
            Property(x => x.Location).HasColumnName("LOCATION").IsOptional().HasMaxLength(200);
            Property(x => x.Category).HasColumnName("CATEGORY").IsOptional().HasMaxLength(200);
            Property(x => x.Size155Quantity).HasColumnName("SIZE155QUANTITY").IsOptional().HasMaxLength(200);
            Property(x => x.Size160Quantity).HasColumnName("SIZE160QUANTITY").IsOptional().HasMaxLength(200);
            Property(x => x.Size165Quantity).HasColumnName("SIZE165QUANTITY").IsOptional().HasMaxLength(200);
            Property(x => x.Size170Quantity).HasColumnName("SIZE170QUANTITY").IsOptional().HasMaxLength(200);
            Property(x => x.Size175Quantity).HasColumnName("SIZE175QUANTITY").IsOptional().HasMaxLength(200);
            Property(x => x.Size180Quantity).HasColumnName("SIZE180QUANTITY").IsOptional().HasMaxLength(200);
            Property(x => x.Size185Quantity).HasColumnName("SIZE185QUANTITY").IsOptional().HasMaxLength(200);
            Property(x => x.TotalQuantity).HasColumnName("TOTALQUANTITY").IsOptional().HasMaxLength(200);

            // Foreign keys
            HasOptional(a => a.T_WorkClothes_Stock).WithMany(b => b.T_WorkClothes_Stock_ClothesDetail).HasForeignKey(c => c.T_WorkClothes_StockID); // FK_T_WorkClothes_Stock_ClothesDetail_T_WorkClothes_Stock
        }
    }

    // T_WorkClothes_WorkerReceive
    internal partial class T_WorkClothes_WorkerReceiveConfiguration : EntityTypeConfiguration<T_WorkClothes_WorkerReceive>
    {
        public T_WorkClothes_WorkerReceiveConfiguration()
        {
			ToTable("T_WORKCLOTHES_WORKERRECEIVE");
            HasKey(x => x.ID);

            Property(x => x.ID).HasColumnName("ID").IsRequired().HasMaxLength(50);
            Property(x => x.CreateDate).HasColumnName("CREATEDATE").IsOptional();
            Property(x => x.ModifyDate).HasColumnName("MODIFYDATE").IsOptional();
            Property(x => x.CreateUserID).HasColumnName("CREATEUSERID").IsOptional().HasMaxLength(50);
            Property(x => x.CreateUser).HasColumnName("CREATEUSER").IsOptional().HasMaxLength(50);
            Property(x => x.ModifyUserID).HasColumnName("MODIFYUSERID").IsOptional().HasMaxLength(50);
            Property(x => x.ModifyUser).HasColumnName("MODIFYUSER").IsOptional().HasMaxLength(50);
            Property(x => x.OrgID).HasColumnName("ORGID").IsOptional().HasMaxLength(50);
            Property(x => x.CompanyID).HasColumnName("COMPANYID").IsOptional().HasMaxLength(50);
            Property(x => x.FlowPhase).HasColumnName("FLOWPHASE").IsOptional().HasMaxLength(50);
            Property(x => x.FlowInfo).HasColumnName("FLOWINFO").IsOptional().HasMaxLength(1073741823);
            Property(x => x.StepName).HasColumnName("STEPNAME").IsOptional().HasMaxLength(500);
            Property(x => x.Registrant).HasColumnName("REGISTRANT").IsOptional().HasMaxLength(200);
            Property(x => x.RegistrantName).HasColumnName("REGISTRANTNAME").IsOptional().HasMaxLength(200);
            Property(x => x.RegisterDept).HasColumnName("REGISTERDEPT").IsOptional().HasMaxLength(200);
            Property(x => x.RegisterDeptName).HasColumnName("REGISTERDEPTNAME").IsOptional().HasMaxLength(200);
            Property(x => x.RegisterDate).HasColumnName("REGISTERDATE").IsOptional();
            Property(x => x.Location).HasColumnName("LOCATION").IsOptional().HasMaxLength(200);
            Property(x => x.Project).HasColumnName("PROJECT").IsOptional().HasMaxLength(200);
            Property(x => x.ProjectName).HasColumnName("PROJECTNAME").IsOptional().HasMaxLength(200);
            Property(x => x.Customer).HasColumnName("CUSTOMER").IsOptional().HasMaxLength(200);
            Property(x => x.CustomerName).HasColumnName("CUSTOMERNAME").IsOptional().HasMaxLength(200);
            Property(x => x.ReceiveLocation).HasColumnName("RECEIVELOCATION").IsOptional().HasMaxLength(200);
            Property(x => x.RegisterType).HasColumnName("REGISTERTYPE").IsOptional().HasMaxLength(200);
            Property(x => x.Remark).HasColumnName("REMARK").IsOptional().HasMaxLength(500);
            Property(x => x.Attachments).HasColumnName("ATTACHMENTS").IsOptional().HasMaxLength(500);
            Property(x => x.ReceiveDetail).HasColumnName("RECEIVEDETAIL").IsOptional().HasMaxLength(1073741823);
            Property(x => x.DeptLeader).HasColumnName("DEPTLEADER").IsOptional();
            Property(x => x.ContractingDept).HasColumnName("CONTRACTINGDEPT").IsOptional();
        }
    }

    // T_WorkClothes_WorkerReceive_ReceiveDetail
    internal partial class T_WorkClothes_WorkerReceive_ReceiveDetailConfiguration : EntityTypeConfiguration<T_WorkClothes_WorkerReceive_ReceiveDetail>
    {
        public T_WorkClothes_WorkerReceive_ReceiveDetailConfiguration()
        {
			ToTable("T_WORKCLOTHES_WORKERRECEIVE_RECEIVEDETAIL");
            HasKey(x => x.ID);

            Property(x => x.ID).HasColumnName("ID").IsRequired().HasMaxLength(50);
            Property(x => x.T_WorkClothes_WorkerReceiveID).HasColumnName("T_WORKCLOTHES_WORKERRECEIVEID").IsOptional().HasMaxLength(50);
            Property(x => x.SortIndex).HasColumnName("SORTINDEX").IsOptional();
            Property(x => x.IsReleased).HasColumnName("ISRELEASED").IsOptional().HasMaxLength(1);
            Property(x => x.Category).HasColumnName("CATEGORY").IsOptional().HasMaxLength(200);
            Property(x => x.Size155Quantity).HasColumnName("SIZE155QUANTITY").IsOptional().HasMaxLength(200);
            Property(x => x.Size160Quantity).HasColumnName("SIZE160QUANTITY").IsOptional().HasMaxLength(200);
            Property(x => x.Size165Quantity).HasColumnName("SIZE165QUANTITY").IsOptional().HasMaxLength(200);
            Property(x => x.Size170Quantity).HasColumnName("SIZE170QUANTITY").IsOptional().HasMaxLength(200);
            Property(x => x.Size175Quantity).HasColumnName("SIZE175QUANTITY").IsOptional().HasMaxLength(200);
            Property(x => x.Size180Quantity).HasColumnName("SIZE180QUANTITY").IsOptional().HasMaxLength(200);
            Property(x => x.Size185Quantity).HasColumnName("SIZE185QUANTITY").IsOptional().HasMaxLength(200);
            Property(x => x.TotalQuantity).HasColumnName("TOTALQUANTITY").IsOptional().HasMaxLength(200);
            Property(x => x.UnitPrice).HasColumnName("UNITPRICE").IsOptional().HasMaxLength(200);
            Property(x => x.TotalPrice).HasColumnName("TOTALPRICE").IsOptional().HasMaxLength(200);

            // Foreign keys
            HasOptional(a => a.T_WorkClothes_WorkerReceive).WithMany(b => b.T_WorkClothes_WorkerReceive_ReceiveDetail).HasForeignKey(c => c.T_WorkClothes_WorkerReceiveID); // FK_T_WorkClothes_WorkerReceive_ReceiveDetail_T_WorkClothes_WorkerReceive
        }
    }

    // T_YDTest
    internal partial class T_YDTestConfiguration : EntityTypeConfiguration<T_YDTest>
    {
        public T_YDTestConfiguration()
        {
			ToTable("T_YDTEST");
            HasKey(x => x.ID);

            Property(x => x.ID).HasColumnName("ID").IsRequired().HasMaxLength(50);
            Property(x => x.CreateDate).HasColumnName("CREATEDATE").IsOptional();
            Property(x => x.ModifyDate).HasColumnName("MODIFYDATE").IsOptional();
            Property(x => x.CreateUserID).HasColumnName("CREATEUSERID").IsOptional().HasMaxLength(50);
            Property(x => x.CreateUser).HasColumnName("CREATEUSER").IsOptional().HasMaxLength(50);
            Property(x => x.ModifyUserID).HasColumnName("MODIFYUSERID").IsOptional().HasMaxLength(50);
            Property(x => x.ModifyUser).HasColumnName("MODIFYUSER").IsOptional().HasMaxLength(50);
            Property(x => x.OrgID).HasColumnName("ORGID").IsOptional().HasMaxLength(50);
            Property(x => x.CompanyID).HasColumnName("COMPANYID").IsOptional().HasMaxLength(50);
            Property(x => x.FlowPhase).HasColumnName("FLOWPHASE").IsOptional().HasMaxLength(50);
            Property(x => x.FlowInfo).HasColumnName("FLOWINFO").IsOptional().HasMaxLength(1073741823);
            Property(x => x.StepName).HasColumnName("STEPNAME").IsOptional().HasMaxLength(500);
            Property(x => x.DeptID).HasColumnName("DEPTID").IsOptional().HasMaxLength(50);
            Property(x => x.DeptIDName).HasColumnName("DEPTIDNAME").IsOptional().HasMaxLength(2000);
            Property(x => x.ApplyUserID).HasColumnName("APPLYUSERID").IsOptional().HasMaxLength(50);
            Property(x => x.ApplyUserIDName).HasColumnName("APPLYUSERIDNAME").IsOptional().HasMaxLength(2000);
            Property(x => x.ApplyReason).HasColumnName("APPLYREASON").IsOptional().HasMaxLength(500);
            Property(x => x.SealType).HasColumnName("SEALTYPE").IsOptional().HasMaxLength(50);
            Property(x => x.SealInfoID).HasColumnName("SEALINFOID").IsOptional().HasMaxLength(500);
            Property(x => x.SealInfoIDName).HasColumnName("SEALINFOIDNAME").IsOptional().HasMaxLength(500);
            Property(x => x.SealNumber).HasColumnName("SEALNUMBER").IsOptional();
            Property(x => x.ApplyDate).HasColumnName("APPLYDATE").IsOptional();
            Property(x => x.DeptLeaderComment).HasColumnName("DEPTLEADERCOMMENT").IsOptional();
            Property(x => x.ApplyDeptDepartLeaderComment).HasColumnName("APPLYDEPTDEPARTLEADERCOMMENT").IsOptional();
            Property(x => x.Detail).HasColumnName("DETAIL").IsOptional().HasMaxLength(500);
            Property(x => x.SQYY).HasColumnName("SQYY").IsOptional().HasMaxLength(200);
            Property(x => x.FJ).HasColumnName("FJ").IsOptional().HasMaxLength(200);
            Property(x => x.DFJ).HasColumnName("DFJ").IsOptional().HasMaxLength(2000);
            Property(x => x.JEXX).HasColumnName("JEXX").IsOptional().HasMaxLength(500);
        }
    }

    // T_YDTest_Detail
    internal partial class T_YDTest_DetailConfiguration : EntityTypeConfiguration<T_YDTest_Detail>
    {
        public T_YDTest_DetailConfiguration()
        {
			ToTable("T_YDTEST_DETAIL");
            HasKey(x => x.ID);

            Property(x => x.ID).HasColumnName("ID").IsRequired().HasMaxLength(50);
            Property(x => x.T_YDTestID).HasColumnName("T_YDTESTID").IsOptional().HasMaxLength(50);
            Property(x => x.SortIndex).HasColumnName("SORTINDEX").IsOptional();
            Property(x => x.IsReleased).HasColumnName("ISRELEASED").IsOptional().HasMaxLength(1);
            Property(x => x.SealCode).HasColumnName("SEALCODE").IsOptional().HasMaxLength(200);
            Property(x => x.SealName).HasColumnName("SEALNAME").IsOptional().HasMaxLength(200);
            Property(x => x.SealType).HasColumnName("SEALTYPE").IsOptional().HasMaxLength(200);
            Property(x => x.SealNumber).HasColumnName("SEALNUMBER").IsOptional();
            Property(x => x.DeptIDName).HasColumnName("DEPTIDNAME").IsOptional().HasMaxLength(200);
            Property(x => x.KeeperIDName).HasColumnName("KEEPERIDNAME").IsOptional().HasMaxLength(200);
            Property(x => x.SealID).HasColumnName("SEALID").IsOptional().HasMaxLength(200);

            // Foreign keys
            HasOptional(a => a.T_YDTest).WithMany(b => b.T_YDTest_Detail).HasForeignKey(c => c.T_YDTestID); // FK_T_YDTest_Detail_T_YDTest
        }
    }

    // T_YDTest_JEXX
    internal partial class T_YDTest_JEXXConfiguration : EntityTypeConfiguration<T_YDTest_JEXX>
    {
        public T_YDTest_JEXXConfiguration()
        {
			ToTable("T_YDTEST_JEXX");
            HasKey(x => x.ID);

            Property(x => x.ID).HasColumnName("ID").IsRequired().HasMaxLength(50);
            Property(x => x.T_YDTestID).HasColumnName("T_YDTESTID").IsOptional().HasMaxLength(50);
            Property(x => x.SortIndex).HasColumnName("SORTINDEX").IsOptional();
            Property(x => x.IsReleased).HasColumnName("ISRELEASED").IsOptional().HasMaxLength(1);
            Property(x => x.KM).HasColumnName("KM").IsOptional().HasMaxLength(200);
            Property(x => x.JE).HasColumnName("JE").IsOptional().HasMaxLength(200);
            Property(x => x.SJZS).HasColumnName("SJZS").IsOptional().HasMaxLength(200);

            // Foreign keys
            HasOptional(a => a.T_YDTest).WithMany(b => b.T_YDTest_JEXX).HasForeignKey(c => c.T_YDTestID); // FK_T_YDTest_JEXX_T_YDTest
        }
    }

    // test_1
    internal partial class test_1Configuration : EntityTypeConfiguration<test_1>
    {
        public test_1Configuration()
        {
			ToTable("TEST_1");
            HasKey(x => x.ID);

            Property(x => x.ID).HasColumnName("ID").IsRequired().HasMaxLength(50);
            Property(x => x.CreateDate).HasColumnName("CREATEDATE").IsOptional();
            Property(x => x.ModifyDate).HasColumnName("MODIFYDATE").IsOptional();
            Property(x => x.CreateUserID).HasColumnName("CREATEUSERID").IsOptional().HasMaxLength(50);
            Property(x => x.CreateUser).HasColumnName("CREATEUSER").IsOptional().HasMaxLength(50);
            Property(x => x.ModifyUserID).HasColumnName("MODIFYUSERID").IsOptional().HasMaxLength(50);
            Property(x => x.ModifyUser).HasColumnName("MODIFYUSER").IsOptional().HasMaxLength(50);
            Property(x => x.OrgID).HasColumnName("ORGID").IsOptional().HasMaxLength(50);
            Property(x => x.CompanyID).HasColumnName("COMPANYID").IsOptional().HasMaxLength(50);
            Property(x => x.FlowPhase).HasColumnName("FLOWPHASE").IsOptional().HasMaxLength(50);
            Property(x => x.FlowInfo).HasColumnName("FLOWINFO").IsOptional().HasMaxLength(1073741823);
            Property(x => x.StepName).HasColumnName("STEPNAME").IsOptional().HasMaxLength(500);
            Property(x => x.BH).HasColumnName("BH").IsOptional().HasMaxLength(200);
            Property(x => x.XM).HasColumnName("XM").IsOptional().HasMaxLength(200);
            Property(x => x.XMName).HasColumnName("XMNAME").IsOptional().HasMaxLength(200);
            Property(x => x.BM).HasColumnName("BM").IsOptional().HasMaxLength(200);
            Property(x => x.BMName).HasColumnName("BMNAME").IsOptional().HasMaxLength(200);
            Property(x => x.MJ).HasColumnName("MJ").IsOptional().HasMaxLength(200);
        }
    }

    // V_DocumentFileAuthority
    internal partial class V_DocumentFileAuthorityConfiguration : EntityTypeConfiguration<V_DocumentFileAuthority>
    {
        public V_DocumentFileAuthorityConfiguration()
        {
			ToTable("V_DOCUMENTFILEAUTHORITY");
            HasKey(x => new { x.ID, x.ReadOnly, x.CanWrite, x.FullControl });

            Property(x => x.ID).HasColumnName("ID").IsRequired().HasMaxLength(50);
            Property(x => x.DocumentInfoID).HasColumnName("DOCUMENTINFOID").IsOptional().HasMaxLength(50);
            Property(x => x.AuthType).HasColumnName("AUTHTYPE").IsOptional().HasMaxLength(50);
            Property(x => x.RoleType).HasColumnName("ROLETYPE").IsOptional().HasMaxLength(50);
            Property(x => x.RoleCode).HasColumnName("ROLECODE").IsOptional().HasMaxLength(50);
            Property(x => x.Name).HasColumnName("NAME").IsOptional().HasMaxLength(200);
            Property(x => x.ReadOnly).HasColumnName("READONLY").IsRequired();
            Property(x => x.CanWrite).HasColumnName("CANWRITE").IsRequired();
            Property(x => x.FullControl).HasColumnName("FULLCONTROL").IsRequired();
        }
    }

}

