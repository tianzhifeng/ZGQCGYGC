<style type="text/css">
    .mini-grid .mini-grid-rightCell { border-right-width: 0px; }
</style>
<div class="mini-splitter" style="width: 100%; height: 100%;" borderstyle="border-right:0px;">
    <div size="250" showcollapsebutton="false" minsize="200">
        <div class="mini-fit">
            <ul id="dataTree" class="mini-tree" style="overflow: hidden; width: 100%; height: 100%" showtreeicon="true" iconfield="Type" textfield="Name" idfield="ID" parentfield="ParentID"
                resultastree="false" onnodeselect="onNodeSelect" expandonload="0" selectonload="false"></ul>
        </div>
    </div>
    <div style="width: 100%; height: 100%; border: 0px;">
        <div class="mini-splitter" vertical="false" style="width: 100%; height: 100%;" borderstyle="border-top:0px;border-bottom:0px">
            <div size="65%" showcollapsebutton="false" style="width: 100%; height: 100%; border-left-width: 0px; border-top-width: 0px; border-bottom-width: 0px; border-right-width: 0px;" minsize="450px;">
                <div class="mini-toolbar gw-grid-toolbar" style="border-left-width: 0px; border-top-width: 0px; border-bottom-width: 0px;">
                    <table>
                        <tr>
                            <td></td>
                            <td class="gw-toolbar-right" style="align: right">
                                <input id="key" class="mini-buttonedit gw-searchbox" emptytext="请输入编号或名称" onenter="quickSearch('Code,Name',{gridId:'userGrid'});" onbuttonclick="quickSearch('Code,Name',{gridId:'userGrid'});" />
                            </td>
                        </tr>
                    </table>
                </div>
                <div class="mini-fit">
                    <div id="userGrid" class="mini-datagrid" style="width: 100%; height: 100%;" borderstyle="border-left:0px;border-bottom:0px" multiselect="false" allowunselect="false" onrowclick="onRowSelect"
                         onload="onUserGridLoad" selectonload="false">
                        <div property="columns">
                            <div field="DeptName" width="100px" allowsort="true" align="center">
                                当前部门
                            </div>
                            <div field="WorkNo" width="60px" allowsort="true" align="center">
                                工号
                            </div>
                            <div field="Name" width="60px" allowsort="true" align="center">
                                姓名
                            </div>
                            <div field="Code" width="60px" allowsort="true" align="center">
                                账号
                            </div>
                        </div>
                    </div>
                </div>
            </div>
            <div showcollapsebutton="false" borderstyle="border:0px" minsize="280px;">
                <div class="mini-tabs" id="tabs" activeindex="0" onactivechanged="activechanged" style="width: 100%; height: 100%; padding: 0px;" borderstyle="border:0px;">
                    <div title="菜单入口" name="res">
                        <div class="mini-toolbar" style="border-bottom:1px solid #ccc">
                            <table>
                                <tr>
                                    <td>
                                        <a class="mini-button" id="btnSaveRes" plain="true" iconcls="icon-save" onclick="saveResAuth();">保存</a>
                                    </td>
                                    <td id="btnRight"></td>
                                </tr>
                            </table>
                        </div>
                        <div class="mini-fit">
                            <ul id="resTree" class="mini-tree" style="overflow: hidden; width: 100%; height: 100%;" showtreeicon="false" iconfield="Type" textfield="Name" idfield="ID" parentfield="ParentID" checkedfield="Checked"
                                resultastree="false" autocheckparent="true" checkrecursive="false" expandonload="0" showcheckbox="false" onbeforeload="resTree_BeforeLoad" onload="resTree_Load" onnodeclick="onTreeNodeClicked"></ul>
                        </div>
                    </div>
                    <div title="授权对象" name="rule">
                        <div class="mini-toolbar"  style="border-bottom:1px solid #ccc">
                            <table>
                                <tr>
                                    <td>
                                        <a class="mini-button" id="btnSaveRule" plain="true" iconcls="icon-save" onclick="saveRuleAuth();">保存</a>
                                    </td>
                                    <td id="btnRight"></td>
                                </tr>
                            </table>
                        </div>
                        <div class="mini-fit">
                            <ul id="ruleTree" class="mini-tree" style="overflow: hidden; width: 100%; height: 100%;" showtreeicon="false" iconfield="Type" textfield="Name" idfield="ID" parentfield="ParentID" checkedfield="Checked"
                                resultastree="false" autocheckparent="false" checkrecursive="false" expandonload="0" showcheckbox="false" onbeforeload="ruleTree_BeforeLoad" onload="ruleTree_Load" onnodeclick="onTreeNodeClicked"></ul>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>
<script type="text/javascript">
    var corpUrl = "";
    if (getQueryString("CorpID") != "")
        corpUrl = "&CorpID=" + getQueryString("CorpID");

    var userAuth = { Checked: "", DenyAuth: "", Unchecked: "" };
    var flag = false;
    function onRowSelect(e) {
        var userID = e.record.ID;
        var index = mini.get("tabs").activeIndex;
        if (index == 0) {
            mini.get("resTree").setUrl("GetResTreeByUserID?UserID=" + userID + corpUrl);
        }
        else {
            mini.get("ruleTree").setUrl("GetRuleTreeByUserID?UserID=" + userID + corpUrl);
        }
    }
    function activechanged(e) {
        var node = mini.get("userGrid").getSelected();
        if (!node) {
            return;
        }
        if (e.tab.name == "res") {
            mini.get("resTree").setUrl("GetResTreeByUserID?UserID=" + node.ID + corpUrl);
        }
        else {
            mini.get("ruleTree").setUrl("GetRuleTreeByUserID?UserID=" + node.ID + corpUrl);
        }
    }

    function resTree_BeforeLoad() {

        mini.get("btnSaveRes").disable();
    }
    function resTree_Load(e) {

        mini.get("btnSaveRes").enable();
    }

    function ruleTree_BeforeLoad() {
        mini.get("btnSaveRule").disable();
    }
    function ruleTree_Load(e) {
        mini.get("btnSaveRule").enable();
    }

    function saveResAuth() {

        var treeList = mini.get("resTree").getList();
        for (var i = 0; i < treeList.length; i++) {

            var Name = treeList[i].Name;
            if (Name.match("checked.gif") != null && Name.match("unchecked.gif") == null) {
                userAuth.Checked += treeList[i].ID.toString() + ',';

            }
            if (Name.match("DenyAuth.gif") != null) {
                userAuth.DenyAuth += treeList[i].ID.toString() + ',';

            }
            if (Name.match("unchecked.gif") != null) {
                userAuth.Unchecked += treeList[i].ID.toString() + ',';
            }
        }
        var chenckedIDs = userAuth.Checked;
        var denyAuthIDs = userAuth.DenyAuth;

        userAuth.Checked = "";
        userAuth.Unchecked = "";
        userAuth.DenyAuth = "";

        var grid = mini.get("userGrid");
        var selectedRow = grid.getSelected();
        var selectedRowID = "";
        if (selectedRow != undefined) {
            selectedRowID = selectedRow.ID;
        }
        else {
            msgUI("请选择一条数据", 1);
            return;
        }

        addExecuteParam("CheckedIDs", mini.encode(chenckedIDs));
        addExecuteParam("DenyAuthIDs", mini.encode(denyAuthIDs));
        addExecuteParam("UserID", selectedRowID);
        execute("SaveUserRes", { actionTitle: '保存' });
    }
    function saveRuleAuth() {
        var treeList = mini.get("ruleTree").getList();
        for (var i = 0; i < treeList.length; i++) {
            var Name = treeList[i].Name;
            if (Name.match("checked.gif") != null && Name.match("unchecked.gif") == null) {
                userAuth.Checked += treeList[i].ID.toString() + ',';
            }
            else if (Name.match("DenyAuth.gif") != null) {
                userAuth.DenyAuth += treeList[i].ID.toString() + ',';
            }
            else if (Name.match("unchecked.gif") != null) {
                userAuth.Unchecked += treeList[i].ID.toString();
            }
        }
        var chenckedIDs = userAuth.Checked;
        var denyAuthIDs = userAuth.DenyAuth;

        userAuth.Checked = "";
        userAuth.Unchecked = "";
        userAuth.DenyAuth = "";
        var grid = mini.get("userGrid");
        var selectedRow = grid.getSelected();
        var selectedRowID = "";
        if (selectedRow != undefined) {
            selectedRowID = selectedRow.ID;
        }
        else {
            msgUI("请选择一条数据。", 1);
            return;
        }
        addExecuteParam("CheckedIDs", mini.encode(chenckedIDs));
        addExecuteParam("DenyAuthIDs", mini.encode(denyAuthIDs));
        addExecuteParam("UserID", selectedRowID);
        execute("SaveUserRule", { actionTitle: '保存' });
    }

    function ViewDetail(userID, resID) {
        flag = true;
        var url = changeToFullUrl('GetUserAuthDetail'); //url转换为全路径
        url += '?UserID=' + userID + '&ResID=' + resID;
        $.ajax({
            url: url,
            type: "post",
            cache: false,
            success: function (text) {
                //增加新版报错分支
                if (text && typeof (text) == "string" && text.indexOf("{\"errcode\"") == 0) {
                    var fail = jQuery.parseJSON(text);
                    var msg = getErrorFromHtml(fail.errmsg);
                    msgUI(msg, 4);
                    return;
                }

                var arr = mini.decode(text);
                var msg = getValues(arr, "Src");
                msgUI(msg);
            },
            error: function (jqXHR, textStatus, errorThrown) {
                var msg = getErrorFromHtml(jqXHR.responseText);
                msgUI(msg, 4, function (act) {
                });
            }
        });
    }
    function onNodeSelect(e) {
        var dataGrid = mini.get("userGrid");
        dataGrid.setUrl("GetUserList?NodeFullID=" + e.node.FullID);
        dataGrid.load();
    }

    function onUserGridLoad(e) {
        //        var data = e.data;
        //        if (data.length > 0) {
        //            mini.get("resTree").setUrl("GetResTreeByUserID?UserID=" + e.data[0].ID);
        //            mini.get("ruleTree").setUrl("GetRuleTreeByUserID?UserID=" + e.data[0].ID);
        //        }
        //        else {
        //            mini.get("resTree").setUrl("GetResTreeByUserID?UserID=");
        //            mini.get("ruleTree").setUrl("GetRuleTreeByUserID?UserID=");
        //        }
    }
    function ChangeAuth(tree, treeNode, denyAuthID) {

        var nodeName = treeNode.Name;
        var nodeID = denyAuthID;
        var denyAuthID = "#" + denyAuthID;
        var src = nodeName;  //$(denyAuthID).attr("src");
        if (src.match("checked.gif") != null && (src.match("unchecked.gif") == null)) {
            nodeName = nodeName.replace(/checked.gif/, "DenyAuth.gif");
            tree.updateNode(treeNode, { Name: nodeName });
            var childNodes = tree.getAllChildNodes(treeNode);
            for (var i = 0; i < childNodes.length; i++) {
                nodeName = childNodes[i].Name;
                nodeName = "<img src='/CommonWebResource/Theme/Default/MiniUI/icons/DenyAuth.gif' />" + nodeName.split('/>')[1];  //nodeName.replace(/checked.gif/, "DenyAuth.gif");
                tree.updateNode(childNodes[i], { Name: nodeName });
            }
        }
        else if (src.match("DenyAuth.gif") != null) {
            nodeName = nodeName.replace(/DenyAuth.gif/, "unchecked.gif");
            tree.updateNode(treeNode, { Name: nodeName });
            var childNodes = tree.getAllChildNodes(treeNode);
            for (var i = 0; i < childNodes.length; i++) {
                nodeName = childNodes[i].Name;
                nodeName = "<img src='/CommonWebResource/Theme/Default/MiniUI/icons/unchecked.gif' />" + nodeName.split('/>')[1]; //nodeName.replace(/DenyAuth.gif/, "unchecked.gif");
                tree.updateNode(childNodes[i], { Name: nodeName });
            }
        }
        else if (src.match("unchecked.gif") != null) {
            nodeName = nodeName.replace(/unchecked.gif/, "checked.gif");
            tree.updateNode(treeNode, { Name: nodeName });
            var childNodes = tree.getAllChildNodes(treeNode);
            for (var i = 0; i < childNodes.length; i++) {
                nodeName = childNodes[i].Name;
                nodeName = "<img src='/CommonWebResource/Theme/Default/MiniUI/icons/checked.gif' />" + nodeName.split('/>')[1];;  //nodeName.replace(/unchecked.gif/, "checked.gif");
                tree.updateNode(childNodes[i], { Name: nodeName });
            }
        }
    }
    function onTreeNodeClicked(e) {
        if (!flag) {
            var node = e.node;
            nodeID = node.ID;
            var sender = e.sender;
            ChangeAuth(sender, node, nodeID);
        }
    }
</script>
<script type="text/javascript">
    function onDrawNode(e) {
        if (e.node.Type == "Menu")
            e.showCheckBox = false;
    }
</script>
<script type="text/javascript">
    function pageLoad() {       
        var dataTree = mini.get("dataTree");
        var url = "GetOrgTree";
        if (getQueryString("CorpID") != "")
            url += "?CorpID=" + getQueryString("CorpID");
        dataTree.setUrl(url);
        dataTree.load();
    }
</script>
<style type="text/css">
    .Menu {
        background: url(/CommonWebResource/Theme/Default/MiniUI/icons/flowstart.gif) no-repeat;
    }

    .Button {
        background: url(/CommonWebResource/Theme/Default/MiniUI/icons/set.gif) no-repeat;
    }

    .Field {
        background: url(/CommonWebResource/Theme/Default/MiniUI/icons/item.gif) no-repeat;
    }

    .FieldEdit {
        background: url(/CommonWebResource/Theme/Default/MiniUI/icons/item.gif) no-repeat;
    }

    .Data {
        background: url(/CommonWebResource/Theme/Default/MiniUI/icons/node.png) no-repeat;
    }

    .Page {
        background: url(/CommonWebResource/Theme/Default/MiniUI/icons/node.png) no-repeat;
    }

    .Code {
        background: url(/CommonWebResource/Theme/Default/MiniUI/icons/node.png) no-repeat;
    }
</style>

