<div class="mini-toolbar" id="btnDiv">
    <table>
        <tr>
            <td>
                <a class="mini-button" iconcls="icon-add" onclick="addRow({Visible:'true'},{createId:true,isLast:true})">添加</a>
                <a class="mini-button" iconcls="icon-remove" onclick="delRow();">移除</a>
                <a class="mini-button" iconcls="icon-import" onclick="importField();">导入</a>
                <a class="mini-button" iconcls="icon-save" onclick="saveLayoutField();">保存</a>
                <a class="mini-button" iconcls="icon-up" onclick="moveUp();">上移</a>
                <a class="mini-button" iconcls="icon-down" onclick="moveDown();">下移</a>
                <a class="mini-button" iconcls="icon-search" onclick="preView();">预览</a>
            </td>
            <td id="btnRight">
            </td>
        </tr>
    </table>
</div>
<div class="mini-fit">
    <div id="dataGrid" class="mini-datagrid" style="width: 100%; height: 100%;" allowcellvalid="true" multiselect="true" allowcelledit="true" allowcellselect="true" showpager="false" url="GetLayoutField" onlycheckselection="true">
        <div property="columns">
            <div type="checkcolumn">
            </div>
            @if (ViewBag.IsColumnEdit)
            {
        <div field="Edit_Settings" width="60">
            详细设置</div>
        <div field="Edit_ColumnSettings" width="60">
            列格式</div>
        <div type="comboboxcolumn" field="Edit_ItemType" width="80" autoshowpopup="true" align="center">
            控件类型 <input property="editor" class="mini-combobox" shownullitem="true" style="width: 100%;" data="Edit_ItemType" onitemclick="commitEdit" />
        </div>
        <div type="checkboxcolumn" field="readOnly" truevalue="true" falsevalue="false" width="40">
            只读</div>
        <div field="Edit_DefaultValue">
            默认值 <input property="editor" class="mini-textbox" style="width: 100%;" />
        </div>
            }
            else
            {
            <div field="Settings" width="40">
            </div>
            }
            <div field="field" width="150" vtype="required;">
                字段编号
                <input property="editor" class="mini-textbox" style="width: 100%;" />
            </div>
            <div field="header" width="150" vtype="required;">
                字段名称
                <input property="editor" class="mini-textbox" style="width: 100%;" />
            </div>
            @if(System.Configuration.ConfigurationManager.AppSettings["IsUseMultilingual"] == "True")
            {
                <div field="HeaderEN" width="150" vtype="required;">
                    英文名称
                    <input property="editor" class="mini-textbox" style="width: 100%;" />
                </div>
            }
            <div field="width" width="60">
                列宽度
                <input property="editor" class="mini-textbox" style="width: 100%;" />
            </div>
            <div type="comboboxcolumn" field="align" width="50" autoshowpopup="true" align="center">
                对齐
                <input property="editor" class="mini-combobox" style="width: 100%;" shownullitem="true" data="align" onitemclick="commitEdit" />
            </div>
            <div type="checkboxcolumn" field="Visible" truevalue="true" falsevalue="false" width="40">
                显示</div>
            <div type="checkboxcolumn" field="allowSort" truevalue="true" falsevalue="false" width="40">
                排序</div>
            <div type="checkboxcolumn" field="AllowSearch" truevalue="true" falsevalue="false" width="40">
                快查</div>
            @if (!ViewBag.IsColumnEdit ||(ViewBag.IsColumnEdit&& ViewBag.ShowPager))
            {
            <div type="comboboxcolumn" field="ItemType" width="100" autoshowpopup="true" align="center">
                查询控件
                <input property="editor" class="mini-combobox" shownullitem="true" style="width: 100%;" data="ItemType" onitemclick="commitEdit" onvaluechanged="itemTypeChanged" />
            </div>
            <div type="comboboxcolumn" field="QueryMode" width="80" autoshowpopup="true" align="center">
                查询方式
                <input property="editor" class="mini-combobox" style="width: 100%;" shownullitem="true" data="queryModeEnum" onitemclick="commitEdit" />
            </div>
            <div field="QuerySettings" width="80">
                查询设置</div>
            }
        </div>
    </div>
</div>
<script type="text/javascript">
    function saveLayout() {
        addExecuteParam("Layout", mini.get("dataGrid").getData());
        execute("SaveLayout", { actionTile: '保存', closeWindow: true });
    }
</script>
<script type="text/javascript">
    function moveUp() {
        var dataGrid = mini.get("#dataGrid");
        var rows = dataGrid.getSelecteds();
        dataGrid.moveUp(rows);
    }

    function moveDown() {
        var dataGrid = mini.get("#dataGrid");
        var rows = dataGrid.getSelecteds();
        dataGrid.moveDown(rows);
    }

    function commitEdit() {
        var grid = mini.get("dataGrid");
        grid.commitEdit();
    }

    function itemTypeChanged(e) {
        var grid = mini.get("dataGrid");
        var row = grid.getEditorOwnerRow(e.sender);
        row["QuerySettings"] = "";
        var type = row["ItemType"];
        if (type == "RadioButtonList" || type == "ComboBox" || type == "ButtonEdit" || type == "CheckBox")
            row["QueryMode"] = "Equal";
        else if (type == "CheckBoxList")
            row["QueryMode"] = "In";
        else if (type == "DatePicker")
            row["QueryMode"] = "Between";
        else if (type == "TextBox")
            row["QueryMode"] = "Like";
        else
            row["QueryMode"] = "";
        grid.updateRow(row);
    }
</script>
<script type="text/javascript">
    var align = [{ value: "left", text: "靠左" }, { value: "center", text: "居中" }, { value: "right", text: "靠右"}];
    var queryModeEnum = [
    { value: "Equal", text: "=" },
    { value: "LessThan", text: "<" },
    { value: "GreaterThan", text: ">" },
    { value: "LessThanOrEqual", text: "<=" },
    { value: "GreaterThanOrEqual", text: ">=" },
    { value: "Like", text: "Like" },
    { value: "In", text: "In" },
    { value: "InLike", text: "InLike" },
    { value: "StartsWith", text: "StartsWith" },
    { value: "Between", text: "Between"}];

    var ItemType = [
        { value: 'TextBox', text: '单行文本框' },
        { value: 'DatePicker', text: '日期选择框' },
        { value: 'CheckBoxList', text: '多选框列表' },
        { value: 'RadioButtonList', text: '单选框列表' },
        { value: 'ComboBox', text: '组合下拉框' },
        { value: 'ButtonEdit', text: '弹出选择框' },
        { value: 'CheckBox', text: '复选框' }
    ];
</script>
<script type="text/javascript">
    addGridButton("dataGrid", "Settings", { linkText: '详细', onButtonClick: function (row) {
        var url = "SettingsField";
        openWindow(url, { width: 350, title: "列属性编辑", data: row["Settings"], onDestroy: function (data) {
            if (data != "close")
                row["Settings"] = mini.encode(data);
        }
        });
    }
    });

    function getitemTypeText(value) {
        for (var i = 0; i < ItemType.length; i++) {
            if (ItemType[i]["value"] == value)
                return ItemType[i]["text"];
        }
    }

    addGridButton("dataGrid", "QuerySettings", { linkText: '查询设置', onButtonClick: function (row) {
        var type = row["ItemType"];
        if (!type) { msgUI('请先选择控件类型!'); return; }
        var url = "Settings" + type;
        var title = getitemTypeText(type);
        var width = 350;
        openWindow(url, { width: width, title: title, data: row["QuerySettings"], onDestroy: function (data) {
            if (data != "close")
                row["QuerySettings"] = mini.encode(data);
        }
        });
    }
    });
</script>
<script type="text/javascript">
    function importField() {
        msgUI("确认导入字段吗？", 2, function (act) {
            if (act == "ok") {
                execute("ImportField", { onComplete: function (data) {
                    var grid = mini.get("dataGrid");
                    grid.setData(mini.decode(data));
                }
                });
            }
        });
    }
    function saveLayoutField() {
        addExecuteParam("layoutField", mini.get("dataGrid").getData());
        execute("SaveLayoutField", { actionTitle: "保存" });
    }

    function preView() {
        var url = "/MvcConfig/UI/List/PageView?TmplCode={TmplCode}";
        openWindow(url, { title: '预览', width: 1000 });
    }
</script>
<script type="text/javascript">

    var Edit_ItemType = [
        { value: 'TextBox', text: '单行文本框' },
        { value: 'TextArea', text: '多行文本框' },
        { value: 'DatePicker', text: '日期选择框' },
        { value: 'ComboBox', text: '组合下拉框' },
        { value: 'CheckBox', text: '复选框' },
        { value: 'ButtonEdit', text: '弹出选择框' },
        { value: 'SingleFile', text: '单附件上传' }
    ];
    
    addGridButton("dataGrid", "Edit_Settings", {
        linkText: '详细', onButtonClick: function (row) {
            var type = row["Edit_ItemType"];
            if (!type) { msgUI('请先选择控件类型!'); return; }
            var url = "../Form/Settings" + type;
            var title = getitemTypeText(type);
            openWindow(url, {
                width: 350, title: title, data: row["Edit_Settings"], onDestroy: function (data) {
                    if (data != "close")
                        row["Edit_Settings"] = mini.encode(data);
                }
            });
        }
    });

    addGridButton("dataGrid", "Edit_ColumnSettings", {
        linkText: '列格式', onButtonClick: function (row) {
            var url = "../Form/SettingsGridColumn";
            var title = "列格式";
            openWindow(url, {
                width: 350, title: title, data: row["Edit_ColumnSettings"], onDestroy: function (data) {
                    if (data != "close")
                        row["Edit_ColumnSettings"] = mini.encode(data);
                }
            });
        }
    });
    
</script>
