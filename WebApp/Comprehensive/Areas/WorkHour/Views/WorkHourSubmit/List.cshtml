@{
    ViewBag.Title = "List";
}
<script src="/CommonWebResource/CoreLib/HighCharts/highcharts.js" type="text/javascript"></script>
<script src="/CommonWebResource/CoreLib/HighCharts/highcharts-3d.js" type="text/javascript"></script>
<div id="mainLayout" class="mini-layout" style="width: 100%; height: 100%;">
    <div title="west" region="west" showheader="false" width="220" expanded="true" showspliticon="false"
         allowresize="false">
        <div id="calendar" showdaysheader="true" showclearbutton="false" showweeknumber="false" showokbutton="false" class="mini-calendar"
             showheader="true"
             value="@DateTime.Now" ondrawdate="onDrawDate" ondateclick="onDateClick" width="220px">
        </div>
    </div>
    <div title="center" region="center">
        <div id="subLayout" class="mini-layout" style="width: 100%; height: 100%;" splitsize="0">
            <div title="north" showheader="false" region="north" height="400px" showspliticon="false"
                 allowresize="false" style="border-bottom: 0px;">
                <div class="mini-toolbar" style="padding: 0px; border-left: 0;">
                    <table style="width: 100%;">
                        <tr>
                            <td style="width: 100%;">
                                <a class="mini-button" iconcls="icon-add" onclick="addWorkHour" plain="true">增加</a>
                                <a class="mini-button" iconcls="icon-remove" onclick="del" plain="true">删除</a> <a class="mini-button" iconcls="icon-save" onclick="saveWorkHour()" plain="true">保存</a>
                            </td>
                            <td style="white-space: nowrap;"></td>
                        </tr>
                    </table>
                </div>
                <div class="mini-fit">
                    <div id="dataGrid" url="" class="mini-datagrid" style="width: 100%; height: 100%;"
                         idfield="ID" showpager="false" multiselect="true" allowcelledit="true" allowcellselect="true"
                         multiselect="true" ondrawcell="ondrawcell" ondrawsummarycell="onDrawSummaryCell"
                         editnextonenterkey="true" editnextrowcell="true"  
                         showsummaryrow="true" oncellvalidation="    onCellValidation" borderstyle="border-right:0px;border-bottom:0px;border-left:0px">
                    </div>
                </div>
            </div>
            <div title="center" region="center" style="border: 0px;">
                <div id="detailLayout" class="mini-layout" style="width: 100%; height: 100%;">
                    <div title="west" showheader="false" region="west" width="550px" expanded="true"
                         showspliticon="false" allowresize="false">
                        <div id="pieContainer" class="mini-fit">
                        </div>
                        <div class="mini-grid-summaryRow mini-grid-summaryCell">
                            &nbsp;
                        </div>
                    </div>
                    <div title="center" region="center">
                        <div class="mini-fit">
                            <div id="summaryList" showsummaryrow="true" url="" class="mini-datagrid" style="width: 100%;
                                height: 100%;" idfield="ID" ondrawsummarycell="onDrawSummaryCell" multiselect="false"
                                 showpager="false">
                                <div property="columns">
                                    <div field="WorkHourType" width="90" headeralign="center" allowsort="false" align="center">
                                        类别
                                    </div>
                                    <div field="WorkTimeMajor" width="90" headeralign="center" allowsort="false" align="center">
                                        专业
                                    </div>
                                    <div field="ProjectName" width="150" headeralign="center" allowsort="false" align="left">
                                        项目名称
                                    </div>
                                    @if (ViewBag.NeedAdditional)
                                    {
                                        <div field="SumNormalValue" summarytype="sum" width="35" headeralign="center" allowsort="false"
                                             align="right">
                                            正
                                        </div>
                                        <div field="SumAdditionalValue" summarytype="sum" headeralign="center" width="35"
                                             allowsort="false" align="right">
                                            加
                                        </div>
                                    }
                                    <div field="SumWorkHourValue" summarytype="sum" headeralign="center" width="35" allowsort="false"
                                         align="right">
                                        总计
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>
<style type="text/css">
    body .mini-calendar td {
        line-height: 16px;
    }

    .mini-calendar-days td {
        text-align: center;
        vertical-align: middle;
        padding: 2px;
        padding-left: 3px;
        padding-right: 3px;
        font-size: 9pt;
        font-family: font-family: "微软雅黑",Arial,sans-serif;
        cursor: pointer;
    }
</style>
<script type="text/javascript">
    @Html.GetEnum("Comprehensive.WorkTimeMajor");
    @Html.GetEnum("System.WorkHourType");
    var currentDate = "@Html.Raw(DateTime.Now.ToShortDateString())";
    var filledDate = "@Html.Raw(ViewBag.FilledDate)";
    var holidays = @Html.Raw(ViewBag.Holiday);
    var pieOption = @Html.Raw(ViewBag.PieChart);
    var engageMajor = "@Html.Raw(ViewBag.EngageMajor)";
    var needAdditional ="@ViewBag.NeedAdditional".toLocaleLowerCase()=="false"?false:true;
</script>
<script type="text/javascript">

    var currentYear = mini.parseDate(currentDate).getFullYear();
    var currentMonth = mini.parseDate(currentDate).getMonth() + 1;

    addGridEnum("dataGrid", "WorkHourType", "WorkHourType");
    addGridEnum("dataGrid", "WorkTimeMajor", "WorkTimeMajor");
    addGridEnum("summaryList", "WorkHourType", "WorkHourType");

    addGridLink('summaryList', 'ProjectName', '/MvcConfig/UI/List/PageView?TmplCode=WorkHourDetail&ProjectID={ProjectID}&BelongMonth=' + currentMonth + '&BelongYear=' + currentYear, { funcType: 'view', height: '70%', width: '70%', title: '工时查看'
    });


    var Days = new Array('周日', '周一', '周二', '周三', '周四', '周五', '周六');

    function addDate(date, days) {
        var d = new Date(date);
        d.setDate(d.getDate() + days);
        return d;
    }

    function getWeekStartDate(time) {
        var now = new Date(time);
        var nowDayOfWeek = now.getDay();
        var nowYear = now.getFullYear();
        var nowMonth = now.getMonth();
        var nowDay = now.getDate();
        nowDayOfWeek = nowDayOfWeek == 0 ? 7 : nowDayOfWeek;
        var weekStartDate = new Date(nowYear, nowMonth, nowDay - nowDayOfWeek + 1);
        return weekStartDate;
    }

    function getWeekEndDate(time) {
        var now = new Date(time);
        var nowDayOfWeek = now.getDay();
        var nowYear = now.getFullYear();
        var nowMonth = now.getMonth();
        var nowDay = now.getDate();
        nowDayOfWeek = nowDayOfWeek == 0 ? 7 : nowDayOfWeek;
        var weekEndDate = new Date(nowYear, nowMonth, nowDay + (6 - nowDayOfWeek + 1));
        return weekEndDate;
    }

    function getWeekDates(time) {
        var weekStartDate = getWeekStartDate(time);
        var result = [];
        for (var i = 0; i < 7; i++) {
            var date = addDate(weekStartDate, i);
            var dateItem = { fieldDate: mini.formatDate(date, "yyyy-MM-dd"), date: mini.formatDate(date, "MM/dd"), day: Days[date.getDay()] };
            result.push(dateItem);
        }
        return result;
    }


    function pageLoad() {
        var dateList = getWeekDates(currentDate);
        initGrid(dateList);
        loadGrid(currentDate);
        loadSummaryGrid(currentDate);
    }

    function onDateClick(e) {
        var dateList = getWeekDates(e.date);
        initGrid(dateList);
        loadGrid(e.date);
        loadSummaryGrid(e.date);
        if (e.date.getFullYear() == currentYear && e.date.getMonth() == currentMonth) {

        }
        else {
            UpdatePieChart(e.date);
        }
        currentYear = e.date.getFullYear();
        currentMonth = e.date.getMonth();
    }

    function ondrawcell(e) {
        var field = e.field;
        var rec = e.record;
        if (rec.Locked == "True") { e.cellStyle = "background:#ecedef"; }
        else if (field == "ProjectName" || field == "WorkHourType") { e.cellStyle = "background:#ecedef"; }
        else if (rec.WorkHourType == "Application" || rec.WorkHourType == "Manager" || rec.WorkHourType == "Market") {
            if (field == "SubProjectCode" || field == "MajorCode"|| field == "WorkTimeMajor") {
                e.cellStyle = "background:#ecedef";
            }
        }
    }

    function onCellValidation(e) {
        var rec = e.record;
        if ((e.field == "WorkTimeMajor") && rec.WorkHourType == "Production") {
            if (!e.value) {
                e.isValid = false;
                e.errorText = "不能为空";
            }
        }
    }

    function onDrawSummaryCell(e) {
        e.cellStyle = "text-align:right; color:Brown";
    }


    function loadSummaryGrid(date) {
        var year = mini.parseDate(date).getFullYear();
        var month = mini.parseDate(date).getMonth() + 1;
        var dataGrid = mini.get("summaryList");
        var url = "GetSummaryList?Year=" + year + "&Month=" + month;
        dataGrid.setUrl(url);
        dataGrid.reload();
    }

    function loadGrid(date) {
        var dataGrid = mini.get("dataGrid");
        var startDate = getWeekStartDate(date);
        var endDate = getWeekEndDate(date);
        var queryFormData = { "$FR$WorkHourDate": startDate, "$TO$WorkHourDate": endDate };
        dataGrid.setUrl("GetList");
        dataGrid.load({ queryFormData: mini.encode(queryFormData) });
    }

    function validateHoliday(time) {
        var date = mini.parseDate(time);
        var isHoliday = false;
        var dayOfWeek = date.getDay();
        if (dayOfWeek == 0 || dayOfWeek == 6) {
            isHoliday = true;
        }

        for (var m = 0; m < holidays.length; m++) {
            var holidayDefine = holidays[m];
            var holiday = mini.formatDate(mini.parseDate(holidayDefine.Date), "yyyy-MM-dd");
            if (holiday == mini.formatDate(date, "yyyy-MM-dd")) {
                if (holidayDefine.IsHoliday == "0") {
                    isHoliday = false; break;
                }
                else if (holidayDefine.IsHoliday == "1" || holidayDefine.IsHoliday == "2") {
                    isHoliday = true; break;
                }
            }
        }
        return isHoliday;
    }
    function initGrid(dates) {
        var dataGrid = mini.get("dataGrid");
        var columDefines = [
                { type: "checkcolumn" },
                { field: "WorkHourType", width: 60, headerAlign: "center", allowSort: false, align: "center", header: "类别", renderer: "onEnumRender" },
                { field: "ProjectName", width: 200, headerAlign: "center", allowSort: false, header: "项目" },
                { field: "WorkTimeMajor", width: 60, headerAlign: "center", allowSort: false, align: "center", vtype:"required:true", header: "专业", renderer: "onEnumRender", 
                editor: { type: "combobox", textField: "text", valueField: "value", data:WorkTimeMajor, allowinput: false }
                },
                { field: "WorkContent", width: 150, headerAlign: "center", vtype: "required", allowSort: false, header: "工作内容", editor: { type: "textarea"} }
        ];
        if (dates && dates.length > 0) {
            for (var i = 0; i < dates.length; i++) {
                var date = dates[i].date;
                var day = dates[i].day;
                var fieldName = dates[i].fieldDate + "_NormalValue";
                var addtionalFieldName = dates[i].fieldDate + "_AdditionalValue";
                var header = date + day;
                var isHoliday = false;

                var column = {
                    header: header, headerAlign: "center",
                };
                if(needAdditional)
                {
                    column.columns = [];
                    column.columns.push( { field: fieldName, summaryType: "sum", headerAlign: "center", header: "正", width: 33, align: "right", editor: { type: "textbox" }, vtype: "int" });
                    column.columns.push( { field: addtionalFieldName, summaryType: "sum", headerAlign: "center", header: "加", width: 33, align: "right", editor: { type: "textbox" }, vtype: "int" });
                    if (validateHoliday(dates[i].fieldDate)) {
                        column = {
                            header: header, headerAlign: "center", columns: [
                                      { field: addtionalFieldName, summaryType: "sum", headerAlign: "center", header: "加", width: 70, align: "right", editor: { type: "textbox" }, vtype: "int" }
                            ]
                        };
                    }
                    columDefines.push(column);
                }
                else  if (!validateHoliday(dates[i].fieldDate))
                {
                    column =  $.extend(true,column,{ field: fieldName, summaryType: "sum", headerAlign: "center", width: 70, align: "right", editor: { type: "textbox" }, vtype: "int" });
                    columDefines.push(column);
                }
            }
        }
        dataGrid.set({
            columns: columDefines
        });
    }

    function onDrawDate(e) {
        if (validateHoliday(e.date)) {
            e.dateStyle = "color:red";
        }
        else {
            var dates = filledDate.split(',');
            var flag = false;
            for (var i = 0; i < dates.length; i++) {
                var date = mini.formatDate(mini.parseDate(dates[i]), "yyyy-MM-dd");
                var cDate = mini.formatDate(e.date, "yyyy-MM-dd");
                if (cDate == date) {
                    flag = true;
                    break;
                }
            }
            if (flag) {
                e.dateStyle = "color:orange";
            }
            else {
                e.dateStyle = "color:blue";
            }
        }
        var month = e.date.getMonth() + 1;
        if (month != new Date(currentDate).getMonth() + 1) {
            e.dateStyle = "color:Gray";
        }
    }

    $(document).ready(function () {
        $("#pieContainer").highcharts(pieOption);
    });

    function UpdatePieChart(date) {
        var year = mini.parseDate(date).getFullYear();
        var month = mini.parseDate(date).getMonth() + 1;
        addExecuteParam("Year", year);
        addExecuteParam("Month", month);
        execute("GetPieChart", { showLoading: false, refresh: false, onComplete: function (data) {
            $("#pieContainer").highcharts(data);
        }, validateForm: false
        });
    }


    var isIE = navigator.userAgent.toUpperCase().indexOf("MSIE") > 0;
    var isFirefox = navigator.userAgent.indexOf("Firefox") > 0;
    var isChrome = window.navigator.userAgent.indexOf("Chrome") > 0;


    function addWorkHour() {
        var url = "/Comprehensive/WorkHour/WorkSelector/WorkSelector";
        openWindow(url, { refresh: false, title: "项目选择", width: "70%", height: "70%", resize: false,
            onDestroy: function (data) {
                if (!data || data == "close" || data.length == 0) { return; }
                var dataGrid = mini.get("dataGrid");
                for (var i = 0; i < data.length; i++) {
                    var row = data[i];
                    var thisMajor =$.grep(WorkHourType, function (item, index) { return item.value == engageMajor });
                    if(thisMajor.length>0){
                        row["WorkHourType"]=thisMajor[0].value;
                    }
                    dataGrid.addRow(row, 0);
                }
            }
        });
    }

    function del() {
        var dataGrid = mini.get("dataGrid");
        dataGrid.commitEdit();
        var date = mini.get("calendar").getValue();
        var rows = dataGrid.getSelecteds();
        if (rows.length <= 0) {
            msgUI("至少选择一个项目！");
            return;
        }
        else if (rows.length > 0) {
            msgUI("确认删除？", 2, function (action) {
                if (action == "ok") {
                    addExecuteParam("ListData", mini.encode(rows));
                    addExecuteParam("Date", mini.formatDate(date, "yyyy-MM-dd"));
                    execute("DeleteWorkHour", { showLoading: true, refresh: false, onComplete: function (data) {
                        dataGrid.removeRows(rows);
                        UpdatePieChart(date);
                        loadSummaryGrid(date);
                    }, validateForm: false
                    });
                }
            });
        }
    }

    function saveWorkHour() {
        var dataGrid = mini.get("dataGrid");
        var date = mini.get("calendar").getValue();
        dataGrid.commitEdit();
        var data = dataGrid.getList();
        addExecuteParam("ListData", mini.encode(data));
        addExecuteParam("Date", mini.formatDate(date, "yyyy-MM-dd"));
        execute("SaveWorkHour", { showLoading: true, refresh: false, onComplete: function (data) {
            dataGrid.reload();
            UpdatePieChart(date);
            loadSummaryGrid(date);
        }, validateForm: true
        });
    }


</script>
