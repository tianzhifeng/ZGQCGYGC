@{
    ViewBag.Title = "分包合同清单";
}
<script src="@Url.Content("/EPC/Scripts/Design/Bom/jquery.tmpl.js")" type="text/javascript"></script>
<!--导出Excel——模拟异步ajax提交表单 -->
<form id='excelFormBOQVersionDetail' style='display:none;' action='/MvcConfig/Aspose/ExportExcel' method='post' target='excelIFrameDeviceEntranceCheck'>
    <input type='hidden' name='jsonColumns' />
    <input type='hidden' name='title' />
    <input type='hidden' name='excelKey' />
    <input type='hidden' name='queryFormData' />
    <input type='hidden' name='quickQueryFormData' />
    <input type='hidden' name='sortOrder' />
    <input type='hidden' name='sortField' />
    <input type='hidden' name='pageSize' />
    <input type='hidden' name='pageIndex' />
    <input type='hidden' name='exportCurrentPage' />
    <input type='hidden' name='dataUrl' />
    <input type='hidden' name='referUrl' />
</form>
<iframe id='excelIFrameBOQVersionDetail' name='excelIFrameBOQVersionDetail' style='display:none;'></iframe>

<!--导出Excel——自定义删选字段-->
<div id='excelWindowBOQVersionDetail' class='mini-window' title='导出数据' style='width: 262px; height: 280px; display:none;'
     showmodal='true' allowresize='false' allowdrag='true'>
    <div id='gridColumnsBOQVersionDetail' class='mini-listbox' style='width: 250px; height: 200px;' showcheckbox='true'
         multiselect='true' textfield='ChineseName' valuefield='FieldName'>
    </div>
    <div style='float: right; padding-top: 6px;'>
        <a class='mini-button' iconcls='icon-excel' plain='false' onclick='downloadExcelData("BOQVersionDetail", "dataGrid");'>
            导出
        </a>
        <a class='mini-button' iconcls='icon-cancel' plain='false' onclick='closeExcelWindow("BOQVersionDetail")'>
            取消
        </a>
    </div>
</div>

<div class="mini-fit">
    <div class="mini-toolbar" style="padding: 0px; border-bottom: 0;">
        <table style="width: 100%;">
            <tr>
                <td style="width: 100%;">
                    @{
                            //流程结束
                            if (ViewBag.FlowEnd)
                            {
                                <a class="mini-button" iconcls="icon-add" onclick="upgrade()" plain="true">编辑升版</a>
                                <a class="mini-button" iconcls="icon-flowstart" onclick="flowTrace()" plain="true">流程跟踪</a>
                                <a class="mini-button" iconcls="icon-excel" onclick="exportList()" plain="true">导出Excel</a>
                            }
                            else
                            {
                                //过程
                                if (ViewBag.FlowPhase == "Processing")
                                {
                                    <a class="mini-button" iconcls="icon-save" onclick="savelist();" plain="true">保存</a>
                                    <a class="mini-menubutton" iconcls="icon-add" plain="true" menu="#popupMenu">导入</a>
                                    <a class="mini-button" iconcls="icon-add" onclick="addrow()" plain="true">增加行</a>
                                    <a class="mini-button" iconcls="icon-remove" onclick="delrow()" plain="true">删除行</a>
                                    <a class="mini-button" iconcls="icon-up" onclick="moveUp();">上移</a>
                                    <a class="mini-button" iconcls="icon-down" onclick="moveDown();">下移</a>
                                    <a class="mini-button" iconcls="icon-flowstart" onclick="flowTrace()" plain="true">流程跟踪</a>
                                }
                                //未启动流程
                                else
                                {
                                    <a class="mini-button" iconcls="icon-edit" onclick="startFlow" plain="true">提交审批</a>
                                    <a class="mini-button" iconcls="icon-save" onclick="savelist();" plain="true">暂存</a>
                                    <a class="mini-button" iconcls="icon-add" onclick="addrow()" plain="true">增加行</a>
                                    <a class="mini-button" iconcls="icon-remove" onclick="delrow()" plain="true">删除行</a>
                                    <a class="mini-button" iconcls="icon-up" onclick="moveUp();">上移</a>
                                    <a class="mini-button" iconcls="icon-down" onclick="moveDown();">下移</a>
                                    <a class="mini-button" iconcls="icon-cancel" onclick="revert();" plain="true">撤销</a>
                                    <a class="mini-menubutton" iconcls="icon-add" plain="true" menu="#popupMenu">导入</a>
                                    <a class="mini-button" iconcls="icon-excel" onclick="exportList()" plain="true">导出Excel</a>
                                }
                            }
                        }
                </td>
                <td style="white-space: nowrap;">
                        @Html.Raw("当前版本：")
                        <a href="javascript:void();" onclick="viewVersionList();">@ViewBag.VersionNo</a>
                    &nbsp;  &nbsp;
                    &nbsp;
                    显示：<input name="ShowType" class="mini-combobox" style="width: 100px;" textfield="text" valuefield="value" data="showType" allowinput="false"
                              onvaluechanged="onShowTypeChanged" value="New" />
                </td>
            </tr>
        </table>
    </div>
    <div class="mini-fit">
        <form id="excelForm" action="/" method="post">
            <div id="dataGrid" class="mini-datagrid" style="width: 100%; height: 100%;" editnextonenterkey="true" editnextrowcell="true" sortfield="SortIndex" sortorder="asc" allowcellselect='true' ondrawcell="onDrawingCell" oncellcommitedit="OnCellCommitEdit"
                 oncellbeginedit="OnCellBeginEdit" oncellendedit="OnCellEndEdit" borderstyle="border-left:0px" url="GetVersionList" allowcellvalid="true" fitcolumns="true" contextmenu="#gridMenu"
                 multiselect="true" allowcelledit="true">
                <div property="columns">
                    <div type="checkcolumn"></div>
                    <div field="Code" width="50" headeralign="center">
                        清单编号
<input property="editor" class="mini-textbox" style="width: 100%;" />
                    </div>
                    <div field="Name" width="70" headeralign="center">
                        项目名称
                       <input property="editor" class="mini-textbox" style="width: 100%;" />
                    </div>
                    <div field="Property" width="100" headeralign="center">
                        项目特征
                        <input property="editor" class="mini-textbox" style="width: 100%;" />
                    </div>
                    <div field="Unit" width="20" align="center" headeralign="center">
                        单位
                        <input property="editor" data="QuantityUnit" class="mini-textbox" style="width: 100%;" />
                    </div>
                    <div field="Quantity" width="30" headeralign="center" datatype="float" align="right">
                        数量
                        <input property="editor" class="mini-textbox" vtype="float" style="width: 100%;" />
                    </div>
                    <div field="UnitPrice" width="40" headeralign="center" datatype="currency" align="right">
                        单价（元）
                        <input property="editor" class="mini-textbox" vtype="float" style="width: 100%;" />
                    </div>
                    <div field="Price" width="40" headeralign="center" datatype="currency" align="right">
                        合价（元）
                        @*<input property="editor" class="mini-textbox" allowinput="false" vtype="float" style="width: 100%;" />*@
                    </div>
                    <div field="Remark" width="80" headeralign="center">
                        备注
                        <input property="editor" class="mini-textbox" style="width: 100%;" maxlength="500" />
                    </div>
                    <div field="SortIndex" width="20" visible="false" align="center" headeralign="center"></div>
                </div>
            </div>
        </form>
    </div>
</div>
<ul id="popupMenu" class="mini-contextmenu">
    <li name="add" iconcls="icon-add" onclick="excelImport">Excel导入</li>
    <li name="add" iconcls="icon-add" onclick="standardImport">标准工程量清单导入</li>
</ul>
<ul id="gridMenu" class="mini-contextmenu" onbeforeopen="onBeforeOpen">
    <li name="insert" iconcls="icon-remove" onclick="insertrow">下方插入行</li>
    <li name="remove" iconcls="icon-remove" onclick="delrow">删除行</li>
    <li name="revert" iconcls="icon-remove" onclick="onRevert">撤销更改</li>
</ul>
<script id="formTemplate" type="text/x-jquery-tmpl">
    <div style="text-align:left; font-weight:bolder; color:red;">上一版内容</div>
    <table class="mini-grid-table" cellspacing="0" cellpadding="0" style="width:700px;table-layout:fixed;">
        <tr>
            <td class="mini-grid-headerCell mini-grid-bottomCell " style="width: 50px;text-align:center">清单编号</td>
            <td class="mini-grid-headerCell mini-grid-bottomCell " style="width: 70px;text-align:center">项目名称</td>
            <td class="mini-grid-headerCell mini-grid-bottomCell " style="width: 100px;text-align:center">项目特征</td>
            <td class="mini-grid-headerCell mini-grid-bottomCell " style="width: 20px;text-align:center">单位</td>
            <td class="mini-grid-headerCell mini-grid-bottomCell " style="width: 30px;text-align:center">数量</td>
            <td class="mini-grid-headerCell mini-grid-bottomCell " style="width: 40px;text-align:center">单价</td>
            <td class="mini-grid-headerCell mini-grid-bottomCell " style="width: 40px;text-align:center">合价</td>
            <td class="mini-grid-headerCell mini-grid-bottomCell " style="width: 80px;text-align:center">备注</td>
        </tr>
        <tr>
            <td style="text-align:center">${Code}</td>
            <td style="text-align:left">${Name}</td>
            <td style="text-align:left">${Property}</td>
            <td style="text-align:center">${Unit}</td>
            <td style="text-align:right">${Quantity}</td>
            <td style="text-align:right">${UnitPrice}</td>
            <td style="text-align:right">${Price}</td>
            <td style="text-align:left">${Remark}</td>
        </tr>
    </table>
</script>
<script type="text/javascript">
    var flowEnd = "@Html.Raw(ViewBag.FlowEnd)";
    var showType = [{ text: "显示全部", value: "All" }, { text: "仅显示差异", value: "Diff" }, { text: "仅显示最新", value: "New" }];
</script>
<script type="text/javascript">
    var contractInfoID = getQueryString('ContractInfoID');
    var versionID = "@Html.Raw(ViewBag.VersionID)";
    var FuncType = getQueryString('FuncType');

    function pageLoad() {
        search();
    }

    function onShowTypeChanged(e) {
        search();
    }

    function search() {
        var showDiff = "New";

        if (mini.getbyName("ShowType")) {
            showDiff = mini.getbyName("ShowType").getValue();
        }

        var url = "GetBOQList?VersionID=" + versionID + "&ShowType=" + showDiff;
        var dataGrid = mini.get("dataGrid");
        dataGrid.setUrl(url);
        dataGrid.reload();
    }

    function upgrade() {
        msgUI("您确定需要升版表吗？", 2, function (result) {
            if (result != "ok") return;
            addExecuteParam("ContractInfoID", contractInfoID);
            execute("UpgradeBOQ", {
                showLoading: true, refresh: false, onComplete: function (data) {
                    window.location.reload();
                }, validateForm: false
            });
        });
    }

    function revert() {
        msgUI("撤销操作将撤销所有的编辑内容，您确定要继续吗？", 2, function (result) {
            if (result != "ok") return;
            addExecuteParam("VersionID", versionID);
            execute("Revert", {
                showLoading: true, refresh: false, onComplete: function (data) {
                    window.location.reload();
                }, validateForm: false
            });
        });
    }

    function onBeforeOpen(e) {
        var dataGrid = mini.get("dataGrid");        
        var menu = e.sender;
        var node = dataGrid.getSelected();
        if (!node || flowEnd == "True" || (FuncType&&FuncType=='View')) {
            e.cancel = true;
            //阻止浏览器默认右键菜单
            e.htmlEvent.preventDefault();
            return;
        }

        var removeItem = mini.getbyName("remove", menu);
        var revertItem = mini.getbyName("revert", menu);
        removeItem.enable();
        revertItem.disable();

        if (node.ModifyState != "Normal") {
            revertItem.enable();
        }
        if (node.ModifyState == "Remove") {
            removeItem.disable();
        }
    }

    function onRevert() {
        var dataGrid = mini.get("dataGrid");
        var nodes = dataGrid.getSelecteds();
        if (nodes.length == 0) {
            return;
        }
        addExecuteParam("ListData", mini.encode(nodes));
        addExecuteParam("ContractInfoID", contractInfoID);
        execute("RevertNode", {
            showLoading: true, refresh: false, onComplete: function (data) {
                for (var i = 0; i < nodes.length; i++) {
                    var node = nodes[i];
                    if (node.ModifyState == "Add") {
                        dataGrid.removeRow(node);
                    }
                    else {
                        for (var m = 0; m < data.length; m++) {
                            if (data[m].ID == node.ID) {
                                dataGrid.updateRow(node, data[m]);
                                dataGrid.commitEditRow(node);
                                dataGrid.acceptRecord(node);
                            }
                        }
                    }
                }
            }, validateForm: false
        });
    }

    function flowTrace() {
        var url = "/MvcConfig/Workflow/Trace/Diagram?ID=" + versionID;
        openWindow(url, {
            refresh: false, title: "流程跟踪", width: "80%", height: "85%",
            onDestroy: function () { }
        });
    }

    function startFlow() {
        if (!versionID) {
            msgUI("没有找到指定的版本，无法提交"); return;
        }
        var grid = mini.get("dataGrid");
        var nodes = grid.getChanges();
        addExecuteParam("ListData", mini.encode(nodes));
        execute("ThisSaveList", {
            showLoading: true, refresh: false, onComplete: function (data) {
                var grid = mini.get("dataGrid");
                grid.reload();
                var url = "/EPC/Construction/BOQSubmit/PageView?TmplCode=BOQSubmit&FlowCode=BOQSubmit&ID=" + versionID;
                openWindow(url, {
                    refresh: false, title: "工程量清单提交", width: "90%", height: "90%",
                    onDestroy: function (data) {
                        if (data == "close") return;
                        window.location.reload();
                    }
                });
            }, validateForm: false
        });
    }

    function excelImport() {
        var validateUrl = "/EPC/Construction/BOQ/ValidateData?VersionID=" + versionID;
        var saveUrl = "/EPC/Construction/BOQ/SaveExcelData?VersionID=" + versionID;
        var excelKey = "BOQ_Version_Detail_Import";
        ImportExcel(excelKey, validateUrl, saveUrl);
    }

    function standardImport() {
        var url = "/EPC/Infrastructure/ConstructionQuantity/List?IsForImport=true";
        openWindow(url, {
            refresh: false, title: "导入标准工程量清单", width: "80%", height: "70%",
            onDestroy: function (data) {
                if (data != 'close') {
                    addExecuteParam("listData", mini.encode(data));
                    execute("StandardImport?VersionID=" + versionID, {
                        showLoading: true, refresh: false, onComplete: function (d) {
                            var grid = mini.get("dataGrid");
                            grid.reload();
                        }, validateForm: false
                    });
                }
            }
        });
    }

    function insertrow() {
        //var newRowData = { Name: "新增清单", Quantity: 0 };
        //addRow(newRowData, { gridId: "dataGrid", isLast: true });
        var nodeID = "";

        addExecuteParam("versionID", versionID);
        var grid = mini.get("dataGrid");
        if (grid.data.length != 0) {
            var node = grid.getSelected();
            addExecuteParam("targetID", node.ID);
        }

        execute("InsertDetail", {
            showLoading: true, refresh: false, onComplete: function (data) {
                var grid = mini.get("dataGrid");
                grid.reload();
            }, validateForm: false
        });
    }

    function addrow() {
        var nodeID = "";
        addExecuteParam("versionID", versionID);
        var grid = mini.get("dataGrid");
        if (grid.data.length != 0) {
            var node = grid.data[grid.data.length - 1];
            addExecuteParam("targetID", node.ID);
        }

        execute("InsertDetail", {
            showLoading: true, refresh: false, onComplete: function (data) {
                var grid = mini.get("dataGrid");
                grid.reload();
            }, validateForm: false
        });
    }

    function delrow() {
        var dataGrid = mini.get("dataGrid");
        var nodes = dataGrid.getSelecteds();
        if (nodes.length == 0) {
            return;
        }

        addExecuteParam("detailData", nodes);
        execute("DetectDelete", {
            showLoading: false, refresh: false, onComplete: function (data) {
                delRow({ gridId: "dataGrid" });
                savelist();
            }, validateForm: false
        });
    }

    function savelist() {
        var dataGrid = mini.get("dataGrid");
        var nodes = dataGrid.getChanges();
        if (nodes.length == 0) {
            return;
        }

        var setting = {
            action: 'ThisSaveList?versionID=' + versionID,
            gridId: "dataGrid",
            formId: "EntityGridForm",
            listData: mini.encode(nodes)
        };

        setting.actionTitle = '';
        saveList(setting);
    }

    function exportList(currentPage) {
        var showDiff = "New";

        if (mini.getbyName("ShowType")) {
            showDiff = mini.getbyName("ShowType").getValue();
        }
        var urlForDownloadExcel = "GetVersionList?VersionID=" + versionID + "&ShowType=" + showDiff;
        //为导出excel而设
        //因为导出excel的逻辑只支持识别GetVersionList返回的数据格式
        var dataGrid = mini.get("dataGrid");
        dataGrid.setUrl(urlForDownloadExcel);

        if (currentPage)
            $("input[name='exportCurrentPage']").val("true");
        else
            $("input[name='exportCurrentPage']").val("false");
        ExportExcel("BOQVersionDetail", "dataGrid", "");
    }

    function viewVersionList() {
        var url = "/MvcConfig/UI/List/PageView?TmplCode=BOQVersionList&ContractInfoID=" + contractInfoID + "&VersionID=" + versionID;
        openWindow(url, {
            refresh: false, title: "工程量清单历史版本", width: "70%", height: "60%",
            onDestroy: function () { }
        });
    }

    function OnCellBeginEdit(e) {
        var record = e.record, field = e.field;
        if (flowEnd == "True") {
            e.cancel = true;
        }
        else if (record.ModifyState == "Remove") {
            e.cancel = true;
        }
    }

    function OnCellCommitEdit(e) {
        if (!e.editor.isValid()) {
            msgUI(e.column.header.replace(/(^\s*)|(\s*$)/g, '') + '格式有误');
            e.cancel = true;
        }
    }

    function OnCellEndEdit(e) {
        if (e.field == 'Quantity' || e.field == 'UnitPrice') {
            if (e.editor.isValid()) {
                var price = e.row.Quantity * e.row.UnitPrice;
                e.sender.updateRow(e.row, { Price: price });
            }
        }
    }

    function onDrawingCell(e) {
        var dataGrid = e.sender;
        var record = e.record;
        var column = e.column;
        var field = e.field;
        if (flowEnd == "True") {
            //if (record.NodeType != "Detail") {
            //    e.cellStyle = "font-weight:bolder; background:#F0F0F0";
            //}
            // else
            {
                if (record.ModifyState == "Add") {
                    if (field == "Name") {
                        e.cellHtml = record.Name + "<img style=\"height:18px;float:right;\" src=\"/EPC/Scripts/Design/Bom/new_red.png\" />";// record.Name + "new";
                    }
                    e.cellStyle = "background:#BBFFFF";
                }
                else if (record.ModifyState == "Modify") {
                    if (field == "Name") {
                        e.cellHtml = '<span id="' + record.ID + '" class="showCellTooltip" data-placement="bottomleft">' + record.Name + '</span>';
                    }
                    e.cellStyle = " background: yellow;";
                }
                else if (record.ModifyState == "Remove") {
                    e.cellStyle = "background:url('/EPC/Scripts/Design/Bom/red-line.jpg')  center ;color:#fff";
                }
            }
        }
        else {
            if (record.ModifyState == "Add") {
                if (field == "Name") {
                    e.cellHtml = record.Name + "<img style=\"height:18px;float:right;\" src=\"/EPC/Scripts/Design/Bom/new_red.png\" />";// record.Name + "new";
                }
                e.cellStyle = "background:#BBFFFF";
            }
            else if (record.ModifyState == "Modify") {
                if (field == "Name") {
                    e.cellHtml = '<span id="' + record.ID + '" class="showCellTooltip" data-placement="bottomleft">' + record.Name + '</span>';
                }
                e.cellStyle = " background: yellow;";
            }
            else if (record.ModifyState == "Remove") {
                e.cellStyle = "background:url('/EPC/Scripts/Design/Bom/red-line.jpg')  center ;color:#fff";
            }
        }
    }

    function flowTrace() {
        var url = "/MvcConfig/Workflow/Trace/Diagram?ID=" + versionID;
        openWindow(url, {
            refresh: false, title: "流程跟踪", width: "80%", height: "85%",
            onDestroy: function () { }
        });
    }

    function moveUp() {
        var grid = mini.get("dataGrid");
        var nodes = grid.getSelecteds();
        if (nodes.length == 0) {
            return;
        }
        else if (nodes.length > 1) {
            msgUI("只能选择一个移动");
            return;
        }

        addExecuteParam("targetID", nodes[0].ID);
        addExecuteParam("UpOrDown", true);
        execute("Move", {
            showLoading: true, refresh: false, onComplete: function (data) {
                var grid = mini.get("dataGrid");
                grid.moveUp(nodes);
            }, validateForm: false
        });
    }
    function moveDown() {
        var grid = mini.get("dataGrid");
        var nodes = grid.getSelecteds();
        if (nodes.length == 0) {
            return;
        }
        else if (nodes.length > 1) {
            msgUI("只能选择一个移动");
            return;
        }

        addExecuteParam("targetID", nodes[0].ID);
        addExecuteParam("UpOrDown", false);
        execute("Move", {
            showLoading: true, refresh: false, onComplete: function (data) {
                var grid = mini.get("dataGrid");
                grid.moveDown(nodes);
            }, validateForm: false
        });
    }


    $(document).ready(function () {
        var tip = new mini.ToolTip();
        tip.set({
            target: document,
            selector: '.showCellTooltip',
            onbeforeopen: function (e) {
                e.cancel = false;
            },
            onopen: function (e) {
                var el = e.element;
                var id = el.id;
                if (id) {
                    this.showLoading();
                    addExecuteParam("ID", id);
                    addExecuteParam("VersionID", versionID);
                    execute("GetLastDetailInfo", {
                        showLoading: false, refresh: false, onComplete: function (data) {
                            var html = $("#formTemplate").tmpl(data);
                            tip.setContent(html);
                        }, validateForm: false
                    });
                }
            }
        });
    });

</script>

