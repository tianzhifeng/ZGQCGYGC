@{
    ViewBag.Title = "List";
}

<div class="mini-toolbar" style="padding: 0px; border-bottom: 0;">
    <table style="width: 100%;">
        <tr>
            <td style="width: 100%;">
                <a class="mini-button" iconcls="icon-add" onclick="addNode()" plain="true">增加</a>
                <a class="mini-button" iconcls="icon-edit" onclick="editNode()" plain="true">编辑</a>
                <a class="mini-button" iconcls="icon-remove" onclick="delNode()" plain="true">删除</a>
            </td>
            <td style="white-space: nowrap;"></td>
        </tr>
    </table>
</div>
<div class="mini-fit">
    <div id="dataTree" class="mini-treegrid" style="width:100%;height:100%;"
         url="" showtreeicon="true" treecolumn="Name" idfield="ID" parentfield="ParentID" resultastree="false"
         expandonload="true" multiselect="true" allowdrag="true" allowdrop="true" allowleafdropin="true"
         ongivefeedback="onGiveFeedback" ondrop="onNodeDrop"
         allowresize="false" fitcolumns="true">
        <div property="columns">
            <div type="checkcolumn"></div>
            <div type="indexcolumn"></div>
            <div name="Name" field="Name" width="200" headeralign="center">名称</div>
            <div field="Code" width="90" headeralign="center">编号</div>
            <div field="NodeType" width="80" headeralign="center" align="center">节点类型</div>
            <div field="TaskType" width="80" headeralign="center" align="center">作业类型</div>
            <div field="IsDynmanic" width="60" headeralign="center" align="center">是否动态</div>
            <div field="IsEnum" width="60" headeralign="center" align="center">枚举</div>
            <div field="EnumKey" width="50" headeralign="center" align="center">枚举KEY</div>
        </div>
    </div>
</div>
<script type="text/javascript">
    @Html.GetEnum("System.TrueOrFalse")
    @Html.GetEnum("Base.WBSType")
    @Html.GetEnum(typeof(EPC.Logic.TaskType))
</script>
<script type="text/javascript">
    var modeID = getQueryString("ModeID");
    var url = "GetTree?ModeID=" + modeID;
    $("#dataTree").attr("url", url);

    addGridEnum("dataTree", "NodeType", "WBSType");
    addGridEnum("dataTree", "IsDynmanic", "TrueOrFalse");
    addGridEnum("dataTree", "IsEnum", "TrueOrFalse");
    addGridEnum("dataTree", "CanEdit", "TrueOrFalse");
    addGridEnum("dataTree", "CanAddChild", "TrueOrFalse");
    addGridEnum("dataTree", "CanDelete", "TrueOrFalse");
    addGridEnum("dataTree", "TaskType", "TaskType");


    function addNode() {
        var dataTree = mini.get("dataTree");
        var node = dataTree.getSelectedNode();
        if (node.NodeType == "Task") {
            msgUI("作业节点下不能再增加节点"); return;
        }
        var url = "Edit?ParentID=" + node.ID;
        openWindow(url, {
            refresh: false, title: "WBS节点编辑", width: 700, height: 400,
            onDestroy: function () {
                dataTree.reload();
            }
        });
    }

    function editNode() {
        var dataTree = mini.get("dataTree");
        var node = dataTree.getSelectedNode();
        var url = "Edit?ID=" + node.ID;
        openWindow(url, {
            refresh: false, title: "WBS节点编辑", width: 700, height: 400,
            onDestroy: function () {
                dataTree.reload();
            }
        });
    }

    function delNode() {
        var dataTree = mini.get("dataTree");
        var nodes = dataTree.getSelecteds();
        if (nodes.length == 0) { msgUI("请选择一个节点"); return; }
        msgUI("您确定需要删除吗？", 2, function (result) {
            if (result != "ok") return;
            addExecuteParam("ListData", mini.encode(nodes));
            execute("DeleteNode", {
                showLoading: true, refresh: false, onComplete: function (data) {
                    dataTree.removeNodes(nodes);
                }, validateForm: false
            });
        });
    }

    function onNodeDrop(e) {
        var tree = mini.get("dataTree");
        addExecuteParam("sourceID", e.dragNode.ID);
        addExecuteParam("targetID", e.dropNode.ID);
        addExecuteParam("dragAction", e.dragAction);
        execute("MoveNode", {
            showLoading: false, refresh: false, onComplete: function (data) {
                tree.updateNode(e.dragNode, data);
                tree.acceptRecord(e.dragNode);
            }, validateForm: false
        });
    }

    function onGiveFeedback(e) {
        var tree = e.sender;
        var node = e.node;              //被拖拽的节点
        var targetNode = e.targetNode;  //目标投放节点
        var effect = e.effect;          //投放方式：add|before|after
        if (targetNode.NodeType == "Task" && effect == "add") {
            e.effect = "no";
        }
    }


</script>