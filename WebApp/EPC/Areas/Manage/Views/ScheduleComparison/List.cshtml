@{
    ViewBag.Title = "List";
}

<div class="mini-toolbar" style="padding: 2px; border-bottom: 0;">
    <table style="width: 100%;">
        <tr>
            <td style="width: 100%;">
                计划：
                <input name="ScheduleCode" class="mini-combobox" style="width: 120px;" textfield="text" valuefield="value"
                       data="scheduleDefine" allowinput="false" onvaluechanged="onScheduleSelectChanged" />
                &nbsp;   &nbsp;   &nbsp;
                当前版本：
                <input name="currentVersion" class="mini-combobox" style="width: 100px;" textfield="text" valuefield="value"
                       allowinput="false" onvaluechanged="onVersionValueChanged" />
                &nbsp;   &nbsp;   &nbsp;
                目标版本：
                <input name="targetVersion" class="mini-combobox" style="width: 100px;" textfield="text" valuefield="value"
                       allowinput="false" onvaluechanged="onVersionValueChanged" />
            </td>
            <td style="white-space: nowrap;">
                显示：
                <input name="ShowType" class="mini-combobox" style="width: 100px;" textfield="text" valuefield="value" data="showType" allowinput="false"
                       onvaluechanged="onShowTypeChanged" value="All" />
            </td>
        </tr>
    </table>
</div>
<div class="mini-fit" style="height: 100px;">
    <div id="dataTree" class="mini-treegrid" style="width:100%;height:100%;"
         url="" expandonload="true" showtreeicon="true" ondrawcell="onDrawingCell" allowcellwrap="true" oncellbeginedit="OnCellBeginEdit"
         oncellendedit="onCellEndEdit" multiselect="true" borderstyle="border-left:0px;border-right:0px;" allowheaderwrap="true"
         treecolumn="Name" idfield="ID" parentfield="ParentID" resultastree="false" expandonload="true" iconfield="NodeType"
         allowdrag="true" allowdrop="true" allowleafdropin="true" ongivefeedback="onGiveFeedback" ondrop="onNodeDrop"
         allowresize="false" fitcolumns="false">
        <div property="columns">
            <div type="indexcolumn" name="index"></div>
            <div name="Name" field="Value" displayfield="Name" width="380" headeralign="center">
                任务名称
            </div>
            <div header="当前版本" headeralign="center">
                <div property="columns">
                    <div field="PlanDuration" width="60" align="right" headeralign="center">
                        工期(天)
                    </div>
                    <div field="PlanStartDate" width="100" align="center" headeralign="center" dateformat="yyyy-MM-dd">
                        计划开始日期
                    </div>
                    <div field="PlanEndDate" width="100" align="center" headeralign="center" dateformat="yyyy-MM-dd">
                        计划完成日期
                    </div>
                </div>
            </div>
            <div header="目标版本" headeralign="center">
                <div property="columns">
                    <div field="TargetPlanDuration" width="60" align="right" headeralign="center">
                        工期(天)
                    </div>
                    <div field="TargetPlanStartDate" width="100" align="center" headeralign="center" dateformat="yyyy-MM-dd">
                        计划开始日期
                    </div>
                    <div field="TargetPlanEndDate" width="100" align="center" headeralign="center" dateformat="yyyy-MM-dd">
                        计划完成日期
                    </div>
                </div>
            </div>
        </div>
    </div>

</div>
<script>
    var scheduleDefine=@Html.Raw(ViewBag.ScheduleDefine);
</script>
<script type="text/javascript">
    var showType = [{ text: "显示全部", value: "All" }, { text: "仅显示差异", value: "Diff" }];

    function onDrawingCell(e) {
        var treeGrid = e.sender;
        var record = e.record;
        var column = e.column;
        var field = e.field;
        if (record.Diff == "True") {
            e.cellStyle = " background: yellow;";
        }
        if (record.NodeType != "Task") {
            e.cellStyle += "font-weight:bolder; ";
        }
        if(record.DiffField&&record.DiffField.indexOf(field)>=0){
            e.cellStyle = " background: #fee2f0;";
        }
    }

    function onVersionValueChanged(e) {
        loadData();
    }

    var engineeringInfoID = getQueryString("EngineeringInfoID");
    function onScheduleSelectChanged(e) {
        addExecuteParam("EngineeringInfoID", engineeringInfoID);
        addExecuteParam("ScheduleCode", e.value);
        execute("GetVersionList", { showLoading: false, refresh: false, onComplete: function (data) {
            var currentVersion = mini.getbyName("currentVersion");
            currentVersion.setData(data);
            var targetVersion = mini.getbyName("targetVersion");
            targetVersion.setData(data);
        }, validateForm: false
        });
    }

    function loadData() {
        var currentVersion = mini.getbyName("currentVersion");
        var targetVersion = mini.getbyName("targetVersion");
        var currentVersionID=  currentVersion.getValue();
        var targetVersionID=  targetVersion.getValue();
        if(!currentVersionID||!targetVersionID){
            tree.clearRows();
            return;
        }
        else if(targetVersionID==currentVersionID){
            msgUI("请确认当前版本和目标版本已选择为不同版本");
            var tree = mini.get("dataTree");
            tree.clearRows();
            return;
        }
        else{
            var url="GetComparisonList?SourceID="+currentVersionID+"&TargetID="+targetVersionID+"&ShowType="+mini.getbyName("ShowType").getValue();
            var dataTree = mini.get("dataTree");
            dataTree.load(url);
        }
    }


    function onShowTypeChanged(e) {
        var tree = mini.get("dataTree");
        if (e.value == "Diff") {
            tree.filter(function (node) {
                if (node.Diff == "True") {
                    return true;
                }
            });
        }
        else {
            tree.clearFilter();
        }
    }
</script>

