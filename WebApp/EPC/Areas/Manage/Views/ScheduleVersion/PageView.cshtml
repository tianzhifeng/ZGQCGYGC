@if (string.IsNullOrEmpty(Request["IsPreView"]) && string.IsNullOrEmpty(Request["FlowCode"]) && string.IsNullOrEmpty(Request["TaskExecID"]) && (string.IsNullOrEmpty(Request["FuncType"]) || Request["FuncType"].ToLower() != "view"))
{
    <div style='width: 100%; height: 28px;'>
    </div>
}
@using Config.Logic;
<div class="mini-fit" style="padding-top: 5px;">
    <div id="mainTabl" class="mini-tabs" activeindex="0" style="width: 100%; height: 100%;">
        <div title="审批表">
            <form id="dataForm" method="post" align="center" autogetdata="false">
                <input name="ID" class="mini-hidden" />
                @Html.Raw(ViewBag.HiddenHtml)
                <div class="formDiv" style="background-color: #fff;">
                    @Html.Raw(ViewBag.FormHtml)
                </div>
                @if (System.Configuration.ConfigurationManager.AppSettings["showFlowComments"] == "True" && (!string.IsNullOrEmpty(Request["TaskExecID"]) || !string.IsNullOrEmpty(Request["FlowCode"])))
                {
                    <div style="padding-left: 35px; padding-right: 35px; padding-bottom: 65px;">
                        <fieldset>
                            <legend style="font-weight: bold; margin-left: 35px;">操作信息</legend>
                            <div id="comment">
                            </div>
                        </fieldset>
                    </div>

                    <script type="text/javascript">
                        function onCommentLoad(e) {
                            if (e.data.length == 0)
                                $("#commentGrid").hide();
                        }
                    </script>
                }
            </form>
        </div>
        <div title="详细信息">
            <div id="mainlayout" class="mini-layout" style="width: 100%; height: 100%;">
                @{
                    var define = ViewBag.Define as EPC.Logic.Domain.S_C_ScheduleDefine;
                    var visible = "true";
                    if (!define.ShowTab)
                    {
                        visible = "false";
                    }
                    var tabSubList = new List<Dictionary<string, object>>();
                    if (!String.IsNullOrEmpty(define.TabData))
                    {
                        tabSubList = Formula.Helper.JsonHelper.ToList(define.TabData);
                    }

                    var PreTaskVisible = "false"; var PreTaskEdit = "false";
                    var UserResource = "false"; var UserResourceEdit = "false";
                    var BomResource = "false"; var BomResourceEdit = "false";
                    var BOQ = "false"; var BOQEdit = "false";
                    var ContractResource = "false"; var ContractResourceEdit = "false";
                    var Quantity = "false"; var QuantityEdit = "false";
                    var Document = "false"; var DocumentEdit = "false";

                    if (tabSubList.Exists(c => c["TabCode"].ToString() == "PreTask" && c["Visible"].ToString() == "1"))
                    {
                        PreTaskVisible = "true";
                    }
                    if (tabSubList.Exists(c => c["TabCode"].ToString() == "UserResource" && c["Visible"].ToString() == "1"))
                    {
                        UserResource = "true";
                    }
                    if (tabSubList.Exists(c => c["TabCode"].ToString() == "BomResource" && c["Visible"].ToString() == "1"))
                    {
                        BomResource = "true";
                    }
                    if (tabSubList.Exists(c => c["TabCode"].ToString() == "BOQ" && c["Visible"].ToString() == "1"))
                    {
                        BOQ = "true";
                    }
                    if (tabSubList.Exists(c => c["TabCode"].ToString() == "ContractResource" && c["Visible"].ToString() == "1"))
                    {
                        ContractResource = "true";
                    }
                    if (tabSubList.Exists(c => c["TabCode"].ToString() == "Quantity" && c["Visible"].ToString() == "1"))
                    {
                        Quantity = "true";
                    }
                    if (tabSubList.Exists(c => c["TabCode"].ToString() == "Document" && c["Visible"].ToString() == "1"))
                    {
                        Document = "true";
                    }
                }
                <div title="相关信息" region="south" showsplit="true" showheader="false" height="220" showspliticon="true" visible="@visible">
                    <div class="mini-fit" style="padding-top: 2px;">
                        <div id="subTabs" class="mini-tabs" activeindex="0" style="width: 100%; height: 100%;">
                            @{
                                if (PreTaskVisible == "true")
                                {
                                    var borderstyle = "border:0px;";
                                    <div title="紧前作业">
                                        @{
                                            <div class="mini-fit">
                                                <div id="PreTaskGrid" url="" class="mini-datagrid" style="width: 100%; height: 100%;" idfield="ID" multiselect="true"
                                                     allowcellselect="true" editnextonenterkey="true" editnextrowcell="true" allowcelledit="true"
                                                     showpager="false" borderstyle="@borderstyle">
                                                    <div property="columns">
                                                        <div type="checkcolumn">
                                                        </div>
                                                        <div field="PredecessorTaskName" width="200" headeralign="center" allowsort="true">
                                                            作业名称
                                                        </div>
                                                        <div field="PredecessorTaskCode" width="120" headeralign="center" allowsort="true" align="center">
                                                            作业编号
                                                        </div>
                                                        <div field="Type" width="120" headeralign="center" allowsort="true"
                                                             align="center">
                                                            关系
                                                        </div>
                                                        <div field="Delay" headeralign="center" width="120" allowsort="true" align="center">
                                                            延迟<input property="editor" class="mini-textbox" style="width: 100%;" />
                                                        </div>
                                                    </div>
                                                </div>
                                            </div>
                                        }
                                    </div>
                                }
                            }

                            @{
                                if (UserResource == "true")
                                {
                                    var borderstyle = "border:0px;";
                                    <div title="人员角色">
                                        @{
                                            <div class="mini-fit">
                                                <div id="UserRoleGrid" url="" class="mini-datagrid" style="width: 100%; height: 100%;" idfield="ID" multiselect="true"
                                                     allowcellselect="true" editnextonenterkey="true" oncellendedit="onUserRoleGridCellEndEdit"
                                                     editnextrowcell="true" allowcelledit="true"
                                                     showpager="false" borderstyle="@borderstyle">
                                                    <div property="columns">
                                                        <div type="checkcolumn">
                                                        </div>
                                                        <div field="ResourceID" displayfield="ResourceName" width="200" headeralign="center" allowsort="true">
                                                            人员姓名
                                                            <input name='UserRole' property='editor' class='mini-buttonedit' allowinput='true' style='width:100%;' />
                                                        </div>
                                                        <div field="RoleCode" displayfield="RoleName" width="120" headeralign="center" allowsort="true" align="center">
                                                            角色
                                                            <input property="editor" class="mini-combobox" style="width:100%;" valuefield="value" textfield="text" data="DesignRoleDefine" />
                                                        </div>
                                                        <div field="Quantity" width="120" headeralign="center" allowsort="true"
                                                             align="center">
                                                            工作量<input property="editor" class="mini-textbox" style="width: 100%;" />
                                                        </div>
                                                    </div>
                                                </div>
                                            </div>
                                        }
                                    </div>
                                }
                            }
                            @{
                                if (BomResource == "true")
                                {
                                    var borderstyle = "border:0px;";
                                    <div title="关联设备材料">
                                        @{
                                            <div class="mini-fit">
                                                <div id="deviceInfoGrid" url="" class="mini-datagrid" style="width: 100%; height: 100%;" idfield="ID" multiselect="true"
                                                     allowcellselect="true" editnextonenterkey="true" oncellendedit="onDeviceGridCellEndEdit"
                                                     editnextrowcell="true" allowcelledit="true" showpager="false" borderstyle="@borderstyle">
                                                    <div property="columns">
                                                        <div type="checkcolumn">
                                                        </div>
                                                        <div field="Code" width="70" headeralign="center" allowsort="false">
                                                            设备编号
                                                        </div>
                                                        <div field="Name" width="200" headeralign="center" allowsort="false">
                                                            设备名称
                                                        </div>
                                                        <div field="SubProjectName" width="90" headeralign="center" allowsort="false">
                                                            所属子项
                                                        </div>
                                                        <div field="MajorName" width="90" headeralign="center" allowsort="false" align="center">
                                                            所属专业
                                                        </div>
                                                        <div field="Quantity" width="70" headeralign="center" allowsort="false" align="right">
                                                            数量<input property="editor" class="mini-textbox" style="width: 100%;" />
                                                        </div>
                                                        <div field="Specifications" width="150" headeralign="center" allowsort="false">
                                                            规格
                                                        </div>
                                                        <div field="Model" width="150" headeralign="center" allowsort="false">
                                                            型号
                                                        </div>
                                                        <div field="Branding" width="120" headeralign="center" allowsort="false">
                                                            品牌
                                                        </div>

                                                    </div>
                                                </div>
                                            </div>
                                        }
                                    </div>
                                }
                            }
                            @{
                                if (BOQ == "true")
                                {
                                    var borderstyle = "border:0px;";
                                    <div title="工程量">
                                        @{
                                            <div class="mini-fit">
                                                <div id="BOQGrid" url="" class="mini-datagrid" style="width: 100%; height: 100%;" idfield="ID" multiselect="true"
                                                     showpager="false" borderstyle="@borderstyle">
                                                    <div property="columns">
                                                        <div type="checkcolumn">
                                                        </div>
                                                        <div field="Code" width="70" headeralign="center" allowsort="false">
                                                            清单项名称
                                                        </div>
                                                        <div field="Name" width="200" headeralign="center" allowsort="false">
                                                            清单项名称
                                                        </div>
                                                        <div field="Quantity" width="70" headeralign="center" allowsort="false">
                                                            数量
                                                        </div>
                                                    </div>
                                                </div>
                                            </div>
                                        }
                                    </div>
                                }

                            }
                            @{
                                if (Quantity == "true")
                                {
                                    <div title="质量控制">
                                    </div>
                                }

                            }
                            @{
                                if (Document == "true")
                                {
                                    <div title="文档信息">
                                    </div>
                                }
                            }
                        </div>
                    </div>
                </div>
                <div title="center" region="center">
                    <div class="mini-toolbar" style="padding: 0px; border-bottom: 0;">
                        <table style="width: 100%;">
                            <tr>
                                <td style="width: 100%;"></td>
                                <td style="white-space: nowrap;">
                                    当前版本：<a href="javascript:void();" onclick="viewVersionList();">@ViewBag.VersionNo</a>
                                    &nbsp;  &nbsp;  &nbsp;
                                    显示：<input name="ShowType" class="mini-combobox" style="width: 100px;" textfield="text" valuefield="value" data="showType"
                                              allowinput="false"
                                              onvaluechanged="onShowTypeChanged" value="New" /> &nbsp; &nbsp;
                                </td>
                            </tr>
                        </table>
                    </div>
                    <div class="mini-fit">
                        <div id="dataTree" class="mini-treegrid" style="width:100%;height:100%;" virtualscroll="@ViewBag.VirtualScroll"
                             url="" expandonload="true" showtreeicon="true" ondrawcell="onDrawingCell" allowcellwrap="true" onnodeselect="onNodeSelect"
                             multiselect="true" treecolumn="Name" idfield="WBSID" parentfield="ParentID" resultastree="false" expandonload="true" iconfield="NodeType"
                             allowresize="false" fitcolumns="false">
                            <div property="columns">
                                <div type="checkcolumn"></div>
                                <div type="indexcolumn"></div>
                                @{
                                    var scheduleDefine = ViewBag.Define as EPC.Logic.Domain.S_C_ScheduleDefine;
                                    if (!String.IsNullOrEmpty(scheduleDefine.ColDefine))
                                    {
                                        var colDefinelist = Formula.Helper.JsonHelper.ToList(scheduleDefine.ColDefine);

                                        foreach (var colDefine in colDefinelist)
                                        {
                                            var name = "";
                                            if (colDefine.GetValue("treeCol") == "true")
                                            { name = "Name"; }

                                            if (colDefine.GetValue("visible") == "false") { continue; }

                                            if (!String.IsNullOrEmpty(colDefine.GetValue("displayField")))
                                            {
                                                if (colDefine.GetValue("inputType") == "textbox")
                                                {
                                                    <div name="@name" field="@colDefine.GetValue("fieldName")" displayfield="@colDefine.GetValue("displayField")" width="@colDefine.GetValue("width")" headeralign="center" align="@colDefine.GetValue("align")">
                                                        @colDefine.GetValue("colName")
                                                        <input property="editor" class="mini-textbox" style="width:100%;" />
                                                    </div>
                                                }
                                                else if (colDefine.GetValue("inputType") == "textarea")
                                                {
                                                    <div name="@name" field="@colDefine.GetValue("fieldName")" displayfield="@colDefine.GetValue("displayField")" width="@colDefine.GetValue("width")" headeralign=" center" align="@colDefine.GetValue("align")">
                                                        @colDefine.GetValue("colName")
                                                        <input property="editor" class="mini-textarea" style="width:100%;" />
                                                    </div>
                                                }
                                                else if (colDefine.GetValue("inputType") == "combobox")
                                                {
                                                    string comboData = "";
                                                    if (string.IsNullOrEmpty(colDefine.GetValue("EnumKey")))
                                                    {
                                                        string settings = colDefine.GetValue("Settings");
                                                        var settingsDic = Formula.Helper.JsonHelper.ToObject(settings);
                                                        comboData = settingsDic.GetValue("data");
                                                    }

                                                    <div name="@name" field="@colDefine.GetValue("fieldName")" displayfield="@colDefine.GetValue("displayField")" width="@colDefine.GetValue("width")" headeralign=" center" align="@colDefine.GetValue("align")">
                                                        @colDefine.GetValue("colName")
                                                        <input property="editor" class="mini-combobox" style="width:100%;" data="@comboData" allowinput="true" />
                                                    </div>

                                                }
                                                else if (colDefine.GetValue("inputType") == "ButtonEdit")
                                                {
                                                    <div name="@name" field="@colDefine.GetValue("fieldName")" displayfield="@colDefine.GetValue("displayField")" width="@colDefine.GetValue("width")" headeralign=" center" align="@colDefine.GetValue("align")">
                                                        @colDefine.GetValue("colName")
                                                        <input name='@colDefine.GetValue("fieldName")' property='editor' class='mini-buttonedit' allowinput='true' style='width:100%;' />
                                                    </div>
                                                }
                                                else if (colDefine.GetValue("inputType") == "SingleFile")
                                                {
                                                    <div name="Name" field="@colDefine.GetValue("fieldName")" displayfield="@colDefine.GetValue("displayField")" width="@colDefine.GetValue("width")" headeralign=" center" align="@colDefine.GetValue("align")">
                                                        @colDefine.GetValue("colName")
                                                        <input property="editor" class="mini-fileupload" style="width: 100%;"
                                                               flashurl="/commonwebresource/RelateResource/Uploadify/uploadify.swf"
                                                               uploadurl="/FileStore/SWFUpload/FileUploadHandler.ashx" uploadonselect="true" onuploadsuccess="onuploadsuccess" />
                                                    </div>
                                                }
                                                else if (colDefine.GetValue("inputType") == "datepicker")
                                                {
                                                    <div name="@name" field="@colDefine.GetValue("fieldName")" displayfield="@colDefine.GetValue("displayField")" width="@colDefine.GetValue("width")" headeralign=" center" dateformat="yyyy-MM-dd" align="@colDefine.GetValue("align")">
                                                        @colDefine.GetValue("colName")
                                                        <input property="editor" class="mini-datepicker" style="width:100%;" />
                                                    </div>
                                                }
                                            }
                                            else
                                            {
                                                if (colDefine.GetValue("inputType") == "textbox")
                                                {
                                                    <div name="@name" field="@colDefine.GetValue("fieldName")" width="@colDefine.GetValue("width")" headeralign=" center" align="@colDefine.GetValue("align")">
                                                        @colDefine.GetValue("colName")
                                                        <input property="editor" class="mini-textbox" style="width:100%;" />
                                                    </div>
                                                }
                                                else if (colDefine.GetValue("inputType") == "textarea")
                                                {
                                                    <div name="@name" field="@colDefine.GetValue("fieldName")" width="@colDefine.GetValue("width")" headeralign=" center" align="@colDefine.GetValue("align")">
                                                        @colDefine.GetValue("colName")
                                                        <input property="editor" class="mini-textarea" style="width:100%;" />
                                                    </div>
                                                }
                                                else if (colDefine.GetValue("inputType") == "combobox")
                                                {
                                                    string comboData = "";
                                                    if (string.IsNullOrEmpty(colDefine.GetValue("EnumKey")))
                                                    {
                                                        string settings = colDefine.GetValue("Settings");
                                                        var settingsDic = Formula.Helper.JsonHelper.ToObject(settings);
                                                        comboData = settingsDic.GetValue("data");
                                                    }

                                                    <div name="@name" field="@colDefine.GetValue("fieldName")" width="@colDefine.GetValue("width")" headeralign=" center" align="@colDefine.GetValue("align")">
                                                        @colDefine.GetValue("colName")
                                                        <input property="editor" class="mini-combobox" style="width:100%;" data="@comboData" allowinput="true" />
                                                    </div>

                                                }
                                                else if (colDefine.GetValue("inputType") == "ButtonEdit")
                                                {
                                                    <div name="@name" field="@colDefine.GetValue("fieldName")" width="@colDefine.GetValue("width")" headeralign=" center" align="@colDefine.GetValue("align")">
                                                        @colDefine.GetValue("colName")
                                                        <input name='@colDefine.GetValue("fieldName")' property='editor' class='mini-buttonedit' allowinput='true' style='width:100%;' />
                                                    </div>
                                                }
                                                else if (colDefine.GetValue("inputType") == "SingleFile")
                                                {
                                                    <div name="@name" field="@colDefine.GetValue("fieldName")" width="@colDefine.GetValue("width")" headeralign=" center" align="@colDefine.GetValue("align")">
                                                        @colDefine.GetValue("colName")
                                                        <input property="editor" class="mini-fileupload" style="width: 100%;"
                                                               flashurl="/commonwebresource/RelateResource/Uploadify/uploadify.swf"
                                                               uploadurl="/FileStore/SWFUpload/FileUploadHandler.ashx" uploadonselect="true" onuploadsuccess="onuploadsuccess" />
                                                    </div>
                                                }
                                                else if (colDefine.GetValue("inputType") == "datepicker")
                                                {
                                                    <div name="@name" field="@colDefine.GetValue("fieldName")" width="@colDefine.GetValue("width")" headeralign=" center" dateformat="yyyy-MM-dd" align="@colDefine.GetValue("align")">
                                                        @colDefine.GetValue("colName")
                                                        <input property="editor" class="mini-datepicker" style="width:100%;" />
                                                    </div>
                                                }
                                            }
                                        }
                                    }
                                }
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
        <div title="甘特图" url="/EPC/Manage/Schedule/Gantte?EngineeringInfoID=@ViewBag.EngineeringInfoID&VersionID=@ViewBag.VersionID&FuncType=View"></div>
    </div>
</div>
@if (System.Configuration.ConfigurationManager.AppSettings["showFlowComments"] == "True" && (!string.IsNullOrEmpty(Request["TaskExecID"]) || !string.IsNullOrEmpty(Request["FlowCode"])))
{
    if (!string.IsNullOrEmpty(Request["FuncType"]) && Request["FuncType"].ToLower() == "view")
    {
        <div style='width: 100%; height: 40px;'>
        </div>
    }
    else
    {
        <div style='width: 100%; height: 80px;'>
        </div>
    }
}

@if (!string.IsNullOrEmpty(Request["IsPreView"]))
{
}
else if (!string.IsNullOrEmpty(Request["FlowCode"]) || !string.IsNullOrEmpty(Request["TaskExecID"]) || (!string.IsNullOrEmpty(Request["FuncType"]) && Request["FuncType"].ToLower() == "view"))
{
    @Html.GetFlowbar()
}
else
{
    <div class="mini-toolbar" id="btnDiv" style="width: 100%; position: fixed; top: 0;
        left: 0; z-index: 100;">
        <table>
            <tr>
                <td>
                    <a id="btnSave" class="mini-button" plain="true" iconcls="icon-save" onclick="save();">
                        保存
                    </a> <a id="btnCancel" class="mini-button" plain="true" iconcls="icon-cancel" onclick="closeWindow()">
                        取消
                    </a>
                </td>
                <td id="btnRight"></td>
            </tr>
        </table>
    </div>

}

@{
    if (ViewBag.VirtualScroll == "true")
    {
        <style type="text/css">
            .mini-grid-cell {
                padding-left: 4px;
                padding-right: 2px;
                padding-top: 0px;
                padding-bottom: 0px;
                border-right: #ececec 1px solid;
            }
        </style>
    }
}

<script type="text/javascript">
    @Html.Raw(ViewBag.DataSource);
    var formData=@Html.Raw(ViewBag.FormData);
    var fieldInfo=@Html.Raw(ViewBag.FieldInfo);
    var position = '@System.Configuration.ConfigurationManager.AppSettings["showCommentPosition"]';
    @Html.Raw(ViewBag.Script)

</script>
<script type="text/javascript">
    $(document).ready(function () {
        var form = new mini.Form("dataForm");
        form.setData(formData);
        form.setChanged(false);

        //将地址栏参数赋值给form的空值隐藏控件
        $("form .mini-hidden").each(function () {
            var name = $(this).attr("name");
            if (hasQueryString(name)) {
                var field = mini.getbyName(name);
                if (field.getValue() == "")
                    field.setValue(getQueryString(name));
            }
        });

        //大字段赋值给Grid
        $("form .mini-datagrid").each(function () {
            var id = $(this).attr("id");
            if ((formData || 0)[id] != undefined)
                mini.get(id).setData(mini.decode(formData[id]));
        });

        //调用界面上的onFormSetValue方法
        if (typeof (onFormSetData) != "undefined")
            onFormSetData(formData);

        //流程：加载FlowBar
        var flowMenubar = mini.get("flowMenubar");
        if (flowMenubar != undefined) {
            flowLoadMenubar(formData);
        }

    });

</script>
<script type="text/javascript">
    function onSummaryRenderer(e) {
        var title = "";
        switch (e.column.summaryType) {
            case "count":
                title = "总数：";
                break;
            case "max":
                title = "最大：";
                break;
            case "min":
                title = "最小：";
                break;
            case "sum":
                title = "总计：";
                break;
            case "avg":
                title = "平均：";
                break;
        }
        e.cellHtml = "<div style='width:100%;text-align:right;'>" + title + (e.cellHtml.toFixed ? e.cellHtml.toFixed(2) : e.cellHtml) + "</div>";
        return e.cellHtml;
    }
</script>
<script type="text/javascript">
    addMultiUserSelector("ReceiverIDs");
    $("table").css("border-collapse", "collapse");

    @Html.GetEnum(typeof(EPC.Logic.TaskType))

</script>

<script id="formTemplate" type="text/x-jquery-tmpl">
    <div style="text-align:left; font-weight:bolder; color:red;">上一版内容</div>
    <table class="mini-grid-table" cellspacing="0" cellpadding="0" style="width:700px;table-layout:fixed;">
        <tr>
            <td class="mini-grid-headerCell mini-grid-bottomCell " style="width: 200px;text-align:center">名称</td>
            <td class="mini-grid-headerCell mini-grid-bottomCell " style="width: 200px;text-align:center"> 备注</td>
        </tr>
        <tr>
            <td style="text-align: center">${Name}</td>
            <td style="text-align: center">${Remark}</td>
        </tr>
    </table>
</script>
<script type="text/javascript">
    addMultiUserSelector("ReceiverIDs");
    $("table").css("border-collapse", "collapse");

    var showType = [{ text: "显示全部", value: "All" }, { text: "仅显示差异", value: "Diff" }, { text: "仅显示最新", value: "New" }];
    var versionID = getQueryString("ID");


    $("#dataTree").attr("url","GetVersionTreeList?VersionID="+versionID+"&ShowType=New");

    function viewVersionList() {
        var engineeringInfoID = mini.getbyName("EngineeringInfoID").getValue();
        var url = "/MvcConfig/UI/List/PageView?TmplCode=BudgetVersionList&EngineeringInfoID=" + engineeringInfoID + "&VersionID=" + versionID;
        openWindow(url, {
            refresh: false, title: "预算历史版本", width: "70%", height: "60%",
            onDestroy: function () { }
        });
    }



    function onDrawingCell(e) {
        var treeGrid = e.sender;
        var record = e.record;
        var column = e.column;
        var field = e.field;
        if(record.CanEdit=="0"){
            e.cellStyle = "font-weight:bolder; background:#F0F0F0";
        }
        else if(field=="PlanDuration"&&record.TaskType=="MileStone"){
            e.cellStyle = "font-weight:bolder; background:#F0F0F0";
        }

        if (record.ModifyState == "Add") {
            if (field == "Name") {
                e.cellHtml = record.Name + "<img style=\"height:18px;float:right;\" src=\"/EPC/Scripts/Design/Bom/new_red.png\" />";// record.Name + "new";
            }
            e.cellStyle = "background:#BBFFFF;";
        }
        else if (record.ModifyState == "Modify") {
            //if (field == "Name") {
            //    e.cellHtml = '<span id="' + record.ID + '" class="showCellTooltip" data-placement="bottomleft">' + record.Name + '</span>';
            //}
            e.cellStyle = " background: yellow;";
        }
        else if (record.ModifyState == "Remove") {
            e.cellStyle = "background:url('/EPC/Scripts/Design/Bom/red-line.jpg')  center ;color:#fff;";
        }

    }

    $(document).ready(function () {
        var tip = new mini.ToolTip();
        tip.set({
            target: document,
            selector: '.showCellTooltip',
            onbeforeopen: function (e) {
                e.cancel = false;
            },
            onopen: function (e) {
                var el = e.element;
                var id = el.id;
                if (id) {
                    this.showLoading();
                    addExecuteParam("ID", id);
                    execute("GetLastDetailInfo", {
                        showLoading: false, refresh: false, onComplete: function (data) {
                            var html = $("#formTemplate").tmpl(data);
                            tip.setContent(html);
                        }, validateForm: false
                    });
                }
            }
        });
    });

    function onShowTypeChanged(e) {
        var tree = mini.get("dataTree");
        var showDiff = mini.getbyName("ShowType").getValue();
        var url="GetVersionTreeList?VersionID="+versionID+"&ShowType="+showDiff;
        tree.setUrl(url);
    }

    function onNodeSelect(e) {
        var node = e.selected;
        var resourceGrid =  mini.get("UserRoleGrid");
        var preTaskGrid =  mini.get("PreTaskGrid");
        var deviceGrid =  mini.get("deviceInfoGrid");
        var boqGrid =  mini.get("BOQGrid");
        if(node&&node.NodeType=="Task"){
            if(preTaskGrid){
                if(node.PredecessorLink){
                    if(preTaskGrid){
                        preTaskGrid.setData(mini.decode(node.PredecessorLink));
                    }
                }
                else
                {
                    preTaskGrid.clearRows();
                }
            }
            if(resourceGrid){
                if(node.UserResource){
                    resourceGrid.setData(mini.decode(node.UserResource));
                }
                else{
                    resourceGrid.clearRows();
                }
            }
            if(deviceGrid){
                if(node.DeviceInfo){
                    deviceGrid.setData(mini.decode(node.DeviceInfo));
                }
                else{
                    deviceGrid.clearRows();
                }
            }
            if(boqGrid){
                if(node.BOQInfo){
                    boqGrid.setData(mini.decode(node.BOQInfo));
                }
                else{
                    boqGrid.clearRows();
                }
            }
        }
        else{
            if(preTaskGrid) preTaskGrid.clearRows();
            if(resourceGrid) resourceGrid.clearRows();
            if(deviceGrid) deviceGrid.clearRows();
            if(boqGrid) boqGrid.clearRows();
        }
    }
</script>
<style>
    body {
        background-color: #fff;
    }

    .showCellTooltip {
        background: yellow;
    }
</style>
