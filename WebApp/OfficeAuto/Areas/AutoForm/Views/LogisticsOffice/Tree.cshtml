<div class="mini-splitter" style="width: 100%; height: 100%;">
    <div size="250" showcollapsebutton="false">
        <div class="mini-fit">
            <ul id="dataTree" class="mini-tree" style="overflow: hidden; width: 100%; height: 100%"
                url="GetTree" iconfield="Type" contextmenu="#treeMenu" allowdrag="false" allowdrop="false"
                ongivefeedback="onNodeDroping" onbeforedrop="onNodeDrop" allowleafdropin="false"
                showtreeicon="true" textfield="Name" idfield="ID" parentfield="ParentID" resultastree="false"
                onnodeselect="onNodeSelect" expandonload="0" ondragstart="ChangeText">
            </ul>
        </div>
    </div>
    <div showcollapsebutton="false">
        <div class="mini-toolbar gw-grid-toolbar" style="border-left: 0px">
            <table>
                <tr>
                    <td>
                        <a id="brmv" class="mini-button" iconcls="icon-remove" onclick="delOffice();">移除
                        </a><a id="bedit" class="mini-button" iconcls="icon-edit" onclick="editOfficeData();">
                            编辑</a> <a id="badd" class="mini-button" iconcls="icon-add" onclick="addOfficeData();">
                                增加</a>
                    </td>
                    <td class="gw-toolbar-right">
                        <input id="key" class="mini-buttonedit gw-searchbox" emptytext="请输入办公室名称" onenter="quickSearch('Name');"
                            onbuttonclick="quickSearch('Name');" />
                    </td>
                </tr>
            </table>
        </div>
        <div class="mini-fit">
            <div id="dataGrid" class="mini-datagrid" style="width: 100%; height: 100%;" borderstyle="border-left:0px"
                url="GetOfficeList" multiselect="true">
                <div property="columns">
                    <div type="checkcolumn">
                    </div>
                    <div field="Name" width="60px" allowsort="true" align="center">
                        办公室名称</div>
                    <div field="Area" width="60px" allowsort="true" align="center">
                        办公室面积</div>
                    <div field="Status" width="100px" allowsort="true" align="center">
                        状态
                    </div>
                    <div field="UseStatus" width="100px" allowsort="true" align="center">
                        使用状态
                    </div>
                    <div field="NowDept" width="100px" allowsort="true" align="center">
                        当前使用部门
                    </div>
                    <div field="ApplyDetail" width="200px">
                        办公室申请历史</div>
                </div>
            </div>
        </div>
    </div>
</div>
<ul id="treeMenu" class="mini-contextmenu">
    <li iconcls="icon-add" onclick="nodeAdding();">增加</li>
    <li iconcls="icon-edit" onclick="nodeEditing();">编辑</li>
    <li iconcls="icon-remove" onclick="nodeDeleting();">删除</li>
</ul>
<script type="text/javascript">

    treeConfig.title = "位置";
    relationConfig.title = "办公室";

    function nodeAdding(e) {
        var windowSettings = {
            title: "增加" + treeConfig.title,
            url: "/OfficeAuto/AutoForm/LogisticsOfficePos/PageView?TmplCode=Logistics_OfficePos",
            mustSelectNode: true,
            onDestroy: refreshNode,
            paramFrom: "dataTree"
        };

        windowSettings.url = addSearch(windowSettings.url, "ParentID", "{ID}");

        var settings = $.extend(true, {}, windowParamSettings, treeConfig, windowSettings);

        openWindow(settings.url, settings);
    }

    function refreshNode() {
        var treeGrid = mini.get("dataTree");
        treeGrid.load(treeGrid.url);
    }


    function nodeEditing() {

        var windowSettings = {
            title: "编辑" + treeConfig.title,
            url: "/OfficeAuto/AutoForm/LogisticsOfficePos/PageView?TmplCode=Logistics_OfficePos",
            mustSelectNode: true,
            onDestroy: refreshNode,
            paramFrom: "dataTree"
        };

        windowSettings.url = addSearch(windowSettings.url, "ID", "{ID}");

        var settings = $.extend(true, {}, windowParamSettings, treeConfig, windowSettings);

        openWindow(settings.url, settings);
    }

    function ChangeText(e) {
        e.dragText = "<font size='2'>移动办公室位置：" + e.node.Name + "</font>";
    }

    function onNodeSelect(e) {

        debugger;

        var fullId = "null";
        if (e && e.node && e.node.FullID)
            fullId = e.node.FullID;
        var dataGrid = mini.get("dataGrid");

        dataGrid.setUrl(dataGrid.url.split('?')[0] + "?NodeFullID=" + fullId);
        dataGrid.load();

        var dataTree = mini.get("dataTree");
        if (dataTree.getRootNode().children[0].ID != e.node.ID) {
            $("#brmv").show();
            $("#badd").show();
        }
        else {
            $("#brmv").hide();
            $("#badd").hide();
        }
    }

    function pageLoad() {
        var tree = mini.get("dataTree");
        var node = tree.getRootNode();
        node = tree.getChildNodes(node)[0];
        tree.selectNode(node);
        var e = {};
        e.node = node;
        onNodeSelect(e);
    }

    function onNodeDroping(e) {
        //不能拖放到非同级节点的前后
        if ((e.effect == "before" || e.effect == "after") && e.targetNode.ParentID != e.node.ParentID)
            e.effect = "no";
        if (e.effect == "add")
            e.effect = "no";
    }
  

</script>
<script type="text/javascript">

    function addOfficeData(windowSettings) {

        var windowSettings = {
            title: "增加" + relationConfig.title,
            url: "/MvcConfig/UI/Form/PageView?TmplCode=Logistics_Office",
            mustSelectNode: true,
            onDestroy: refreshNode,
            paramFrom: "dataTree"
        };

        var node = mini.get("dataTree").getSelectedNode();
        if (node == null) {
            msgUI("当前没有选择要操作的节点，请重新确认！", 1);
            return;
        }

        windowSettings.url = addSearch(windowSettings.url, "NodeID", node.ID);
        windowSettings.url = addSearch(windowSettings.url, "Pos", node.Name);
        windowSettings.url = addSearch(windowSettings.url, "NodeFullID", node.FullID);

        var windowSettings = $.extend(true, {}, relationConfig, windowSettings);

        windowSettings.addQueryString = false;

        openWindow(windowSettings.url, windowSettings);
    }

    function editOfficeData() {

        var windowSettings = {
            title: "编辑" + relationConfig.title,
            url: "/MvcConfig/UI/Form/PageView?TmplCode=Logistics_Office",
            mustSelectOneRow: true,
            onDestroy: refreshNode,
            paramFrom: "dataTree"
        };

        var grid = mini.get("dataGrid");
        var office = grid.getSelected();

        windowSettings.url = addSearch(windowSettings.url, "ID", office.ID);

        openWindow(windowSettings.url, windowSettings);
    }


    function delOffice() {

        var grid = mini.get("dataGrid");
        var office = grid.getSelecteds();
        var arr = [];
        for (var i = 0; i < office.length; i++) {
            arr.push(office[i].ID);
        }
        var IDs = arr.join(',');

        addExecuteParam("IDs", IDs);

        execute("/OfficeAuto/AutoForm/LogisticsOffice/DelOffice", {
            mustConfirm: true,
            actionTitle: "删除",
            mustSelectRow: true,
        });
    }

</script>
<script type="text/javascript">
    addGridLink("dataGrid", "Name", "/MvcConfig/UI/Form/PageView?TmplCode=Logistics_Office&ID={ID}&FuncType=View", { title: "查看办公室详情", refresh: false });

    @Html.GetEnum("OA.Status")
    @Html.GetEnum("OA.UseStatus")
    

    //为Grid枚举列指定枚举定义
    addGridEnum("dataGrid", "Status", "Status");
    addGridEnum("dataGrid", "UseStatus", "UseStatus");

</script>
