@{
    ViewBag.Title = "PageView";
}
@if (string.IsNullOrEmpty(Request["IsPreView"]) &&
    string.IsNullOrEmpty(Request["FlowCode"]) &&
    string.IsNullOrEmpty(Request["TaskExecID"]) && (string.IsNullOrEmpty(Request["FuncType"]) || Request["FuncType"].ToLower() != "view"))
{
    <div style='width: 100%; height: 28px;'>
    </div>
}
else if ((!string.IsNullOrEmpty(Request["FlowCode"]) || !string.IsNullOrEmpty(Request["TaskExecID"])) && System.Configuration.ConfigurationManager.AppSettings["showCommentPosition"].ToLower() == "true")
{
    <div style='width: 100%; height: 28px;'>
    </div>
}
@if (!string.IsNullOrEmpty(Request["IsPreView"]))
{
}
else if ((!string.IsNullOrEmpty(Request["FlowCode"]) || !string.IsNullOrEmpty(Request["TaskExecID"]) ||
    (!string.IsNullOrEmpty(Request["FuncType"]) && Request["FuncType"].ToLower() == "view")))
{
    @Html.GetFlowbar()
}
else
{
    <div class="mini-toolbar" id="btnDiv" style="width: 100%; position: fixed; top: 0; left: 0; z-index: 100;">
        <table>
            <tr>
                <td>
                    <a id="btnSave" class="mini-button" plain="true" iconcls="icon-save" onclick="save();">保存
                    </a><a id="btnCancel" class="mini-button" plain="true" iconcls="icon-cancel" onclick="closeWindow()">取消
                    </a>
                </td>
                <td id="btnRight"></td>
            </tr>
        </table>
    </div>
}
<div class="mini-fit" id="Area" style="padding-top: 5px;">
    <div id="Name" class="mini-tabs" activeindex="0" style="width: 100%; height: 100%;">
        <div title="校审单">
            <form id="dataForm" method="post" align="center" autogetdata="false">
                <input name="ID" class="mini-hidden" />
                @Html.Raw(ViewBag.HiddenHtml)
                <div class="formDiv">
                    @Html.Raw(ViewBag.FormHtml)
                </div>
                @if (System.Configuration.ConfigurationManager.AppSettings["showFlowComments"] == "True" && (!string.IsNullOrEmpty(Request["TaskExecID"]) || !string.IsNullOrEmpty(Request["FlowCode"])))
                {
                    <div class="flow-msg">
                        <fieldset class="formDiv">
                            <legend>操作信息</legend>
                            <div id="comment">
                            </div>
                        </fieldset>
                    </div>
                    <br />
                    <br />
                    <script type="text/javascript">
                        function onCommentLoad(e) {
                            if (e.data.length == 0)
                                $("#commentGrid").hide();
                        }
                    </script>
                }
            </form>
        </div>
        <div title="成果列表">
            <div id="toolbarProducts" class="mini-toolbar" style="padding: 2px; border-bottom: 0;">
                <table style="width: 100%;">
                    <tr>
                        <td style="width: 100%;">
                            <a class="mini-button" iconcls="icon-add" onclick="addProduct();" id="btnProductAdd">增加</a>
                            <a class="mini-button" iconcls="icon-remove" onclick="delProduct();" plain="true"  id="btnProductDelete">删除</a>
                            @*<span id="spanThis" class="separator"></span>*@
                <a class="mini-button" iconcls="icon-download" onclick="downloadProducts" plain="true" id="btnProductsDownload">批量下载PDF成果</a>
                <a class="mini-button" iconcls="icon-upload" onclick="openMultiUploadWindow" plain="true" id="btnProductsUpload">批量上传PDF校审文件</a>
                        </td>
                        <td style="white-space: nowrap;"></td>
                    </tr>
                </table>
            </div>
            <div class="mini-fit">
                <div id="Products" url="" class="mini-datagrid" style="width: 100%; height: 100%;"
                    idfield="ID" multiselect="true" showpager="false" ondrawcell="onDrawProductGridCell">
                    <div property="columns">
                        <div type="checkcolumn">
                        </div>
                        <div field="Edit" name="Edit" width="60" headeralign="center" align="center">
                            编辑
                        </div>
                        <div field="Change" name="Change" width="50" align="center" headeralign="center">
                            撤销<br />变更
                        </div>
                        <div field="Invalid" name="Invalid" width="50" align="center" headeralign="center">
                            撤销<br />作废
                        </div>
                        <div field="UploadPDFAuditFile" name="UploadPDFAuditFile" headeralign="center" width="60" allowsort="true" align="center">
                            上传PDF<br />
                            校审文件
                        </div>
                        <div field="ShowPDFAuditFile" name="UploadPDFAuditFile" headeralign="center" width="60" allowsort="true" align="center">
                            查看PDF<br />
                            校审记录
                        </div>
                        <div field="State" name="State" width="50" align="center" headeralign="center">
                            状态
                        </div>
                        <div field="Name" width="*" headeralign="center" allowsort="true">
                            成果名称
                        </div>
                        <div field="Code" width="120" headeralign="center" allowsort="true" align="center">
                            成果编号
                        </div>
                        <div field="Version" width="60" headeralign="center" allowsort="true" align="center">
                            版本号
                        </div>
                        <div field="CreateUser" width="120" headeralign="center" allowsort="true" align="center">
                            提交人
                        </div>
                        <div field="MainFile" headeralign="center" width="120" allowsort="true" align="center">
                            附件
                        </div>
                        <div field="SubmitDate" width="150" headeralign="center" dateformat="yyyy-MM-dd"
                            allowsort="true" align="center">
                            提交日期
                        </div>
                    </div>
                </div>
            </div>
            @{
                if (System.Configuration.ConfigurationManager.AppSettings["showCommentPosition"].ToLower() == "false")
                {
                <div style='width: 100%; height: 80px;'>
                </div>
                }
            }
        </div>
    </div>
</div>
<script type="text/javascript">
    @Html.Raw(ViewBag.DataSource);
    @Html.GetEnum(typeof(Project.Logic.ProductState))
    var formData=@Html.Raw(ViewBag.FormData);
    var fieldInfo=@Html.Raw(ViewBag.FieldInfo);
    var position = '@System.Configuration.ConfigurationManager.AppSettings["showCommentPosition"]';
    @Html.Raw(ViewBag.Script)

</script>
<script type="text/javascript">
    $(document).ready(function () {
        var tip = new mini.ToolTip();
        tip.set({
            target: document,
            selector: '[data-tooltip]'
        });

        var form = new mini.Form("dataForm");
        form.setData(formData);
        form.setChanged(false);

        //将地址栏参数赋值给form的空值隐藏控件
        $("form .mini-hidden").each(function () {
            var name = $(this).attr("name");
            if (hasQueryString(name)) {
                var field = mini.getbyName(name);
                if (field.getValue() == "")
                    field.setValue(getQueryString(name));
            }
        });

        //大字段赋值给Grid
        $("form .mini-datagrid").each(function () {
            var id = $(this).attr("id");
            if ((formData || 0)[id] != undefined)
                mini.get(id).setData(mini.decode(formData[id]));
        });
        
        var _returnForm = null;
        //调用界面上的onFormSetValue方法
        if (typeof (onFormSetData) != "undefined")
            _returnForm = onFormSetData(formData);

        //流程：加载FlowBar
        var flowMenubar = mini.get("flowMenubar");
        if (flowMenubar != undefined) {
            flowLoadMenubar(_returnForm);
        }
    });

</script>
<script type="text/javascript">
    function onSummaryRenderer(e) {
        var title = "";
        switch (e.column.summaryType) {
            case "count":
                title = "总数：";
                break;
            case "max":
                title = "最大：";
                break;
            case "min":
                title = "最小：";
                break;
            case "sum":
                title = "总计：";
                break;
            case "avg":
                title = "平均：";
                break;
        }
        e.cellHtml = "<div style='width:100%;text-align:right;'>" + title + (e.cellHtml.toFixed ? e.cellHtml.toFixed(2) : e.cellHtml) + "</div>";
        return e.cellHtml;
    }
</script>
<script type="text/javascript">
    addMultiUserSelector("ReceiverIDs");
    $("table").css("border-collapse", "collapse");
    var isNew = "@Html.Raw(ViewBag.IsNew)";
    var isFinish = "@Html.Raw(ViewBag.IsFinish)";
    var productsUrl="GetBatchProducts?WBSID=@ViewBag.WBSID";
    var Phase =@Html.Raw(ViewBag.Phase);
    if(isFinish=="True"){
        productsUrl= "GetVersionProducts?ChangeAuditID=@ViewBag.ChangeAuditID";
    }

    $("#Products").attr("url",productsUrl);

    ////意见列表绑定按钮
    $("#toolbarAdviceDetail").find("td").first().prepend("<a class='mini-button' id='btnDelete' iconcls='icon-remove' onclick='removeMistakeRow();' visible='true'>移除</a>");
    $("#toolbarAdviceDetail").find("td").first().prepend("<a class='mini-button' id='btnAdd' iconcls='icon-add' onclick='addMistake();' visible='true'>添加</a>");
    //全局变量
    var majorCode = getQueryString("MajorCode");
    var wbsID = getQueryString("WBSID");
    var phaseValue = getQueryString("PhaseValue");
    var currentDate = new Date();
    var currentYear = currentDate.getFullYear();
    var currentMonth = currentDate.getMonth() + 1;
    var currentQuarter = currentDate.getQuarter() + 1;

    

    //成果列表注册drawcell事件
    $(window).load(function () {
        var productGrid = mini.get("Products");
        //productGrid.on("drawcell", function (e) {
        //    onDrawProductGridCell(e);
        //});
        var adviceGrid = mini.get("AdviceDetail");
        adviceGrid.on("cellbeginedit", function (e) {
            onAdviceDetailCellBeginEdit(e)
        });
        if (isNew == "True") {
            $("#toolbarProducts").hide();
        }
        if(getQueryString("Trace")){
            mini.get("toolbarProducts").hide();
        }
    });
    addGridEnum("Products", "State", "ProductState");

    function delProduct() {
        var dataGrid = mini.get("Products");
        var rows = dataGrid.getSelecteds();
        var editFlag = true;
        var message = "";
        $.each(rows, function (i, e) {
            if (e.AuditState != "Create" && e.AuditState != "Design")
            { editFlag = false; message = "已经发起校审的成果不能删除。"; }
            else if (e.State =="Change")
            { editFlag = false; message = "已经变更的成果不能删除，请撤销变更后作废。"; }
            else if (e.State =="Invalid")
            { editFlag = false; message = "已经作废的成果不能删除。"; }
        })
        if (editFlag)
        {
            msgUI("您确定要删除选中的成果吗？", 2, function (result) {
                if (result != "ok") return;
                addExecuteParam("Products", mini.encode(rows));
                execute("DeleteProducts", { showLoading: true, refresh: false, onComplete: function (data) {
                    dataGrid.reload();
                }, validateForm: false
                });
            });
        }
        else
        { msgUI(message); return; }
    }

    //当前环节的
    function IsCurrentStepExistedMistake() {
        var mistakeGrid = mini.get("AdviceDetail");
        var data = mistakeGrid.getData();
        for (var i = 0; i < data.length; i++) {
            if (data[i].Step && data[i].Step == FlowCurrentStepCode)
                return true;
        }
        return false;
    }

    function setRequiredField() {
        var column = getColumn("AdviceDetail", "ResponseContent")
        //当前环节
        if (column && FlowCurrentStepCode == "Design") {
            column.vtype = "required";
        }
    }

    //根据girdID和field获取指定列
    function getColumn(gridID, field) {
        var columns = getColumns(gridID);
        if (columns) {
            for (var i = 0; i < columns.length; i++) {
                if (columns[i].field && columns[i].field == field)
                    return columns[i];
            }
        }
    }

    //根据gridID获取dataGrid所有列
    function getColumns(gridID) {
        var dataGrid = mini.get(gridID);
        if (dataGrid) {
            var columns = dataGrid.columns;
            return columns;
        }
    }

    function onProductGridCellBeginEdit(e) {
        var field = e.field;
        if (FlowCurrentStepCode != "Design") {
            e.cancel = true;
        }
    }

    function onAdviceDetailCellBeginEdit(e) {
        var field = e.field;
        if (FlowCurrentStepCode == "Design" && field == "ResponseContent") {
        }
        else if (e.record.Step != FlowCurrentStepCode) {
            e.cancel = true;
        }
    }

    function onDrawProductGridCell(e) {
        var field = e.field;var row = e.row;var value = e.value;
        if (field == "MainFile" ){
            if(value != "" && value != null) {
                e.cellHtml = '<a href="#" onclick="DownloadFile(\'' + e.value + '\');">' + getMiniFileNames(e.value) + '<a>';
            }
        }
        else if (field == "UploadPDFAuditFile") {
            if(getQueryString("FuncType").toLowerCase()!="view")
                e.cellHtml = "<img src='/CommonWebResource/Theme/Default/MiniUI/icons/upload.png' onclick='openUploadWindow(\"" + e.record.ID + "\")'  />";
        }
        else if (field == "ShowPDFAuditFile") {
            e.cellHtml = "<img src='/CommonWebResource/Theme/Default/MiniUI/icons/search.gif' onclick='openListWindow(\"" + e.record.ID + "\")'  />";
        }
        else if (field == "State") {
            if (value == "Create"&&row.AuditState!="Pass")
            {
                e.cellHtml = "新增";
            }
        }
        //附件
        if (FlowCurrentStepCode == "Design"&&!row.ParentID) {
            if (field == "Edit") {
                e.cellHtml = "<img src='/CommonWebResource/Theme/Default/MiniUI/icons/edit.gif' onclick='editProduct(\"" + e.record.ID + "\")'  />";
            }
            else if (field == "Change") {
                e.cellHtml = "<img src='/CommonWebResource/Theme/Default/MiniUI/icons/undo.png' onclick='RevertChange(\"" + e.record.ID + "\")' title='撤销变更'  />";
            }
            else if (field == "Invalid") {
                e.cellHtml = "<img src='/CommonWebResource/Theme/Default/MiniUI/icons/undo.png' onclick='RevertInvalid(\"" + e.record.ID + "\")' title='撤销作废'  />";
            }
        }
    }
    function RevertChange(id) {
        var grid = mini.get("Products");
        var row = grid.findRow(function (row) {
            if (row.ID == id) return true;
        });

        addExecuteParam("ProductID", row.ID);
        execute("/Project/Basic/WorkSpace/ProductRevertChangeValidate", {
            showLoading: true, refresh: false, onComplete: function (data) {
                msgUI("是否撤销变更？", 2, function (result) {
                    if (result != "ok") { return; }
                    addExecuteParam("ProductID", row.ID);
                    execute("/Project/Basic//Product/RevertChange", {
                        showLoading: true, refresh: false, onComplete: function (data) {
                            grid.reload();
                        }, validateForm: false
                    });
                });
            }, validateForm: false
        });
    }
    function RevertInvalid(id) {
        var grid = mini.get("Products");
        var row = grid.findRow(function (row) {
            if (row.ID == id) return true;
        });

        addExecuteParam("ProductID", row.ID);
        execute("/Project/Basic/WorkSpace/ProductRevertInvalidValidate", {
            showLoading: true, refresh: false, onComplete: function (data) {
                msgUI("是否撤销作废？", 2, function (result) {
                    if (result != "ok") { return; }
                    addExecuteParam("ProductID", row.ID);
                    execute("/Project/Basic//Product/RevertInvalid", {
                        showLoading: true, refresh: false, onComplete: function (data) {
                            grid.reload();
                        }, validateForm: false
                    });
                });
            }, validateForm: false
        });
    }

    function openUploadWindow(productID) {
        openWindow("/Project/Basic/PDFAuditFile/PDFAuditFileUpload?ID="+productID+"&AuditStep="+FlowCurrentStepCode,{
            onDestroy: function (data) {
                if (data && data != "close"){
                    for (var i = 0; i < data.list.length; i++) {
                        addMistake(data.list[i].Content,data.code,"PDF");
                    }
                }
            },
            height: 170,
            width: 650,
            title: "上传附件",
            addQueryString: false
        });
    }
    
    function openListWindow(productID) {
        openWindow("/Project/Basic/PDFAuditFile/PDFAuditFileList?ID="+productID+"&IsShow="+(getQueryString("FuncType").toLowerCase()=="view"?"Fasle":"True"),{
            height: "70%",
            width: "60%",
            title: "PDF校审记录",
            addQueryString: false
        });
    }
    
    function downloadProducts() {
        var dataGrid = mini.get("Products");
        var rows = dataGrid.getSelecteds();
        var _download=  function () {
            var filedIds = "";
            for (var i = 0; i < rows.length; i++) {
                if (rows[i].MainFile != undefined && rows[i].MainFile != null && rows[i].MainFile != "")
                {
                    if(rows[i].MainFile.toLowerCase().indexOf(".pdf")>0&&filedIds.indexOf(rows[i].MainFile.split('_')[0]+",")<0)
                        filedIds += rows[i].MainFile.split('_')[0] + ",";
                }
            }
            if (filedIds.length > 0)
            {
                filedIds = filedIds.substr(0, filedIds.length - 1);
                DownloadFile(filedIds);
            }
            else
                return msgUI("无PDF成果可下载！", 1);
        }
        if(rows.length==0)
        {
            msgUI("未选中任何成果，需要下载所有成果吗？", 2, function (result) {
                if (result != "ok") return;
                rows = dataGrid.getData();
                _download();
            });
        }
        else
        {
            msgUI("确定需要下载选中的成果吗？", 2, function (result) {
                if (result != "ok") return;
                _download();
            });
        }
    }
    
    function openMultiUploadWindow() {
        var auditID = mini.getbyName("ID").getValue();
        openWindow("/Project/Basic/PDFAuditFile/MultiPDFAuditFileUpload?ChangeAuditID="+auditID+"&AuditStep="+FlowCurrentStepCode,{
            onDestroy: function (data) {
                if (data && data != "close"){
                    for (var i = 0; i < data.successFiles.length; i++) {
                        var item = data.successFiles[i];
                        for (var j = 0; j < item.list.length; j++) {
                            addMistake(item.list[j].Content,item.code,"PDF");
                        }
                    }
                }
            },
            height: 340,
            width: 650,
            title: "上传附件",
            addQueryString: false
        });
    }

    function editProduct(id) {
        var grid = mini.get("Products");
        var row = grid.findRow(function (row) {
            if (row.ID == id) return true;
        });
        if (row.AuditState != "Create" && row.AuditState != "Design") {
            msgUI("已经发起校审的成果不能编辑。"); return;
        }
        openWindow("/Project/Basic/Product/Edit?ID=" + row.ID, { refresh: false, title: "成果编辑", width: 600, height: 400, addQueryString: false,
            onDestroy: function () {
                var ID = mini.getbyName("ID").getValue();
                grid.setUrl(productsUrl);
                grid.reload();
            }
        });
    }

    function addProduct() {
        var grid = mini.get("Products");
        var wbsNodeID = mini.getbyName("WBSID").getValue();
        var auditID = mini.getbyName("ID").getValue();
        var url = "/Project/Basic/Product/Edit?WBSID=" + wbsNodeID + "&ChangeAuditID=" + auditID;
        openWindow(url, { refresh: false, title: "增加成果", width: 600, height: 400, addQueryString: false,
            onDestroy: function (data) {
                grid.reload();
            }
        });
    }
    
    function onFormSaving() {
        var products = mini.get("Products").getData();
        addExecuteParam("Products", mini.encode(products));
        return true;
    }

    //新增意见
    function addMistake(mistaskContent,code,comeForm) {
        var mistakeGrid = mini.get("AdviceDetail");
        var row = { Step: FlowCurrentStepCode, SubmitUser: user.UserID, SubmitUserName: user.UserName, SubmitDept: user.UserOrgID, SubmitDeptName: user.UserOrgName,
            MistakeYear: currentYear, MistakeMonth: currentMonth, MistakeSeason: currentQuarter,
            CreateUser: user.UserID, CreateUserName: user.UserName, CreateDate: currentDate, 
            MsitakeContent: mistaskContent,ProductCode:code,ComeForm:comeForm
        };
        mistakeGrid.addRow(row, 0);
    }
    //删除意见
    function removeMistakeRow() {
        var dataGrid = mini.get("AdviceDetail");
        if (dataGrid) {
            var rows = dataGrid.getSelecteds();
            if (rows.length > 0) {
                var result = ValidateMistakeRowBeforeDelete();
                if (result == true) {
                    msgUI("确定要删除选中的意见吗?", 2, function (action) {
                        if (action == "ok") {
                            dataGrid.removeRows(rows);
                        }
                    });
                }
            }
        }
    }

    //删除意见之前的验证逻辑
    function ValidateMistakeRowBeforeDelete() {
        var dataGrid = mini.get("AdviceDetail");
        var rows = dataGrid.getSelecteds();
        for (var i = 0; i < rows.length; i++) {
            if (rows[i].SubmitUser != user.UserID) {
                msgUI("问题内容【" + rows[i].MsitakeContent + "】记录不是您添加的记录，不能删除。");
                return false;
            }
        }
        return true;
    }

    //流程提交前执行的逻辑
    function onFormSubmitting(foute) {
        var products = mini.get("Products").getData();
        addExecuteParam("Products", mini.encode(products));
        return ValidateMistakeBeforeFormSubmit();
    }

    function ValidateMistakeBeforeFormSubmit() {
        var dataGrid = mini.get("AdviceDetail");
        var rows = dataGrid.getData();
        if (rows != null && rows.length > 0) {
            for (var i = 0; i < rows.length; i++) {
                var row = rows[i];
                if (row.MsitakeContent != "同意" && !row.ResponseContent && FlowCurrentStepCode == "Design") {
                    msgUI("请针对问题内容为【" + rows[i].MsitakeContent + "】的记录填写修改情况。");
                    return false;
                }
            }
        }
        return true;
    }

</script>
