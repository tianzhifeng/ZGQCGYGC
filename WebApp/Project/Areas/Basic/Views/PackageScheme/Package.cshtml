@{
    ViewBag.Title = "卷册策划";
    Layout = "~/Views/Shared/_LayoutTab.cshtml";
}
<div class="mini-toolbar" style="padding: 0px; border-top: 0; border-left: 0; border-right: 0;">
    <table style="width: 100%;">
        <tr>
            <td style="width: 100%;">
                <a class="mini-menubutton" plain="true" iconcls="icon-add" menu="#popupMenu">导入</a>
                <a class="mini-button" iconcls="icon-add" tooltip="增加" onclick="addPackage" plain="true" id="btnAdd">增加</a>
                <a class="mini-button" iconcls="icon-remove" tooltip="删除" onclick="deleteRow" plain="true" id="btnDel">删除</a>
                <a class="mini-button" iconcls="icon-copy" tooltip="复制增加" onclick="copyAdd" plain="true" id="btnCopyAdd">复制增加</a>
                <span class="separator"></span>
                <a class="mini-button" iconcls="icon-save" onclick="saveWork" plain="true" id="btnSave">保存</a>
                @if (!ViewBag.SimpleMode)
                {
                    <a class="mini-button" iconcls="icon-add" onclick="startPublish(true)" plain="true" id="btnStartPublish">启动下达流程</a>
                    <a class="mini-button" iconcls="icon-edit" onclick="changeWorkload" plain="true" id="btnStartChange">卷册定额工变更</a>
                    <a class="mini-button" iconcls="icon-save" onclick="finishWorkload" plain="true" id="btnStartFinish">卷册定额工结算</a>
                    <span id="message" style="color: red; vertical-align: middle; display: inline-block"></span>
                }
                else
                {
                    <a class="mini-button" iconcls="icon-add" onclick="startPublish(false)" plain="true" id="btnStartPublish">启动下达流程</a>
                    <a class="mini-button" iconcls="icon-add" onclick="publish()" plain="true" id="btnPublish">卷册任务下达</a>
                }
            </td>
            <td style="white-space: nowrap;">
                <input id="key" class="mini-buttonedit gw-searchbox" emptytext="请输入卷册名称或编号" onenter="tabSearch();"
                       onbuttonclick="tabSearch();" />
                @*<a class="mini-button" iconcls="icon-find" onclick="showWindow('queryWindow');">详细查询</a>*@
            </td>
        </tr>
    </table>
</div>
<div class="mini-fit" id="FitDiv">
    <div id="dataGrid" url="GetList" class="mini-datagrid" style="width: 100%; height: 100%;"
         idfield="ID" multiselect="true" borderstyle="border-bottom: 0; border-left: 0; border-right: 0;" allowcelledit="true" allowcellselect="true"
         editnextonenterkey="true" oncellbeginedit="onWorkGridCellBeginEdit" onload="onLoadComplete" oncellendedit="onWorkGridCellEndEdit"
         ondrawcell="onDrawingCell">
        <div property="columns">
            <div type="checkcolumn">
            </div>
            <div field="Name" name="Name" width="120" headeralign="center" vtype="required">
                卷册名称<input property="editor" class="mini-textbox" style="width: 100%;" />
            </div>
            <div field="Code" name="Code" width="120" headeralign="center" align="center" vtype="required">
                编号<input property="editor" class="mini-textbox" style="width: 100%;" />
            </div>
            <div field="MajorValue" name="MajorValue" headeralign="center" vtype="required" width="80" align="center" visible="@ViewBag.IsProject">
                专业<input property="editor" valuefield="value" textfield="text" class="mini-combobox" style="width: 100%;"
                         data="Major" />
            </div>
            <div field="PhaseValue" name="PhaseValue" headeralign="center" vtype="required" width="80" align="center" type="comboboxcolumn">
                阶段<input property="editor" valuefield="value" textfield="text" class="mini-combobox" style="width: 100%;"
                         data="PhaseEnum" />
            </div>
            <div field="DossierName" name="DossierName" width="120" headeralign="center" align="center">
                卷名<input property="editor" class="mini-textbox" style="width: 100%;" />
            </div>
            <div field="DossierCode" name="DossierCode" width="120" headeralign="center" align="center">
                卷号<input property="editor" class="mini-textbox" style="width: 100%;" />
            </div>
            <div field="PlanEndDate" name="PlanEndDate" width="100" headeralign="center" dateformat="yyyy-MM-dd"
                 allowsort="true" align="center">
                计划完成日期<input property="editor" class="mini-datepicker" style="width: 100%;" />
            </div>
            <div field="FactEndDate" name="FactEndDate" width="100" headeralign="center" dateformat="yyyy-MM-dd"
                 allowsort="true" align="center">
                实际完成日期
            </div>
            <div field="DesignerUserID" name="DesignerUserID" displayfield="DesignerUserName" width="80" headeralign="center"
                 align="center">
                设计人
                <input name="WorkList_DesignerUserID" property="editor" class="mini-buttonedit" style="width: 100%;" />
            </div>
            <div field="CollactorUserID" name="CollactorUserID" displayfield="CollactorUserName" width="80" headeralign="center"
                 align="center">
                校核人
                <input name="WorkList_CollactorUserID" property="editor" class="mini-buttonedit" style="width: 100%;" />
            </div>
            <div field="AuditorUserID" name="AuditorUserID" displayfield="AuditorUserName" width="80" headeralign="center"
                 align="center">
                审核人
                <input name="WorkList_AuditorUserID" property="editor" class="mini-buttonedit" style="width: 100%;" />
            </div>
            <div field="ApproverUserID" name="ApproverUserID" displayfield="ApproverUserName" width="80" headeralign="center"
                 align="center">
                审定人
                <input name="WorkList_ApproverUserID" property="editor" class="mini-buttonedit" style="width: 100%;" />
            </div>
            <div field="MapperUserID" name="MapperUserID" displayfield="MapperUserName" width="90" headeralign="center"
                 align="center">
                制图人
                <input name="WorkList_MapperUserID" property="editor" class="mini-buttonedit" style="width: 100%;" />
            </div>
            <div field="TemplateWorkload" name="TemplateWorkload" width="75" headeralign="center" align="right" visible="@(ViewBag.SimpleMode ? "false" : "true")">
                模板工时
            </div>
            <div field="Coefficient" name="Coefficient" width="75" headeralign="center" align="right" visible="@(ViewBag.SimpleMode ? "false" : "true")">
                系数<input name="Coefficient" property="editor" class="mini-textbox" style="width: 100%;" />
            </div>
            <div header="定额工时" headeralign="center" visible="@(ViewBag.SimpleMode ? "false" : "true")">
                <div property="columns">
                    <div field="Workload" name="Workload" width="75" headeralign="center" align="right">
                        定额工时<input name="WorkList_Workload" property="editor" class="mini-textbox" style="width: 100%;" />
                    </div>
                    <div field="WorkloadDistribute" name="WorkloadDistribute" width="150" headeralign="center" align="left">
                        角色比例分配
                    </div>
                    <div field="WorkloadFinish" name="WorkloadFinish" width="75" headeralign="center" align="right">
                        已结算
                    </div>
                </div>
            </div>
            <div field="State" name="State" headeralign="center" width="75" allowsort="true" align="center">
                状态
            </div>
            <div field="PublishInfo" name="PublishInfo" width="100" allowsort="false" align="center" headeralign="center">
                卷册任务信息
            </div>
            <div field="ChangeInfo" name="ChangeInfo" width="100" allowsort="false" align="center" headeralign="center" visible="@(ViewBag.SimpleMode ? "false" : "true")">
                定额工变更信息
            </div>
            <div field="SettlementInfo" name="SettlementInfo" width="100" allowsort="false" align="center" headeralign="center" visible="@(ViewBag.SimpleMode ? "false" : "true")">
                定额工结算信息
            </div>
        </div>
    </div>
</div>
<ul id="popupMenu" class="mini-menu" style="display: none;">
    <li iconcls="icon-package" onclick="importPackage">从标准卷册库导入</li>
    @*<li iconcls="icon-package" onclick="importProjectAdd">从项目导入</li>
        <li iconcls="icon-package" onclick="importExcelAdd">从Excel导入</li>*@
</ul>
<script type="text/javascript">
    var headerNames = @Html.Raw(ViewBag.HeaderNames);
    var projectInfo = @Html.Raw(ViewBag.ProjectInfo);
    var Major = @Html.Raw(ViewBag.Major);
    var PhaseEnum = @Html.Raw(ViewBag.PhaseEnum);
    var SimpleMode = "@ViewBag.SimpleMode";
    @Html.GetEnum(typeof(Project.Logic.TaskWorkState));
</script>
<script src="/Project/Scripts/WBS/SpaceAuth.js" type="text/javascript"></script>
<script type="text/javascript">
    setAuth();
</script>
<script type="text/javascript">

    addGridButton("dataGrid", "PublishInfo", {
        linkText: '卷册任务信息', onButtonClick: function (row) {
            var PublishID = row["PublishID"];
            if (!PublishID) return msgUI("该卷册没有关联的任务信息");
            var url = "/Project/AutoUI/TaskWorkPublish/PageView?TmplCode=TaskWorkPublish&FuncType=View&ID=" + PublishID;
            openWindow(url, {
                refresh: false, title: "卷册任务信息", width: "70%", height: "70%",
                onDestroy: function () {
                    mini.get("dataGrid").reload();
                }
            });
        }
    });
    addGridButton("dataGrid", "ChangeInfo", {
        linkText: '定额工变更信息', onButtonClick: function (row) {
            var PublishID = row["ChangeID"];
            if (!PublishID) return msgUI("该卷册没有关联的任务信息");
            var url = "/Project/AutoUI/TaskWorkChange/PageView?TmplCode=TaskWorkChange&FuncType=View&ID=" + PublishID;
            openWindow(url, {
                refresh: false, title: "卷册定额工变更信息", width: "70%", height: "70%",
                onDestroy: function () {
                    mini.get("dataGrid").reload();
                }
            });
        }
    });
    addGridButton("dataGrid", "SettlementInfo", {
        linkText: '定额工结算信息', onButtonClick: function (row) {
            var url = "/MvcConfig/UI/List/PageView?TmplCode=TaskWorkSettlementView&TaskWorkID=" + row["ID"];
            openWindow(url, {
                refresh: false, title: "卷册定额工结算信息", width: "70%", height: "70%",
                onDestroy: function () {
                    mini.get("dataGrid").reload();
                }
            });
        }
    });


    var obsUserList = [];

    normalParamSettings.searchFields = "Name,Code";
    addGridEnum("dataGrid", "State", "TaskWorkState");
    addGridEnum("dataGrid", "MajorValue", "Major");

    addSingleUserSelector('WorkList_DesignerUserID', { returnParams: 'value:ID,text:Name' });
    addSingleUserSelector('WorkList_CollactorUserID', { returnParams: 'value:ID,text:Name' });
    addSingleUserSelector('WorkList_AuditorUserID', { returnParams: 'value:ID,text:Name' });
    addSingleUserSelector('WorkList_ApproverUserID', { returnParams: 'value:ID,text:Name' });
    addSingleUserSelector('WorkList_MapperUserID', { returnParams: 'value:ID,text:Name' });

    addGridButton("dataGrid", "WorkloadDistribute", {
        onButtonClick: function (row) {
            if (!row.ID) { msgUI("请先保存，再进行角色工时的分配。"); return; }
            else {
                var url = "/Project/Basic/PackageScheme/PageView?TmplCode=TaskWork&ID=" + row.ID + "&PackageCode=" + row.Code;
                if (row.State != "Plan")
                    url += "&FuncType=view"
                openWindow(url, {
                    data: row, refresh: false, title: "角色工时分配", width: 600, height: 400, addQueryString: false,
                    onDestroy: function (data) {
                        mini.get("dataGrid").reload();
                    }
                });
            }
        }
    });

    function onTabPageLoad() {
        var grid = mini.get("dataGrid");
        $.each(headerNames,function(index,item) {
            grid.updateColumn(item.Code, {header: item.Name});
        });
    }

    var projectInfoID = getQueryString("ProjectInfoID");
    var code = getQueryString("SpaceCode");

    if (code != "Project")
        $("#divTabs").hide();

    function addPackage() {
        var tabData = GetTabsData();
        var isProject = tabData.length == 0 ? true : false;
        var row = {};
        if (!isProject) {
            var major = tabData[0].value;
            var Designer = $.grep(obsUserList, function (item, index) { return item.Major == major && item.RoleCode == "Designer"; })
            var Collactor = $.grep(obsUserList, function (item, index) { return item.Major == major && item.RoleCode == "Collactor"; })
            var Approver = $.grep(obsUserList, function (item, index) { return item.Major == major && item.RoleCode == "Approver"; })
            var Auditor = $.grep(obsUserList, function (item, index) { return item.Major == major && item.RoleCode == "Auditor"; })
            var Mapper = $.grep(obsUserList, function (item, index) { return item.Major == major && item.RoleCode == "Mapper"; })
            var phase = "";
            if(PhaseEnum.length=1)
                phase = PhaseEnum[0].value;
            row = {
                State: "Create", WorkloadDistribute: "0%", WorkloadFinish: 0, MajorValue: major,PhaseValue: phase,
                DesignerUserID: Designer.length != 0 ? Designer[0].UserID : "", DesignerUserName: Designer.length != 0 ? Designer[0].UserName : "",
                CollactorUserID: Collactor.length != 0 ? Collactor[0].UserID : "", CollactorUserName: Collactor.length != 0 ? Collactor[0].UserName : "",
                ApproverUserID: Approver.length != 0 ? Approver[0].UserID : "", ApproverUserName: Approver.length != 0 ? Approver[0].UserName : "",
                AuditorUserID: Auditor.length != 0 ? Auditor[0].UserID : "", AuditorUserName: Auditor.length != 0 ? Auditor[0].UserName : "",
                MapperUserID: Mapper.length != 0 ? Mapper[0].UserID : "", MapperUserName: Mapper.length != 0 ? Mapper[0].UserName : ""
            }
        }
        else {
            row = { State: "Create", WorkloadDistribute: "0%", WorkloadFinish: 0 }
        }
        mini.get("dataGrid").addRow(row, 0);
    }

    function onLoadComplete(e) {
        var msg = "";
        var tabData = GetTabsData();
        if (tabData.length == 0) msg += "";
        else msg += getEnum(Major, tabData[0].value) + "专业";
        var result = e.result;
        $("#message").html(msg + "共有定额工时" + result.sumWorkload + "，已策划" + result["sumSchemed"] + "，已下达" + result.sumPublished + "，已结算" + result["sumFinished"]);
        SetGridHeight();
        obsUserList = result.obsUsers;
    }

    function getEnum(enums, value) {
        for (var i = 0; i < enums.length; i++) {
            if (value == enums[i].value) return enums[i].text;
        }
    }

    function onDrawingCell(e) {
        var field = e.field, record = e.record;
        //c_hua 2018-05-10 完成的卷册允许修改
        //if (record.State == "Finish") { e.cellStyle = "background:#F0F0F0"; }
        //else if (record.State == "Execute") {
        //    if (field == "MajorValue" || field == "FactEndDate" || field == "Workload" || field == "WorkloadDistribute" || field == "WorkloadFinish" || field == "State") {
        //        e.cellStyle = "background:#F0F0F0";
        //    }
        //}
        //else if (record.State == "Publish") {
        //    if (field != "DesignerUserID" && field != "CollactorUserID"  && field != "AuditorUserID"  && field != "ApproverUserID"&&field!="MapperUserID") {
        //        e.cellStyle = "background:#F0F0F0";
        //    }
        //}
        if(field == "FactEndDate"|| field == "State"|| field == "WorkloadFinish"||field=="TemplateWorkload")
            e.cellStyle = "background:#F0F0F0";
        else if(field=="MajorValue"&&record["WBSID"])
            e.cellStyle = "background:#F0F0F0";
        else if (field == "Workload" || field == "WorkloadDistribute"  ) {
            if (record.State != "Create" && record.State != "Plan") {
                e.cellStyle = "background:#F0F0F0";
            }
        }
        else if(field=="Coefficient"){
            if(!record.TemplateWorkload)
                e.cellStyle = "background:#F0F0F0";
        }
    }

    function onWorkGridCellEndEdit(e) {
        var record = e.record, field = e.field,value = e.value;
        if (field == "MajorValue") {
            var Designer = $.grep(obsUserList, function (item, index) { return item.Major == e.value && item.RoleCode == "Designer"; })
            var Collactor = $.grep(obsUserList, function (item, index) { return item.Major == e.value && item.RoleCode == "Collactor"; })
            var Approver = $.grep(obsUserList, function (item, index) { return item.Major == e.value && item.RoleCode == "Approver"; })
            var Auditor = $.grep(obsUserList, function (item, index) { return item.Major == e.value && item.RoleCode == "Auditor"; })
            var Mapper = $.grep(obsUserList, function (item, index) { return item.Major == e.value && item.RoleCode == "Mapper"; })

            var row = {
                DesignerUserID: Designer.length != 0 ? Designer[0].UserID : "", DesignerUserName: Designer.length != 0 ? Designer[0].UserName : "",
                CollactorUserID: Collactor.length != 0 ? Collactor[0].UserID : "", CollactorUserName: Collactor.length != 0 ? Collactor[0].UserName : "",
                ApproverUserID: Approver.length != 0 ? Approver[0].UserID : "", ApproverUserName: Approver.length != 0 ? Approver[0].UserName : "",
                AuditorUserID: Auditor.length != 0 ? Auditor[0].UserID : "", AuditorUserName: Auditor.length != 0 ? Auditor[0].UserName : "",
                MapperUserID: Mapper.length != 0 ? Mapper[0].UserID : "", MapperUserName: Mapper.length != 0 ? Mapper[0].UserName : ""
            }
            mini.get("dataGrid").updateRow(e.row, row);
        }
        else if(field=="Coefficient"){
            var coefficient = parseFloat(value);
            if(isNaN(coefficient)) {
                return msgUI("请输入数字");
            }
            var templateWorkload = parseFloat(record.TemplateWorkload);
            mini.get("dataGrid").updateRow(e.row, {Workload:(coefficient*templateWorkload).toFixed(2)});
        }
        else if(field=="Workload"){
            var workload = parseFloat(value);
            if(isNaN(workload)) {
                return msgUI("请输入数字");
            }
        }
    }

    function onWorkGridCellBeginEdit(e) {
        var record = e.record, field = e.field;
        //c_hua 2018-05-10 完成的卷册允许修改
        //if (record.State == "Finish") {
        //    e.cancel = true;
        //    return;
        //}
        //if (record.State == "Publish") {
        //    if(field != "DesignerUserID" && field != "CollactorUserID"  && field != "AuditorUserID"  && field != "ApproverUserID"&&field!="MapperUserID")
        //    {
        //        e.cancel = true;
        //        return;
        //    }
        //}
        //if (field == "MajorValue" && record.State != "Create" && record.State != "Plan") {
        //    e.cancel = true;
        //    return;
        //}
        if (field == "DesignerUserID" || field == "CollactorUserID" || field == "AuditorUserID" || field == "ApproverUserID"||field=="MapperUserID") {
            if (!getQueryString("IsNotAAptitude")) {
                SetSelectorURL("WorkList_" + field, urlConstant.multiScopeUser, {
                    Aptitude: {
                        Major: getQueryString("SpaceCode").toString(), ProjectClass: projectInfo.ProjectClass,
                        Position: field.replace("UserID", ""), AptitudeLevel: projectInfo.ProjectLevel,
                        ProjectInfoID: projectInfoID
                    }
                });
            }
        }
        else if(field=="MajorValue"&&record["WBSID"])
            e.cancel = true;
        else if (field == "Workload") {
            if (record.State != "Create" && record.State != "Plan") {
                e.cancel = true;
            }
        }
        else if(field=="Coefficient"){
            if(!record.TemplateWorkload)
                e.cancel = true;
        }
    }
    function importPackage() {
        var tabData = GetTabsData();
        var isProject = tabData.length == 0 ? true : false;
        var majorStr = "";
        for (var i = 0; i < Major.length; i++) {
            majorStr += Major[i].value + ",";
        }
        var url = "/MvcConfig/UI/List/PageView?TmplCode=PackageDicSelector&Majors="+majorStr+"&ProjectClassValue=" + projectInfo.ProjectClass + "&PhaseCodeValue=" + projectInfo.PhaseValue+"&MajorCodeValue=";
        if (!isProject)
            url += tabData[0].value;
        openWindow(url, {
            refresh: false, title: "卷册模版导入", width: 950, height: 500, data: Major,
            onDestroy: function (data) {
                if (data == "close" || !data || data.length == 0) return;
                for (var i = 0; i < data.length; i++) {
                    var r = mini.get("dataGrid").findRow(function (r) {
                        if (r.Code == data[i].Code) return true;
                    })
                    if (!r) {
                        var major = data[i].MajorCode;
                        var Designer = $.grep(obsUserList, function (item, index) { return item.Major == major && item.RoleCode == "Designer"; })
                        var Collactor = $.grep(obsUserList, function (item, index) { return item.Major == major && item.RoleCode == "Collactor"; })
                        var Approver = $.grep(obsUserList, function (item, index) { return item.Major == major && item.RoleCode == "Approver"; })
                        var Auditor = $.grep(obsUserList, function (item, index) { return item.Major == major && item.RoleCode == "Auditor"; })
                        var Mapper = $.grep(obsUserList, function (item, index) { return item.Major == major && item.RoleCode == "Mapper"; })

                        var phaseValue = data[i].PhaseCode;
                        if(PhaseEnum.length==1)
                            phaseValue = PhaseEnum[0].value;
                        if(phaseValue.indexOf(',')>=0)
                            phaseValue="";
                        var workload = data[i].WorkLoad;
                        if(SimpleMode=="True")
                            workload = "";
                        var row = {
                            Name: data[i].Name, Code: data[i].Code, Workload: workload,TemplateWorkload:workload,Coefficient:1,
                            State: "Plan", WorkloadDistribute: "0%", WorkloadFinish: 0, MajorValue: major,PhaseValue: phaseValue,
                            DesignerUserID: Designer.length != 0 ? Designer[0].UserID : "", DesignerUserName: Designer.length != 0 ? Designer[0].UserName : "",
                            CollactorUserID: Collactor.length != 0 ? Collactor[0].UserID : "", CollactorUserName: Collactor.length != 0 ? Collactor[0].UserName : "",
                            ApproverUserID: Approver.length != 0 ? Approver[0].UserID : "", ApproverUserName: Approver.length != 0 ? Approver[0].UserName : "",
                            AuditorUserID: Auditor.length != 0 ? Auditor[0].UserID : "", AuditorUserName: Auditor.length != 0 ? Auditor[0].UserName : "",
                            MapperUserID: Mapper.length != 0 ? Mapper[0].UserID : "", MapperUserName: Mapper.length != 0 ? Mapper[0].UserName : ""
                        }
                        mini.get("dataGrid").addRow(row, 0);
                    }
                }
            }
        });
    }

    function copyAdd() {
        var dataGrid = mini.get("dataGrid");
        var row = dataGrid.getSelected();
        if (!row) { msgUI("请选择一行记录进行复制增加操作"); return; }
        var newRow = mini.clone(row);
        newRow.State ="Create";
        newRow.ChangeState ="";
        delete newRow.ID;
        delete newRow.FactEndDate;
        delete newRow.WorkloadFinish;
        dataGrid.addRow(newRow);
    }

    function saveWork() {
        var dataGrid = mini.get("dataGrid");
        var rows = dataGrid.getChanges();
        dataGrid.validate();
        if (dataGrid.isValid() == false) {
            msgUI("当前输入的信息有误，请重新检查！", 1);
            return;
        }
        addExecuteParam("TaskInfo", mini.encode(rows));
        addExecuteParam("ProjectInfoID", projectInfoID);
        execute("SaveWork", {
            showLoading: true, validateForm: false, refresh: false, onComplete: function (data) {
                msgUI("保存成功。");
                dataGrid.reload();
            }
        });
    }

    function startPublish(checkWorkload) {
        var dataGrid = mini.get("dataGrid");
        var rows = dataGrid.getSelecteds();
        if (rows.length == 0) {
            msgUI("未选择卷册，是否对所有卷册发起流程？", 2, function (result) {
                if (result != "ok") { return; }
                rows = dataGrid.getData();;
                if (rows.length == 0) {msgUI("没有卷册可以发起流程。"); return;}
                for (var i = 0; i < rows.length; i++) {
                    if (!rows[i].ID) {
                        msgUI("请先保存，再进行下达。"); return;
                    }
                }
                addExecuteParam("ProjectInfoID", projectInfoID);
                addExecuteParam("SpaceCode", code);
                execute("GetAllPlanTasks", {
                    showLoading: true, refresh: false, onComplete: function (data) {
                        rows = data;
                        if (rows.length == 0) {msgUI("没有卷册可以发起流程。"); return;}
                        for (var i = 0; i < rows.length; i++) {
                            if(checkWorkload)
                            {
                                if (rows[i].WorkloadDistribute.indexOf("100%") < 0) {
                                    msgUI("选择的卷册中存在未分配完的卷册，请重新选择。"); return;
                                }
                            }
                        }
                        _start(rows);
                    }, validateForm: false
                });


            });
            //msgUI("请选择要下达的卷册。"); return;
        }
        else
        {
            for (var i = 0; i < rows.length; i++) {
                if (rows[i].State != "Plan") {
                    msgUI("只能对策划中的卷册进行下达操作。"); return;
                }
                if (!rows[i].ID) {
                    msgUI("请先保存，再进行下达。"); return;
                }
                if(checkWorkload)
                {
                    if (rows[i].WorkloadDistribute.indexOf("100%") < 0) {
                        msgUI("选择的卷册中存在未分配完的卷册，请重新选择。"); return;
                    }
                }
            }
            _start(rows);
        }
        function _start(rows) {
            var url = "/Project/AutoUI/TaskWorkPublish/PageView?TmplCode=TaskWorkPublish&Major=" + code + "&ProjectInfoID=" + projectInfoID;
            flowAdd("TaskWorkPublish", {
                url: url, data: rows, refresh: false, title: "卷册下达", width: "80%", height: "90%", addQueryString: false,
                onDestroy: function (data) {
                    mini.get("dataGrid").reload();
                }
            });
        }
    }

    function publish()
    {
        var dataGrid = mini.get("dataGrid");
        var rows = dataGrid.getSelecteds();
        if (rows.length == 0) {
            msgUI("未选择卷册，是否对所有卷册进行下达动作？", 2, function (result) {
                if (result != "ok") { return; }
                rows = dataGrid.getData();;
                if (rows.length == 0) {msgUI("没有卷册需要下达。"); return;}
                for (var i = 0; i < rows.length; i++) {
                    if (!rows[i].ID) {
                        msgUI("请先保存，再进行下达。"); return;
                    }
                }
                addExecuteParam("ProjectInfoID", projectInfoID);
                addExecuteParam("SpaceCode", code);
                execute("GetAllPlanTasks", {
                    showLoading: true, refresh: false, onComplete: function (data) {
                        rows = data;
                        if (rows.length == 0) {msgUI("没有卷册需要下达。"); return;}
                        for (var i = 0; i < rows.length; i++) {
                        }
                        _publish(rows);
                    }, validateForm: false
                });


            });
        }
        else
        {
            for (var i = 0; i < rows.length; i++) {
                if (rows[i].State != "Plan") {
                    msgUI("只能对策划中的卷册进行下达操作。"); return;
                }
                if (!rows[i].ID) {
                    msgUI("请先保存，再进行下达。"); return;
                }
            }
            _publish(rows);
        }
        function _publish(rows) {
            msgUI("你确认要下达卷册吗？", 2, function (result) {
                if (result != "ok")
                    return;
                addExecuteParam("IDs", getValues(rows,"ID"));
                execute("PublishTask", {
                    validateForm: false, showLoading: true, refresh: false, onComplete: function (data) {
                        msgUI("操作成功。");
                        dataGrid.reload();
                    }
                });
            });
        }
    }

    function deleteRow() {
        var dataGrid = mini.get("dataGrid");
        var rows = dataGrid.getSelecteds();
        if (rows.length <= 0) {
            msgUI("请选择记录。");
            return;
        }
        var listIDs = "";
        for (var i = 0; i < rows.length; i++) {
            if (rows[i].ID)
            {
                if(rows[i].State!="Create"&&rows[i].State!="Plan")
                {
                    msgUI("只有未策划与策划中的卷册才可以删除。");
                    return;
                }
                listIDs += rows[i].ID + ",";
            }
        }
        if (listIDs) {
            msgUI("你确认删除选中的记录吗？", 2, function (result) {
                if (result != "ok")
                    return;
                addExecuteParam("ListIDs", listIDs);
                execute("DeleteTaskWork", {
                    validateForm: false, showLoading: true, refresh: false, onComplete: function (data) {
                        dataGrid.reload();
                    }
                });
            });
        }
        else
            dataGrid.removeRows(rows, true);
    }

    function finishWorkload() {
        var dataGrid = mini.get("dataGrid");
        var rows = dataGrid.getSelecteds();
        if (rows.length <= 0) {
            msgUI("请选择记录。");
            return;
        }
        for (var i = 0; i < rows.length; i++) {
            if (rows[i].State != "Execute" && rows[i].State != "Finish") {
                msgUI("只能对设计中的卷册进行结算操作。"); return;
            }
        }
        var url = "/Project/AutoUI/TaskWorkSettlement/PageView?TmplCode=TaskWorkSettlement";
        flowAdd("TaskWorkSettlement", {
            url: url, data: rows, refresh: false, title: "卷册工时结算", width: "80%", height: "90%", addQueryString: true,
            onDestroy: function (data) {
                mini.get("dataGrid").reload();
            }
        });
    }

    function changeWorkload() {
        var dataGrid = mini.get("dataGrid");
        var rows = dataGrid.getSelecteds();
        if (rows.length == 0) {
            msgUI("请选择要变更的卷册。"); return;
        }
        for (var i = 0; i < rows.length; i++) {
            if (rows[i].State != "Execute" && rows[i].State != "Finish") {
                msgUI("只能对设计中或者已完工的卷册进行变更，请重新选择。"); return;
            }
        }
        var url = "/Project/AutoUI/TaskWorkChange/PageView?TmplCode=TaskWorkChange&Major=" + code + "&ProjectInfoID=" + projectInfoID;
        flowAdd("TaskWorkChange", {
            url: url, data: rows, refresh: false, title: "卷册工时变更", width: "80%", height: "90%", addQueryString: false,
            onDestroy: function (data) {
                mini.get("dataGrid").reload();
            }
        });
    }
</script>
<style type="text/css">
    .mini-layout-proxy {
        border-top: 0px;
        border-right: 0px;
    }
</style>
